<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>12月7日 天气晴 这几天过的太难了</title>
    <url>/676/</url>
    <content><![CDATA[<p>口腔粘膜增生刚要好我就又染上了流感，**舍友不知道开窗透气为何事，一开窗就说冷，男生宿舍还在闹瘟疫。</p>
<p>我真<strong>我的</strong>舍友，卫生不干每天就是躺在床上，能不去的课就让我和另一个舍友给他签到，明天就是周日我就又可以看到4个在床上一天不下床的了。</p>
<p>舍友A和***一样每天晚上外放，我已经连续一个月没有睡好了，耳塞可算到了可以清静以下了，现在就盼着尽快放假就可以回家了，我太难了。</p>
<p>吐槽完毕，下线。另外数据库这两天一直在崩，也一直没找到原因。</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>502 Bad Gateway自动重启脚本</title>
    <url>/1486/</url>
    <content><![CDATA[<p>一个简单的脚本，用来监控502的，如果遇到502，自动重启PHP进程。适用于LNMP环境。</p>
<p>新建<code>php.sh</code>文件，存放于<code>/root</code>或其它目录：</p>
<pre><code>#!/bin/bash
MY_URL=&quot;http://www.southcat.net/&quot;
RESULT=`curl -I $MY_URL|grep &quot;HTTP/1.1 502&quot;`
if [ -n &quot;$RESULT&quot; ]; then
        /etc/init.d/php-fpm restart
fi</code></pre><p>给予可执行权限：</p>
<pre><code>chmod +x /root/php.sh


crontab -e
* * * * * /root/php.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo百度主动推送链接 及一个离谱的bug</title>
    <url>/ck9fgoa67000u82u88uww2ci2/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>终于从wordpress切换到了Hexo。部分问题也都修复好了。   今天qclou给我来消息核查备案信息的时候，我就直接果断的取消了备案申请，就现在来说，个备还不如不备。</p>
<h2 id="自动提交链接"><a href="#自动提交链接" class="headerlink" title="自动提交链接"></a>自动提交链接</h2><h3 id="自动推送"><a href="#自动推送" class="headerlink" title="自动推送"></a>自动推送</h3><p>自动推送只需要安装js代码即可。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(function()&#123;</span><br><span class="line">    var bp &#x3D; document.createElement(&#39;script&#39;);</span><br><span class="line">    var curProtocol &#x3D; window.location.protocol.split(&#39;:&#39;)[0];</span><br><span class="line">    if (curProtocol &#x3D;&#x3D;&#x3D; &#39;https&#39;) &#123;</span><br><span class="line">        bp.src &#x3D; &#39;https:&#x2F;&#x2F;zz.bdstatic.com&#x2F;linksubmit&#x2F;push.js&#39;;        </span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        bp.src &#x3D; &#39;http:&#x2F;&#x2F;push.zhanzhang.baidu.com&#x2F;push.js&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    var s &#x3D; document.getElementsByTagName(&quot;script&quot;)[0];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="主动推送"><a href="#主动推送" class="headerlink" title="主动推送"></a>主动推送</h3><p>主动推送需要借助插件来进行</p>
<h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure>

<h5 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置_config.yml文件</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">baidu_url_submit:</span><br><span class="line">  count: 3 <span class="comment">## 比如3，代表提交最新的三个链接</span></span><br><span class="line">  host: southcat.net <span class="comment">## 在百度站长平台中注册的域名</span></span><br><span class="line">  token: your_token <span class="comment">## 请注意这是您的秘钥， 请不要发布在公众仓库里!</span></span><br><span class="line">  path: baidu_urls.txt <span class="comment">## 文本文档的地址， 新链接会保存在此文本文档里</span></span><br></pre></td></tr></table></figure>

<p>将上面的代码放进_config.yml里面即可。这里有一个神奇的bug，如果你将上面的代码只修改了你的地址放到文件中会提示如下问题 两种错误提示。常见是第一种</p>
<p>第一种：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TypeError: Cannot read property &#39;count&#39; of null</span><br></pre></td></tr></table></figure>

<p>第二种：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FATAL can not read an implicit mapping pair; a colon is missed at line 124, column 9:</span><br></pre></td></tr></table></figure>

<p>这两种解决方案是一样的 删除掉count 那一行的注释即可解决这个问题。</p>
<blockquote>
<p>注意：</p>
<p>​        主动推送是在你hexo d的时候进行一次推送，推送数量可以自行进行调整。</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>2019联通沃派校园卡 30GB全国流量+200分钟免费通话 每月仅需12.5元</title>
    <url>/2440/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前介绍过电信校园卡→传送门，不过限制<code>25</code>岁以下办理，这里就再介绍个联通校园卡，暂时是不限制年龄的，价格都差不多，依然是<code>200</code>用一年，<code>300</code>用两年，全国内均可在线申请办理，顺丰包邮，有需求的可以上车了。</p>
<pre><code>提示：申请截止日期为2019年9月30日，且均不限制年龄，有需求的趁早上车。</code></pre><h2 id="套餐内容"><a href="#套餐内容" class="headerlink" title="套餐内容"></a>套餐内容</h2><p><strong>资费1：</strong><code>200</code>元包<code>12</code>个月，折合月租<code>16.67</code>元<br><strong>资费2：</strong><code>300</code>元包<code>24</code>个月，折合月租<code>12.50</code>元(推荐)</p>
<p>套餐详情：</p>
<pre><code>语音通话：全国200分钟+联通京津冀网内通话全免费
‌通用流量：全国30G，超出后1元1G/天，可自动叠加
套外资费：语音1毛5，短信1毛</code></pre><h2 id="套餐截图"><a href="#套餐截图" class="headerlink" title="套餐截图"></a>套餐截图</h2><p><img src="https://www.southcat.net/usr/picture/ltwpxyk.jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="购买地址"><a href="#购买地址" class="headerlink" title="购买地址"></a>购买地址</h2><p>购买地址：点击购买，该地址为联通官方地址，请放心申请购买。</p>
<h2 id="订单查询"><a href="#订单查询" class="headerlink" title="订单查询"></a>订单查询</h2><h2 id="问题解答"><a href="#问题解答" class="headerlink" title="问题解答"></a>问题解答</h2><pre><code>问：归属地哪里？全国都可以用吗？
答：归属地北京，全国都可以用，都是全国通话，全国流量

问：本卡包邮吗？
答：本卡全国顺丰包邮，收货地址可选择您所在的省份

问：本卡有年龄限制吗？需要学生证吗？
答：无年龄限制，无需学生证，只要是活人就可申请！

问：一个人可以开几张？
答：工信部规定，一个身份证只能同时持有5张中国联通卡，如果你名下有n张联通卡，那么你还可以办理5-n张

问：可以改套餐吗？
答：套餐有效期内不能改

问：一年或者两年后可以续约么吗？
答：关注“校园卡助手”，发送“北京联通续约”，即可获取官方续约地址，套餐到期的最后一个月可续约。续约的同时，无限流量包也会自动续订。

问：怎么激活？
答：在联通掌上营业厅进行激活，邮寄的快件中也含有激活说明。

问：激活首月，通话、流量是多少呢？
答：入网首月会一次性赠送140分钟国内主叫，3GB国内流量和6GB国内闲时流量（23:00-7:00优先使用闲时），以及全国网内随意打礼包。激活3天后无限流量包会自动到账。

问：本卡可以在平板上使用吗？
答：本卡是正规北京联通套餐，只要能插SIM卡的设备均可正常使用。

问：购买后需要每个月再充话费吗？
答：本卡是预付费卡，申请的时候会要求付款200/300元，然后每个月以赠费的形式充入账户，抵扣月费，不需要再充话费。本卡的申请链接是联通校园渠道官方链接，付款也是付给联通官方，请放心付款。

问：本卡什么时候停止办理？
答：未知，延期中……</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>acme.sh：Let&#39;s Encrypt SSL证书自动签发脚本</title>
    <url>/1843/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>acme.sh</code>是一款用于签发<code>Let&#39;s Encrypt</code>证书的脚本。本脚本是原项目的生成证书指令的集合。</p>
<p><strong>原项目地址：</strong><a href="https://github.com/Neilpang/acme.sh" target="_blank" rel="noopener">https://github.com/Neilpang/acme.sh</a><br><strong>本项目地址：</strong><a href="https://github.com/nanqinlang-script/acme" target="_blank" rel="noopener">https://github.com/nanqinlang-script/acme</a></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>运行以下命令：</p>
<pre><code>wget https://raw.githubusercontent.com/nanqinlang-script/acme/master/acme_2.0.sh
bash acme_2.0.sh</code></pre><p>然后按照以下步骤：</p>
<ol>
<li>输入你的域名。</li>
<li>选择要生成证书的类型。输入数字<code>0</code>（生成<code>rsa</code>类型）或<code>1</code>（生成<code>ecc</code>类型）。若未选择则默认生成<code>rsa</code>类型。</li>
<li>用<code>dns</code>方式验证域名所有权。添加脚本中显示的绿色字体的<code>TXT</code>记录，添加完成后稍等下（等个一分钟应该够了），之后回车继续。</li>
<li><code>SSL</code>证书生成至<code>/home/yourdomain</code>或<code>/home/yourdomain_ecc</code>路径下。</li>
</ol>
<p>生成的文件包含：</p>
<ul>
<li><code>yourdomain.key</code>：证书密钥</li>
<li><code>yourdomain.cer</code>：站点证书</li>
<li><code>fullchain.cer</code>：也是站点证书</li>
<li><code>ca.cer</code>：中间证书</li>
</ul>
<h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p>原项目是包括定时更新和<code>api</code>自动验证域名等功能的，但我这个脚本不打算加入这些，<code>60</code>天手动运行一次其实也还好。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>AMH4.5安装教程，增加PHP7.1版本,解决一些兼容性问题</title>
    <url>/1644/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>AMH</code>是由<code>Amysql</code>自主开发的国产免费开源虚拟主机面板，基于<code>Linux</code>、<code>Nginx</code>、<code>MySQL</code>、<code>PHP</code>环境运行，同时具有<code>SSH</code>命令与<code>Web</code>端维护管理<code>Nginx</code>、<code>MySQL</code>、<code>PHP</code>、主机、<code>FTP</code>等，相类似的面板还有宝塔，<code>VestaCP</code>等，都挺好用的，这里说下<code>loc</code>大佬发的<code>AMH4.5</code>安装教程。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul>
<li>更新<code>curl</code>为<code>curl-7.53.0</code>（如果内存没超过<code>1G</code>以上，不建议安装<code>Mysql5.7</code>以及以上系列数据库）。</li>
<li>更新：<code>php-5.3.29</code>，<code>php-5.4.45</code>，<code>php-5.5.38</code>，<code>php-5.6.30</code>，<code>php-7.0.17</code>，<code>php-7.1.3</code>，<code>nginx-1.10.3</code>，<code>openssl-1.1.0e</code>，<code>mysql-5.5.54</code>，<code>mysql-5.6.35</code>，<code>mysql-5.7.17</code>，<code>mariadb-5.5.54</code>，<code>mariadb-10.1.21</code>。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、准备工作</strong></p>
<pre><code>yum install -y wget 
yum install -y vim</code></pre><p>强烈建议先运行<code>screen</code>,防止<code>ssh</code>中断</p>
<pre><code>apt-get install screen   #debian
yum -y install screen   #centos
screen -S amh</code></pre><p><strong>2、安装脚本</strong><br><code>Centos 5 .x</code>和<code>Centos 6.x</code>可直接运行以下命令：</p>
<pre><code>wget http://www.sxsay.com/amh/amh.sh &amp;&amp; chmod 775 amh.sh &amp;&amp; ./amh.sh 2&gt;&amp;1 | tee amh.log</code></pre><p>备用地址：</p>
<pre><code>wget --no-check-certificate https://www.southcat.net/usr/down/amh.sh &amp;&amp; chmod 775 amh.sh &amp;&amp; ./amh.sh 2&gt;&amp;1 | tee amh.log</code></pre><p><code>Centos 7.x</code>安装请先运行<code>ifconfig</code>，要是功能不全，就运行以下命令：</p>
<pre><code>yum -y install net-tools.x86_64</code></pre><p>再一键运行上面的脚本，最后更改控制面板的端口（<code>8888</code>更改为你想要的端口）：</p>
<pre><code>amh SetParam amh amh_Listen 8888</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Apache和Nginx环境下README.md文件无法访问解决方案</title>
    <url>/611/</url>
    <content><![CDATA[<p>今天写自己的api文档使用 docsify 程序安装完成之后，首页一直显示404，然而使用docsify的本地服务器缺可以正常访问。</p>
<p>经过排查发现访问README.md文件显示404错误。</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h3><h5 id=""><a href="#" class="headerlink" title=""></a></h5><p>Apache:</p>
<p>修改网站配置文件</p>
<pre><code>#DENY FILES
 &lt;Files ~ (\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md)$&gt;
   Order allow,deny
   Deny from all
&lt;/Files&gt;</code></pre><p>删除掉<code>|README.md</code>部分即可</p>
<h5 id="nginx"><a href="#nginx" class="headerlink" title="nginx:"></a>nginx:</h5><p>同样访问配置文件</p>
<pre><code>location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md
    {
        return 404;
   }</code></pre><p>修改这段代码，删掉|README.md就好了</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>docsify提示404</tag>
      </tags>
  </entry>
  <entry>
    <title>Apache环境强制http 301跳转https的方法</title>
    <url>/1663/</url>
    <content><![CDATA[<p><strong>说明：</strong>今天用服务器搭建了个<code>Apache</code>环境的站点，上<code>SSL</code>后，发现自己用惯了<code>Nginx</code>环境还不是很熟悉<code>Apache</code>的<code>301</code>定向，就自己在网上找了下方法，发现只需要修改<code>.htaccess</code>文件即可，这里说一下。</p>
<p>关于<code>Nginx</code>环境<code>301</code>请看：Nginx环境强制http 301跳转https的方法，Nginx环境开启ssl后强制https 301全部指向www的方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>直接修改对应网站根目录的<code>.htaccess</code>配置伪静态文件就可以，没有这个文件的可以自建一个试试。</p>
<p><strong>1、根目录域名</strong></p>
<pre><code>RewriteEngine On
RewriteCond %{SERVER_PORT} 80
RewriteRule ^(.*)$ https://www.yourdomain.com/$1 [R,L]</code></pre><p><strong>2、子目录</strong></p>
<pre><code>RewriteEngine On
RewriteCond %{SERVER_PORT} 80
RewriteCond %{REQUEST_URI} 子目录文件夹
RewriteRule ^(.*)$ https://www.yourdomain.com/子目录文件夹 [R,L]</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>apache端口被异常占用导致无法启动的解决方法</title>
    <url>/1450/</url>
    <content><![CDATA[<p><strong>说明：</strong>在安装LNMPA一键包时候会出现因端口被占用而导致Apache无法启动的问题，一般一键包Apache默认端口是88，具体以错误提示信息为准！如<code>Address already in use: make_sock: could not bind to address 127.0.0.1:88</code>最后面的88即为被占用端口。</p>
<p><strong>1、检查88端口被哪个进程占用</strong></p>
<pre><code>netstat -lnp|grep 88   </code></pre><p>此时可以看到使用该端口的进程，后面都有<code>LISTEN xx/yy</code> 此信息，<code>xx</code>即为进程号</p>
<p><strong>2、查看进程的详细信息</strong></p>
<pre><code>ps xx  #xx为进程号


kill -9 xx        #杀掉编号为xx的进程（请根据实际情况输入）
service httpd start #启动apache</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Aria2自动更新BT Tracker服务器列表的方法</title>
    <url>/1791/</url>
    <content><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>公开的<code>BT tracker</code>服务器，因为种种原因总会经常失效，要想获取更多的<code>peer</code>需要经常维护这份列表。感谢<code>github</code>上的小伙伴提供了这么一份<code>tracker</code>自动更新列表：trackerslist。我们要想<code>Aria2</code>也支持自动更新这份列表，那么你可以按照下面方法来实现。</p>
<p>关于<code>Aria2</code>安装使用教程可参考：<a href="https://www.southcat.net/tag/Aria2/。" target="_blank" rel="noopener">https://www.southcat.net/tag/Aria2/。</a></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>此文仅适用于<code>Centos</code>系统，其它系统稍作变更即可。我没有使用过其它系统，这里也就不提供兼容性的脚本了。</p>
<p><strong>示例：Aria2安装路径：</strong><code>/root/aria2</code> <strong>Aria2配置文件路径：</strong><code>/root/.aria2/aria2.conf</code></p>
<p>请修改脚本文件中对应的路径 请修改脚本文件中对应的路径 请修改脚本文件中对应的路径。</p>
<p><strong>1、首先将aria2配置成系统服务</strong></p>
<pre><code>#安装组件
yum install -y psmisc
#编辑aria2文件
vi /etc/init.d/aria2
#添加以下代码
DAEMON=/root/aria2/bin/aria2c

case &quot;$1&quot; in
    start)
        echo &quot;Starting aria2c&quot;
        nohup $DAEMON -c &gt; /root/.aria2/aria2.log 2&gt;&amp;1 &amp;
        ;;
    stop)
        echo &quot;Shutting down aria2c&quot;
        killall aria2c &amp;&gt;/dev/null
        ;;
    restart)
        killall aria2c &amp;&gt;/dev/null
        sleep 3
        nohup $DAEMON -c &gt; /root/.aria2/aria2.log 2&gt;&amp;1 &amp;
        ;;
    *)
        echo &quot;Usage: /etc/init.d/aria2 {start|stop|restart}&quot;
        exit 1
        ;;
esac
exit
#授权aria2文件
chmod 7777 /etc/init.d/aria2</code></pre><p>操作命令：</p>
<pre><code>service aria2 stop  #停止aria2
service aria2 start  #启动aria2
service aria2 restart  #重启aria2</code></pre><p><strong>2、Aria2 bt-tracker 列表的更新，需要重启aria2才会生效</strong></p>
<pre><code>#编辑脚本
vi /root/trackers-list-aria2.sh
#添加以下代码
#!/bin/bash
/usr/sbin/service aria2 stop
list=`wget -qO- https://raw.githubusercontent.com/ngosang/trackerslist/master/trackers_all.txt|awk NF|sed &quot;:a;N;s/\n/,/g;ta&quot;`
if [ -z &quot;`grep &quot;bt-tracker&quot; /root/.aria2/aria2.conf`&quot; ]; then
    sed -i &apos;$a bt-tracker=&apos;${list} /root/.aria2/aria2.conf
    echo add......
else
    sed -i &quot;s@bt-tracker.*@bt-tracker=$list@g&quot; /root/.aria2/aria2.conf
    echo update......
fi
#授权脚本
chmod +x /root/trackers-list-aria2.sh</code></pre><p><strong>3、使用crontab任务计划程序，实现自动更新</strong></p>
<pre><code>crontab -e  #添加定时任务，如以下2个</code></pre><p>每30分钟更新一次<code>tracker</code>列表（实际不需要这么频繁 你可以自己定义更新频率）</p>
<pre><code>*/30 * * * * /root/trackers-list-aria2.sh</code></pre><p>每5分钟启动一次<code>aria2</code>，防止<code>aria2</code>崩了</p>
<pre><code>*/5 * * * * /usr/sbin/service aria2 start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Aria2+Aria2Ng+OneIndex一键安装脚本，下载后自动上传至OneDrive</title>
    <url>/2179/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主之前发了很多网盘离线教程了，包括一些脚本，查看：Aria2+Rclone+DirectoryLister+Aria2Ng一键安装脚本，差不多都是配合<code>Google Drive</code>网盘的，不过<code>OneDrive</code>的也有，但都不是很理想，现在感觉<code>OneIndex</code>挺不错的，配合<code>OneDrive</code>可以实现观看/下载不走<code>VPS</code>流量的离线<code>BT</code>网盘，这里就整了个一键脚本，将以往需要的<code>2</code>个域名变成了<code>1</code>个，且下载文件自动上传到<code>OneIndex/OneDrive</code>指定文件夹，并删除本地文件，使其不占<code>VPS</code>空间，添加并自动更新<code>Trackers</code>服务器，有兴趣的可以玩玩。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Aria2_OneIndex(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Aria2_OneIndex(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2018.12.30】
修复重定向次数过多的问题，现已修复(这个抱歉，忘记在脚本里注释部分$，导致出了点小问题)。
【2018.12.22】
替换伪静态规则，调整缓存刷新时间
【2018.12.21】
修复一点小问题，并增加定时刷新缓存和token，优化定时任务步骤，最后不再显示定时任务编辑界面。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong>脚本只适用于<code>Debian 8</code>、<code>9</code>，且无网站环境，会自动签发<code>Let&#39;s Encrypt SSL</code>证书，请提前将域名解析至<code>VPS</code>服务器。</p>
<p>运行命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/Aria2_OneIndex.sh &amp;&amp; bash Aria2_OneIndex.sh</code></pre><p>按要求输入以下选项：</p>
<pre><code>请输入你的OneIndex域名信息(如:oneindex.southcat.net):
请输入你的Aria2密钥:
请输入你OneIndex/OneDrive中的一个文件夹（格式:RATS，此后所有文件都会上传到该文件夹）:</code></pre><p>输入好了后直到安装完成，如果<code>Nginx</code>安装失败，检查下系统是否自带<code>Apache2</code>，然后卸载掉就行了。<code>Aria2Ng</code>访问地址：<code>http://IP:8080</code>，<code>OneIndex</code>后台地址：<code>https://xx.com/?/admin</code>，默认密码：<code>oneindex</code>。</p>
<pre><code>提示：这里好几个同学反映进不去后台，博主看了下原因，顺便再说下，安装好了后，需要先访问自己的域名，然后绑定OneDrive账号了才能访问后台，不然是进不去后台的！</code></pre><p>绑定<code>OneDrive</code>后建议先访问后台，如果前台出现<code>HTTP ERROR 500</code>的情况，可以重新下载源码后再绑定账号，使用命令：</p>
<pre><code>#将domain.com改成你的域名再运行以下命令
cd /home/wwwroot/domain.com
rm -rf ./*
git clone https://github.com/donwa/oneindex.git
mv oneindex/* ./
chmod -R 777 config/ cache/</code></pre><h2 id="相关文件"><a href="#相关文件" class="headerlink" title="相关文件"></a>相关文件</h2><pre><code>OneIndex及域名根目录：/home/wwwroot/xx.com
Aria2Ng根目录：/home/wwwroot/aria2ng
域名证书目录：/home/wwwroot/ssl
Aria2配置文件夹：/root/.aria2
Aria2下载目录：/root/Download</code></pre><h2 id="相关提示"><a href="#相关提示" class="headerlink" title="相关提示"></a>相关提示</h2><p>如果想使用手动安装的，参考：使用Aria2+Aria2Ng+OneIndex+OneDrive建立不限流量/离线BT下载/在线观看网盘。关于<code>OneIndex</code>更详细的介绍和使用方法，包括<code>OneDrive 5T</code>网盘的获取可以查看：OneIndex一键安装脚本 for Debian。由于<code>OneIndex</code>自身原因，上传可能存在些<code>BUG</code>，会导致有的文件上传失败，不过博主测试了下，大多数都可以上传，不怎么影响使用。最后如果你是免费申请的<code>OneDrive 5T</code>网盘或者花的几块钱买的，建议别放重要资料，玩玩就行了。</p>
<h2 id="关于上传"><a href="#关于上传" class="headerlink" title="关于上传"></a>关于上传</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Aria2c度盘下载器：可高速下载百度云文件</title>
    <url>/2101/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主之前分享了非常多的百度云下载神器，比如<code>SpeedKoalaBD</code>、<code>Proxyee-down</code>、<code>IDM</code>等，现在再分享个<code>Aria2c</code>度盘下载器，原理和<code>SpeedKoalaBD</code>差不多，都是模拟百度网盘客户端获取<code>vip</code>下载链接，再利用<code>Aria2Ng</code>进行下载。使其下载速度接近满速。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Aria2c_dp(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Aria2c_dp(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Aria2c_dp(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>下载地址：</strong>Aria2c度盘下载器</p>
<p>下载后打开软件，登录百度云账号，找到要下载的文件，右键高速下载即可，也可以直接下载整个文件夹。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul>
<li>若下载管理页面未显示或乱码显示请手动打开<code>aria2c度盘下载器\Ariang\index.html</code>。</li>
<li>若下载管理页面显示连接出错，请尝试手动设置<code>127.0.0.1:6800</code>。</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Aria2+Caddy+Rclone+GDlist+Aria2Ng+Google Drive一键安装脚本</title>
    <url>/2063/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一个与本脚本类似的教程，参考：Aria2+Rclone+DirectoryLister+Aria2Ng一键安装脚本，而前天有大佬发布了<code>GDlist</code>后，其不走服务器流量的特点还是挺不错的，毕竟很多人流量都有限，于是友链博主千影将<code>DirectoryLister</code>替换成了<code>GDlist</code>，<code>Nginx</code>环境换成了<code>Caddy</code>，本脚本同样的支持下载后自动上传，自动签发<code>SSL</code>证书，添加并自动更新<code>Trackers</code>服务器等特点。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Aria2_gdlist(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Aria2_gdlist(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Aria2_gdlist(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.1.9】
去掉Aria2ng的域名，改为ip:8000访问
【2018.12.27】
调整caddy配置，修复启动失败的问题
【2018.12.21】
优化定时任务步骤，最后不再显示定时任务编辑界面。
【2018年4月26日】
下载上传以后会自动刷新gdlist的缓存</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本脚本适用于<code>Debian 8 +</code>、<code>Ubuntu 16+</code>。建议使用<code>Debian 8</code>。且需要提前将域名解析到<code>VPS</code>服务器。</p>
<p>使用命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/Aria2_gdlist.sh &amp;&amp; bash Aria2_gdlist.sh</code></pre><p>运行脚本后，会依次要你输入以下信息：</p>
<pre><code>#输入GDlist域名
请输入你的GDlist域名信息:

#设置Aria2密钥
请输入你的Aria2密钥:

#配置Rclone，大致如下
n) New remote
s) Set configuration password
q) Quit config
n/s/q&gt; n
name&gt; Rats  #随便填，后面要用到
Type of storage to configure.
Choose a number from below, or type in your own value
 1 / Alias for a existing remote
   \ &quot;alias&quot;
 2 / Amazon Drive
   \ &quot;amazon cloud drive&quot;
 3 / Amazon S3 (also Dreamhost, Ceph, Minio, IBM COS)
   \ &quot;s3&quot;
 4 / Backblaze B2
   \ &quot;b2&quot;
 5 / Box
   \ &quot;box&quot;
 6 / Cache a remote
   \ &quot;cache&quot;
 7 / Dropbox
   \ &quot;dropbox&quot;
 8 / Encrypt/Decrypt a remote
   \ &quot;crypt&quot;
 9 / FTP Connection
   \ &quot;ftp&quot;
10 / Google Cloud Storage (this is not Google Drive)
   \ &quot;google cloud storage&quot;
11 / Google Drive
   \ &quot;drive&quot;
12 / Hubic
   \ &quot;hubic&quot;
13 / Local Disk
   \ &quot;local&quot;
14 / Microsoft Azure Blob Storage
   \ &quot;azureblob&quot;
15 / Microsoft OneDrive
   \ &quot;onedrive&quot;
16 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ &quot;swift&quot;
17 / Pcloud
   \ &quot;pcloud&quot;
18 / QingCloud Object Storage
   \ &quot;qingstor&quot;
19 / SSH/SFTP Connection
   \ &quot;sftp&quot;
20 / Webdav
   \ &quot;webdav&quot;
21 / Yandex Disk
   \ &quot;yandex&quot;
22 / http Connection
   \ &quot;http&quot;
Storage&gt; 11  #选择11，Google Drive
Google Application Client Id - leave blank normally.
client_id&gt;  #留空
Google Application Client Secret - leave blank normally.
client_secret&gt;  #留空 
Scope that rclone should use when requesting access from drive.
Choose a number from below, or type in your own value
 1 / Full access all files, excluding Application Data Folder.
   \ &quot;drive&quot;
 2 / Read-only access to file metadata and file contents.
   \ &quot;drive.readonly&quot;
   / Access to files created by rclone only.
 3 | These are visible in the drive website.
   | File authorization is revoked when the user deauthorizes the app.
   \ &quot;drive.file&quot;
   / Allows read and write access to the Application Data folder.
 4 | This is not visible in the drive website.
   \ &quot;drive.appfolder&quot;
   / Allows read-only access to file metadata but
 5 | does not allow any access to read or download file content.
   \ &quot;drive.metadata.readonly&quot;
scope&gt; 1  #设置权限，选择1
ID of the root folder - leave blank normally.  Fill in to access &quot;Computers&quot; folders. (see docs).
root_folder_id&gt;  #留空 
Service Account Credentials JSON file path  - leave blank normally.
Needed only if you want use SA instead of interactive login.
service_account_file&gt;  #留空 
Remote config
Use auto config?
 * Say Y if not sure
 * Say N if you are working on a remote or headless machine or Y didn&apos;t work
y) Yes
n) No
y/n&gt; n  #选择n
If your browser doesn&apos;t open automatically go to the following link: https://xx  #复制到浏览器获取验证码
Log in and authorize rclone for access
Enter verification code&gt;  #填入上面获取到的验证码
Configure this as a team drive?
y) Yes
n) No
y/n&gt; y  #选择y
Fetching team drive list...
No team drives found in your account--------------------
[rats]
type = drive
client_id = 
client_secret = 
scope = drive.readonly
root_folder_id = 
service_account_file = 
token = {&quot;access_token&quot;:&quot;&quot;}
team_drive = 
--------------------
y) Yes this is OK
e) Edit this remote
d) Delete this remote
y/e/d&gt; y  #选择y
Current remotes:

Name                 Type
====                 ====
Rats                 drive

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; q  #选择q退出

#最后输入Name和需要挂载的文件夹
请输入你刚刚输入的Name:
请输入你云盘中需要挂载的文件夹:</code></pre><p>然后打开<code>GDlist</code>的域名界面，填写挂载的文件夹和文件夹<code>ID</code>，记住填写的文件夹需要共享出来，不然会遇到错误。<br><img src="https://www.southcat.net/usr/picture/GDLIST(3).png" alt="请输入图片描述" title="请输入图片描述"><br>文件下载成功后，请去<code>GDlist</code>后台，更新下缓存可以及时看到下载的文件。</p>
<p>最后<code>Aria2ng</code>的访问地址为<code>ip:8000</code>，然后填上密匙即可下载文件。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Aria2+Rclone+DirectoryLister+Aria2Ng一键安装脚本 for Debian</title>
    <url>/1963/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发了个<code>VPS</code>结合<code>Google Drive</code>建立<code>BT</code>离线大网盘教程，参考：利用Aria2+AriaNg+H5ai+Google Drive建立离线BT下载/在线播放/无限空间网盘，鉴于很多小白还是不会，加上<code>H5ai</code>有点浪费流量和<code>api</code>，所以友链博主千影写了个一键脚本，使用更好的<code>DirectoryLister</code>替代了<code>H5ai</code>，并自动添加<code>SSL</code>免费证书，<code>Aria2Ng</code>由于使用<code>SSL</code>后影响面板操作，就单独分开了，所以本脚本需要<code>2</code>个域名，并且下载文件自动上传到<code>Google Drive</code>，重启后自动挂载，添加并自动更新<code>Trackers</code>服务器，期间不需要做任何操作，这里分享下脚本。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/aria2_rclone_(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/aria2_rclone_(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/aria2_rclone_(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2018.12.21】
优化定时任务步骤，最后不再显示定时任务编辑界面。

【2018.8.17】
修复Aria2无法自动更新Trackers服务器的Bug，并优化脚本步骤信息的提示。</code></pre><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>本脚本适用于<code>Debian 8、9</code>。且需要提前使用<code>2</code>个二级域名解析到<code>VPS</code>服务器。</p>
<p>使用命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/Aria2_Rc_D.sh &amp;&amp; bash Aria2_Rc_D.sh</code></pre><p>运行脚本后，会依次要你输入以下信息：</p>
<pre><code>#输入网盘域名及Aria2NG面板域名
请输入你的DirectoryLister域名信息:
请输入你的Aria2NG域名信息:

#设置Aria2密钥
请输入你的Aria2密钥:

#配置Rclone，大致如下
n) New remote
s) Set configuration password
q) Quit config
n/s/q&gt; n
name&gt; Rats  #随便填，后面要用到
Type of storage to configure.
Choose a number from below, or type in your own value
 1 / Amazon Drive
   \ &quot;amazon cloud drive&quot;
 2 / Amazon S3 (also Dreamhost, Ceph, Minio)
   \ &quot;s3&quot;
 3 / Backblaze B2
   \ &quot;b2&quot;
 4 / Box
   \ &quot;box&quot;
 5 / Cache a remote
   \ &quot;cache&quot;
 6 / Dropbox
   \ &quot;dropbox&quot;
 7 / Encrypt/Decrypt a remote
   \ &quot;crypt&quot;
 8 / FTP Connection
   \ &quot;ftp&quot;
 9 / Google Cloud Storage (this is not Google Drive)
   \ &quot;google cloud storage&quot;
10 / Google Drive
   \ &quot;drive&quot;
11 / Hubic
   \ &quot;hubic&quot;
12 / Local Disk
   \ &quot;local&quot;
13 / Microsoft Azure Blob Storage
   \ &quot;azureblob&quot;
14 / Microsoft OneDrive
   \ &quot;onedrive&quot;
15 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ &quot;swift&quot;
16 / Pcloud
   \ &quot;pcloud&quot;
17 / QingCloud Object Storage
   \ &quot;qingstor&quot;
18 / SSH/SFTP Connection
   \ &quot;sftp&quot;
19 / Webdav
   \ &quot;webdav&quot;
20 / Yandex Disk
   \ &quot;yandex&quot;
21 / http Connection
   \ &quot;http&quot;
Storage&gt; 10  #选择10，Google Drive
Google Application Client Id - leave blank normally.
client_id&gt;  #留空 
Google Application Client Secret - leave blank normally.
client_secret&gt;  #留空
Service Account Credentials JSON file path - needed only if you want use SA instead of interactive login.
service_account_file&gt; 
Remote config
Use auto config?
 * Say Y if not sure
 * Say N if you are working on a remote or headless machine or Y didn&apos;t work
y) Yes
n) No
y/n&gt; n  #选择n
If your browser doesn&apos;t open automatically go to the following link: https://accounts.google.com/o/oauth2/auth....  #复制到浏览器打开，获取验证码
Log in and authorize rclone for access
Enter verification code&gt;  #填入上面获取到的验证码
Configure this as a team drive?
y) Yes
n) No
y/n&gt; y  #选择y
Fetching team drive list...
No team drives found in your account--------------------
[Rats]
client_id = 
client_secret = 
service_account_file = 
token = {&quot;access_token&quot;:&quot;ya29.GltFBd7UJN2qrxdG8FnG_rMuB18ogb8QlujdL7glvXtfV&quot;}
team_drive = 
--------------------
y) Yes this is OK
e) Edit this remote
d) Delete this remote
y/e/d&gt; y  #选择y
Current remotes:

Name                 Type
====                 ====
Rats                 drive

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; q  #选择q退出

#最后输入Name
请输入你刚刚输入的Name:</code></pre><p>然后脚本安装完成后，就可以直接通过<code>Aria2Ng</code>面板连接<code>Aria2</code>下载文件，并通过网盘观看了。</p>
<h2 id="相关目录"><a href="#相关目录" class="headerlink" title="相关目录"></a>相关目录</h2><pre><code>Aria2下载目录：/root/Download
DirectoryLister目录：/home/wwwroot/a.xx.com
Aria2Ng目录：/home/wwwroot/b.xx.com
挂载目录：/home/wwwroot/a.xx.com/Cloud</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>AriaNg使用Https/WebSocket(安全)协议连接Aria2的方法</title>
    <url>/2446/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>AriaNg</code>算是<code>Aira2</code>中博主认为最好用的一个<code>Web</code>前端面板，连接支持<code>Http(s)</code>或<code>Websocket(Security)</code>协议，如果我们使用<code>https</code>域名访问<code>AriaNg</code>面板，那会强制你使用<code>Https</code>和<code>Websocket</code>(安全)协议，最早期的面板是不会强制的，不过用的话，肯定是用最新版的，这时候就需要对<code>Aria2</code>简单的配下证书了，然后才能使用<code>Https</code>、<code>Websocket</code>(安全)协议进行连接，这里就水下方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、申请SSL证书</strong></p>
<pre><code>提示：如果安装Aria2的服务器有现成的HTTPS站点，可以跳过该步骤，直接使用该站点域名。</code></pre><p>先解析一个域名到安装<code>Aria2</code>的服务器，然后申请<code>SSL</code>，方法如下：</p>
<pre><code>1、宝塔面板：左侧网站-添加站点-站点设置-SSL-申请Let&apos;s Encrypt。
2、LNMP安装包：自己使用命令添加域名的时候，有申请SSL选项。</code></pre><p>如果服务器只安装了<code>Aria2</code>或者没有<code>Web</code>环境，这时候可以使用<code>Caddy</code>申请，使用命令：</p>
<pre><code>#安装Caddy
curl https://getcaddy.com | bash -s personal
#申请SSL，将后面修改成自己的域名和邮箱
caddy -host www.southcat.net -email admin@southcat.net -agree</code></pre><p>这里要注意的是，对于<code>CentOS</code>系统，还需要开启<code>80</code>端口，不然使用<code>Caddy</code>签发证书会失败，开启如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 80 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=80/tcp --permanent
firewall-cmd --reload</code></pre><p>申请成功后的<code>SSL</code>证书路径如下：</p>
<pre><code>#具体以自己域名为准
/root/.caddy/acme/acme-v02.api.letsencrypt.org/sites/www.southcat.net</code></pre><p>我们就可以发现域名的<code>crt</code>和<code>key</code>证书文件。</p>
<p><strong>2、修改配置文件</strong><br>编辑<code>Aria2</code>配置文件<code>aria2.conf</code>，如果不知道路径的，可以使用命令查找：</p>
<pre><code>find / -name aria2.conf</code></pre><p>修改如下：</p>
<pre><code>#是否启用RPC服务的SSL/TLS加密
rpc-secure=true
#申请的域名crt证书文件路径，自行修改
rpc-certificate=/home/www.southcat.net.crt
##申请的域名key证书文件路径，自行修改
rpc-private-key=/home/www.southcat.net.key</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>AUXPI-- 集合多家 API 的新一代图床 安装教程</title>
    <url>/416/</url>
    <content><![CDATA[<h3 id="程序截图"><a href="#程序截图" class="headerlink" title="程序截图"></a>程序截图</h3><p><img src="https://southcat.net/wp-content/uploads/2019/05/QQ%E6%88%AA%E5%9B%BE20190509103819.png" alt=""> <img src="https://southcat.net/wp-content/uploads/2019/05/QQ%E6%88%AA%E5%9B%BE20190509103704.png" alt=""> <img src="https://southcat.net/wp-content/uploads/2019/05/QQ%E6%88%AA%E5%9B%BE20190509103647.png" alt=""></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>1.安装web环境（懒人直接用宝塔）</p>
<pre><code>yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后登陆 环境选择lnmp 安装<code>Nginx</code>和<code>Mysql</code> AUXPI纯静态网站不需要PHP 2.安装AUXPI 使用作者给出的一键指令即可</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/aimerforreimu/AUXPI/dev/install.sh &amp;&amp; chmod +x install.sh &amp;&amp; bash install.sh install</code></pre><p>3.添加站点 宝塔安装完环境之后添加站点目录选择/root/auxpi<br><img src="https://southcat.net/wp-content/uploads/2019/05/QQ%E6%88%AA%E5%9B%BE20190509105008.png" alt=""> 4.设置反代 进入网站设置 添加反向代理 <img src="https://southcat.net/wp-content/uploads/2019/05/QQ%E6%88%AA%E5%9B%BE20190509105259.png" alt=""></p>
<blockquote>
<p>缓存一定要关闭</p>
</blockquote>
<p>5.编辑反代配置 删掉以下两行代码：</p>
<pre><code>add_header X-Cache $upstream_cache_status;
expires 12h;</code></pre><p>6.修改图床配置文件 打开安装目录下/conf/app.conf 将你的数据库信息填入 如果需要在其他端口运行修改httpport即可 注意开放端口</p>
<pre><code># Base Config
appname = auxpi
# HTTP_PORT
httpport = 2333   #运行端口
#MODEL dev|prod
runmode = dev
EnableGzip = true

#Db
dbType = mysql
dbName = auxpi  #数据库名
dbUser = root  #用户名
dbPassword = root #数据库密码
dbHost = 127.0.0.1:3306 
dbPrefix = auxpi_</code></pre><p>7.创建(迁移)数据库 <strong>注意:</strong>如果您正在使用本程序，并且已经成功连接数据库，请不要随意运行此命令，此命令会重置并生成新的数据表，您原来的数据会丢失。 输入命令 <code>./auxpi migrate</code> 有如下输出</p>
<pre><code>   _       __  __  ___ _____
  /_\  /\ /\ \/ / / _ \\_   \
 //_\\/ / \ \  / / /_)/ / /\/
/  _  \ \_/ /  \/ ___/\/ /_
\_/ \_/\___/_/\_\/   \____/

? A NEW API IMAGES STORE TOOL ?

[SUCCESS]: Database migrate Done</code></pre><p>即代表成功 8.创建管理员 在程序的根目录运行如下程序 ./auxpi -mod=admin -name=hello -email=123@123.com -pass=123123 可以创建一个 密码为 123123 用户名为:hello 邮箱为: <a href="mailto:123@123.com">123@123.com</a> 的管理员账号，管理员有且只有一个，并且用户 ID 只能为1 会有如下输出，表示运行成功</p>
<pre><code> /_\  /\ /\ \/ / / _ \\_   \
 //_\\/ / \ \  / / /_)/ / /\/
/  _  \ \_/ /  \/ ___/\/ /_
\_/ \_/\___/_/\_\/   \____/

? A NEW API IMAGES STORE TOOL ?

2019/03/10 20:39:32.827 [A] [users.go:245]  [Models Error]:  record not found  ===&gt;[users.go:245]
[SUCCESS]:Create Admin SUCCESS</code></pre><p>9.运行程序 进入程序根目录输入 <code>./auxpi run</code> 即可开始程序运行 访问端口查看即可 10.设置后台运行</p>
<pre><code>#CentOS系统
yum install screen -y
#Debian/Ubuntu系统
apt install screen -y

#后台运行
screen -dmS auxpi ./auxpi run</code></pre><p>添加完成后即可完成安装</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>AWS Lightsail简便管理脚本（可创建管理实例、IP、端口等）</title>
    <url>/1820/</url>
    <content><![CDATA[<h2 id="AWS-Lightsail-简介"><a href="#AWS-Lightsail-简介" class="headerlink" title="AWS Lightsail 简介"></a>AWS Lightsail 简介</h2><p>类似于传统的<code>linode</code>， <code>DigitalOcean</code>这样的V<code>PS</code>，计费规则简单粗暴(按月付费)，并且提供<code>web ssh</code>控制台。</p>
<p>最便宜的主机<code>5$</code>每月，<code>1CPU</code>， <code>512M</code>内存，<code>20G</code> <code>ssd</code>硬盘，并提供<code>1T</code>免费流量。（<code>EC2</code>免费<code>15G</code>）。</p>
<p>并且可以<code>Windows</code>！！！（价格稍高）。</p>
<p>提供 美国 德国 英国 爱尔兰 日本 新加坡 印度 悉尼 地区的实例。</p>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul>
<li>创建/启动/停止/重启/删除实例</li>
<li>创建/删除/释放/绑定静态<code>IP</code></li>
<li>开放端口</li>
</ul>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>1、申请key</strong><br>前往：<a href="https://console.aws.amazon.com/iam/home?region=us-east-2#/security_credential获取`key`即可。" target="_blank" rel="noopener">https://console.aws.amazon.com/iam/home?region=us-east-2#/security_credential获取`key`即可。</a></p>
<p><strong>2、安装组件</strong><br>我是使用的<code>AWS lightsail Ubuntu16</code>的实例进行的管理，所以很简单</p>
<pre><code>apt update -y
apt install python-pip -y
pip install awscli --upgrade</code></pre><p><strong>3、获取脚本</strong></p>
<pre><code>apt install wget -y
wget https://ppx.ink/wget/aws.bash &amp;&amp; chmod +x aws.bash &amp;&amp; ./aws.bash
#备用地址
apt install wget -y
wget https://www.southcat.net/usr/down/aws.bash &amp;&amp; chmod +x aws.bash &amp;&amp; ./aws.bash</code></pre><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p><img src="https://www.southcat.net/usr/picture/AWS_Lightsail(1).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AWS_Lightsail(2).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AWS_Lightsail(3).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AWS_Lightsail(4).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AWS_Lightsail(5).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AWS_Lightsail(6).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>AUXPI：一个简单的API图床程序，支持上传到搜狗/新浪/SMMS/阿里等多个图床</title>
    <url>/2382/</url>
    <content><![CDATA[<p><strong>说明：</strong>对于图床程序的话，博主之前介绍过好几种，查看：Chevereto、ImgURL。貌似最火的还是国外的<code>Chevereto</code>，这里再分享个图床程序<code>AUXPI</code>，和<code>ImgURL</code>比较类似，都支持<code>API</code>上传，<code>SMMS</code>图床上传。不过该图床还处于发育初期阶段，貌似以后会越来越强，可以期待下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/AUXPI(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AUXPI(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AUXPI(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AUXPI(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.3.29】
该程序变动较大，支持更多图床，新增后台，用户注册等功能，安装环境多了个Mysql，更新安装方法</code></pre><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><pre><code>支持web上传图片    
支持API上传图片    
支持图床：
搜狗
新浪(私有+公共)
SMMS
奇虎(360)
百度
阿里
京东
Upload.cc
Flickr
网易
掘金
本地</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/aimerforreimu/AUXPI" target="_blank" rel="noopener">https://github.com/aimerforreimu/AUXPI</a></p>
<p><strong>所需环境：</strong><code>Mysql</code>、<code>Redis</code>、<code>Nginx</code>/<code>Caddy</code>(非必需，但如果你要使用域名访问就需要安装了)。</p>
<p><strong>1、安装Web环境</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>Mysql</code>、<code>Redis</code>、<code>Nginx</code>(如果你使用域名的话，就需要安装)。</p>
<p>然后点击左侧数据库-添加数据库，设置好数据库信息。</p>
<p><strong>2、安装AUXPI</strong><br>首先进入到<code>Release</code>→传送门，下载最新版的<code>Linux</code>系统<code>AUXPI</code>文件，目前为<code>V2.3.9</code>。</p>
<pre><code>#新建文件夹用来存放auxpi文件
mkdir auxpi &amp;&amp; cd auxpi
wget https://github.com/aimerforreimu/auxpi/releases/download/2.3.9/auxpi-2.3.9-linux.tar.gz
#解压并移动文件
tar zxvf auxpi*.tar.gz &amp;&amp; rm -rf auxpi*.tar.gz
mv build/linux/* ./
rm -rf build</code></pre><p>然后编辑配置文件<code>conf/siteConfig.json</code>，修改如下：</p>
<pre><code>{
  &quot;site_name&quot;: &quot;AuXpI API 图床&quot;,  #站点名称    
  &quot;site_footer&quot;: &quot;&quot;,  #footer输出的内容
  &quot;site_url&quot;: &quot;http://yoursite.com/&quot;,  #站点url
  &quot;logo&quot;:&quot;/static/app/images/logo.jpg&quot;,  #站点logo
  &quot;site_upload_max_number&quot;: 10,  #一次性最多可以上传多少张图片
  &quot;site_up_load_max_size&quot;: 5,  #最大允许上传的图片大小，单位MB
  &quot;allow_tourists&quot;:false,  #访客上传，false为关闭，ture为开启
  &quot;allow_register&quot;:false,  #用户注册，false为关闭，ture为开启
  &quot;db_option&quot;: {
      &quot;use_db&quot;: true,     
      &quot;db_type&quot;: &quot;mysql&quot;,       
      &quot;db_host&quot;: &quot;127.0.0.1:3306&quot;,  #数据库地址，正常不需要修改
      &quot;db_name&quot;: &quot;auxpi&quot;,  #数据库名称
      &quot;db_user&quot;: &quot;root&quot;,  #数据库用户名
      &quot;db_pass&quot;: &quot;moerats&quot;,  #数据库密码
      &quot;table_prefix&quot;: &quot;auxpi_&quot;  #数据表前缀，可不修改
    },</code></pre><p>再配置<code>conf/app.conf</code>文件，修改数据库信息，其它看着办，大致如下：</p>
<pre><code>#程序默认运行端口和运行模式，端口可以默认2333
httpport = 2333
#运行模式必须修改为prod
runmode = prod

#数据库设置信息
dbType = mysql
dbName = auxpi
dbUser = root
dbPassword = moerats
dbHost = 127.0.0.1:3306
dbPrefix = auxpi_</code></pre><p>接下来继续使用命令：</p>
<pre><code>#初始化
chmod -u+x auxpi
./auxpi init
#创建数据表
./auxpi migrate</code></pre><p>创建管理员账户：</p>
<pre><code>#以下命令会给你创建一个用户名RATS，邮箱admin@southcat.net，密码moerats的管理员账户，请自行修改
./auxpi -mod=admin -name=RATS -email=admin@southcat.net -pass=moerats </code></pre><p>开始运行程序：</p>
<pre><code>#CentOS系统
yum install screen -y
#Debian/Ubuntu系统
apt install screen -y

#后台运行
screen -dmS auxpi ./auxpi run</code></pre><p>运行成功后使用<code>IP:2333</code>进行访问，如果站点打不开，可能需要开启防火墙，点击面板左侧-安全，放行<code>2333</code>端口即可。</p>
<p><strong>3、域名反代</strong><br>点击左侧网站-添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理-添加反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:2333</code>，再提交即可。如果要启用<code>https</code>访问的，点击<code>SSL</code>，申请<code>Let&#39;s Encrypt</code>，强制<code>https</code>访问即可。</p>
<p>最后点击域名设置-反向代理-配置文件，删掉以下两行代码：</p>
<pre><code>add_header X-Cache $upstream_cache_status;
expires 12h;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Axel - Linux多线程下载工具</title>
    <url>/1466/</url>
    <content><![CDATA[<p>一个非常简单的多线程下载工具，解决单线程下载速度慢的问题，首先是安装：</p>
<pre><code>apt-get install axel #debian/ubuntu安装方法
yum install axel #centos安装方法</code></pre><p>使用方法，就几个参数，非常简单：</p>
<pre><code>axel -n 10 http://......


-o /tmp #指定下载目录
-q #静默模式
-s #限制最大速度</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>BaiduExporter：一个可以将百度云文件直接导出到Aria2下载的插件</title>
    <url>/1969/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>一个可以方便的把百度网盘的下载地址导出到<code>aria2/aria2-rpc</code>下载的插件，支持<code>YAAW</code>，<code>AriaNg</code>等。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github下载：</strong><a href="https://github.com/acgotaku/BaiduExporter/releases" target="_blank" rel="noopener">https://github.com/acgotaku/BaiduExporter/releases</a><br><strong>本地下载：</strong>BaiduExporter</p>
<p>下载后打开文件，选择浏览器安装，然后就可以直接进入百度云网盘，选择文件直接<code>ARIA2 RPC</code>导出下载了。<br><img src="https://www.southcat.net/usr/picture/BaiduExporter_(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BaiduExporter_(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>Windows系统安装最新版Aria2客户端及使用教程</li>
<li>BT种子/磁力链接下载工具：Aria2一键安装管理脚本</li>
<li>使用Aria2下载BT磁力的时候，速度慢或者没速度的解决方法</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Bandwagon Host(搬瓦工)利用API自动切换机房脚本</title>
    <url>/2279/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>搬瓦工大家估计都了解，一家很火的主机商→介绍页面，很多套餐都可以在后台自由切换很多机房，有时候切到很火的机房会提示爆满切不过去，而有的人也不愿守在电脑前不停的手动，这时候就们可以通过<code>API</code>进行自动切换，这里分享个萌咖大佬写的自动切换机房的脚本，很方便。</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>最近搬瓦工出了一个特别火的双十一特价<code>CN2</code>套餐，<code>2</code>核/<code>2G</code>内存/<code>40G</code>硬盘/<code>1T</code>流量，配置大概和常规的<code>100</code>美元差不多，现在只需要不到<code>30</code>美元就可以拥有，而且三网<code>CN2</code>线路，能够自由的切换机房，切换<code>IP</code>地址，性价比超高。</p>
<p>该套餐优惠码<code>BWH26FXH3HIQ</code>即可享受<code>-6.25%</code>的循环优惠→点击购买，数量有限。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>先登录搬瓦工后台，找到左侧<code>API</code>，记下你的<code>VEID</code>，并点击<code>Show API Key</code>获取你的<code>API Key</code>。</p>
<p><strong>说明：</strong>任何服务器都可以进行操作，而且请勿滥用<code>API</code>，能够手动切换的请尽量手动。</p>
<p><strong>1、下载脚本</strong></p>
<pre><code>wget --no-check-certificate -qO BWH.sh &apos;https://moeclub.org/attachment/LinuxShell/BWH.sh&apos; &amp;&amp; chmod a+x BWH.sh
#脚本备份
https://www.southcat.net/usr/shell/BWH.sh</code></pre><p><strong>2、设置脚本</strong></p>
<pre><code>veid=&apos;1234560&apos;; #VEID
api_key=&apos;private_xxxxxxxxxxxxxxxxx&apos;; #API KEY
ToLocation=&apos;USCA_2&apos;; #目标机房代码，切换机房的时候，机房后面括号里就是代码，默认DC2
Timeout=&apos;150&apos;;  #API频率有限制，单位秒，每150秒运行一次。(不建议过低，否则面板报错)</code></pre><p><strong>3、运行脚本</strong></p>
<pre><code>#前台运行
bash BWH.sh
#后台运行
nohup bash BWH.sh &gt;/dev/null 2&gt;&amp;1 &amp;</code></pre><p>然后差不多很快我们就可以收到切换成功的邮件了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>AutoScript: Hostloc论坛自动踢楼脚本</title>
    <url>/1705/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>一些自动化脚本，让机器代替人做一些 “<code>fucking things</code>“。<br>目前仅有<code>hostloc</code>：自动踢楼脚本(<code>for www.hostloc.com</code>)。<br><code>C</code>大经常开金盾, <code>So</code>浏览器渲染；由于<code>hostloc</code>服务器老是<code>502</code>, 或由于 “网络的不确定性”,<code>So</code>踢中为止。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>项目地址：</strong><a href="https://github.com/popppp1/AutoScript" target="_blank" rel="noopener">https://github.com/popppp1/AutoScript</a><br><strong>1、准备工作</strong><br><code>for Centos</code></p>
<pre><code>sudo yum -y install epel-release
sudo yum -y install python-pip
sudo yum clean all
sudo pip install lxml
sudo pip install selenium</code></pre><p><code>for Ubuntu/Debian</code></p>
<pre><code>sudo apt-get -y install python-pip
sudo apt-get install libfontconfig
sudo pip install lxml
sudo pip install selenium


wget --no-check-certificate https://raw.githubusercontent.com/popppp1/AutoScript/master/hostloc/hostloc.py
python hostloc.py 踢楼地址 踢楼楼层 踢楼口号 账户 密码</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>BBR+BBR魔改+Lotsever(锐速)一键脚本 for Centos/Debian/Ubuntu</title>
    <url>/1807/</url>
    <content><![CDATA[<p><strong>说明：</strong>对于<code>CentOS</code>系统的<code>BBR</code>魔改之前搬运过南琴浪大佬的脚本，无奈出现了<code>BUG</code>，导致<code>CentOS</code>安装还存在着问题，前几天友链博主千影，也写出了一个魔改<code>BBR</code>脚本，脚本包含<code>BBR</code>+<code>BBR</code>魔改版+<code>Lotsever</code>(锐速)，同时支持<code>Centos</code>、<code>Debian</code>、<code>Ubuntu</code>系统，很方便，也很强大。</p>
<h2 id="教程更新"><a href="#教程更新" class="headerlink" title="教程更新"></a>教程更新</h2><pre><code>【2018年12月24日】
脚本新增BBRplus修正版，解决原版bbr在高丢包率下易失速以及bbr收敛慢的问题。尝试使其更好，减少排队和丢包。
【2018年3月8日】
脚本新增南琴浪的暴力魔改BBR，使速度更加暴力，实际效果因线路而定。</code></pre><h2 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h2><p><strong>支持系统：</strong><code>CentOS 6+</code>、<code>Debian 8+</code>、<code>Ubuntu 14+</code>。</p>
<p><strong>注意：</strong>如果服务器有重要的数据，建议安装前先备份好数据，特别是<code>CentOS</code>系统。</p>
<p>运行以下命令：</p>
<pre><code>#过程有2步，第1步安装相应的内核，第2步开启内核对应的加速
wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</code></pre><p>使用脚本后会出现如下选项：<br><img src="https://www.southcat.net/usr/picture/qianyingbbr(1).png" alt="请输入图片描述" title="请输入图片描述"><br>根据自己需求操作，重启后再使用<code>./tcp.sh</code>命令接着操作。</p>
<p>如果在删除内核环节出现这样一张图<br><img src="https://www.southcat.net/usr/picture/qianyingbbr(2).png" alt="请输入图片描述" title="请输入图片描述"><br>注意选择<code>NO</code>，然后根据提示重启系统。</p>
<p>最后由于本脚本集成加速太多，兼容性可能不是很好，对于部分系统<code>BBR</code>安装不成功的，可以参考博客其它脚本。</p>
<ul>
<li>超级暴力版魔改BBR一键脚本 for Debian</li>
<li>OpenVZ平台魔改BBR一键脚本之Rinetd方式</li>
<li>魔改BBR一键安装脚本 for Debian/CentOS</li>
<li>Linux VPS锐速(LotServer)一键安装脚本</li>
</ul>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><pre><code>BBR魔改来源：https://www.94ish.me/1635.html
BBR修正版来源：https://www.hostloc.com/thread-507165-1-1.html</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Bitly：一个可以还原短网址链接的网站</title>
    <url>/1824/</url>
    <content><![CDATA[<p><strong>说明：</strong>可能很多人觉得短地址还原网站没啥利用价值，然而这话是不对的，因为存在着不确定的因素，有时候短地址链接也会失效，这时候点击短地址是跳转不到真实的网站的，此时就需要这样的工具还原了。这里就介绍个，而且支持还原<code>goo.gl</code>、<code>bit.ly</code>、<code>adf.ly</code>、<code>t.co</code>、<code>t.cn</code>、<code>url.cn</code>等国内外<code>300</code>多种短网址。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>短网址还原服务存在的价值？</strong></p>
<ul>
<li>让无法访问的短网址能继续访问</li>
<li>让钓鱼网站和<code>Spams</code>无可遁形</li>
<li>维系基于链接的互联网生态平衡</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>BitSend：一个不限容量，可设密码的免费文件存储分享平台</title>
    <url>/2075/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>BitSend</code>是一个日本的免费文件存储分享服务平台，没有容量限制和流量限制，可以用来进行临时的大文件转存下载使用。不需要登录即可使用，还可以自由设置密码，下载次数，保存天数，不过最大保存天数只有<code>14</code>天，对于临时分享文件的足够了，并且支持邮箱通知，最多可通知<code>20</code>人，而且国内下载速度是十分的快，强烈推荐。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/BitSend(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BitSend(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>BOSE耳机降级教程  适用QC30 QC35 QC35Ⅱ  Noise Cancelling Headphones 700等多个型号（原方法有反馈可以使用 具体没测试 可以自行测试一下）</title>
    <url>/660/</url>
    <content><![CDATA[<p>之前因为QC30升级固件之后降噪能力下降，然后购入了QC35Ⅱ，然后手贱又更新了固件然后降噪又差了，然后百度谷歌一直找固件降级教程，结果都是已经无法使用的。前几日偶然刷github发现了一个大佬编辑的Bose固件更新器可以进行降级，于是在这里分享一下</p>
<p>作者Github： <a href="https://github.com/bosefirmware/ced" target="_blank" rel="noopener">https://github.com/bosefirmware/ced</a></p>
<p>首先我们先要到Bose官网下载官方的更新工具网址： <a href="https://btu.bose.com/" target="_blank" rel="noopener">https://btu.bose.com/</a></p>
<p>下载完成之后我们需要打开一次软件然后退出。</p>
<p>然后我们下载编辑过的BOSE更新器 <a href="https://github.com/bosefirmware/ced/raw/master/BOSEUPDATER.EXE" target="_blank" rel="noopener">点击此处下载</a></p>
<p>将下载的更新器复制到 C:\Program Files (x86)\Bose Updater 文件目录下，覆盖原文件。然后运行更新器。</p>
<p>接下来打开 <a href="https://btu.bose.com/" target="_blank" rel="noopener">https://btu.bose.com/</a> 并将你的耳机用过USB线连接到电脑，链接成功后会显示如下画面</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/%E6%8D%95%E8%8E%B7-1024x465.png" alt=""></p>
<p>然后我们依次按下 a d v ↑ ↓ 按键即可选择版本进行降级</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/%E6%8D%95%E8%8E%B72.png" alt=""></p>
<p>选择版本点击Update Now等待更新完成即可。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>BYR-Navi：一个开源、美观且可以部署在GitHub Pages的网站导航程序</title>
    <url>/2458/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>BYR-Navi</code>是一个开源、轻量使用<code>Fomantic UI Web</code>框架构建的网站导航程序，样式也非常美观，而且支持从<code>N</code>个站点直接搜索，我们既可以部署在自己的服务器上，又可以部署在<code>GitHub Pages</code>，后者无需服务器，这里水个稍微完整点的教程，有需求的可以搭建个玩玩。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/BYR-Navi(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BYR-Navi(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>演示地址：</strong><a href="https://byr-navi.com" target="_blank" rel="noopener">https://byr-navi.com</a></p>
<p><strong>Github地址：</strong><a href="https://github.com/BYR-Navi/BYR-Navi" target="_blank" rel="noopener">https://github.com/BYR-Navi/BYR-Navi</a></p>
<p><strong>1、安装Ruby</strong></p>
<pre><code>#导入密钥
gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
#安装稳定版
curl -sSL https://get.rvm.io | bash -s stable
#载入RVM环境
source /etc/profile.d/rvm.sh
#安装Ruby 2.6.3
rvm install ruby 2.6.3
#设置为默认版本
rvm use 2.6.3 --default</code></pre><p>导入期间出现使用<code>No dirmngr</code>报错的话，使用<code>apt install dirmngr</code>，然后重新导入即可。</p>
<p><strong>2、安装Jekyll</strong></p>
<pre><code>gem install jekyll</code></pre><p><strong>3、安装BYR-Navi</strong></p>
<pre><code>#拉取源码
git clone https://github.com/BYR-Navi/BYR-Navi
#安装依赖
cd BYR-Navi
bundle i</code></pre><p>如果第一步提示<code>-bash: git: command not found</code>，可以先使用命令：</p>
<pre><code>#CentOS
yum -y install git
#Debian、Ubuntu
apt install git -y</code></pre><p>然后修改配置文件_config.yml，对照原信息，自行修改导航标题，关键词等描述，更深层次的修改可参考官方文档→传送门。</p>
<p>再进入<code>_data</code>文件夹，新增/修改大致导航网站链接，可参考上面的演示地址修改，最后还一个就是统计配置文件<code>analytics.yml</code>，这个需要我们额外安装<code>Matomo</code>，安装和配置可以提前看文章后面。</p>
<p>都修改完成后，启动：</p>
<pre><code>#运行端口为8989，自行修改
bundle exec jekyll serve -H 0.0.0.0 -P 8989 --detach</code></pre><p>此时就可以使用<code>ip:8989</code>访问程序了。</p>
<p>如果<code>CentOS</code>系统打不开的话，可能还需要开启<code>8989</code>端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8989 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8989/tcp --permanent
firewall-cmd --reload</code></pre><p>像阿里云等服务器，还需要去安全组那里开放下端口。</p>
<p>这里除了可以使用命令行启动，也可以直接将生成的<code>_site</code>文件夹丢到网站根目录访问。</p>
<p>如果要修改导航相关页面的信息显示的话，也可以在<code>_site</code>文件夹中修改。</p>
<h2 id="安装Matomo"><a href="#安装Matomo" class="headerlink" title="安装Matomo"></a>安装Matomo</h2><p><strong>官方网站：</strong><a href="https://matomo.org" target="_blank" rel="noopener">https://matomo.org</a></p>
<p>这个安装教程博主很久前水过，不过是手动的，有点复杂，这里就直接找了个配置比较简单的<code>Docker</code>镜像进行安装。</p>
<p><strong>Docker地址：</strong><a href="https://github.com/crazy-max/docker-matomo" target="_blank" rel="noopener">https://github.com/crazy-max/docker-matomo</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong></p>
<pre><code>#拉取Matomo镜像
docker run --restart=always -d --name matomo \
-p 8000:8000 \
-v ~/matomo/data:/data \
crazymax/matomo

#拉取Mysql镜像，记得修改数据库信息，如果你服务器已经安装过Mysql数据库，可以跳过该步骤
docker run --restart=always --name mysqlmatomo -d \
-p 3306:3306 \
-e MYSQL_ROOT_PASSWORD=matomo123 \
-e MYSQL_DATABASE=matomo \
-e MYSQL_USER=matomo \
-e MYSQL_PASSWORD=matomo123 \
-v ~/matomo/mysql:/var/lib/mysql \
mysql:5.6</code></pre><p>安装完成后打开<code>ip:8080</code>即可访问。如果访问不了的话，可以查看上面的教程，开放端口即可。</p>
<p>然后这里需要注意的是<code>Database Server</code>需要填上你的<code>ip</code>地址，而且数据库端口，比如<code>3306</code>需要防火墙放行，不然会连接不上。</p>
<p>安装到最后一步的时候，如果你填的ip地址，那么可能进入不了，可以编辑<code>/root/matomo/data/config/config.ini.php</code> ，修改<code>trusted_hosts[]</code>参数为你的访问地址。</p>
<p>最后配置该导航的话，需要修改配置文件<code>_data/analytics.yml</code>，大致参数如下：</p>
<pre><code>#url为matomo站点，domain为导航站，site_id为matomo站点统计站id，token为matomo站点的token
matomo:
  url: http://matomo.southcat.net/
  domains:
  - &quot;http://byr.southcat.net&quot;
  site_id: 2
  token: 297bd600834c2a5a70293c47a</code></pre><p>参数获取大致路径如下：</p>
<pre><code>1、site_id
在后台添加一个网站统计，就可以直接看到网站id
2、token
该参数可以在Settings里获取API Authentication Token</code></pre><p>最后可能会出现跨域问题，导致配置统计后不生效，可以在通用设置中设置跨域资源共享(<code>CROS</code>)白名单域名，将导航站点添加进去即可。</p>
<h2 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h2><p>这里部署到<code>GitHub Pages</code>的好处就是不需要服务器，但国内访问的话，有点影响体验，这个就自行选择了。</p>
<p>首先你肯定需要一个<code>Github</code>账号，没有的可以去注册一个，地址：<a href="https://github.com，有了账号就继续看。" target="_blank" rel="noopener">https://github.com，有了账号就继续看。</a></p>
<p><strong>1、配置Git SSH密钥</strong></p>
<pre><code>由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以必须要让github仓库认证你SSH key，在操作之前，需要先在服务器上生成SSH key。</code></pre><p>我们先去根目录下使用命令：</p>
<pre><code>cd ~
ssh-keygen -t rsa</code></pre><p>这里会要你命名密匙名称(这里建议使用默认名称)，然后连续按几次<code>Enter</code>，这时候会在<code>/root/.ssh</code>文件夹生成<code>2</code>个<code>ssh</code>密钥，然后我们查看公钥<code>id_rsa.pub</code>。</p>
<pre><code>cat ~/.ssh/id_rsa.pub</code></pre><p>查看后，再复制下公钥，然后打开<code>Github</code>官网，进入<a href="https://github.com/settings/ssh/new，`Title`随便填，然后`Key`填入刚刚复制的密匙，最后点击`Add" target="_blank" rel="noopener">https://github.com/settings/ssh/new，`Title`随便填，然后`Key`填入刚刚复制的密匙，最后点击`Add</a> SSH Key`添加即可。<br><img src="https://www.southcat.net/usr/picture/BYR-Navi(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、建立仓库</strong><br>我们需要先访问<a href="https://github.com/new，新建一个仓库用来存放`BYR-Navi`站点文件，名称填`你的用户名.github.io`，仓库别加密，不然到时候就访问不到了。" target="_blank" rel="noopener">https://github.com/new，新建一个仓库用来存放`BYR-Navi`站点文件，名称填`你的用户名.github.io`，仓库别加密，不然到时候就访问不到了。</a><br><img src="https://www.southcat.net/usr/picture/BYR-Navi(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>3、推送到Github</strong></p>
<pre><code>#进入源码的_site文件夹
cd /root/BYR-Navi/_site
#初始化你的github仓库
git init
#关联到远程github仓库，后面为仓库SSH地址，新建仓库后会返回给你该地址
git remote add origin git@github.com:iiiiiii1/iiiiiii1.github.io.git
#把目录下所有文件更改状况提交到暂存区，包括增，删，改。
git add -A
#提交更改的说明，说明随意了，这里为push
git commit -m &quot;push&quot;
#开始推送到Github
git push -u origin master</code></pre><p>推送的时候可能会提示<code>The authenticity of host &#39;github.com&#39; can&#39;t be established.</code>信息，直进<code>yes</code>即可。</p>
<p>然后推送完就可以看到仓库的推送文件了。<br><img src="https://www.southcat.net/usr/picture/BYR-Navi(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>接下来访问<code>https://你的用户名.github.io</code>就可以进入导航网站了。</p>
<p><strong>4、绑定域名</strong><br>有的可能不习惯用<code>github</code>的域名，这里可以绑定自己的域名。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>BT种子/磁力链接下载工具：Aria2一键安装管理脚本</title>
    <url>/1653/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Aria2</code>作为一款<code>linux</code>下的下载神器，可以下载<code>http</code>资源、种子文件、磁力链接等，功能强大，就不过多介绍了，此前提到过<code>Aria2</code>安装方法，这里再说个逗比大佬的一键脚本，很方便，推荐使用。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里只提到了搭建后端，前端可以使用我自己搭建好的：<a href="https://www.southcat.net/Aria2/，或者可以参考：一个Aria2新的更好用的Web前端：AriaNg安装教程。" target="_blank" rel="noopener">https://www.southcat.net/Aria2/，或者可以参考：一个Aria2新的更好用的Web前端：AriaNg安装教程。</a></p>
<p><strong>系统要求：</strong><code>CentOS 7+</code>、<code>Debian 6+</code>、<code>Ubuntu 14.04+</code></p>
<p>执行下面的代码下载并运行脚本：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Aria2/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</code></pre><p>运行脚本后会出现脚本操作菜单，选择并输入<code>1</code>就会开始安装。</p>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>进入下载脚本的目录并运行脚本：</p>
<pre><code>./aria2.sh</code></pre><p>然后选择你要执行的选项即可。</p>
<pre><code>Aria2 一键安装管理脚本 [vx.x.x]
-- Toyo | doub.io/shell-jc4 --

0. 升级脚本
————————————
1. 安装 Aria2
2. 卸载 Aria2
————————————
3. 启动 Aria2
4. 停止 Aria2
5. 重启 Aria2
————————————
6. 修改 配置文件
7. 查看 日志信息
————————————

当前状态: 已安装 并 已启动

请输入数字 [0-7]:</code></pre><h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Caddy环境下一些Web应用程序的配置参考</title>
    <url>/2172/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Caddy</code>是一个轻量级的<code>Web</code>服务器，安装和配置很快，博主也喜欢用，以后的使用范围估计会越来越广，而目前就是一些<code>Web</code>应用程序的配置文件难找，相信很多人都有体会，这里博主就列举常用的一些程序的配置供参考。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>以下参数都需要填入配置文件<code>Caddyfile</code>里，且仅作参考。</p>
<p><strong>1、Chevereto图床</strong></p>
<pre><code>example.com {
    root /var/www/chevereto
    fastcgi / /var/run/php/php7.0-fpm.sock php

    rewrite {
        to {path} {path}/ /index.php?{query}
    }
}</code></pre><p><strong>2、Nextcloud网盘</strong></p>
<pre><code>my-nextcloud-site.com {

    root   /var/www/nextcloud
    log    /var/log/nextcloud_access.log
    errors /var/log/nextcloud_errors.log

    fastcgi / 127.0.0.1:9000 php {
        env PATH /bin
    }

    header / {
         Strict-Transport-Security       &quot;max-age=15768000;&quot;
    }

    # checks for images
        rewrite {
            ext .svg .gif .png .html .ttf .woff .ico .jpg .jpeg
        r ^/index.php/(.+)$
        to /{1} /index.php?{1}
    }

    rewrite {
                r ^/\.well-known/host-meta$
                to /public.php?service=host-meta&amp;{query}
        }
    rewrite {
                r ^/\.well-known/host-meta\.json$
                to /public.php?service=host-meta-json&amp;{query}
        }
    rewrite {
                r ^/\.well-known/webfinger$
                to /public.php?service=webfinger&amp;{query}
        }

    rewrite {
        r ^/index.php/.*$
        to /index.php?{query}
    }

    # client support (e.g. os x calendar / contacts)
    redir /.well-known/carddav /remote.php/carddav 301
    redir /.well-known/caldav /remote.php/caldav 301

    # remove trailing / as it causes errors with php-fpm
    rewrite {
        r ^/remote.php/(webdav|caldav|carddav|dav)(\/?)(\/?)$
        to /remote.php/{1}
    }

    rewrite {
        r ^/remote.php/(webdav|caldav|carddav|dav)/(.+?)(\/?)(\/?)$
        to /remote.php/{1}/{2}
    }

    rewrite {
        r ^/public.php/(dav|webdav|caldav|carddav)(\/?)(\/?)$
        to /public.php/{1}
    }

    rewrite {
        r ^/public.php/(dav|webdav|caldav|carddav)/(.+)(\/?)(\/?)$
        to /public.php/{1}/{2}
    }

    # .htaccess / data / config / ... shouldn&apos;t be accessible from outside
    status 403 {
        /.htaccess
        /data
        /config
        /db_structure
        /.xml
        /README
    }

}</code></pre><p><strong>3、WordPress博客</strong><br>配置参考该文章：Caddy环境下WordPress博客伪静态设置。</p>
<p><strong>4、Typecho博客</strong><br>配置参考该文章：小内存VPS安装Caddy+PHP 7+Sqlite 3环境，并快速搭建Typecho博客。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Caddy Web Server一键管理（开始/停止/安装/更新/卸载）脚本</title>
    <url>/1834/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Caddy</code>是一个极简而强大的<code>HTTP</code>服务器，支持<code>HTTP/2</code>静态网页服务器，安装也快，之前也发过逗比的一个<code>Caddy</code>脚本，参考：一个极简的HTTP Server： Caddy一键安装脚本，不过该脚本有点简洁，只提供安装+运行功能，现在再发个功能比较全的<code>Caddy</code>脚本，该脚本是爱学习的博主无意间在国外技术网站看到的，而国内很难找到这么齐全的，所以就分享给大家，且该脚本支持开始、停止、安装、更新、卸载等功能。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/sayem314/Caddy-Web-Server-Installer" target="_blank" rel="noopener">https://github.com/sayem314/Caddy-Web-Server-Installer</a></p>
<p><strong>系统要求：</strong><code>Ubuntu 14.x</code>、<code>15.x</code>、<code>16.x</code>，<code>Debian 7.x</code>、<code>8.x</code>、<code>9.x</code>，<code>CentOS 6.8</code>、<code>7.2</code>。</p>
<p>运行以下命令：</p>
<pre><code>wget https://git.io/vra5C -O - -o /dev/null|bash</code></pre><p>然后使用下列命令进行操作：</p>
<pre><code>caddy start  #开启Caddy Web Server
caddy stop  #停止Caddy Web Server
caddy reload  #重载Caddy Web Server
caddy restart  #重启Caddy Web Server
caddy status  #查看Caddy Web Server状态
caddy install  #安装Caddy Web Server
caddy edit  #编辑配置文件Caddyfile
caddy service  #使Caddy Web Server成为一项服务(upstart/systemd)
caddy update  #升级Caddy Web Server
caddy delete  #卸载Caddy and data
caddy about  #关于Caddy Web Server
caddy version  #检测脚本/Caddy/PHP5-fpm版本信息</code></pre><p>安装插件命令：</p>
<pre><code>caddy install http.cache,http.filemanager,http.ipfilter,http.ratelimit</code></pre><p>安装<code>caddy</code>的时候会要求你输入域名，邮箱（帮你自动签发<code>ssl</code>），然后使用命令启动<code>caddy</code>即可！</p>
<pre><code>虚拟主机文件夹：/var/caddywww
配置文件夹：/etc/Caddyfile</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CC-Attack-Protector：Linux VPS防CC攻击一键脚本，带微信提醒</title>
    <url>/1915/</url>
    <content><![CDATA[<p><strong>说明：</strong>博客这几天一直在被<code>CC</code>攻击，然后让朋友帮忙写了个防<code>CC</code>攻击脚本，并添加了微信方糖提醒功能，这里就分享下。</p>
<h2 id="CC-Attack-Protector"><a href="#CC-Attack-Protector" class="headerlink" title="CC Attack Protector"></a>CC Attack Protector</h2><p>每<code>10</code>秒钟检测一次指定网站日志，如果超过预设限制的（在单位时间请求数以及请求大小层面）会在防火墙层面进行阻止，并运用微信<code>Server</code>酱进行通知。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>1、请记得开启站点的日志记录，而且面板用户要注意检查并取消掉“静态文件的<code>access_log off</code>”，也就是所有访问都要记录日志，以确保最佳的防<code>CC</code>效果。<br>2、日志的开头的格式必须为例如<code>x.x.x.x - - [22/Nov/2017:13:20:02 -0500] &quot;GET /xxxxxx HTTP/1.1&quot; 200 3386</code>，也就是<code>IP</code>在首列，时间格式与此示例相同，请求<code>URL</code>在第七列，请求长度在第十列，一般<code>nginx</code>日志的默认格式应该是这样，如果是其他的服务器软件或者日志格式不同请根据自己的情况魔改<code>ddos.sh</code>里的相关截取日志信息的代码。<br>3、建议定期分割日志，例如使用<code>crontab</code>一天分割一次，以确保脚本检测效率。<br>4、一旦有新<code>IP</code>被封禁，会输出封禁信息（当你回到<code>screen</code>后就可以看到），同时会输出日志到<code>cc.log</code>中。<br>5、如果想解封<code>IP</code>，可以执行<code>bash ban.sh -ua</code>，这样会解封所有<code>IP</code>。<br>6、关于<code>ban.sh</code>这个脚本还能做到的其他事情，请直接<code>bash ban.sh</code>查看。<br>7、如果<code>Centos</code>，那么可能需要在<code>ban.sh</code>中操作防火墙之后重启一下防火墙，因为<code>Centos</code>防火墙修改规则之后不是即时生效的。对于<code>Centos 7</code>需要将防火墙<code>firewall</code>替换成<code>iptables</code>。<br>8、重启<code>VPS</code>后，记得使用<code>screen</code>命令，重新启动脚本。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><strong>1、SSH后台监控</strong><br>触发机制后自动<code>ban</code>掉<code>ip</code>。<br><img src="https://www.southcat.net/usr/picture/CC_AT(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、微信提醒</strong><br>触发机制并微信通知。<br><img src="https://www.southcat.net/usr/picture/CC_AT(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>本脚本理论上<code>Ubuntu</code>和<code>Debian</code>都可以直接使用，<code>CentOS</code>请看说明，按要求修改。</p>
<pre><code>git clone https://github.com/Tsuk1ko/CC-attack-protector.git
cd CC-attack-protector</code></pre><p>然后修改<code>ddos.sh</code>前面的配置内容，根据注释说明修改即可！</p>
<pre><code>#配置
LOG_FILES=&quot;/www/wwwlogs/*.log&quot;    #指定日志文件
SCKEY=&quot;&quot;    #Server酱服务的SCKEY，用于通知CC攻击情况
LIMIT_REPEAT=20        #重复的请求次数，超过直接封
LIMIT_TIMES=50        #否则，在10秒内超过这么多连接日志数的会进入检测，并且满足下面这个条件的会被封禁
LIMIT_FLOW=62914560    #请求大小之和 62914560 = 60MiB</code></pre><p>关于微信通知，不知道方糖<code>Server</code>酱的，去首页<code>https://sc.ftqq.com</code>按要求申请<code>SCKEY</code>然后填入即可！</p>
<p>其实一般情况下关于<code>CC</code>攻击判断的设置并不用动，如果发现封禁效果与理想有差异再修改！</p>
<p>建议使用<code>screen</code>来运行</p>
<pre><code>#没有screen就安装
apt-get install screen
screen -S CC
#运行
bash run.sh</code></pre><p>然后按下<code>Ctrl+A</code>，再按下<code>D</code>，即可退出<code>screen</code>界面。</p>
<p>想回去的话就</p>
<pre><code>#查看会话
screen -ls
#回去该会话
screen -r 会话名称</code></pre><p>如果网站大文件过多，容易造成误判，建议限制<code>IP</code>并发连接数以及下载带宽，然后将<code>CC</code>脚本配置文件里的<code>LIMIT_REPEAT=20</code>可以设置为<code>35</code>或<code>40</code>。线程具体设置如下：</p>
<pre><code>#先去nginx.conf文件http{}里加上如下代码
limit_conn_zone $binary_remote_addr zone=perip:10m;
limit_conn_zone $server_name zone=perserver:10m;
#再去xx.com.conf文件server{}里添加如下代码，分别为总线程，单个ip线程和单线程最大速度
limit_conn perserver 300;
limit_conn perip 25;
limit_rate 512k;</code></pre><p>不会切割日志的，按时清空网站日志文件就可以了，使用命令<code>echo &quot;&quot; &gt;/home/wwwlogs/www.southcat.net.log</code>即可，后面为网站日志文件路径，配合定时<code>Crontab</code>就可以了，参考：Linux系统Crontab的安装及定时任务的命令详解。</p>
<h2 id="测试是否正常监控"><a href="#测试是否正常监控" class="headerlink" title="测试是否正常监控"></a>测试是否正常监控</h2><p>当你配置好脚本后，可以使用<code>bash run.sh --test</code>命令来测试脚本是否有正常监控。</p>
<p>当你使用<code>--test</code>参数运行<code>run.sh</code>脚本后，访问自己的网站，如果脚本有正常监控，那么每间隔<code>10</code>秒会输出一次监控到的访问记录，大概像这个样子。</p>
<pre><code>Start protecting...
[Test mode]
#时间                   访问量   重复访问次数  IP
[18/Jan/2018:13:36:3x]    1     1    x.x.x.x
[18/Jan/2018:13:36:4x]    15    1    x.x.x.x
[18/Jan/2018:13:37:1x]    20    5    x.x.x.x</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 6/7手动安装BBR和魔改BBR教程</title>
    <url>/2047/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在的<code>BBR</code>一键脚本很多，脚本虽然方便，但也有缺陷，就是不能照顾到所有商家的系统，偶尔也会出点错。所以我们不能完全依赖一键脚本，得学会手动开启<code>BBR</code>或者魔改<code>BBR</code>，这里就说下<code>CentOS 6</code>/<code>7</code>手动开启教程。<code>Debian</code>/<code>Ubuntu</code>系统的手动开启教程很久前就说过了，查看：Linux VPS使用Google BBR拥塞算法加速TCP教程、Debian/Ubuntu开启超级暴力版魔改BBR教程。</p>
<h2 id="安装BBR"><a href="#安装BBR" class="headerlink" title="安装BBR"></a>安装BBR</h2><p><strong>1、安装BBR内核</strong></p>
<pre><code>#CentOS 6系统
#导入ELRepo公钥
wget https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
rpm --import RPM-GPG-KEY-elrepo.org
#安装ELRepo
rpm -Uvh http://www.elrepo.org/elrepo-release-6-8.el6.elrepo.noarch.rpm
#升级最新内核
yum --enablerepo=elrepo-kernel install kernel-ml -y
#调整内核启动顺序
sed -i &apos;/default=/d&apos; /boot/grub/grub.conf &amp;&amp; echo -e &quot;\ndefault=0\c&quot; &gt;&gt; /boot/grub/grub.conf 
#重启
reboot

#CentOS 7系统
#导入ELRepo公钥
wget https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
rpm --import RPM-GPG-KEY-elrepo.org
#安装ELRepo
rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm
#升级最新内核
yum --enablerepo=elrepo-kernel install kernel-ml -y
#调整内核启动顺序
grub2-mkconfig -o /boot/grub2/grub.cfg &amp;&amp; grub2-set-default 0
#重启
reboot</code></pre><p><strong>2、开启BBR</strong></p>
<pre><code>#查看最新内核，如果大于4.9，则进行下一步
uname -r
#修改配置
cat &gt;&gt;/etc/sysctl.conf &lt;&lt; EOF
net.core.default_qdisc=fq
net.ipv4.tcp_congestion_control=bbr
EOF
#使配置生效
sysctl -p
#检查生效，输出带有tcp_bbr 20480  0即生效
lsmod | grep bbr</code></pre><h2 id="安装魔改BBR"><a href="#安装魔改BBR" class="headerlink" title="安装魔改BBR"></a>安装魔改BBR</h2><p>由于通过<code>ELRepo</code>安装的最新内核版本太高，不支持魔改<code>BBR</code>，所以上面安装内核的方法不可用，只能手动安装稍低版本的内核。</p>
<p><strong>1、安装新内核</strong></p>
<pre><code>#CentOS 6系统
#下载并安装内核
wget https://www.southcat.net/usr/down/CentOS_Kernel/kernel-ml-4.12.10-1.el6.elrepo.x86_64.rpm &amp;&amp; yum -y install kernel-ml-4.12.10-1.el6.elrepo.x86_64.rpm
wget https://www.southcat.net/usr/down/CentOS_Kernel/kernel-ml-devel-4.12.10-1.el6.elrepo.x86_64.rpm &amp;&amp; yum -y install kernel-ml-devel-4.12.10-1.el6.elrepo.x86_64.rpm
wget https://www.southcat.net/usr/down/CentOS_Kernel/kernel-ml-headers-4.12.10-1.el6.elrepo.x86_64.rpm &amp;&amp; yum -y install kernel-ml-headers-4.12.10-1.el6.elrepo.x86_64.rpm
#调整内核启动顺序
sed -i &apos;/default=/d&apos; /boot/grub/grub.conf &amp;&amp; echo -e &quot;\ndefault=0\c&quot; &gt;&gt; /boot/grub/grub.conf
#重启
reboot

#CentOS 7系统
#下载并安装内核
wget https://www.southcat.net/usr/down/CentOS_Kernel/kernel-ml-4.12.10-1.el7.elrepo.x86_64.rpm &amp;&amp; yum -y install kernel-ml-4.12.10-1.el7.elrepo.x86_64.rpm
wget https://www.southcat.net/usr/down/CentOS_Kernel/kernel-ml-devel-4.12.10-1.el7.elrepo.x86_64.rpm &amp;&amp; yum -y install kernel-ml-devel-4.12.10-1.el7.elrepo.x86_64.rpm
wget https://www.southcat.net/usr/down/CentOS_Kernel/kernel-ml-headers-4.12.10-1.el7.elrepo.x86_64.rpm &amp;&amp; yum -y install kernel-ml-headers-4.12.10-1.el7.elrepo.x86_64.rpm
#调整内核启动顺序
grub2-mkconfig -o /boot/grub2/grub.cfg &amp;&amp; grub2-set-default 0
#重启
reboot</code></pre><p>检查当前已安装内核，并删除新内核以外的内核</p>
<pre><code>rpm -qa | grep kernel
yum remove -y 内核名</code></pre><p><strong>3、开启魔改BBR</strong><br>安装魔改<code>BBR</code></p>
<pre><code>#安装依赖
yum -y install make gcc
wget -O ./tcp_tsunami.c https://www.southcat.net/usr/down/CentOS_Kernel/tcp_tsunami.c
#安装魔改BBR
echo &quot;obj-m:=tcp_tsunami.o&quot; &gt; Makefile
make -C /lib/modules/`uname -r`/build M=`pwd` modules CC=/usr/bin/gcc
chmod +x ./tcp_tsunami.ko
cp -rf ./tcp_tsunami.ko /lib/modules/`uname -r`/kernel/net/ipv4
insmod tcp_tsunami.ko
depmod -a
#修改配置
echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf
echo &quot;net.ipv4.tcp_congestion_control=tsunami&quot; &gt;&gt; /etc/sysctl.conf
sysctl -p</code></pre><p>检查开启状态</p>
<pre><code>lsmod | grep tsunami</code></pre><p>如果返回<code>tcp_tsunami 16384 26</code>类似信息，则开启成功。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 6/7安装Redis服务器教程</title>
    <url>/1690/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>redis</code>的缩写是<code>REmote DIctionary Server</code>。它是最流行的开源，高级<code>key-value</code>存储系统。这里说下<code>CentOS 7</code>上安装<code>redis</code>服务器方法。</p>
<p><strong>项目地址：</strong><a href="http://redis.io/" target="_blank" rel="noopener">http://redis.io/</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装EPEL</strong></p>
<pre><code>#CentOS/RHEL 6：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm

#CentOS/RHEL 7：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</code></pre><p><strong>2、安装Redis服务器</strong><br>1、<code>yum</code>安装<code>redis</code>服务器</p>
<pre><code>yum install redis</code></pre><p>两个重要的<code>redis</code>服务器配置文件的路径<code>/etc/redis.conf</code>和<code>/etc/redis-sentinel.conf</code>。</p>
<p>2、启动<code>redis</code>服务器</p>
<pre><code>#CentOS 6
service redis start
#CentOS 7
systemctl start redis.service</code></pre><p>3、检查<code>redis</code>服务器的运行状态</p>
<pre><code>#CentOS 6
service redis status
#CentOS 7
systemctl status redis.service</code></pre><p>4、测试<code>Redis</code>的安装</p>
<pre><code>redis-cli ping</code></pre><p>如果返回结果<code>PONG</code>，则安装成功。</p>
<p><strong>3、redis服务器相关命令</strong></p>
<pre><code>#CentOS 6系统
chkconfig redis on  #开机自启
service redis stop  #停止redis服务器
service redis restart  #重新启动redis服务器 

#CentOS 7系统
systemctl stop redis.service  #停止redis服务器
systemctl restart redis.service  #重新启动redis服务器  
systemctl enable redis.service  #开机启动redis服务器
systemctl disable redis.service  #开机禁用redis服务器</code></pre><p><strong>4、Redis服务器监听端口</strong><br><code>Redis Server</code>默认侦听端口号<code>6379</code>，可使用<code>SS</code>命令查看。</p>
<pre><code>ss -nlp|grep redis</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Caddy环境下WordPress博客伪静态设置</title>
    <url>/2144/</url>
    <content><![CDATA[<p><strong>说明：</strong>博客讲了很多<code>Caddy</code>教程，<code>Caddy</code>是一个极简的<code>HTTP</code>服务器，支持<code>HTTP/2</code>静态网页服务器，比起<code>Nginx</code>简单很多，而且安装配置很方便，也节省内存，申请<code>SSL</code>证书极其方便，有时候用来搭建博客也是一种不错的选择。这里说下<code>Caddy</code>环境下<code>Wordpress</code>伪静态配置文件。</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>伪静态参数：</p>
<pre><code>rewrite {
  if {path} not_match ^\/wp-admin
  to {path} {path}/ /index.php?{query}
}</code></pre><p>顺便说下<code>Wordpress</code>博客整体配置文件。</p>
<pre><code>#域名301重定向
www.southcat.net {
  redir https://southcat.net{url}
}
#域名配置
southcat.net {
  #wordpress程序所在文件夹
  root /wordpress
  #自动签发ssl证书，邮箱随便填
  tls admin@southcat.net
  gzip
  #PHP设置
  fastcgi / 127.0.0.1:9000 php
  #伪静态设置
  rewrite {
    if {path} not_match ^\/wp-admin
    to {path} {path}/ /index.php?{query}
  }
}</code></pre><p>如果想使用自己的<code>ssl</code>证书，请将<code>tls</code>一行参数改为<code>tls /root/ssl.crt /root/ssl.key</code>后面为证书路径。</p>
<pre><code>fastcgi / /run/php/php7.0-fpm.sock php</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>一个极简的HTTP Server： Caddy一键安装脚本，带网站配置教程</li>
<li>小内存VPS安装Caddy+PHP 7+Sqlite 3环境，并快速搭建Typecho博客</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Centos 6/Centos 7/Debian单网卡绑定多个IP的方法</title>
    <url>/1617/</url>
    <content><![CDATA[<p><strong>一、Centos 6单网卡添加多个IP</strong><br>1、查看网卡信息</p>
<pre><code>ip addr</code></pre><p>看<code>IPv4</code>绑定的是哪个网卡，之后的操作就需要把其他<code>IP</code>绑定到这个网卡上，比如网卡是<code>eth1</code>。</p>
<p>2、添加<code>IP</code></p>
<p>登录<code>ssh</code>使用<code>root</code>命令执行：</p>
<pre><code>cd /etc/sysconfig/network-scripts/
cp ifcfg-eth1 ifcfg-eth1:1
cp ifcfg-eth1 ifcfg-eth1:2
cp ifcfg-eth1 ifcfg-eth1:3
cp ifcfg-eth1 ifcfg-eth1:4</code></pre><p>以此类推，有多少就添加多少。</p>
<p>3、<code>vi</code>编辑，或者使用<code>WinSCP</code>工具修改</p>
<pre><code>vi ifcfg-eth1:1</code></pre><p>按<code>i</code>开始编辑文本内容,找到<code>DEVICE=eth1</code>这一行，将其改为<code>DEVICE=eth1:1</code>,找到<code>IPADDR=xxx.xxx.xxx.xxx</code>这一行，替换成新的<code>IP</code>即可！然后按<code>ESC</code>建，然后输入<code>:wq</code>保存退出<code>vi</code>编辑。</p>
<p>4、重启生效</p>
<pre><code>chkconfig NetworkManager off
chkconfig network on
service NetworkManager stop
service network start</code></pre><p>或者</p>
<pre><code>systemctl restart network.service</code></pre><p><strong>二、Centos 7单网卡添加多个IP</strong><br>1、查看网卡信息</p>
<pre><code>ip addr</code></pre><p>看<code>IPv4</code>绑定的是哪个网卡，之后的操作就需要把其他<code>IP</code>绑定到这个网卡上，比如网卡是<code>eth1</code>。</p>
<p>2、添加<code>IP</code></p>
<p>登录<code>ssh</code>使用<code>root</code>命令执行：</p>
<pre><code>cd /etc/sysconfig/network-scripts/
vi ifcfg-eno1</code></pre><p>找到</p>
<pre><code>IPADDR=&quot;172.245.xxx.xxx&quot;
PREFIX=&quot;28&quot;</code></pre><p>然后下一行添加：</p>
<pre><code>IPADDR1=&quot;172.245.xxx.xxx&quot;
PREFIX1=&quot;28&quot;
IPADDR2=&quot;172.245.xxx.xxx&quot;
PREFIX2=&quot;28&quot;</code></pre><p>其中<code>28</code>是根据是主机商提供的<code>IP</code>段填写。</p>
<p>3、重启</p>
<pre><code>chkconfig NetworkManager off
chkconfig network on
service NetworkManager stop
service network start</code></pre><p>或者</p>
<pre><code>systemctl restart network.service</code></pre><p><strong>三、Debian单网卡添加多个IP</strong></p>
<p>1、编辑<code>/etc/network/interfaces</code>文件，按如下格式添加：</p>
<pre><code>auto eth0
iface eth0 inet static
address 8.8.8.115
netmask 255.255.255.0
network 172.16.3.0
broadcast 172.16.3.255
gateway 172.16.3.1

auto eth0:1
iface eth0:1 inet static
address 8.8.8.116
netmask 255.255.0.0
network 10.16.0.0
broadcast 10.16.255.255</code></pre><p>2、创建<code>/etc/network/ifstate</code>，添加：</p>
<pre><code>lo=lo
eth0=eth0
eth0:1=eth0:1


/etc/init.d/networking restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 7下莱特币（Litecoin）挖矿教程</title>
    <url>/1861/</url>
    <content><![CDATA[<p><strong>说明：</strong>莱特币就不过多介绍了，想了解的就百度一下吧，这里就说下在<code>CentOS 7</code>上安装莱特币（<code>Litecoin</code>）客户端挖矿的教程。</p>
<p><strong>1、下载Litecoin客户端</strong></p>
<pre><code>wget https://download.litecoin.org/litecoin-0.14.2/linux/litecoin-0.14.2-x86_64-linux-gnu.tar.gz</code></pre><p>下完后验证文件</p>
<pre><code>ls -ltr</code></pre><p><strong>2、解压文件</strong></p>
<pre><code>tar -zxvf litecoin-0.14.2-x86_64-linux-gnu.tar.gz</code></pre><p><strong>3、设置权限并初始化</strong></p>
<pre><code>sudo install -m 0755 -o root -g root -t /usr/local/bin ~/litecoin-0.14.2/bin/*</code></pre><p><strong>4、使用命令</strong></p>
<pre><code>litecoin -cli</code></pre><p><strong>5、设置LTC节点</strong></p>
<pre><code>cd ~
mkdir .litecoin
cd .litecoin/
vi litecoin.conf</code></pre><p>输入以下内容（<code>litecoinrpc</code>改为自己的用户名、<code>Test123</code>改为自己的密码）</p>
<pre><code>rpcuser=litecoinrpc
rpcpassword=Test123
txindex=1
server=1
daemon=1
rpcbind=127.0.0.1
bind=127.0.0.1</code></pre><p>然后保存。</p>
<p><strong>6、开始挖矿</strong></p>
<pre><code>litecoind</code></pre><p>查看是否正常运行</p>
<pre><code>litecoin-cli getinfo</code></pre><p><strong>Litecoin官网：</strong><a href="https://litecoin.com/" target="_blank" rel="noopener">https://litecoin.com/</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 6系统Apache环境配置SSL证书教程</title>
    <url>/1467/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>SSL证书用于加密计算机与指定服务器之间的数据，从而创建安全连接。SSL证书可以是自签名的，也可以由受信任的CA颁发。所有主要网站不使用自签名证书的原因是因为所有浏览器都会识别该站点正在使用自签名（和不可信）的证书，并显示一个警告页面，而当使用受信任的CA签名的证书时，在大多数情况下，浏览器会识别它，并允许您继续访问该网站。在本教程中，我们将使用自签名证书，因为他们可以自由发布/发布。</p>
<p><strong>主机要求：</strong><code>CentOS 6</code>系统或更高版本，装有Apache环境，内存，最低512MB。</p>
<h2 id="配置SSL"><a href="#配置SSL" class="headerlink" title="配置SSL"></a>配置SSL</h2><p><strong>1、安装Mod SSL</strong></p>
<pre><code>yum install mod_ssl</code></pre><p><strong>2、创建目录，存放证书</strong></p>
<pre><code>mkdir /etc/httpd/ssl</code></pre><p><strong>3、创建自签名证书</strong></p>
<pre><code>openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/httpd/ssl/apache.key -out /etc/httpd/ssl/apache.crt</code></pre><p><strong>4、设置SSL证书</strong><br>打开SSL配置文件：</p>
<pre><code>nano /etc/httpd/conf.d/ssl.conf</code></pre><p>找到以<code>&lt;VirtualHost _default_：443&gt;</code>开头的部分。取消注释<code>DocumentRoot</code>和<code>ServerName</code>行，并将<code>example.com</code>替换为您的域名或服务器<code>IP</code>地址（如果您不想得到任何错误，则应与证书上的通用名称相同）：</p>
<pre><code>ServerName example.com:443</code></pre><p>您还应该找到以下三行，并确保它们匹配以下扩展名：</p>
<pre><code>SSLEngine on
SSLCertificateFile /etc/httpd/ssl/apache.crt
SSLCertificateKeyFile /etc/httpd/ssl/apache.key</code></pre><p><strong>5、重启Apache服务</strong></p>
<pre><code>/etc/init.d/httpd restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 7使用iptables开放设置端口</title>
    <url>/1606/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>CentOS 7</code>默认使用的是<code>firewall</code>作为防火墙，使用<code>iptables</code>必须重新安装设置一下。如果不想太麻烦可参考：CentOS 7开放设置端口及firewall常用命令介绍。<br><strong>1、直接关闭防火墙</strong></p>
<pre><code>systemctl stop firewalld.service           #停止firewall
systemctl disable firewalld.service        #禁止firewall开机启动</code></pre><p><strong>2、安装并设置iptables service</strong></p>
<pre><code>yum -y install iptables-services</code></pre><p>如果要修改防火墙配置，如增加防火墙端口3306</p>
<pre><code>vi /etc/sysconfig/iptables</code></pre><p>增加规则</p>
<pre><code>-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT</code></pre><p>保存退出后</p>
<pre><code>systemctl restart iptables.service #重启防火墙使配置生效
systemctl enable iptables.service  #设置防火墙开机启动</code></pre><p>最后重启系统使设置生效即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 7出现-bash: pip: command not found的解决方法</title>
    <url>/1695/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般我们在<code>centos 7</code>上使用<code>pip</code>命令遇到<code>-bash: pip: command not found</code>的时候，通常会按照网上的教程，先<code>yum</code>安装<code>epel</code>再安装<code>pip</code>来解决，可是有时候却发现不行，会提示<code>No package python-pip available</code>，这里我说个通用的方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>运行命令即可安装<code>pip</code>：</p>
<pre><code>wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 7安装配置Nginx 1.10、PHP 5.6、MySQL 5.7教程</title>
    <url>/1752/</url>
    <content><![CDATA[<p><strong>说明：</strong>本教程就是通过一些<code>yum</code>源安装的，挺简单的，喜欢折腾的人可以试试。</p>
<h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><p><strong>1、建立nginx的yum仓库</strong></p>
<pre><code>rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</code></pre><p><code>nginx</code>的<code>yum</code>仓库地址：<a href="http://nginx.org/en/linux_packages.html" target="_blank" rel="noopener">http://nginx.org/en/linux_packages.html</a></p>
<p><strong>2、下载并安装nginx</strong></p>
<pre><code>yum install nginx</code></pre><p><strong>3、启动nginx服务</strong></p>
<pre><code>systemctl start nginx</code></pre><p><strong>4、测试和配置</strong><br>访问<code>IP</code>地址，出现<code>nginx</code>欢迎界面。<br>默认的配置文件在<code>/etc/nginx</code>路径下，使用该配置已经可以正确地运行<code>nginx</code>；如需要自定义，修改其下的<code>nginx.conf</code>等文件即可。</p>
<h2 id="安装php-5-6"><a href="#安装php-5-6" class="headerlink" title="安装php 5.6"></a>安装php 5.6</h2><p><strong>1、配置yum源</strong></p>
<pre><code>rpm -Uvh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm</code></pre><p><code>remi</code>源默认并没有启用，可以通过修改<code>repo</code> 文件来启用它。</p>
<pre><code>vi /etc/yum.repos.d/remi.repo</code></pre><p>修改以下位置：</p>
<pre><code>[remi]
......
enabled=1

[remi-php56]
......
enabled=1</code></pre><p>如果需要安装<code>php 7</code>，请编辑<code>/etc/yum.repos.d/remi-php70.repo</code>启用相应<code>yum</code>源。</p>
<p><strong>2、确认安装的php版本</strong></p>
<pre><code>yum list | grep php</code></pre><p><strong>3、安装php5.6</strong></p>
<pre><code>yum install php php-opcache php-pecl-apcu php-devel php-mbstring php-mcrypt php-mysqlnd php-phpunit-PHPUnit php-pecl-xdebug php-pecl-xhprof php-pdo php-pear php-fpm php-cli php-xml php-bcmath php-process php-gd php-common</code></pre><p>上面这条命令安装了一大堆东西，实际请按需安装。启用<code>php-opcache</code>及<code>php-pecl-apcu</code>能有效的提高<code>php</code>执行速度。</p>
<p><strong>4、确认php版本</strong></p>
<pre><code># php -v
PHP 5.6.22 (cli) (built: May 26 2016 15:36:45) 
Copyright (c) 1997-2016 The PHP Group
Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies
    with Zend OPcache v7.0.6-dev, Copyright (c) 1999-2016, by Zend Technologies
    with Xdebug v2.4.0, Copyright (c) 2002-2016, by Derick Rethans</code></pre><p><strong>5、配置php.ini</strong></p>
<pre><code>vi /etc/php.ini</code></pre><p>理论上配置一下时区就够了：</p>
<pre><code>date.timezone = Asia/Chongqing</code></pre><p><strong>6、配置php-fpm</strong></p>
<pre><code>vi /etc/php-fpm.d/www.conf</code></pre><p>修改以下位置：</p>
<pre><code>; 配置php所属用户
user = nginx
group = nginx

listen.owner = nginx
listen.group = nginx

; 通过sock方式通信
listen = /var/run/php-fpm/php-fpm.sock</code></pre><p><strong>7、启动php</strong></p>
<pre><code>systemctl start php-fpm</code></pre><h2 id="安装MySQL-5-7"><a href="#安装MySQL-5-7" class="headerlink" title="安装MySQL 5.7"></a>安装MySQL 5.7</h2><p><strong>1、配置yum源</strong></p>
<pre><code>rpm -Uvh http://repo.mysql.com/mysql57-community-release-el7.rpm</code></pre><p>其他所有<code>rpm</code>文件可以在这里找到：<a href="http://repo.mysql.com/" target="_blank" rel="noopener">http://repo.mysql.com/</a><br>如果你需要安装<code>MySQL5.6</code></p>
<pre><code>rpm -ivh http://repo.mysql.com/mysql-community-release-el7.rpm</code></pre><p><strong>2、安装mysql</strong></p>
<pre><code>yum install mysql-community-server</code></pre><p><strong>3、启动mysql</strong></p>
<pre><code>systemctl start mysqld</code></pre><p><strong>4、查看默认密码</strong><br><code>MySQL</code>安装之后默认<code>root</code>密码不是为空了，会生成一个随机密码保存在<code>root</code>目录下。</p>
<pre><code>cat /root/.mysql_secret</code></pre><p>如果没有找到文件，可以查看<code>MySQL</code>的日志文件：</p>
<pre><code>cat /var/log/mysqld.log

# [Note]  A temporary password is generated for root@localhost: ******</code></pre><p><strong>5、登录mysql</strong></p>
<pre><code>mysql -u root -p</code></pre><p>输入前面查看到的密码。</p>
<p><strong>6、修改root默认密码</strong><br>现在<code>mysql</code>有密码强度验证，需要输入一个强一点的密码。</p>
<pre><code>mysql&gt; set password=password(&apos;NEWPASSWORD&apos;);</code></pre><p>或者：</p>
<pre><code>update mysql.user set authentication_string=password(&apos;NEWPASSWORD&apos;) where user=&apos;root&apos;;</code></pre><p>现在已经没有<code>password</code>字段了。</p>
<p><strong>7、配置文件</strong><br><code>mysql</code>的默认配置文件在<code>/etc/my.cnf</code>。<br>如果忘记密码，可以在最后添加一句<code>skip-grant-tables</code>，重启<code>mysql</code>之后登录就不需要账号密码了，然后再修改<code>root</code>密码。</p>
<h2 id="如何正确配置Nginx-PHP"><a href="#如何正确配置Nginx-PHP" class="headerlink" title="如何正确配置Nginx+PHP"></a>如何正确配置Nginx+PHP</h2><pre><code>server {
    listen 80;
    server_name www.southcat.net;

    root /path;
    index index.html index.htm index.php;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        # fastcgi_pass 127.0.0.1:9000;
        fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
    }
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Centos 7安装Go1.8.1版本方法</title>
    <url>/1615/</url>
    <content><![CDATA[<p>本方法在<code>Centos 7</code>测试下成功。</p>
<p><strong>1、获得Go1.8.1</strong></p>
<pre><code>wget https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz
tar zxvf go1.8.1.linux-amd64.tar.gz
mv go /usr/local/</code></pre><p><strong>2、安装Go1.8.1</strong></p>
<pre><code>vi /etc/profile</code></pre><p>在最后加入</p>
<pre><code>export GOROOT=/usr/local/go  
export GOBIN=$GOROOT/bin  
export GOPKG=$GOROOT/pkg/tool/linux_amd64  
export GOARCH=amd64  
export GOOS=linux  
export GOPATH=/home/pan/gopath #我的文件目录  
export PATH=.:$PATH:$GOBIN:$GOPKG </code></pre><p>保存，并运行命令使其生效。</p>
<pre><code>source /etc/profile


go version</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 7出现Failed to start firewalld.service: Unit is masked的解决办法</title>
    <url>/1809/</url>
    <content><![CDATA[<p><strong>说明：</strong>刚刚使用<code>systemctl start firewalld</code>命令开启防火墙的时候，却开不成功，出现<code>Failed to start firewalld.service: Unit is masked</code>的错误，经过搜索下后，发现是<code>firewalld</code>服务被锁定了，这里说下方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>执行命令，即可实现取消<code>firewalld</code>的锁定</p>
<pre><code>systemctl unmask firewalld


systemctl mask firewalld</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 7安装fail2ban+Firewalld防止SSH爆破与CC攻击</title>
    <url>/1922/</url>
    <content><![CDATA[<p><strong>说明：</strong>差不多很多博主都会遇到被<code>CC</code>攻击和<code>SSH</code>爆破的情况，这个时候就需要做下防御措施了，前几天发过一个防<code>CC</code>脚本，参考：CC-Attack-Protector：Linux VPS防CC攻击一键脚本，带微信提醒，不过对于<code>CentOS 7</code>来说，由于防火墙的因素，配置起来还是有点麻烦的，这里争对<code>CentOS 7</code>再分享个简单防<code>CC</code>攻击和<code>SSH</code>爆破的方法。</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>fail2ban</code>可以监视你的系统日志，然后匹配日志的错误信息执行相应的屏蔽动作。网上大部分教程都是关于<code>fail2ban</code>+<code>iptables</code>组合，考虑到<code>CentOS 7</code>已经自带<code>Firewalld</code>，所以这里我们也可以利用<code>fail2ban</code>+<code>Firewalld</code>来防<code>CC</code>攻击和<code>SSH</code>爆破。</p>
<p>本教程编辑文件使用<code>vi</code>命令，如果不会用的，可以使用比较简单的<code>nano</code>，可以参考：一个简单易用的Linux文本编辑器：nano的安装与使用，或者使用<code>FTP</code>工具，如<code>WinSCP</code>登录<code>VPS</code>操作。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><strong>1、检查Firewalld是否启用</strong></p>
<pre><code>#如果您已经安装iptables建议先关闭
service iptables stop
#查看Firewalld状态
firewall-cmd --state
#启动firewalld
systemctl start firewalld
#设置开机启动
systemctl enable firewalld.service</code></pre><p>启用<code>Firewalld</code>后会禁止所有端口连接，因此请务必放行常用的端口，以免被阻挡在外，以下是放行<code>SSH</code>端口（<code>22</code>）示例，供参考：</p>
<pre><code>#放行22端口
firewall-cmd --zone=public --add-port=80/tcp --permanent
#重载配置
firewall-cmd --reload
#查看已放行端口
firewall-cmd --zone=public --list-ports</code></pre><p><strong>2、安装fail2ban</strong><br><code>fail2ban</code>可以监控系统日志，并且根据一定规则匹配异常<code>IP</code>后使用<code>Firewalld</code>将其屏蔽，尤其是针对一些爆破/扫描等非常有效。</p>
<pre><code>#CentOS内置源并未包含fail2ban，需要先安装epel源
yum -y install epel-release
#安装fial2ban
yum -y install fail2ban</code></pre><p>安装成功后<code>fail2ban</code>配置文件位于<code>/etc/fail2ban</code>，其中<code>jail.conf</code>为主配置文件，相关的匹配规则位于<code>filter.d</code>目录，其它目录/文件一般很少用到，如果需要详细了解可自行搜索。</p>
<p><strong>3、配置规则</strong><br>新建<code>jail.local</code>来覆盖<code>fail2ban</code>的一些默认规则：</p>
<pre><code>#新建配置
vi /etc/fail2ban/jail.local
#默认配置
[DEFAULT]
ignoreip = 127.0.0.1/8
bantime  = 86400
findtime = 600
maxretry = 5
#这里banaction必须用firewallcmd-ipset,这是fiewalll支持的关键，如果是用Iptables请不要这样填写
banaction = firewallcmd-ipset
action = %(action_mwl)s</code></pre><p>参数说明：</p>
<pre><code>ignoreip：IP白名单，白名单中的IP不会屏蔽，可填写多个以（,）分隔
bantime：屏蔽时间，单位为秒（s）
findtime：时间范围
maxretry：最大次数
banaction：屏蔽IP所使用的方法，上面使用firewalld屏蔽端口</code></pre><h2 id="防止SSH爆破"><a href="#防止SSH爆破" class="headerlink" title="防止SSH爆破"></a>防止SSH爆破</h2><p>如果您还在使用默认<code>SSH</code>端口（<code>22</code>），可能每天都会被扫描，我们可以修改端口尽量避免被扫，参考：Linux VPS服务器SSH端口一键修改脚本，或者可以使用<code>fail2ban</code>将恶意<code>IP</code>屏蔽。</p>
<p>继续修改<code>jail.local</code>这个配置文件，在后面追加如下内容：</p>
<pre><code>[sshd]
enabled = true
filter  = sshd
port    = 22
action = %(action_mwl)s
logpath = /var/log/secure</code></pre><p>参数说明：</p>
<pre><code>[sshd]：名称，可以随便填写
filter：规则名称，必须填写位于filter.d目录里面的规则，sshd是fail2ban内置规则
port：对应的端口
action：采取的行动
logpath：需要监视的日志路径</code></pre><p>到这一步，我们<code>jail.local</code>的规则看起来可能像下面这样子：</p>
<pre><code>[DEFAULT]
ignoreip = 127.0.0.1/8
bantime  = 86400
findtime = 600
maxretry = 5
banaction = firewallcmd-ipset
action = %(action_mwl)s

[sshd]
enabled = true
filter  = sshd
port    = 22
action = %(action_mwl)s
logpath = /var/log/secure</code></pre><p>上面的配置意思是如果同一个<code>IP</code>，在<code>10</code>分钟内，如果连续超过<code>5</code>次错误，则使用<code>Firewalld</code>将他<code>IP ban</code>了。输入<code>systemctl start fail2ban</code>启动<code>fail2ban</code>来试试效果。</p>
<p>使用另一台服务器不断尝试连接<code>SSH</code>，并且不断的将密码输入错误，你会发现连续超过<code>5</code>次后直接连不上，说明<code>IP</code>被<code>ban</code>了，可以输入：<code>fail2ban-client status sshd</code>查看被<code>ban</code>的<code>IP</code>，如下截图。<br><img src="https://www.southcat.net/usr/picture/fail2ban_ssh.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="防止CC攻击"><a href="#防止CC攻击" class="headerlink" title="防止CC攻击"></a>防止CC攻击</h2><p>这里仅以<code>Nginx</code>为例，使用<code>fail2ban</code>来监视<code>nginx</code>日志，匹配短时间内频繁请求的<code>IP</code>，并使用<code>firewalld</code>将其<code>IP</code>屏蔽，达到<code>CC</code>防护的作用。</p>
<pre><code>#需要先新建一个nginx日志匹配规则
vi /etc/fail2ban/filter.d/nginx-cc.conf
#填写如下内容
[Definition]
failregex = &lt;HOST&gt; -.*- .*HTTP/1.* .* .*$
ignoreregex =</code></pre><p>继续修改<code>jail.local</code>追加如下内容：</p>
<pre><code>[nginx-cc]
enabled = true
port = http,https
filter = nginx-cc
action = %(action_mwl)s
maxretry = 20
findtime = 60
bantime = 3600
logpath = /usr/local/nginx/logs/access.log</code></pre><p>上面的配置意思是如果在<code>60s</code>内，同一<code>IP</code>达到<code>20</code>次请求，则将其<code>IP ban 1</code>小时，上面只是为了测试，请根据自己的实际情况修改。<code>logpath</code>为<code>nginx</code>日志路径。</p>
<h2 id="防止Wordpress爆破"><a href="#防止Wordpress爆破" class="headerlink" title="防止Wordpress爆破"></a>防止Wordpress爆破</h2><p>如果您经常分析日志会发现有大量机器人在扫描<code>wordpress</code>登录页面<code>wp-login.php</code>，虽然对方可能没成功，但是为了避免万一还是将他<code>IP</code>干掉为好。</p>
<pre><code>#需要先新建一个nginx日志匹配规则
vi /etc/fail2ban/filter.d/wordpress.conf
#填写如下内容
[Definition]
failregex = ^ -.* /wp-login.php.* HTTP/1\..&quot;
ignoreregex =</code></pre><p>继续修改<code>jail.local</code>追加如下内容：</p>
<pre><code>[wordpress]
enabled = true
port = http,https
filter = wordpress
action = %(action_mwl)s
maxretry = 20
findtime = 60
bantime = 3600
logpath = /usr/local/nginx/logs/access.log</code></pre><p>当然，别忘记输入<code>systemctl restart fail2ban</code>重启<code>fail2ban</code>使其生效。</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre><code>#启动
systemctl start fail2ban
#停止
systemctl stop fail2ban
#开机启动
systemctl enable fail2ban
#查看被ban IP，其中sshd为名称，比如上面的[wordpress]
fail2ban-client status sshd
#删除被ban IP
fail2ban-client set sshd delignoreip 192.168.111.111
#查看日志
tail /var/log/fail2ban.log</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>fail2ban</code>已经内置很多匹配规则，位于<code>filter.d</code>目录下，包含了常见的<code>SSH/FTP/Nginx/Apache</code>等日志匹配，如果都还无法满足您的需求，您也可以自行新建规则来匹配异常<code>IP</code>。使用<code>fail2ban</code>+<code>Firewalld</code>来阻止恶意<code>IP</code>是行之有效的办法，可极大提高服务器安全。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 7开放设置端口及firewall常用命令介绍</title>
    <url>/1604/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人用<code>CentOS 7</code>时会发现<code>CentOS 6</code>系列中的<code>iptables</code>相关命令不能用了，因为<code>Centos 7</code>使用<code>firewalld</code>代替了原来的<code>iptables</code>。所以<code>iptables</code>相关命令是不能直接使用的，这里说下开放设置端口及<code>firewalld</code>常用命令。</p>
<p><strong>1、关闭防火墙</strong></p>
<pre><code>systemctl stop firewalld.service           #停止firewall
systemctl disable firewalld.service        #禁止firewall开机启动</code></pre><p><strong>2、开启端口</strong></p>
<pre><code>firewall-cmd --zone=public --add-port=80/tcp --permanent</code></pre><p>命令含义：</p>
<pre><code>--zone #作用域
--add-port=80/tcp #添加端口，格式为：端口/通讯协议
--permanent #永久生效，没有此参数重启后失效</code></pre><p><strong>3、重启防火墙</strong></p>
<pre><code>firewall-cmd --reload


firewall-cmd --state                           ##查看防火墙状态，是否是running
firewall-cmd --reload                          ##重新载入配置，比如添加规则之后，需要执行此命令
firewall-cmd --get-zones                       ##列出支持的zone
firewall-cmd --get-services                    ##列出支持的服务，在列表中的服务是放行的
firewall-cmd --query-service ftp               ##查看ftp服务是否支持，返回yes或者no
firewall-cmd --add-service=ftp                 ##临时开放ftp服务
firewall-cmd --add-service=ftp --permanent     ##永久开放ftp服务
firewall-cmd --remove-service=ftp --permanent  ##永久移除ftp服务
firewall-cmd --add-port=80/tcp --permanent     ##永久添加80端口 
iptables -L -n                                 ##查看规则，这个命令是和iptables的相同的
man firewall-cmd                               ##查看帮助</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS 7安装Lsyncd实现文件实时同步备份</title>
    <url>/1832/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>lsyncd</code>是基于<code>inotify + rsync</code>的开源同步软件，支持增量同步，之前也讲到过通过<code>Rsync</code>同步方法，可参考：通过SSH使用Rsync同步两个VPS的文件，而本文所谈到的<code>lsyncd</code>与<code>Resilio Sync</code>相比优势是更加安全、占用资源更低，多种参数自定义配置更加方便。劣势是配置要比<code>Resilio Sync</code>麻烦一点，如果多台服务器的情况下速度可能不及<code>Resilio Sync</code>，因为<code>Resilio Sync</code>使用了<code>P2P</code>分享。</p>
<p><code>Lsyncd</code>官方帮助手册：<a href="https://axkibe.github.io/lsyncd/" target="_blank" rel="noopener">https://axkibe.github.io/lsyncd/</a><br>项目地址：<a href="https://github.com/axkibe/lsyncd" target="_blank" rel="noopener">https://github.com/axkibe/lsyncd</a></p>
<p><strong>注意：</strong>本教程在<code>CentOS 7</code>系统测试，如果是<code>CentOS 6</code>系统可能部分地方略有不同，但流程和步骤都一样。</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>有两台<code>CentOS 7</code>服务器，其中<code>A：192.168.1.100</code>文件需要实时同步到<code>B：192.168.1.200</code>。</p>
<h2 id="安装rsync"><a href="#安装rsync" class="headerlink" title="安装rsync"></a>安装rsync</h2><p><code>lsyncd</code>基于<code>rsync</code>，且要求<code>rsync &gt;= 3.1</code>，可输入<code>rsync -v</code>查看当前版本，如果不符合要求，按照以下方法升级<code>rsync</code>版本，两台服务器<code>A/B</code>均要安装<code>rsync</code>。</p>
<p><strong>升级步骤</strong></p>
<pre><code>#查看当前rsync版本
rsync -v
#如果版本太低，直接卸载
yum -y remove rsync
#下载rsync源码
wget https://download.samba.org/pub/rsync/rsync-3.1.2.tar.gz
#解压
tar -zxvf rsync-3.1.2.tar.gz
#进入目录
cd rsync-3.1.2
#编译安装
./configure
make install
#查看是否升级成功
rsync -v</code></pre><h2 id="设置密钥登录"><a href="#设置密钥登录" class="headerlink" title="设置密钥登录"></a>设置密钥登录</h2><p>如果想要将<code>A</code>的数据同步到<code>B</code>，<code>A</code>必须拥有免密码登录<code>B</code>的权限，可以设置密钥登录来完成。只需要两条命令即可，下面的命令在<code>A</code>服务器执行：</p>
<pre><code>#生成密钥文件
ssh-keygen -t rsa
#将公钥拷贝到B
ssh-copy-id username@remote-server
#测试
ssh username@remote-server</code></pre><p><code>username</code>为<code>B</code>服务器用户名，<code>remote-server</code>为<code>B</code>服务器<code>IP</code>地址，如果服务器不是使用的<code>22</code>作为<code>SSH</code>端口，需要<code>-p</code>参数指定端口号。更多说明可参考：SSH无密码登录：只需两个简单步骤 (Linux)。</p>
<h2 id="安装epel仓库"><a href="#安装epel仓库" class="headerlink" title="安装epel仓库"></a>安装epel仓库</h2><p><code>CentOS 7</code>内置的源并没有包括<code>Lsyncd</code>，可以自行编译安装<code>Lsyncd</code>，不过更简单的办法是先安装<code>epel</code>源，就可以直接<code>yum</code>安装了，以下命令再<code>A</code>服务器执行。</p>
<pre><code>yum -y install epel-release</code></pre><h2 id="安装lsyncd并配置"><a href="#安装lsyncd并配置" class="headerlink" title="安装lsyncd并配置"></a>安装lsyncd并配置</h2><p>如果已经安装了<code>epel</code>仓库，直接输入下面的命令安装<code>lsyncd</code>即可，一下命令在<code>A</code>服务器执行。</p>
<pre><code>#安装lsyncd
yum -y install lsyncd
#查看lsyncd版本
lsyncd --version</code></pre><p>安装完成后配置文件位于<code>/etc/lsyncd.conf</code>，会看到如下的内容，其中<code>--</code>是注释符。</p>
<pre><code>----
-- User configuration file for lsyncd.
--
-- Simple example for default rsync, but executing moves through on the target.
--
-- For more examples, see /usr/share/doc/lsyncd*/examples/
--
sync{default.rsyncssh, source=&quot;/var/www/html&quot;, host=&quot;localhost&quot;, targetdir=&quot;/tmp/htmlcopy/&quot;}</code></pre><p><code>vi /etc/lsyncd.conf</code>修改配置文件，注释或删除掉默认的最后一行，然后添加自己的配置。</p>
<pre><code>settings {
   logfile    = &quot;/tmp/lsyncd.log&quot;,
   statusFile = &quot;/tmp/lsyncd.status&quot;,
   insist = true,
   statusInterval = 10
}
sync {
   default.rsyncssh,
   source=&quot;/home/test1&quot;,
   host=&quot;192.168.1.200&quot;,
   targetdir=&quot;/home/test2&quot;,
   rsync = {
     archive = true,
     compress = false,
     whole_file = false
   },
   ssh = {
     port = 22
   }
}</code></pre><p>继续输入命令<code>lsyncd -nodaemon /etc/lsyncd.conf</code>运行查看下是否有报错，如果有报错根据报错情况检查修改，如果没有报错直接退出后输入命令：<code>systemctl start lsyncd</code>启动<code>lsyncd</code>即可。</p>
<h2 id="部分参数说明"><a href="#部分参数说明" class="headerlink" title="部分参数说明"></a>部分参数说明</h2><p><code>settings</code>为全局配置，部分参数如下：</p>
<pre><code>logfile：日志文件路径
statusFile：进程路径
insist：继续运行，即使有失败的目标。
statusInterval：多少秒写入文件，默认是10s</code></pre><p><code>sync</code>为同步配置，部分参数如下：</p>
<pre><code>source：本地文件目录
host：远程服务器地址
targetdir：远程目标目录
port：目前主机SSH端口号，默认为22</code></pre><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>#启动
systemctl start lsyncd
#停止
systemctl stop lsyncd
#重启
systemctl restart lsyncd
#设置开机自动启动
systemctl enable lsyncd</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS/Debian系统下自动定时重启设定方法</title>
    <url>/1497/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候vps内存太小，防止程序崩溃，不得不让他重启释放内存。</p>
<p><strong>1、安装Crontab</strong><br>有些系统可能已经安装了<code>Crontab</code>，可以跳过此步骤，没有的就安装下。</p>
<pre><code>#CentOS
yum install vixie-cron crontabs
chkconfig crond on
service crond start

#Debian
apt-get install cron
/etc/init.d/cron restart</code></pre><p>这里根据我们服务器的环境，然后安装<code>crontab</code>，且启动。</p>
<p><strong>2、、编辑定时脚本</strong></p>
<pre><code>crontab -e</code></pre><p>在<code>ssh</code>中执行脚本，然后编辑文件。</p>
<pre><code>#每天凌晨1点重启服务器
0 1 * * * /sbin/reboot

#每3小时重启服务器
0 */3 * * * /sbin/reboot</code></pre><p>丢进去这个脚本。编辑完毕之后<code>:wq</code>保存退出。</p>
<pre><code>/etc/rc.d/init.d/crond stop
/etc/rc.d/init.d/crond start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS/Debian安装人人影视客户端，下载资源并自动上传到OneDrive网盘</title>
    <url>/2305/</url>
    <content><![CDATA[<p><strong>说明：</strong>人人影视客户端，主要是一个下载视频的利器，上面的的美剧、日结、韩剧等资源都很多，而且还带搜索功能，可以直接搜索外部的资源。而且博主测试了下，很多资源下载速度基本可以跑满服务器带宽，加上有大佬搞了个人人影视自动上传到<code>OneDrive</code>网盘脚本，不过需要配合<code>PyOne</code>使用。这里博主就修改了下该脚本，配合博客另一个上传脚本一起使用，这样就不需要依赖<code>PyOne</code>了，可以直接单独使用了，而且上传完会自动删除服务器的资源，不占用过多空间。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/renren_mv(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/renren_mv(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>说明：</strong>官方客户端只有<code>CentOS</code>系统，不过博主发现客户端也能在<code>Debian</code>、<code>Ubuntu</code>上使用，所以这里就都写下教程。</p>
<p>博主只测试过<code>CentOS 7</code>和<code>Debian 8+</code>，理论上<code>Ubuntu 16+</code>也可以，不过为了稳定使用，还是建议优先使用<code>CentOS 7</code>。</p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#CentOS 7系统
yum install wget crontabs -y

#Debian、Ubuntu系统
apt install cron -y</code></pre><p><strong>2、下载人人影视</strong></p>
<pre><code>#下载客户端
wget http://appdown.rrys.tv/rrshareweb_centos7.tar.gz
#解压
tar -zxvf rrshareweb_centos7.tar.gz
#删除无用文件
rm -rf rrshareweb*.tar.gz
#运行客户端
cd rrshareweb
./rrshareweb</code></pre><p>然后访问<code>http://ip:3001</code>即可，初始密码为：<code>123456</code>，进入界面后先点击右上方设置，修改下存储路径，不然下载会没速度。</p>
<p>如果你打不开界面，那么需要开启防火墙端口了，可以先使用<code>Ctrl+C</code>断开运行，然后使用命令：</p>
<pre><code>#CentOS 7系统
firewall-cmd --zone=public --add-port=3001/tcp --permanent
firewall-cmd --reload</code></pre><p>最后再重启运行即可。</p>
<p><strong>3、开机自启</strong><br>为了我们使用方便些，这里可以使用<code>Systemctl</code>守护进程，并加入开机自启。</p>
<pre><code>#以下是一整条命令，一起复制到SSH客户端运行
cat &gt; /etc/systemd/system/renren.service &lt;&lt;EOF
[Unit]
Description=RenRen server
After=network.target
Wants=network.target

[Service]
Type=simple
PIDFile=/var/run/renren.pid
ExecStart=/root/rrshareweb/rrshareweb
RestartPreventExitStatus=23
Restart=always
User=root

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>开始启动：</p>
<pre><code>systemctl start renren</code></pre><p>查看状态：</p>
<pre><code>systemctl status renren</code></pre><p>如果显示<code>active(running)</code>即开启成功。</p>
<p>设置开机自启：</p>
<pre><code>systemctl enable renren</code></pre><h2 id="配置上传"><a href="#配置上传" class="headerlink" title="配置上传"></a>配置上传</h2><p><strong>1、安装Python 3</strong><br>使用脚本安装：</p>
<pre><code>#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh
#由于Ubuntu 16+自带Python3，所以只需要安装pip3就可以了
apt install python3-pip -y</code></pre><p>安装<code>requests</code>：</p>
<pre><code>pip3 install requests</code></pre><p><strong>2、安装Onedrive上传脚本</strong><br>方法参考：VPS上传文件到OneDrive网盘脚本，安装好脚本并认证下<code>OneDrive</code>账号即可。</p>
<p><strong>3、添加自动上传脚本</strong></p>
<pre><code>#新建文件夹存放上传脚本
mkdir /root/upod
#新建检测脚本check.py，填入你的客户端运行端口和解锁密码后一起复制到ssh客户端运行
cat &gt; /root/upod/check.py &lt;&lt;EOF
# -*- coding: utf-8 -*
import requests
import os
ip=&quot;127.0.0.1&quot;
port=&quot;你的端口&quot;
passwd=&quot;你的解锁密码&quot;
url=&quot;http://&quot;+str(ip)+&quot;:&quot;+str(port)+&quot;/api/unlock?passwd=&quot;+str(passwd)
workingtaskurl=&quot;http://&quot;+str(ip)+&quot;:&quot;+str(port)+&quot;/api/workingtask&quot;
finishedtaskurl=&quot;http://&quot;+str(ip)+&quot;:&quot;+str(port)+&quot;/api/finishedtask&quot;
deletetaskurl=&quot;http://&quot;+str(ip)+&quot;:&quot;+str(port)+&quot;/api/deletetask&quot;
s=requests.session()
s.get(url=url)
c=s.get(workingtaskurl).text
d=s.get(finishedtaskurl)
dict=(eval(d.text))
for i in dict[&apos;tasks&apos;]:
    ids=i[&apos;file_id&apos;]
    filename=i[&apos;file_name&apos;]
    os.system(&quot;bash /root/upod/work.sh &quot;+&quot;\&quot;&quot;+filename+&quot;\&quot;&quot;)
    data={
        &apos;ids&apos;:&apos;[&quot;&apos;+ids+&apos;&quot;]&apos;,
        &apos;delfile&apos;:1
    }
    s.post(deletetaskurl,data=data)
print(&quot;task finish&quot;)
EOF</code></pre><p>新建自动上传脚本，使用命令：</p>
<pre><code>nano /root/upod/work.sh</code></pre><p>先将脚本里的下载目录<code>/root/down</code>替换成你自己的，记得有两个位置要替换，然后再复制进去。</p>
<pre><code>#!/bin/bash
time=$(date &quot;+%Y%m%d%H%M%S&quot;)
filename=${time}${1}
#time=$(date &quot;+%Y%m%d-%H%M%S&quot;)
filedir=${filename}${time}
echo &quot;$filedir&quot;
echo &quot;$filename&quot;
mkdir -p /temp/&quot;$filedir&quot;/
mv /root/down/&quot;$1&quot; /temp/&quot;$filedir&quot;/&quot;$filename&quot;
eval onedrive-d \&apos;/temp/&quot;$filedir&quot;\&apos;
rm -rf /temp/&quot;$filedir&quot;
rm -rf /root/down/mask/</code></pre><p>再使用<code>Ctrl+X</code>，<code>Y</code>保存退出。这里注意下<code>check.py</code>脚本里面的<code>work.sh</code>脚本路径最好为绝对路径，不然容易出问题。</p>
<p><strong>4、测试上传脚本</strong><br>首先我们可以先下载一个电影资源，然后执行命令：</p>
<pre><code>python3 /root/upod/check.py</code></pre><p>如果输出<code>Successfully uploaded</code>字样则成功，反之请检查你之前的操作。<br><img src="https://www.southcat.net/usr/picture/renren_mv(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>5、定时执行上传脚本</strong><br>新建定时任务：</p>
<pre><code>#设置为每分钟执行一次
echo &quot;*/1 * * * * python3 /root/upod/check.py&quot; &gt; bt.cron
crontab bt.cron
rm -rf bt.cron</code></pre><p>最后使用<code>crontab -l</code>命令查看添加成功没。成功的话，就基本上完成了安装步骤。</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><pre><code>#PyOne
手动安装：https://www.southcat.net/archives/734/
脚本安装：https://www.southcat.net/archives/806/
Docker安装：https://www.southcat.net/archives/799/

#OneIndex
手动安装：https://www.southcat.net/archives/592/
脚本安装：https://www.southcat.net/archives/692/

#OLAINDEX
手动安装：https://www.southcat.net/archives/765/</code></pre><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><pre><code>影视安装：https://www.abbeyok.com/archives/213
上传脚本：https://blog.mark56.cn/archives/101/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS一键安装Resilio Sync来搭建专用文件共享系统</title>
    <url>/1631/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Resilio Sync</code>是一种依赖于<code>BitTorrent</code>协议的专用文件共享系统，原为<code>BitTorrent Sync</code>，简称<code>BitSync</code>是一款功能非常强大的同步工具，并且支持多终端设备：<code>windows</code>、<code>linux</code>、移动设备等都没有问题，再加上国内网盘纷纷关闭，如果您想自建搭建同步工具使用<code>BitSync</code>是一个非常不错的方案。</p>
<p><strong>Resilio Sync官网：</strong><a href="https://www.resilio.com/" target="_blank" rel="noopener">https://www.resilio.com/</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre><code>#安装必要的软件包
yum -y install wget unzip
#下载脚本
wget https://www.southcat.net/usr/down/Resilio-Sync.zip
#解压并安装
unzip Resilio-Sync.zip &amp;&amp; cd Resilio-Sync &amp;&amp; chmod +x mysync.sh sync.sh &amp;&amp; ./sync.sh</code></pre><p>根据提示设置用户名和密码后，直到安装成功！</p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>1、输入<code>http://IP:8888</code>会要求输入刚刚设置的账号密码。<br><img src="https://www.southcat.net/usr/picture/resilio(1).png" alt="请输入图片描述" title="请输入图片描述"><br>2、输入成功进入初始化界面，随便起一个名称，勾选协议进入<code>RslSync</code>后台。<br><img src="https://www.southcat.net/usr/picture/resilio(2).png" alt="请输入图片描述" title="请输入图片描述"><br>3、打开右上角–设置–<code>Preferences</code>–选择中文进行保存，这样就是中文界面啦。<br><img src="https://www.southcat.net/usr/picture/resilio(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><p>为了方便管理，安装成功后请输入命令：<code>source ~/.bashrc</code>使<code>alias</code>生效，这样就可以使用<code>mysync</code>命令来管理了，<code>mysync</code>说明如下：</p>
<pre><code>#Resilio安装目录
/home/RslSync
#配置文件
/home/RslSync/sync.conf
#查看RslSync状态
mysync status
#停止
mysync stop
#启动
mysync start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS下Mysql 5.6安装教程及创建数据库</title>
    <url>/1479/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多时候我们需要用到<code>Mysql</code>，这里说下<code>Centos</code>安装教程。</p>
<p><strong>1、下载源并安装</strong></p>
<pre><code>wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
rpm -ivh mysql-community-release-el7-5.noarch.rpm
yum install mysql-server</code></pre><p><strong>2、重置mysql密码</strong><br>先设置权限</p>
<pre><code>chown -R root:root /var/lib/mysql
service mysqld restart</code></pre><p>重置密码</p>
<pre><code>mysql -u root  //直接回车进入mysql控制台
mysql &gt; use mysql;
mysql &gt; update user set password=password(&apos;123456&apos;) where user=&apos;root&apos;;
mysql &gt; exit;</code></pre><p>重启数据库</p>
<pre><code>service mysqld restart</code></pre><p>创建数据库</p>
<pre><code>mysql -uroot -pmypassword  #mypassword为数据库密码
mysql &gt; create database xx;  #xx为数据库名称
mysql &gt; exit;  #退出</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS和Debian/Ubuntu 安装Fail2ban服务来防止暴力破解FTP/SSH</title>
    <url>/1488/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般用过<code>VPS</code>的人查一下系统日志，可以参考：通过Auth.log来查看SSH是否被扫，会发现<code>ssh</code>经常被人扫描，多的有几万次，万一被破解会造成很多问题，特别是在上面备份东西和网站的人来说，损失巨大，所以我们要采取一些措施来尽量减少这样的事发生，这里说下通过安装<code>Fail2ban</code>来防止暴力破解。用Fail2ban可以进行<code>FTP/SSH</code>登录频率限制，如果登录尝试多少次的<code>IP</code>地址，然后给予限制。</p>
<p>更多基础的<code>VPS</code>安全设置可参考：修改SSH端口+禁止ROOT登陆，Linux VPS 使用DDOS deflate来抵御DDOS攻击</p>
<p><strong>1、安装Fail2ban</strong><br>CentOS</p>
<pre><code>yum install epel-release
yum install fail2ban</code></pre><p>Debian/Ubuntu</p>
<pre><code>apt-get install fail2ban</code></pre><p><strong>2、配置Fail2ban</strong><br>直接用<code>WinSCP</code>工具或者其它<code>FTP</code>管理工具编辑<code>/etc/fail2ban/jail.conf</code>文件。</p>
<pre><code>ignoreip = 127.0.0.1 #忽略的IP列表,不受设置限制（白名单）
bantime = 600 #屏蔽时间，单位：秒
findtime = 600 #这个时间段内超过规定次数会被ban掉
maxretry = 3 #最大尝试次数
backend = auto #日志修改检测机制（gamin、polling和auto这三种）
[ssh-iptables] #针对各服务的检查配置，如设置bantime、findtime、maxretry和全局冲突，服务优先级大于全局设置
enabled = true #是否激活此项（true/false）
filter = sshd #过滤规则filter的名字，对应filter.d目录下的sshd.conf
action = iptables[name=SSH, port=ssh, protocol=tcp] #动作的相关参数
sendmail-whois[name=SSH, dest=root, sender=fail2ban@example.com] #触发报警的收件人
logpath = /var/log/secure #检测的系统的登陆日志文件
maxretry = 5 #最大尝试次数</code></pre><p>启动的时候需要把前面<code>#</code>去掉，然后修改对应的参数。使用<code>service fail2ban start</code>启动服务即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS安装aria2+yaaw实现离线下载</title>
    <url>/1620/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前写过一篇<code>Aria2</code>教程：Linux安装Aria2来实现种子、磁力下载，不过只有服务端，图形管理还需要另外搭建或者借用别人的。比较麻烦，前端我自己搭建了个，可以用下，地址：<a href="https://www.southcat.net/Aria2/。不过这里说下另一个方法，利用`aria2`+`yaaw`实现离线下载。" target="_blank" rel="noopener">https://www.southcat.net/Aria2/。不过这里说下另一个方法，利用`aria2`+`yaaw`实现离线下载。</a></p>
<h2 id="安装aria2"><a href="#安装aria2" class="headerlink" title="安装aria2"></a>安装aria2</h2><p><code>Aria2</code>作为一款<code>linux</code>下的下载神器，很多极客都在使用，可以下载<code>http</code>资源、种-子文件、磁力链接等，功能强大，而且整合<code>Chrome</code>插件可以摆脱百度云盘的速度限制。</p>
<p>需要先安装<code>epel</code>，再安装<code>aria2</code>，执行下面的命令即可</p>
<pre><code>#安装epel源
yum -y install epel-release
#安装aria2
yum -y install aria2
#查看aria2版本
aria2c -v</code></pre><p>安装完毕后已经可以使用<code>aria2</code>多线程下载了，常用参数如下：</p>
<pre><code>-o:下载并重命名
-x:需要使用的线程数，后面跟数字，线程数越多速度越快(最多16)
-c:断点续传
#使用16线程下载一个文件
aria2c -x 16 http://xx.zip</code></pre><h2 id="配置aria2"><a href="#配置aria2" class="headerlink" title="配置aria2"></a>配置aria2</h2><p><code>aria2</code>配置比较多，如果我们想通过<code>WEB</code>界面的方式离线下载需要开启<code>JSON-RPC</code>支持，将下面的规则适当修改并另存为<code>/home/soft/aria2/aria2.conf</code></p>
<pre><code>#创建下载目录
mkdir -p /home/download
#创建文件夹
mkdir -p /home/soft/aria2
#创建session文件
touch /home/soft/aria2/aria2.session
#将下面的文件另存为aria2.conf
vi /home/soft/aria2/aria2.conf


# 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置
dir=/home/download
# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M
#disk-cache=32M
# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc
# 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc
# falloc和trunc则需要文件系统和内核支持
# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项
file-allocation=trunc
# 断点续传
continue=true

## 下载连接相关 ##

# 最大同时下载任务数, 运行时可修改, 默认:5
max-concurrent-downloads=5
# 同一服务器连接数, 添加时可指定, 默认:1
max-connection-per-server=5
# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M
# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载
min-split-size=10M
# 单个任务最大线程数, 添加时可指定, 默认:5
split=32
# 整体下载速度限制, 运行时可修改, 默认:0
#max-overall-download-limit=0
# 单个任务下载速度限制, 默认:0
#max-download-limit=0
# 整体上传速度限制, 运行时可修改, 默认:0
#max-overall-upload-limit=0
# 单个任务上传速度限制, 默认:0
#max-upload-limit=0
# 禁用IPv6, 默认:false
disable-ipv6=true

## 进度保存相关 ##

# 从会话文件中读取下载任务
input-file=/home/soft/aria2/aria2.session
# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件
save-session=/home/soft/aria2/aria2.session
# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
#save-session-interval=60

## RPC相关设置 ##

# 启用RPC, 默认:false
enable-rpc=true
# 允许所有来源, 默认:false
rpc-allow-origin-all=true
# 允许非外部访问, 默认:false
rpc-listen-all=true
# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同
#event-poll=select
# RPC监听端口, 端口被占用时可以修改, 默认:6800
#rpc-listen-port=6800
# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项
#rpc-secret=
# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-user=
# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-passwd=

## BT/PT下载相关 ##

# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true
#follow-torrent=true
# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999
listen-port=51413
# 单个种子最大连接数, 默认:55
#bt-max-peers=55
# 打开DHT功能, PT需要禁用, 默认:true
enable-dht=false
# 打开IPv6 DHT功能, PT需要禁用
#enable-dht6=false
# DHT网络监听端口, 默认:6881-6999
#dht-listen-port=6881-6999
# 本地节点查找, PT需要禁用, 默认:false
#bt-enable-lpd=false
# 种子交换, PT需要禁用, 默认:true
enable-peer-exchange=false
# 每个种子限速, 对少种的PT很有用, 默认:50K
#bt-request-peer-speed-limit=50K
# 客户端伪装, PT需要
peer-id-prefix=-TR2770-
user-agent=Transmission/2.77
# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0
seed-ratio=0
# 强制保存会话, 即使任务已经完成, 默认:false
# 较新的版本开启后会在任务完成后依然保留.aria2文件
#force-save=false
# BT校验相关, 默认:true
#bt-hash-check-seed=true
# 继续之前的BT任务时, 无需再次校验, 默认:false
bt-seed-unverified=true
# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false
bt-save-metadata=true</code></pre><p>接着输入下面的命令来让<code>aria2</code>后台运行，如果无法启动注意看报错提示。</p>
<pre><code>#运行aria2c
aria2c --conf-path=/home/soft/aria2/aria2.conf
#如果您需要常驻运行，请修改为
nohup aria2c --conf-path=/home/soft/aria2/aria2.conf &amp;</code></pre><h2 id="添加验证"><a href="#添加验证" class="headerlink" title="添加验证"></a>添加验证</h2><p>在<code>aria2 1.18.4</code>以上版本中，增加了<code>rpc-secret</code>验证，如果您不希望接口公开，可以将上面的配置中<code>rpc-secret=</code>这一行取消注释，并填写自己的<code>key</code>，这样接口地址格式为<code>http://token:kye@IP:6800/jsonrpc</code></p>
<h2 id="安装yaaw"><a href="#安装yaaw" class="headerlink" title="安装yaaw"></a>安装yaaw</h2><p><code>yaaw</code>是一个为<code>aria2</code>提供<code>WEB</code>界面的管理工具，完全使用<code>HTML</code>+<code>javascript</code>实现，因此不需要任何脚本环境，直接下载到您本地或部署到您的<code>WEB</code>服务中使用。</p>
<pre><code>#下载yaaw
wget https://github.com/binux/yaaw/archive/master.zip
#解压
unzip master.zip
#移动
mv yaaw-master/* ./</code></pre><p>如果不出意外，访问<code>http://yourdomain.com/index.html</code>就能看到<code>yaaw</code>界面，如下截图。<br><img src="https://www.southcat.net/usr/picture/yaaw(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="设置接口"><a href="#设置接口" class="headerlink" title="设置接口"></a>设置接口</h2><p>点击右上角<code>Settings</code>按钮，填写<code>WEB</code>接口，没有设置密码的情况下接口地址为<code>http://IP:6800/jsonrpc</code>，如果您启用了<code>rpc-secret=</code>，那么接口地址为<code>http://token:kye@IP:6800/jsonrpc</code>，注意防火墙还需要放行<code>6800</code>端口，以免出现无法下载的情况，正式环境中请为<code>aria2</code>设置密码，以免被恶意下载。<br><img src="https://www.southcat.net/usr/picture/yaaw(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS安装Fikker自建CDN系统，支持Https/反向代理/防CC攻击</title>
    <url>/1994/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Fikker</code>是一款面向<code>CDN</code>/站长的专业级网站缓存（<code>Webcache</code>）和反向代理服务器软件（<code>Reversed Proxy Server</code>），安装<code>Fikker</code>可以实现自建<code>CDN</code>加速节点。可以实现的功能有反向代理+页面缓存+实时监控+流量统计+转向管理+<code>HTTPS</code>+防<code>CC</code>攻击。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、准备工作</strong><br><code>Fikker</code>需要监听<code>80</code>/<code>443</code>/<code>6780</code>端口，需要打开这些端口。</p>
<pre><code>#如果防火墙使用的iptables（Centos 6）
iptables -I INPUT -p tcp --dport 80 -j ACCEPT
iptables -I INPUT -p tcp --dport 443 -j ACCEPT
iptables -I INPUT -p tcp --dport 6780 -j ACCEPT
service iptables save
service iptables restart
#如果使用的是firewall（CentOS 7）
firewall-cmd --zone=public --add-port=80/tcp --permanent 
firewall-cmd --zone=public --add-port=443/tcp --permanent 
firewall-cmd --zone=public --add-port=6780/tcp --permanent 
firewall-cmd --reload</code></pre><p><strong>2、安装Fikker</strong></p>
<pre><code>#安装wget，若已经安装这一步可省略
yum -y install wget 
#下载安装包
wget -c http://www.fikker.com/dl/fikkerd-3.7.3-linux-x86-64.tar.gz
#解压
tar zxvf fikkerd-3.7.3-linux-x86-64.tar.gz
#进入安装目录
cd fikkerd-3.7.3-linux-x86-64
#运行Fikker
./fikkerd.sh start</code></pre><p>完成后访问<code>http://IP:6780</code>，初始密码为<code>123456</code>，如果打不开，请输入命令<code>netstat -apn|grep &#39;6780&#39;</code>查看端口是否监听，检查防火墙是否放行端口。<br><img src="https://www.southcat.net/usr/picture/Fikker(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、添加站点</strong><br>在<code>Fikker</code>后台–管理工具–主机管理–右下角添加主机，添加一个需要<code>CDN</code>加速的域名（支持<code>HTTP</code>/<code>HTTPS</code>）。<br><img src="https://www.southcat.net/usr/picture/Fikker(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、添加源站</strong><br>添加主机后，还需要设置回源地址，告知<code>CDN</code>节点从哪里获取数据，源站添加完毕后大功告成，您可以将<code>DNS</code>解析至<code>CDN</code>节点了，推荐使用智能<code>DNS</code>解析服务商<code>CloudXNS</code>，这样可实现分区域解析。<br><img src="https://www.southcat.net/usr/picture/Fikker(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="其它操作"><a href="#其它操作" class="headerlink" title="其它操作"></a>其它操作</h2><p>如果您需要将<code>Fikker</code>注册为服务，请执行下面的命令：</p>
<pre><code>#注册服务
./fikkerd.sh install
#停止服务
./fikkerd.sh stop
#删除服务
./fikkerd.sh uninstall</code></pre><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>该软件分为免费版和收费版，免费没有页面缓存功能，等于只能给图片、<code>JS</code>、<code>CSS</code>等静态资源作<code>CDN</code>加速，不想折腾的可以使用<code>Cloudflare</code>的<code>CDN</code>加速。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS安装OpenVZ Web Panel，可以创建和管理VPS服务器</title>
    <url>/1830/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>OpenVZ Web Panel</code>是一个在物理服务器上开<code>OpenVZ</code>虚拟服务器的一个管理软件，可以通过<code>WEB</code>端进行创建和管理<code>OpenVZ</code>服务器。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本方法在<code>Vultr CentOS 6 x64</code>下完美测试通过。且只适用于<code>KVM</code>构架的<code>VPS</code>或独立服务器。</p>
<p><strong>1、关闭SELinux</strong></p>
<pre><code>/usr/sbin/sestatus -v
#如果返回以下信息则为关闭状态
SELinux status:                 disabled</code></pre><p>如果为<code>enabled</code>则为开启状态，这时候需要编辑<code>/etc/sysconfig/selinux</code>文件，添加内容<code>SELINUX=disabled</code>并保存。</p>
<p><strong>2、配置防火墙</strong></p>
<pre><code>/sbin/iptables -I INPUT -p tcp --dport 3000 -j ACCEPT
/etc/rc.d/init.d/iptables save
/etc/init.d/iptables restart</code></pre><p>如果是<code>CentOS 7</code>系统，请参考：CentOS 7开放设置端口及firewall常用命令介绍开放<code>3000</code>端口。</p>
<p><strong>3、安装OpenVZ</strong><br>配置<code>yum</code>源</p>
<pre><code>cd /etc/yum.repos.d
wget http://download.openvz.org/openvz.repo
rpm --import  http://download.openvz.org/RPM-GPG-Key-OpenVZ
yum update -y</code></pre><p>安装<code>OpenVZ</code>内核和<code>vzctl</code>、<code>vzquota</code>等工具</p>
<pre><code>yum install  vzkernel
yum install vzctl vzquota</code></pre><p>编辑<code>/etc/sysctl.conf</code>文件，修改下面两个参数</p>
<pre><code>net.ipv4.ip_forward = 1
kernel.sysrq = 1</code></pre><p>使修改生效</p>
<pre><code>modprobe bridge
lsmod|grep bridge</code></pre><p>查看<code>OpenVZ</code>服务状态及开始命令：</p>
<pre><code>service vz status 
service vz start </code></pre><p><strong>4、安装OpenVZ Web Panel</strong></p>
<pre><code>wget -O - https://raw.githubusercontent.com/sibprogrammer/owp/master/installer/ai.sh | sh</code></pre><p>安装结束后，使用如下信息登录控制面板</p>
<pre><code>http://&lt;your-ip&gt;:3000</code></pre><p>默认用户名和密码均为<code>admin</code>。</p>
<h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p>点击左边的<code>Physical Server</code>可创建系统，服务器模板等。<br><img src="https://www.southcat.net/usr/picture/Openvz_Web_Panel(1).png" alt="请输入图片描述" title="请输入图片描述"><br>然后创建系统<br><img src="https://www.southcat.net/usr/picture/Openvz_Web_Panel(2).png" alt="请输入图片描述" title="请输入图片描述"><br>创建服务器模板，可设置<code>CPU</code>个数、内存等等。<br><img src="https://www.southcat.net/usr/picture/Openvz_Web_Panel(6).png" alt="请输入图片描述" title="请输入图片描述"><br>点击左边的<code>IP Addresses</code>创造<code>IP</code>。<br><img src="https://www.southcat.net/usr/picture/Openvz_Web_Panel(3).png" alt="请输入图片描述" title="请输入图片描述"><br>最后可以创建服务器了。<br><img src="https://www.southcat.net/usr/picture/Openvz_Web_Panel(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Openvz_Web_Panel(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS系统环境精简优化</title>
    <url>/1496/</url>
    <content><![CDATA[<p><strong>提示：</strong>在操作这些步骤最好是在我们刚重装系统，而不是在已经运行网站中优化机器，以免出现机器问题。</p>
<p><strong>删除不必要的自带软件包</strong></p>
<pre><code>yum remove Deployment_Guide-en-US finger cups-libs cups ypbind
yum remove bluez-libs desktop-file-utils ppp rp-pppoe wireless-tools irda-utils
yum remove sendmail* samba* talk-server finger-server bind* xinetd
yum remove nfs-utils nfs-utils-lib rdate fetchmail eject ksh mkbootdisk mtools
yum remove syslinux tcsh startup-notification talk apmd rmt dump setserial portmap yp-tools
yum groupremove &quot;Mail Server&quot; &quot;Games and Entertainment&quot; &quot;X Window System&quot; &quot;X Software Development&quot;
yum groupremove &quot;Development Libraries&quot; &quot;Dialup Networking Support&quot;
yum groupremove &quot;Games and Entertainment&quot; &quot;Sound and Video&quot; &quot;Graphics&quot; &quot;Editors&quot;
yum groupremove &quot;Text-based Internet&quot; &quot;GNOME Desktop Environment&quot; &quot;GNOME Software Development&quot;</code></pre><p><strong>升级centos系统</strong></p>
<pre><code>yum update #更新系统
yum clean all #清理全部缓存文件</code></pre><p><strong>禁用seLinux</strong></p>
<pre><code>sestatus #先执行看seLinux状态，如果不是disabled，就需要执行下面步骤，否则不要执行
vi /etc/selinux/config
SELINUX=disabled #禁用SeLinux
SELINUX=enforcing #使用SeLinux</code></pre><p><strong>禁止IPV6（执行后需要reboot重启）</strong></p>
<pre><code>vi /etc/modprobe.conf #打开文件，把下面两行加到最后
alias net-pf-10 off
alias ipv6 off</code></pre><p><strong>初始化防火墙</strong></p>
<pre><code>touch /etc/sysconfig/iptables
iptables -F
iptables -X
iptables -Z
service iptables save
service iptables restart</code></pre><p><strong>禁止无用服务</strong></p>
<pre><code>#! /bin/bash
service acpid off
service atd stop
service auditd stop
service avahi-daemon stop
service avahi-dnsconfd stop
service bluetooth stop
service conman stop
service cpuspeed stop
service cups stop
service dnsmasq stop
service dund stop
service firstboot stop
service hidd stop
service httpd stop
service ibmasm stop
service ip6tables stop
service irda stop
service kdump stop
service lm_sensors stop
service mcstrans stop
service messagebus stop
service microcode_ctl stop
service netconsole stop
service netfs stop
service netplugd stop
service nfs stop
service nfslock stop
service nscd stop
service ntpd stop
service oddjobd stop
service pand stop
service pcscd stop
service portmap stop
service psacct stop
service rdisc stop
service restorecond stop
service rpcgssd stop
service rpcidmapd stop
service rpcsvcgssd stop
service saslauthd stop
service sendmail stop
service setroubleshoot stop
service smb stop
service vncserver stop
service winbind stop
service wpa_supplicant stop
service xfs stop
service ypbind stop
service yum-updatesd stop
chkconfig acpid off
chkconfig atd off
chkconfig auditd off
chkconfig avahi-daemon off
chkconfig avahi-dnsconfd off
chkconfig bluetooth off
chkconfig conman off
chkconfig cpuspeed off
chkconfig cups off
chkconfig dnsmasq off
chkconfig dund off
chkconfig firstboot off
chkconfig hidd off
chkconfig httpd off
chkconfig ibmasm off
chkconfig ip6tables off
chkconfig irda off
chkconfig kdump off
chkconfig lm_sensors off
chkconfig mcstrans off
chkconfig messagebus off
chkconfig microcode_ctl off
chkconfig netconsole off
chkconfig netfs off
chkconfig netplugd off
chkconfig nfs off
chkconfig nfslock off
chkconfig nscd off
chkconfig ntpd off
chkconfig oddjobd off
chkconfig pand off
chkconfig pcscd off
chkconfig portmap off
chkconfig psacct off
chkconfig rdisc off
chkconfig restorecond off
chkconfig rpcgssd off
chkconfig rpcidmapd off
chkconfig rpcsvcgssd off
chkconfig saslauthd off
chkconfig sendmail off
chkconfig setroubleshoot off
chkconfig smb off
chkconfig vncserver off
chkconfig winbind off
chkconfig wpa_supplicant off
chkconfig xfs off
chkconfig ypbind off
chkconfig yum-updatesd off</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS系统Kangle面板一键安装脚本</title>
    <url>/1737/</url>
    <content><![CDATA[<h2 id="脚本简介"><a href="#脚本简介" class="headerlink" title="脚本简介"></a>脚本简介</h2><ul>
<li>本脚本可以一键安装<code>Kangle</code>+<code>Easypanel</code>+<code>Mysql</code>+商业集合脚本。</li>
<li>脚本本身集成：<code>PHP(5.2~7)</code>、<code>MYSQL5.6</code>。</li>
<li>支持前台用户任意切换<code>PHP(5.2~7)</code>以适应网站程序。</li>
</ul>
<h2 id="脚本特点"><a href="#脚本特点" class="headerlink" title="脚本特点"></a>脚本特点</h2><ul>
<li>安装包内<code>PHP</code>套件以及<code>Kangle</code>套件均已本地化，达到最佳连接速度。</li>
<li>支持<code>EP</code>前台自由切换<code>PHP(5.2-7.0)</code>。</li>
<li>预先设置各<code>PHP</code>版本<code>PHP.ini</code>安全问题。</li>
<li>自动更新<code>MySQL5.1</code>至<code>MySQL5.6</code>。</li>
<li>自动/手动更新<code>PHPmyadmin</code>至官网<code>PHP5.3</code>专用最新版。</li>
<li>支持自定义<code>403</code>,<code>404</code>,<code>503</code>,<code>504</code>等错误页面！</li>
<li>预先自带<code>EasyPanel</code>模板两个。</li>
<li>执行脚本可以选择安装<code>kangle</code>商业版。</li>
</ul>
<h2 id="Kangle安装"><a href="#Kangle安装" class="headerlink" title="Kangle安装"></a>Kangle安装</h2><p><code>Kangle</code>一键安装极速编译安装方式（安装时间10至60分钟）。</p>
<pre><code>yum -y install wget;wget http://kangle.odata.cc/start;sh start</code></pre><h2 id="Kangle卸载"><a href="#Kangle卸载" class="headerlink" title="Kangle卸载"></a>Kangle卸载</h2><p>命令所有数据都会删除。注意有数据请先备份。</p>
<pre><code>rpm -e kangle</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Centos/Ubuntu/Debian BBR加速一键安装包</title>
    <url>/1529/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前整理过一篇BBR安装方法使用 Google BBR 拥塞算法加速 TCP，后来看到秋水大大自己写的BBR一键安装脚本很方便，也很全面，就搬运过来了。</p>
<p><strong>提示:</strong>本脚本会把系统升级到最新内核！如果你有特定内核版本需求的话请慎用。</p>
<p><strong>本脚本适用环境</strong><br>系统支持：CentOS 6+，Debian 7+，Ubuntu 12+<br>虚拟技术：OpenVZ 以外的，比如 KVM、Xen、VMware 等<br>内存要求：≥128M<br>日期　　：2017 年 02 月 22 日</p>
<p><strong>关于本脚本</strong><br>1、本脚本已在Vultr上的VPS全部测试通过。<br>2、当脚本检测到VPS的虚拟方式为OpenVZ时，会提示错误，并自动退出安装。<br>3、某些服务商（如DigitalOcean）可能需要首先将VPS配置为可自定义内核，然后grub2的配置才会生效。<br>4、脚本运行完重启发现开不了机的，打开VPS后台控制面板的VNC, 开机卡在grub引导, 手动选择内核即可。<br>5、由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。</p>
<p><strong>使用方法</strong><br>使用root用户登录，运行以下命令：</p>
<pre><code>wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh
chmod +x bbr.sh
./bbr.sh</code></pre><p>安装完成后，脚本会提示需要重启VPS，输入y并回车后重启。<br>重启完成后，进入VPS，验证一下是否成功安装最新内核并开启TCP BBR，输入以下命令：</p>
<pre><code>uname -r</code></pre><p>查看内核版本，含有4.10就表示OK了</p>
<pre><code>sysctl net.ipv4.tcp_available_congestion_control</code></pre><p>返回值一般为：net.ipv4.tcp_available_congestion_control = bbr cubic reno</p>
<pre><code>sysctl net.ipv4.tcp_congestion_control</code></pre><p>返回值一般为：net.ipv4.tcp_congestion_control = bbr</p>
<pre><code>sysctl net.core.default_qdisc</code></pre><p>返回值一般为:net.core.default_qdisc = fq</p>
<pre><code>lsmod | grep bbr</code></pre><p>返回值有tcp_bbr模块即说明bbr已启动。</p>
<p><strong>内核升级方法</strong><br>如果是CentOS系统，执行如下命令即可升级内核：</p>
<pre><code>yum --enablerepo=elrepo-kernel -y install kernel-ml kernel-ml-devel</code></pre><p>CentOS 6的话，执行命令：</p>
<pre><code>sed -i &apos;s/^default=.*/default=0/g&apos; /boot/grub/grub.conf</code></pre><p>CentOS 7的话，执行命令：</p>
<pre><code>grub2-set-default 0</code></pre><p>如果是<code>Debian/Ubuntu</code>系统，则需要手动下载最新版内核来安装升级。<br>点击这里下载最新版的内核deb安装包。<br>如果系统是64位，则下载amd64的linux-image中含有generic这个deb包；<br>如果系统是32位，则下载i386的linux-image中含有generic这个deb包；</p>
<p>安装的命令如下（以最新版的64位4.9.3举例而已，请替换为下载好的deb包）：</p>
<pre><code>dpkg -i linux-image-4.9.3-040903-generic_4.9.3-040903.201701120631_amd64.deb</code></pre><p>安装完成后，再执行命令：</p>
<pre><code>/usr/sbin/update-grub</code></pre><p>最后，重启VPS即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS通过安装davfs2来挂载Dropbox网盘</title>
    <url>/1712/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Dropbox</code>是一个功能强大的同步盘，也是为数不多且提供<code>WEBDAV</code>支持的网盘，<code>Linux</code>系统可以安装<code>davfs2</code>通过<code>webdav</code>的方式来挂载<code>Dropbox</code>，方便存取文件或备份使用。如果您还没有注册<code>Dropbox</code>，可以访问<code>www.dropbox.com</code>注册（请自备梯子，否则无法打开）。</p>
<h2 id="安装davfs2"><a href="#安装davfs2" class="headerlink" title="安装davfs2"></a>安装davfs2</h2><p>执行下面的命令：</p>
<pre><code>yum install davfs2 -y</code></pre><h2 id="Dropbox开启webdav支持"><a href="#Dropbox开启webdav支持" class="headerlink" title="Dropbox开启webdav支持"></a>Dropbox开启webdav支持</h2><p>这一步被坑了很久，官方也没找到帮助文档，网上说的是<code>webdav</code>地址为：<code>https://dav.dropdav.com/</code>，输入用户名和密码就<code>ok</code>，但实测压根不行啊，正确的做法是：</p>
<ul>
<li>先到<code>https://www.dropdav.com</code>注册一个账号</li>
<li>授权<code>dropdav</code>访问<code>Dropbox</code>的权限</li>
<li>记录<code>dropdav</code>的账号和密码</li>
</ul>
<h2 id="挂载Dropbox"><a href="#挂载Dropbox" class="headerlink" title="挂载Dropbox"></a>挂载Dropbox</h2><p>上面步骤完成后挂载<code>Dropbox</code>就很简单了，分别执行下面的命令即可。这一步中会要求输入<code>dropdav</code>的账号和密码。</p>
<pre><code>#创建挂载目录
mkdir /home/dropbox
#执行挂载命令
mount -t davfs https://dav.dropdav.com/backup /home/dropbox</code></pre><p>上面的命令中<code>https://dav.dropdav.com/backup</code>，后面的<code>backup</code>为您在<code>Dropbox</code>创建的文件夹名字，请根据实际情况修改，看到如下截图后说明挂载成功。<br><img src="https://www.southcat.net/usr/picture/Dropbox(1).png" alt="请输入图片描述" title="请输入图片描述"><br>完成之后将文件存放到/home/dropbox会自动同步到Dropbox，可以达到备份的目的，如下截图。<br><img src="https://www.southcat.net/usr/picture/Dropbox(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>由于<code>X</code>墙的原因国内服务器可能无法正常使用<code>Dropbox</code>，或速度缓慢，推荐国外的服务器挂载<code>Dropbox</code>用来备份数据。国内支持<code>WEBDAV</code>的网盘还有坚果云，也可以使用此方法挂载。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Cloud Torrent：支持BT下载/磁力下载/边下边播</title>
    <url>/1692/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Cloud Torrent</code>是一款很不错的离线下载工具，相关工具还有：Debian一键安装Transmission并美化Web界面来进行BT下载，BT种子/磁力链接下载工具：Aria2一键安装管理脚本，CentOS安装aria2+yaaw实现离线下载。</p>
<h2 id="Cloud-Torrent特点"><a href="#Cloud-Torrent特点" class="headerlink" title="Cloud Torrent特点"></a>Cloud Torrent特点</h2><ul>
<li>支持 <code>BT</code>下载</li>
<li>支持 磁力链接下载</li>
<li>支持 搜索磁力链接</li>
<li>支持 离线下载</li>
<li>支持 边下边播(格式限制：<code>mp4</code>/<code>wbem</code>/<code>ogg</code>，同时需要手动输入链接)</li>
<li>可视化界面<code>Web UI</code></li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>项目地址：</strong><a href="https://github.com/jpillora/cloud-torrent" target="_blank" rel="noopener">https://github.com/jpillora/cloud-torrent</a></p>
<p><strong>系统要求：</strong><code>CentOS</code>/<code>Debian</code>/<code>Ubuntu</code>均可。</p>
<p>运行下面命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/cloudt.sh &amp;&amp; chmod +x cloudt.sh &amp;&amp; bash cloudt.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CentOS/Ubuntu/Debian安装pip教程</title>
    <url>/1618/</url>
    <content><![CDATA[<p><strong>1、CentOS系统</strong><br><code>CentOS 6.x 32</code>位</p>
<pre><code>rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
yum install -y python-pip</code></pre><p><code>CentOS 6.x 64</code>位</p>
<pre><code>rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum install -y python-pip</code></pre><p><code>CentOS 7.x</code></p>
<pre><code>yum install epel-release
yum install -y python-pip


apt-get update
apt-get install python-pip</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CloudCone：电信联通直连/1G带宽/2T流量/免费DDOS防护/换IP仅$0.5/月付最低$1.25</title>
    <url>/1907/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>CloudCone</code>是一家国外主机商，是<code>QuadCone</code>旗下的子品牌。产品都是<code>KVM</code>虚拟架构，部署在洛杉矶<code>Multacom</code>机房，电信联通直连，<code>1Gbps</code>端口，流量也多，<code>3T</code>起步。按小时计费，随时删除，价格低至月付<code>1.25</code>美元，支持支付宝。中途关机只收部分费用。如果你的<code>IP</code>被墙，换<code>IP</code>仅<code>$0.5</code>！自带免费的<code>DDoS</code>防护（还有付费的全天候<code>DDoS</code>防护），以及每两周一次的全服务器无差别快照备份，如果有恢复需求可以直接找客服，客服态度都挺好的。</p>
<p>测<code>ping</code>、<code>mtr</code>、路由追踪：Looking Glass。<br>测试<code>IP</code>： <code>173.82.2.222</code><br>下载测试：100MB</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>这家要购买服务器需要先注册账号，官网注册地址：点击注册，支持支付宝付款，<code>CloudCone</code>直接开出来的<code>IP</code>可能是被墙的，也可能是好的，这就完全看脸了，如果是墙的可以通过不断的开删机子来刷，没耐心的可以直接发工单换<code>IP</code>，<code>$0.5</code>换一次，挺便宜的，后期因为使用<code>55R</code>等被墙的，同样也可以发工单花<code>$0.5</code>换一个好的<code>IP</code>。</p>
<p>这家网络有时候会有点小波动，不过带宽和流量都给的挺足，定位更偏向于翻<code>Q</code>，如果你需要建站的话，可以用稳定且速度快的搬瓦工：搬瓦工介绍页面。</p>
<h2 id="特价套餐"><a href="#特价套餐" class="headerlink" title="特价套餐"></a>特价套餐</h2><pre><code>博主很久没更新套餐了，现在更新一些可用的优惠套餐，如果断货可以联系博主找新的可用套餐。</code></pre><p><strong>NEXUS6</strong><br>CPU：1核<br>内存：512MB<br>硬盘：15GB SSD<br>带宽：1Gbps<br>流量：1TB/月<br>价格：$2.00/月<br>链接：点击购买</p>
<p><strong>NEXUS2</strong><br>CPU：1核<br>内存：1GB<br>硬盘：20GB SSD<br>带宽：1Gbps<br>流量：1TB/月<br>价格：$2.99/月<br>链接：点击购买</p>
<p><strong>NEXUS4</strong><br>CPU：1核<br>内存：2GB<br>硬盘：60GB SSD<br>带宽：1Gbps<br>流量：2TB/月<br>价格：$5.49/月<br>链接：点击购买</p>
<p><strong>NEXUS3</strong><br>CPU：1核<br>内存：1GB<br>硬盘：40GB SSD<br>带宽：1Gbps<br>流量：1TB/月<br>价格：$3.49/月<br>链接：点击购买</p>
<p><strong>NEXUS5</strong><br>CPU：2核<br>内存：3GB<br>硬盘：75GB SSD<br>带宽：1Gbps<br>流量：2TB/月<br>价格：$6.99/月<br>链接：点击购买</p>
<h2 id="常规月付套餐"><a href="#常规月付套餐" class="headerlink" title="常规月付套餐"></a>常规月付套餐</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CloudFlare/Incapsula：不需要备案，免费的CND商家</title>
    <url>/1535/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人的域名不想北岸，又想用CDN加速，只能使用国外的CDN商家了，这里推荐2个。</p>
<p><strong>1、Incapsula</strong><br><code>Incapsula</code>节点众多，支持<code>CNAME</code>、绑定IP，不需更改DNS。而且亚洲节点不错，所以国内的可以将A记录设置成亚洲范围的IP就可以了（具体范围ip可通过下面<code>Incapsula</code>节点范围地址查询，还可以添加多个A记录）。</p>
<p><code>Incapsula</code>官网：<a href="https://www.incapsula.com/" target="_blank" rel="noopener">https://www.incapsula.com/</a><br><code>Incapsula</code>节点范围：<a href="http://bgp.he.net/AS19551#_prefixes" target="_blank" rel="noopener">http://bgp.he.net/AS19551#_prefixes</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Comment2Wechat：一个Typecho新评论微信提醒插件（修改自原版本）</title>
    <url>/1780/</url>
    <content><![CDATA[<p><strong>说明：</strong>对于经常使用微信的博主来说，微信提醒确实要比邮件方便的多，之前用<code>wordpress</code>博客的时候，也用过微信提醒，只不过不是用插件，是通过添加代码完成的，参考：给WordPress的新评论添加微信提醒，对于<code>Typecho</code>，有大神做了插件就方便多了。</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>每当有人评论你的文章时，可以通过<code>Server</code>酱推送到你的微信上。</p>
<p>相比原插件新增了两个功能设置：</p>
<ol>
<li>当评论者为自己时不提醒。</li>
<li>使用<code>HTTPS</code>与<code>Server</code>酱进行通信。</li>
</ol>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Comment2Wechat(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Comment2Wechat(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>Github下载：</strong>Comment2Wechat V2.0<br><strong>本地下载：</strong>Comment2Wechat V2.0</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>下载完后将<code>Comment2Wechat</code>文件夹解压至(<code>Typecho</code>根目录)<code>/usr/plugins</code>中即可。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>如果你是从<code>Github</code>下载的，请记得将插件文件夹重命名为<code>Comment2Wechat</code>。<br>如果你已经有原版插件，可以直接覆盖，但是在这之后必须点开设置菜单并保存设置一次（即使你不需要更改默认设置）。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先去<code>Server</code>酱首页（<a href="https://sc.ftqq.com/），根据首页的说明一步步操作即可。" target="_blank" rel="noopener">https://sc.ftqq.com/），根据首页的说明一步步操作即可。</a><br>然后将你获取的<code>SCKEY</code>粘贴到插件的设置中，保存设置。<br>就这么简单。</p>
<h2 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h2><p><strong>插件原作者：</strong>Comment2Wechat V1.0.0 by Y!an <a href="https://github.com/YianAndCode/Comment2Wechat" target="_blank" rel="noopener">https://github.com/YianAndCode/Comment2Wechat</a><br><strong>插件修改者：</strong>Comment2Wechat V2.0.0 by Tsuk1ko <a href="https://lolico.moe" target="_blank" rel="noopener">https://lolico.moe</a></p>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Cloudbox：一个强大的多功能云媒体服务，可自动获取视频资源并在线播放</title>
    <url>/2384/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近发现了一个很强的多媒体项目<code>Cloudbox</code>，差不多是一个基于<code>Docker</code>的盒子，基本上里面所有的应用都是为多媒体打造，包括自动搜索影视、下载、播放等等，常见的应用包括<code>Plex</code>/<code>Emby</code>、<code>Rclone</code>/<code>Plexdrive</code>、<code>ruTorrent</code>、<code>Nextcloud</code>、<code>Resilio Sync</code>，然后还有一大批不常见但很有用的应用，接下来都会大概介绍下，不然用起来很麻烦，博主只是大概的看了下。</p>
<p><code>Cloudbox</code>又分为<code>Mediabox</code>(多媒体服务)、<code>Feederbox</code>(下载服务)，你可以在一台服务器上部署完整的<code>Cloudbox</code>，这样会使用所有的应用，也可以在<code>2</code>台服务器上分别部署<code>Mediabox</code>和<code>Feederbox</code>，然后分工一起配合使用，这些具体会安装以下应用：</p>
<pre><code>#Cloudbox
Rclone、Plexdrive、NZBGet、ruTorrent、NZBHydra2、Jackett、Plex Media Server、Plex Autoscan、Sonarr、Radarr、PlexPy(Tautulli)、Ombi、Portainer、Organizr

#Feederbox
Rclone、Plexdrive、NZBGet、ruTorrent、NZBHydra2、Jackett、Sonarr、Radarr、Portainer、Organizr

#Mediabox
Rclone、Feeder Mount、Plexdrive、Plex Media Server、Plex Autoscan、PlexPy(Tautulli)、Ombi

#可选应用
Emby、Nextcloud、Resilio Sync、Plex Dupefinder、Heimdall、NZBHydra v1、Plex Requests、Sickbeard MP4 Automator</code></pre><p>大概介绍下应用：</p>
<pre><code>Sonarr：Usenet和BitTorrent用户的一款RSS订阅工具。它可以监视你喜欢的多个电影、剧集的更新提醒，并将它们抓取、排序和重命名。
Radarr：Sonarr的独立分支，用于通过Usenet和BitTorrent自动下载电影。
Rclone/Plexdrive：远程存储网盘挂载工具，后者只能挂载Google Drive。
NZBGet/ruTorrent：分别为Usenet和BitTorrent下载工具，可以配合Sonarr和Radarr一起下载资源。
NZBHydra2：是NZB索引者的元搜索工具。它可以方便地访问许多NZB索引器。您可以从一个位置搜索所有索引器，并将其用作Sonarr，Radarr或CouchPotato等工具的索引器源。
Jackett：是一个基于Web的应用程序，其作用类似于代理服务器，将搜索查询从下载客户端(例如Sonarr)引导到torrent跟踪器站点并将结果发回。下载客户端也可以使用Jackett从跟踪器站点获取RSS源。最后，它可以用作元搜索工具，直接从应用程序中查找种子。
Plex Autoscan：可以扫描已导入的文件夹(相对于整个部分库文件夹)，协助Plex添加由Sonarr/Radarr导入的添加媒体文件，从而减少Google API使用过多而被限制。
PlexPy：是一个基于Web的应用程序，与Plex一起运行，用于监视活动并跟踪各种统计数据。
Ombi：是一个自托管的Web应用程序，可以自动为你的共享Plex或Emby用户提供自己请求内容的功能！Ombi可以链接到多个电视节目和电影DVR工具，为你创建无缝的端到端体验。
Portainer：是一个开源轻量级管理UI，可让您轻松管理Docker容器，图像，网络和卷。
Organizr：是一个基于Web的HTPC服务器管理器，允许您管理选项卡中的各种工具和程序。还支持用户管理，允许非管理员用户或访客通过Organizr访问某些网页。
Plex/Emby：多媒体客户端，主要功能是存储+索引+转码+在线播放。
Nextcloud：一个免费的，开源的网盘程序
Resilio Sync：一个点对点的文件同步工具
Plex Dupefinder：用了在Plex库中找到重复版本的媒体，并告诉Plex自动删除最低质量版本(基于评分算法)，留下一个高质量的媒体文件。
Heimdall：用来添加各种链接地址的Web面板
Sickbeard MP4 Automator：自动将视频文件转成mp4的工具</code></pre><p>其实这些应用配合起来看起来很强大，但玩的有点懵逼。</p>
<p>如果你觉得你服务器空间不太够，可以配合<code>Rclone</code>/<code>Plexdrive</code>挂载远程存储一起使用，比如<code>Google Drive</code>，<code>Cloudbox</code>也是只建议使用<code>Gdrive</code>网盘，如果你没有无限空间的<code>Gdrive</code>，可以查看该文章免费申请一个→传送门。</p>
<h2 id="Cloudbox运作过程"><a href="#Cloudbox运作过程" class="headerlink" title="Cloudbox运作过程"></a>Cloudbox运作过程</h2><p><code>Cloudbox</code>通过<code>Sonarr</code>下载您最喜爱的电视节目，<code>Radarr</code>下载您喜爱的电影。两者都使用<code>Usenet</code>(通过<code>NZBGet</code>)和/或<code>Torrent</code>(通过<code>ruTorrent</code>)来完成。</p>
<p>下载完成后，<code>Sonarr</code>和<code>Radarr</code>会将这些下载内容移至服务器的<code>/mnt/local/Media/</code>文件夹，并向<code>Plex Autoscan</code>发送通知。</p>
<p>反过来，<code>Plex AutoScan</code>将通过扫描特定的视频文件夹告诉<code>Plex</code>扫描新下载的电视节目或电影。然后会更快地出现在<code>Plex</code>中，而不需要扫描全部的视频库，这样可以减少<code>Cloud Storage API</code>使用次数，导致被限制。</p>
<p><code>Cloudplow</code>最终会将所有内容从远程云存储上<code>/mnt/local/Media/</code>命名的文件夹移动<code>Media</code>，从而减少服务器上的存储空间。</p>
<p>在此迁移期间，媒体文件将继续可供媒体服务器(例如<code>Plex</code>)访问，因为远程云存储(例如<code>Google Drive</code>)将挂载在服务器上。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>一台国外的服务器，建议内存<code>2G</code>以上、硬盘的话官方是建议<code>200G</code>，这里的话<code>20G</code>以上就可以了，最好越大越好，内存不够的可以用下<code>Swap</code>一键脚本→传送门。</p>
<p>一个<code>Plex</code>账户，注册地址→传送门。</p>
<p>一个一级域名，并将该域名的<code>DNS</code>服务器迁移到<code>Cloudfare</code>，再解析类似<code>*.southcat.net</code>泛域名到服务器<code>ip</code>。</p>
<p>如果你不想迁移域名也可以，不过要解析多个二级域名到服务器<code>ip</code>，具体操作查看→传送门。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Cloudbox/Cloudbox" target="_blank" rel="noopener">https://github.com/Cloudbox/Cloudbox</a></p>
<p>支持系统：<code>Ubuntu 16.04</code>或<code>18.04</code>，仅限<code>64</code>位系统，这里<code>Debian</code>系统貌似也可以，不过最好是用<code>Ubuntu</code>，不然可能会有问题。</p>
<p><strong>1、新建用户</strong><br>这里别用<code>root</code>用户安装，不会会有部分应用可能用不了，所以需要新建一个普通用户，如果你有普通用户的可以跳过这一步。</p>
<pre><code>#新建moerats用户
useradd -m moerats
#获取sudo权限
usermod -aG sudo moerats
#设置密码等
passwd moerats
chsh -s /bin/bash moerats</code></pre><p><strong>2、安装依赖</strong><br>使用步骤<code>1</code>设置的普通用户登录<code>SSH</code>，使用命令：</p>
<pre><code>curl -s https://cloudbox.works/scripts/dep.sh | sudo -H sh; curl -s https://cloudbox.works/scripts/repo.sh | bash
或者
wget -qO- https://cloudbox.works/scripts/dep.sh | sudo -H sh; wget -qO- https://cloudbox.works/scripts/repo.sh | bash</code></pre><p><strong>3、编辑配置文件</strong></p>
<pre><code>cd ~/cloudbox
#编辑下载和备份目录，该配置可以默认
nano settings.yml

#编辑登录等信息
nano accounts.yml</code></pre><p><code>settings.yml</code>应该都看的懂，这里说下<code>accounts.yml</code>，大致参数意思如下：</p>
<pre><code>#user为普通用户名称，passwd为登录密码，也就是所有应用Web端登录信息
user: moerats
passwd: moeratspasswd
#domai为解析的一级域名
domain: southcat.net
#email和api为cloudfare的登录邮箱和api，api获取地址https://www.cloudflare.com/a/profile
email: admin@southcat.net
cloudflare_api_token: 4993d7315d
#plex用户名和密码
plex:
  user: 
  pass: 
#pushover为推送应用，这个如果你觉得配置麻烦，可以留空，不影响安装
pushover:
  app_token: ap36cqsi5w
  user_key: u2wtotir3
  priority: 1</code></pre><p>这里的<code>pushover</code>起到推送作用，就是一般在下载完成，备份完成等一些操作会自动推送给你，有安卓/<code>IOS</code>/桌面端，具体使用查看→传送门，这里的<code>token</code>和<code>key</code>貌似好填，这里只说下<code>priority</code>参数为通知优先级，不会设置的，建议设置为<code>1</code>，也就是高优先级，如果你希望你不要错过推送消息，那就设置<code>2</code>，不过<code>2</code>会一直打扰你，直到你点开消息为止。</p>
<p><strong>4、安装</strong></p>
<pre><code>#安装Cloudbox
sudo ansible-playbook cloudbox.yml --tags cloudbox

#安装Feederbox
sudo ansible-playbook cloudbox.yml --tags feederbox

#安装Mediabox
sudo ansible-playbook cloudbox.yml --tags mediabox</code></pre><p>安装的时候，使用<code>Cloudfare</code>的会自动给你解析好域名，并签发<code>SSL</code>证书。访问地址如下：</p>
<pre><code>Jackett：https://jackett.yourdomain.com
NZBGet：https://nzbget.yourdomain.com
NZBHydra2：https://nzbhydra2.yourdomain.com
Organizr：https://organizr.yourdomain.com
Plex：https://plex.yourdomain.com
WebTools for Plex*：http://plex.yourdomain.com:33400
Plexpy (Tautulli)：https://plexpy.yourdomain.com
Plex Requests：https://plexrequests.yourdomain.com
Portainer：https://portainer.yourdomain.com
Radarr：https://radarr.yourdomain.com
ruTorrent：https://rutorrent.yourdomain.com
Sonarr：https://sonarr.yourdomain.com</code></pre><p>其它可选安装：</p>
<pre><code>#安装Emby
sudo ansible-playbook cloudbox.yml --tags emby  

#安装Nextcloud
sudo ansible-playbook cloudbox.yml --tags nextcloud  

#安装Resilio Sync
sudo ansible-playbook cloudbox.yml --tags resilio-sync

#安装Plex Dupefinder
sudo ansible-playbook cloudbox.yml --tags plex_dupefinder

#安装Heimdall
sudo ansible-playbook cloudbox.yml --tags heimdall

#安装NZBHydra v1
sudo ansible-playbook cloudbox.yml --tags nzbhydra

#安装Plex Requests
sudo ansible-playbook cloudbox.yml --tags plexrequests </code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>操作之前需要先了解下服务器本地路径和<code>Google Drive</code>路径，这里以默认的<code>settings.yml</code>参数为参考。</p>
<pre><code>#Google云端硬盘路径
Media
├── Movies #电影文件夹
├── Music  #音乐文件夹
└── TV #电视文件夹

#本地路径
mnt
├──local
|  └── Media #存储在本地的媒体文件
├──remote
|  └── Media #存储在Google Drive的媒体文件
└──unionfs
   └── Media #Plex，Sonarr和Radarr在扫描媒体时读取的文件夹。</code></pre><p><code>Google Drive</code>上的文件夹需要我们自己建立，具体参考→传送门。</p>
<p>这里会定期检本地<code>local</code>路径的大小(默认为<code>30</code>分钟)。当文件夹大小达到其目标(默认为<code>200GB</code>)时，媒体文件将被移出/上传到云端，从而释放本地磁盘空间。</p>
<p>这里的默认阈值是可以修改的，编辑配置文件：</p>
<pre><code>sudo nano /opt/cloudplow/config.json</code></pre><p>检查时间间隔和默认值大致参数如下：</p>
<pre><code>&quot;uploader&quot;: {
    &quot;google&quot;: {
        &quot;check_interval&quot;: 30,
        &quot;exclude_open_files&quot;: true,
        &quot;max_size_gb&quot;: 200,
        &quot;opened_excludes&quot;: [
            &quot;/downloads/&quot;
        ],
        &quot;size_excludes&quot;: [
            &quot;downloads/*&quot;
        ]
    }</code></pre><p><code>check_interval</code>为时间间隔(默认分钟)，<code>max_size_gb</code>为大小(默认<code>G</code>)，建议最低<code>2G</code>。更多参数配置参考→传送门。</p>
<p>最后重启生效：</p>
<pre><code>sudo systemctl restart cloudplow</code></pre><p><strong>1、配置Rclone</strong><br>这里<code>Rclone</code>的作用大概就是将备份/媒体文件上传至<code>Google Drive</code>，使用命令：</p>
<pre><code>rclone config</code></pre><p><code>name</code>那里需要命名<code>google</code>，具体过程查看→传送门。</p>
<p><strong>2、配置Plexdrive</strong><br><code>Plexdrive</code>的作用就是让<code>Plex</code>从<code>Google Drive</code>读取媒体文件，利用缓存加快读取和减少<code>api</code>使用，先获取谷歌<code>API</code>凭据，获取步骤参考→传送门，然后使用命令：</p>
<pre><code>#先替换之前的plexdrive二进制，不然后面有个参数会不支持
wget https://github.com/dweidenfeld/plexdrive/releases/download/5.0.0/plexdrive-linux-amd64
mv plexdrive-linux-amd64 /opt/plexdrive4/plexdrive
chmod +x /opt/plexdrive4/plexdrive

#挂载配置
sudo /opt/plexdrive4/plexdrive mount -v 3 --refresh-interval=1m --chunk-check-threads=8 --chunk-load-threads=8 --chunk-load-ahead=4 --max-chunks=100 --fuse-options=allow_other,read_only --config=/opt/plexdrive4 --cache-file=/opt/plexdrive4/cache.bolt /mnt/remote</code></pre><p>然后会要你输入客户端<code>ID</code>和密匙，再打开获取到的链接绑定账号后，将自己获取到的<code>code</code>复制到<code>SSH</code>客户端确定即可。</p>
<p>新建一个<code>Systemd</code>配置文件，使用命令：</p>
<pre><code>sudo nano /etc/systemd/system/plexdrive.service</code></pre><p>先修改下面的用户和用户组，然后一起复制进去。</p>
<pre><code>[Unit]
Description=Plexdrive Mount
After=network-online.target mongodb.service

[Service]
User=moerats
Group=moerats
Type=simple
ExecStartPre=/bin/sleep 10
ExecStart=/opt/plexdrive4/plexdrive mount \
 --refresh-interval=1m \
 --chunk-size=16m \
 --fuse-options=allow_other,read_only \
 --config=/opt/plexdrive4 \
 --chunk-check-threads=4 \
 --chunk-load-threads=4 \
 --chunk-load-ahead=4 \
 --max-chunks=20 \
 -v 3 \
  /mnt/remote
ExecStop=/bin/fusermount -uz /mnt/remote
Restart=always
RestartSec=5

[Install]
WantedBy=default.target</code></pre><p>再使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>启动：</p>
<pre><code>sudo systemctl start plexdrive</code></pre><p>配置开机自启：</p>
<pre><code>sudo systemctl enable plexdrive</code></pre><p>查看状态：</p>
<pre><code>sudo systemctl status plexdrive</code></pre><p>显示<code>Active:active(running)</code>即为成功。</p>
<p>最后其它应用程序使用可以直接看<code>Github</code>，写的很详细了，地址参考：</p>
<pre><code>NZBGet：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-NZBGet
ruTorrent：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-ruTorrent
NZBHydra2：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-NZBHydra2
Jackett：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-Jackett
Plex Media Server：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-Plex-Media-Server
Plex Autoscan：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-Plex-Autoscan
Sonarr：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-Sonarr
Radarr：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-Radarr
PlexPy(Tautulli)：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-PlexPy-%28Tautulli%29
Ombi：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-Ombi
Portainer：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-Portainer
Organizr：https://github.com/Cloudbox/Cloudbox/wiki/Install%3A-Organizr
Emby：https://github.com/Cloudbox/Cloudbox/wiki/Extras%3A-Emby
Nextcloud：https://github.com/Cloudbox/Cloudbox/wiki/Extras%3A-Nextcloud
Resilio Sync：https://github.com/Cloudbox/Cloudbox/wiki/Extras%3A-Resilio-Sync
Plex Dupefinder：https://github.com/Cloudbox/Cloudbox/wiki/Extras%3A-Plex-Dupefinder
Heimdall：https://github.com/Cloudbox/Cloudbox/wiki/Extras%3A-Heimdall
NZBHydra v1：https://github.com/Cloudbox/Cloudbox/wiki/Extras%3A-NZBHydra
Plex Requests：https://github.com/Cloudbox/Cloudbox/wiki/Extras%3A-Plex-Requests
Sickbeard MP4 Automator：https://github.com/Cloudbox/Cloudbox/wiki/Extra%3A-Sickbeard-MP4-Automator</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>swizzin：一个轻量级的多用户SeedBox，一键安装网盘/BT下载/多媒体应用等</li>
<li>一个可以自动安装多网站程序的面板 ：YunoHost安装教程</li>
<li>qBittorrent+Deluge+rTorrent+Transmission+H5ai多功能一键脚本</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CRZ.im：一个十分简洁的网址缩短服务，带源码安装教程</title>
    <url>/2077/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>CRZ.im</code>是一个网址缩短服务的网站，所用的源码基于<code>PHP</code>、<code>SQLite</code>进行开发，总大小仅<code>10K</code>左右，十分轻巧。</p>
<p><strong>演示地址：</strong><a href="https://crz.im/" target="_blank" rel="noopener">https://crz.im/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/CRZ.im.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>搭建好<code>Web</code>环境，可以使用宝塔面板，或者<code>LNMP</code>一键包，只需要安装<code>Nginx</code>、<code>PHP</code>即可。</p>
<p>然后解析好域名，上传程序源码到网站根目录，源码下载：Github、本地下载。</p>
<p>接下来设置<code>Nginx</code>伪静态，在网站配置文件中添加以下代码：</p>
<pre><code>#root后面为网站根目录
location / {
  try_files $uri $uri/ =404;
  rewrite (\d+|\w+)$ /index.php?id=$1;

  location ^~ /asset/ {
    root /var/www/xx.com;
  }

  location ^~ /api/ {
    root /var/www/xx.com;
  }

  location ^~ /inc/ {
    return 403;
   }
  }</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CuteOne：一款基于Python3的OneDrive多网盘挂载程序，带会员/同步等功能</title>
    <url>/2388/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在<code>OneDrive</code>挂载目录程序越来越多了，之前水了很多了，包括PyOne、OneIndex、OLAINDEX和OneList，近期又出现了个<code>CuteOne</code>，一个基于<code>Python3</code>的<code>OneDrive</code>多网盘挂载程序，功能的话，看起来还是挺不错的，支持多盘负载、在线查看、在线上传、下载、多网盘同步、主从同步、在线分享、文件夹权限管理、会员功能、等级制度、付费查看、密码查看、支付模块、主题切换、极速缓存。至于体验的话，可能暂时会差点，毕竟才出来不到一个月的项目，不过看得出来作者也是有理想的人，所以会长期维护更新，让其越来越好，这里就大概介绍下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/CuteOne(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/CuteOne(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/CuteOne(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/CuteOne(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/CuteOne(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能简述"><a href="#功能简述" class="headerlink" title="功能简述"></a>功能简述</h2><pre><code>#驱动列表
其实驱动列表你们把他当成一个分类即可，可是为啥里面可以添加很多网盘呢？
那么重点来了，因为有负载切换的功能，当你一个网盘很多人在看这个网盘的同一个视频
可能会变慢，我猜的； 所以可以切换到另外一个网盘里面的相同资源看，实现切换线路；
然后这么设计是也是为了资源备份用的，意思就是这个驱动列表下的所有网盘内容需要保持一致；
如果不一致，那么就没办法切换负载。

#主从备份
主从备份的功能就是给驱动下的所有网盘进行同步，但是前提是驱动下只能有一个主盘，别的都是从盘；
因为主从备份是拉取主盘的内容，备份到从盘里的； 所以你们可以在主盘里面看到上传按钮，而从盘没有；
这个功能是预防你们网盘被封，然后有备份盘当做备用；这也是一个卖资源盘的办法。

#权限管理
权限管理其实就是给文件夹设置密码啦；
然后你们可以看到还有群组管理，这个是干啥的呢？嗯，就是设置VIP的意思，就是这个群组可以免密查看你加密的文件路径。

#会员管理
会员管理顾名思义啦，他还有一个功能是和权限管理的群组是挂钩的，意思就是会员你可以给他分配群组，
也就是所谓的VIP制度，让会员可以免密查看一些加密的文件夹。

#文件管理
因为有了会员，所以想给会员也能上传文件，然后分享，所以出了这个会员的文件管理，这里可以单独给会员设置存储盘，会员上传的文件就会在这个里面。

#任务管理
这个就是你在驱动列表的网盘里面上传了文件，这里可以看到那个文件当前的同步状态而已。

#开始同步和更新缓存
开始同步只有你点击管理了之后 进入驱动下的网盘列表，你才看到这个按钮，因为他是用来主从备份的，你不需要主从备份，你就别按他；

更新缓存，如果你不更新缓存，你会发现你前端没有文件，这个其实就是拉取一下最新的数据而已。

#文件地址的缓存周期
OneDrive的文件地址是有时效性的，大概五分钟这样吧，所以我这边使用里类推模式来更新地址缓存，什么是类推，就是当这个文件五分钟内有人访问一次，
数据库就会是最新文件的地址，以此类推，如果文件热度很高，地址是一直是最新的，如果热度低，只要有一个人访问，地址就会缓存到最新的到数据库。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Hackxiaoya/CuteOne" target="_blank" rel="noopener">https://github.com/Hackxiaoya/CuteOne</a></p>
<p><strong>环境需求：</strong><code>Python3</code>、<code>Mysql &gt;= 5.5</code>、<code>MongoDB</code>、<code>Nginx</code>/<code>Apache</code>。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>Mysql</code>、<code>Mongodb</code>、<code>Nginx</code>。且<code>Debian</code>安装<code>MongoDb</code>之前还需要使用命令<code>apt install sudo</code>，不然可能存在<code>MongoDb</code>启动不了的情况。</p>
<p>安装完成后再点击左侧数据库-添加数据库，设置好<code>Mysql</code>数据库信息。</p>
<p><strong>2、安装Python3</strong></p>
<pre><code>#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh
#Ubuntu系统
apt update
apt install python3-pip python3-setuptools python3-dev python3-wheel build-essential -y</code></pre><p><strong>3、安装依赖</strong></p>
<pre><code>wget https://github.com/Hackxiaoya/CuteOne/archive/dev.zip  
unzip dev.zip
mv CuteOne-dev CuteOne
cd CuteOne
pip3 install -r requirements.txt</code></pre><p><strong>4、运行程序</strong><br>这里没用作者提供的<code>uwsgi</code>方式运行，换成了<code>gunicorn</code>，使用命令：</p>
<pre><code>pip3 install gunicorn
gunicorn app:app -b 0.0.0.0:8000</code></pre><p>然后再访问<code>http://ip:8000/install</code>进行安装。如果打不开该地址的，点击宝塔面板左侧安全-放行<code>8000</code>端口。<br><img src="https://www.southcat.net/usr/picture/CuteOne(6).png" alt="请输入图片描述" title="请输入图片描述"><br>记得安装的时候<code>MongoDB</code>默认没有设置用户名密码，所以填写<code>Mongodb</code>的时候，直接留空下一步。</p>
<p>安装完成后，使用<code>Ctrl+C</code>断开运行，再使用命令后台运行：</p>
<pre><code>gunicorn app:app -b 127.0.0.1:8000 -D</code></pre><p>接下来我们需要使用域名反代并添加<code>SSL</code>，不然访问会有点问题。</p>
<p><strong>5、域名反代</strong><br>点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:8000</code>，再启用反向代理，然后点击<code>SSL</code>，申请免费的<code>Let&#39;s Encrypt</code>证书，并强制<code>HTTPS</code>。</p>
<p>接下来再点击配置文件，进行如下修改：</p>
<pre><code>#加上中间三句
location / 
    {
        ...

        proxy_buffering off;
        proxy_cache off;
        proxy_set_header X-Forwarded-Proto $scheme;

        ...
    }</code></pre><p>此时就可以直接通过域名访问了，首先前台是访问不了的，需要先访问<code>https://domain.com/admin</code>，然后添加驱动，添加的时候设置成默认主页，不然首页打开会有问题。<br><img src="https://www.southcat.net/usr/picture/CuteOne(7).png" alt="请输入图片描述" title="请输入图片描述"><br>再点击驱动管理-添加网盘。<br><img src="https://www.southcat.net/usr/picture/CuteOne(8).png" alt="请输入图片描述" title="请输入图片描述"><br>填入相关信息绑定网盘，注意<code>code</code>那里填<code>code=</code>和<code>&amp;</code>之间的代码。<br><img src="https://www.southcat.net/usr/picture/CuteOne(9).png" alt="请输入图片描述" title="请输入图片描述"><br>再点击驱动管理的更新缓存即可，然后就可以访问首页了。</p>
<p>这里要注意的是，一般用户注册的时候，上传文件是会有问题的，管理员需要在<code>CuteOne</code>后台，编辑用户，将用户的<code>用户文件盘</code>改成添加网盘的<code>ID</code>即可，这样用户上传文件后，会保存在相应的<code>OneDrive</code>网盘，并且保存的文件夹以用户<code>ID</code>命名。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>CyberPanel汉化版一键安装脚本+整合whmcs，支持PHP5.3-7.1</title>
    <url>/1724/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>CyberPanel</code>是一款功能强大的<code>web</code>面板，界面也很好看，挺好用的，之前也介绍过了，请参考：一款基于OpenLiteSpeed的web管理面板：CyberPanel安装教程，不过对于英语不是很好的人来说，面对全英文面板还是有点不方面的，这里发个由皮皮虾窝汉化过的<code>CyberPanel</code>面板安装教程。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>【2018年1月6日】<br>官方终于替换了谷歌<code>js</code>。为了适配国内机子，替换了<code>pip MariaDB openlitespeed</code>源 加速国内<code>VPS</code>安装速度，增加了一键开启<code>openlitespeed</code>控制台功能<br>【2017年10月30号】<br>修改登录页面以及主页面谷歌js库为其他库，跟随官方更新新内容。官方已经提供中文版本，脚本增加替换/还原<code>JS</code>功能，默认语言切换为<code>CN</code>，自定义初始密码，卸载面板，更新面板。<br>【2017年10月16号】<br>听说<code>CyberPanel</code>支持<code>whmcs</code>了特地更新了一下博客以前的汉化包，由于<code>CyberPanel</code>作者已经更新（有点大），所以以前的包已经不支持了，所以更新成了只汉化页面，而不是替换全部安装包。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/CyberPanelhh(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/CyberPanelhh(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>运行以下命令：</p>
<pre><code>wget http://www.southcat.net/usr/shell/CyberPanel/CyberPanel.sh
bash CyberPanel.sh</code></pre><p>运行脚本后会出现如下选项：<br><img src="https://www.southcat.net/usr/picture/CyberPanelhh(3).png" alt="请输入图片描述" title="请输入图片描述"><br>根据需求安装完成后进入地址: <code>https://IP:8090</code>，使用用户名: <code>admin</code>，密码: <code>1234567</code>登录即可。</p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p><strong>虚拟主机</strong></p>
<pre><code>/usr/local/lsws/conf/vhosts/&lt;域名&gt;</code></pre><p><strong>FTP</strong></p>
<pre><code>/etc/pure-ftpd /etc/pure-ftpd/pure-ftpd.conf</code></pre><p><strong>Litespeed</strong></p>
<pre><code>/usr/local/lsws/conf/httpd_config.conf /usr/local/lsws/conf/phpconfigs/php53.conf /usr/local/lsws/conf/phpconfigs/php54.conf /usr/local/lsws/conf/phpconfigs/php55.conf /usr/local/lsws/conf/phpconfigs/php56.conf /usr/local/lsws/conf/phpconfigs/php70.conf</code></pre><p><strong>DNS目录</strong></p>
<pre><code>/etc/nsd /etc/nsd/nsd.conf /usr/local/lsws/conf/zones/&lt;域名&gt;</code></pre><h2 id="整合Whmcs注意事项"><a href="#整合Whmcs注意事项" class="headerlink" title="整合Whmcs注意事项"></a>整合Whmcs注意事项</h2><p>首先创建文件夹<code>cybercpanel</code>一定要是小写，完整的名字。</p>
<p>上传官方插件到<code>/module/server/cyberpanel/</code>并解压。插件地址：点击进入。</p>
<p>添加服务器，勾选<code>SSL</code>否则连接不通，帐号密码可以为分销帐号也可以为主管理账号。</p>
<p>创建产品包，名字为英文，<code>Whmcs</code>中填写为帐号_包名，比如你用<code>admin</code>帐号创建<code>Test</code>包，则<code>Whmcs</code>中应填：<code>admin_Test</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Database.NET：一个好用的多数据库管理工具</title>
    <url>/1714/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Database .NET</code>是一个功能强大的数据库管理工具，支持管理<code>SQLite</code>、<code>Mysql</code>、<code>SQL Server</code>等多种不同数据库，支持多种语言，绿色免安装。该管理工具也支持包含数据库对象浏览，数据表与索引编修，数据列编辑，<code>SQL</code>分析与调试，脚本生成，图像化，打印，汇入，输出等多方面处理。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Database.NET(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><code>Database.NET</code>分免费版和专业版，详细的对比如下：<br><img src="https://www.southcat.net/usr/picture/Database.NET(2).png" alt="请输入图片描述" title="请输入图片描述"><br>通过对比，免费版已经足够我们的日常使用了，建议有需求的可以试试。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian 9/10快速开启Google BBR的方法，实现高效单边加速</title>
    <url>/1699/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Google BBR</code>刚出来的时候，一键包都还没出来，都是手动把内核换到<code>4.9</code>以上，从而开启<code>BBR</code>加速，方法可参考：使用Google BBR拥塞算法加速TCP教程，由于 <code>Debian 9</code>默认的就是<code>4.9</code>的内核而且编译了<code>TCP BBR</code>的内容，所以可以直接通过参数开启。</p>
<pre><code>提示：目前最新版Debian 10内核为4.19，也可以直接用该方法开启BBR。</code></pre><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、修改系统变量</strong></p>
<pre><code>echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf
echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf</code></pre><p><strong>2、保存生效</strong></p>
<pre><code>sysctl -p</code></pre><p><strong>3、查看内核是否已开启BBR</strong></p>
<pre><code>sysctl net.ipv4.tcp_available_congestion_control</code></pre><p>显示以下即已开启：</p>
<pre><code># sysctl net.ipv4.tcp_available_congestion_control
net.ipv4.tcp_available_congestion_control = bbr cubic reno</code></pre><p><strong>4、查看BBR是否启动</strong></p>
<pre><code>lsmod | grep bbr


# lsmod | grep bbr
tcp_bbr                20480  14</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian快速安装MariaDB Server教程</title>
    <url>/1701/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>MariaDB</code>数据库管理系统是<code>MySQL</code>的一个分支，主要由开源社区在维护，采用<code>GPL</code>授权许可<code>MariaDB</code>的目的是完全兼容<code>MySQL</code>，包括<code>API</code>和命令行，使之能轻松成为<code>MySQL</code>的代替品。</p>
<p><code>MariaDB</code>、<code>MySQL</code>这样的数据库编译非常耗时而且编译很容易出错，所以使用编译好的版本无疑是最好的，设置页非常的方便。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>MariaDB</code>的软件源由官方提供，程序的质量和安全绝对是毋庸置疑的。</p>
<p><strong>本教程适用于：</strong><code>Debian 8</code>(<code>Jessie</code>)支持安装<code>10.0</code>～最新，<code>Debian 9</code>(<code>stretch</code>)支持安装<code>10.1</code>～最新。</p>
<p>教程以<code>10.2</code>版本为例，其他版本只需将下面的<code>10.2</code>修改为<code>10.1 10.0</code>即可。</p>
<pre><code>apt-get install software-properties-common
apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8add-apt-repository &apos;deb [arch=amd64] http://mirrors.tuna.tsinghua.edu.cn/mariadb/repo/10.2/debian stretch main&apos;
apt update
apt install mariadb-server</code></pre><p>安装过程中，这里会提示设置数据库<code>Root</code>密码，需要连续输入两次。</p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>输入下面的命令，关闭一些不安全的设置：</p>
<pre><code>mysql_secure_installation </code></pre><p>首先输入密码，然后一路<code>y</code>即可。</p>
<pre><code>Enter current password for root (enter for none):
解释：输入当前 root 用户密码，默认为空，直接回车。
Set root password? [Y/n]  y
解释：要设置 root 密码吗？输入 y 表示愿意。
Remove anonymous users? [Y/n]  y
解释：要移除掉匿名用户吗？输入 y 表示愿意。
Disallow root login remotely? [Y/n]  y
解释：不想让 root 远程登陆吗？输入 y 表示愿意。
Remove test database and access to it? [Y/n]  y
解释：要去掉 test 数据库吗？输入 y 表示愿意。
Reload privilege tables now? [Y/n]  y
解释：想要重新加载权限吗？输入 y 表示愿意。</code></pre><h2 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h2><pre><code>systemctl restart mysql #重启
systemctl start mysql #启动
systemctl stop mysql #关闭
systemctl status mysql #检查状态</code></pre><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>apt update
apt upgrade -y</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian 9/Ubuntu 17+添加rc.local开机自启的方法</title>
    <url>/2095/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多时候有些程序或者脚本都需要添加开机自启，最简单的方法就是使用<code>rc.local</code>自启，不过由于系统版本更替，很多新版本系统都没有<code>rc.local</code>文件了，比如<code>Debian 9</code>、<code>Ubuntu 17.10</code>、<code>Ubuntu 18.04</code>。这时候就需要我们手动设置下。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、添加rc-local.service</strong></p>
<pre><code>#以下为一整条命令，一起复制运行
cat &gt; /etc/systemd/system/rc-local.service &lt;&lt;EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF</code></pre><p><strong>2、新建rc-local文件</strong></p>
<pre><code>#以下为一整条命令，一起复制运行
cat &gt; /etc/rc.local &lt;&lt;EOF
#!/bin/sh
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will &quot;exit 0&quot; on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

exit 0
EOF</code></pre><p><strong>3、添加权限并设置开机自启</strong></p>
<pre><code>chmod +x /etc/rc.local
systemctl enable rc-local
systemctl start rc-local.service</code></pre><p>检查状态：</p>
<pre><code>systemctl status rc-local.service</code></pre><p>返回<code>Active:active</code>信息，则成功。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian免编译快速安装PHP(v5.6,v7.0,v7.1)教程</title>
    <url>/1700/</url>
    <content><![CDATA[<p><strong>说明：</strong>这里安装<code>PHP</code>将完全不编译任何组件，完全依赖软件源安装。提供<code>PHP</code>软件源的<code>Ondřej Surý</code>大神是<code>Debian</code>社区中<code>PHP</code>源的维护者，所以无需担心软件的安全和性能问题肯定比我们自己编译更好，软件源安装的<code>PHP</code>默认以<code>Unix Socket</code>的状态运行在<code>/run/php/php7.1-fpm.sock</code>，比使用<code>TCP</code>以<code>localhost:9000</code>的方式性能更好。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>适用系统：</strong><code>Debian 9</code>/<code>Debian 8</code></p>
<p><strong>1、安装软件源拓展</strong><br><code>Sury</code>官方默认源：<a href="https://packages.sury.org/php/" target="_blank" rel="noopener">https://packages.sury.org/php/</a><br>镜像源：<a href="https://mirror.xtom.com.hk/sury/php/" target="_blank" rel="noopener">https://mirror.xtom.com.hk/sury/php/</a></p>
<p>添加<code>GPG</code></p>
<pre><code>wget -O /etc/apt/trusted.gpg.d/php.gpg https://mirror.xtom.com.hk/sury/php/apt.gpg </code></pre><p>安装<code>apt-transport-https</code></p>
<pre><code>apt-get install apt-transport-https</code></pre><p>添加<code>sury</code>软件源</p>
<pre><code>sh -c &apos;echo &quot;deb https://packages.sury.org/php/ $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/php.list&apos;  </code></pre><p>更新软件源缓存</p>
<pre><code>apt-get update</code></pre><p><strong>2、安装PHP</strong><br>安装<code>PHP7.1</code>：</p>
<pre><code>apt install php7.1-fpm php7.1-mysql php7.1-curl php7.1-gd php7.1-mbstring php7.1-mcrypt php7.1-xml php7.1-xmlrpc php7.1-zip php7.1-opcache -y</code></pre><p>安装<code>PHP7.0</code>：</p>
<pre><code>apt install php7.0-fpm php7.0-mysql php7.0-curl php7.0-gd php7.0-mbstring php7.0-mcrypt php7.0-xml php7.0-xmlrpc php7.0-zip php7.0-opcache -y</code></pre><p>安装<code>PHP5.6</code>：</p>
<pre><code>apt install php5.6-fpm php5.6-mysql php5.6-curl php5.6-gd php5.6-mbstring php5.6-mcrypt php5.6-xml php5.6-xmlrpc php5.6-zip php5.6-opcache -y</code></pre><p><strong>3、设置PHP</strong><br>这里以<code>PHP7.1</code>为例，其他版本仅需将版本号改成自己所用的即可。<br>安装完成后，编辑<code>/etc/php/7.1/fpm/php.ini</code>替换<code>;cgi.fix_pathinfo=1</code>为<code>cgi.fix_pathinfo=0</code>。<br>快捷命令：</p>
<pre><code>sed -i &apos;s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/&apos; /etc/php/7.1/fpm/php.ini </code></pre><p><strong>4、管理PHP</strong><br>安装好了先重启一下！<br>更多操作：</p>
<pre><code>systemctl restart php7.1-fpm #重启
systemctl start php7.1-fpm #启动
systemctl stop php7.1-fpm #关闭
systemctl status php7.1-fpm #检查状态</code></pre><p>查看当前<code>PHP</code>版本：</p>
<pre><code>php -v</code></pre><p><strong>5、更新PHP</strong><br>运行下面的命令系统就会更新所有可以更新的软件包括<code>PHP</code>：</p>
<pre><code>apt update
apt upgrade -y</code></pre><p><strong>6、安装更多组件</strong><br>上面的一条命令安装<code>PHP</code>只是安装了部分<code>PHP</code>拓展，更多的软件可见：</p>
<pre><code>root@Rats:~# apt-cache search php7.1
libapache2-mod-php7.1 - server-side, HTML-embedded scripting language (Apache 2 module)
php-all-dev - package depending on all supported PHP development packages
php7.1 - server-side, HTML-embedded scripting language (metapackage)
php7.1-cgi - server-side, HTML-embedded scripting language (CGI binary)
php7.1-cli - command-line interpreter for the PHP scripting language
php7.1-common - documentation, examples and common module for PHP
php7.1-curl - CURL module for PHP
php7.1-dev - Files for php7.1 module development
php7.1-gd - GD module for PHP
php7.1-gmp - GMP module for PHP
php7.1-json - JSON module for PHP
php7.1-ldap - LDAP module for PHP
php7.1-mysql - MySQL module for PHP
php7.1-odbc - ODBC module for PHP
php7.1-opcache - Zend OpCache module for PHP
php7.1-pgsql - PostgreSQL module for PHP
php7.1-pspell - pspell module for PHP
php7.1-readline - readline module for PHP
php7.1-recode - recode module for PHP
php7.1-snmp - SNMP module for PHP
php7.1-sqlite3 - SQLite3 module for PHP
php7.1-tidy - tidy module for PHP
php7.1-xml - DOM, SimpleXML, WDDX, XML, and XSL module for PHP
php7.1-xmlrpc - XMLRPC-EPI module for PHP
libphp7.1-embed - HTML-embedded scripting language (Embedded SAPI library)
php7.1-bcmath - Bcmath module for PHP
php7.1-bz2 - bzip2 module for PHP
php7.1-enchant - Enchant module for PHP
php7.1-fpm - server-side, HTML-embedded scripting language (FPM-CGI binary)
php7.1-imap - IMAP module for PHP
php7.1-interbase - Interbase module for PHP
php7.1-intl - Internationalisation module for PHP
php7.1-mbstring - MBSTRING module for PHP
php7.1-mcrypt - libmcrypt module for PHP
php7.1-phpdbg - server-side, HTML-embedded scripting language (PHPDBG binary)
php7.1-soap - SOAP module for PHP
php7.1-sybase - Sybase module for PHP
php7.1-xsl - XSL module for PHP (dummy)
php7.1-zip - Zip module for PHP
php7.1-dba - DBA module for PHP</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian系统环境精简优化</title>
    <url>/1501/</url>
    <content><![CDATA[<p><strong>提示：</strong>在操作这些步骤最好是在我们刚重装系统，而不是在已经运行网站中优化机器，以免出现机器问题。</p>
<p><strong>升级Debian系统</strong></p>
<pre><code>apt-get update&amp;&amp;apt-get upgrade</code></pre><p><strong>移除多余的软件</strong></p>
<pre><code>apt-get -y purge apache2-* bind9-* xinetd samba-* nscd-* portmap sendmail-* sasl2-bin</code></pre><p>对于这些被移除软件的说明：</p>
<pre><code>apache2-* //apache服务器,一般我们自己会用一键安装包安装
bind9-* //我们不需要用VPS搭建DNS,所以去掉
xinetd //xinetd是服务守护进程
samba-* //samba能让linux使用windows共享功能，不需要
nscd-* //DNS缓存软件，同bind9，不需要
portmap //端口转发，一般Web服务器不需要
sendmail-* //发送邮件用，如果有需要保留
sasl2-bin //一个权限程序，占用资源，删除</code></pre><p><strong>删除多余组件</strong></p>
<pre><code>apt-get -y purge lynx memtester unixodbc python-* odbcinst-* sudo tcpdump ttf-*</code></pre><p><strong>清理缓存文件</strong></p>
<pre><code>apt-get autoremove &amp;&amp; apt-get clean</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian/Ubuntu/CentOS安装Git教程</title>
    <url>/1616/</url>
    <content><![CDATA[<p><strong>说明：</strong>通常<code>Git</code>是所有主要的<code>Linux</code>发行版本都附带的功能。因此，安装<code>Git</code>的最简单的方法是使用您的<code>Linux</code>发行版的包管理器，可以直接进行安装。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>Debian</code>和<code>Ubuntu</code>系统</p>
<pre><code>apt-get install git


yum install git</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian/Ubuntu/CentOS安装最新版的Node.js和NPM教程</title>
    <url>/1733/</url>
    <content><![CDATA[<p><strong>说明：</strong>刚刚在TeleShellBot：通过Telegram机器人远程执行shell命令这个教程里谈到了<code>npm</code>命令，所以就说下。按照官方（<code>www.npmjs.com</code>）的说法，<code>npm</code>与<code>Node.js</code>一起存在，这意味着当您下载并安装<code>Node.js</code>时，您会自动在计算机上安装<code>npm</code>。所以这里我们只需要安装<code>Node.js</code>即可。其实之前发过这样的教程，只是没有写<code>Centos</code>系统，所以这里又拿出来说一次，包括<code>Centos</code>系统，目前最新的<code>Node.js</code>版本为<code>10.x</code>这里说下安装方法。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>Node.js</code>官方<code>GitHub</code>地址：<a href="https://github.com/nodesource/distributions" target="_blank" rel="noopener">https://github.com/nodesource/distributions</a></p>
<p><code>Ubuntu</code>系统</p>
<pre><code>curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
sudo apt-get install -y nodejs</code></pre><p><code>Debian</code>系统</p>
<pre><code>curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt-get install -y nodejs</code></pre><p><code>Centos</code>系统</p>
<pre><code>curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs -y


node -v
npm -v</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian/Ubuntu一键安装Transmission并美化Web界面来进行BT下载</title>
    <url>/1588/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Transmission</code>是一种<code>BitTorrent</code>客户端，之前发布过<code>Transmission+h5ai</code>一键安装教程，不过很多人只喜欢单独安装<code>Transmission</code>，就使用<code>Caddy</code>整了个<code>Transmission</code>美化版脚本，功能包括在线查看<code>Transmission</code>当前工作情况；在线添加新的种子文件或连接；在线修改<code>Transmission</code>参数；分页浏览方式加载种子；多语言环境支持；文件拖放添加种子；删除指定的种子；批量修改<code>Tracker</code>；移动指定种子的数据存放目录；可按 <code>Trackers</code>分组浏览；等等。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/bt(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Debian 8+</code>、<code>Ubuntu 16.04+</code></p>
<p><strong>使用命令：</strong></p>
<pre><code>wget https://www.southcat.net/usr/shell/debian-transmission.sh &amp;&amp; bash debian-transmission.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian/Ubuntu使用update-rc.d命令添加/禁止开机启动项</title>
    <url>/2042/</url>
    <content><![CDATA[<p><strong>说明：</strong>常用的<code>Linux</code>启动项就是在<code>/etc/rc.local</code>的<code>exit 0</code>语句之间添加启动脚本，这里说下另一种方法，使用<code>update-rc.d</code>命令添加/禁止开机启动项，挺好用的。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre><code>#将脚本添加开机自启，先放入/etc/init.d文件夹，并给予可执行权限
mv xx.sh /etc/init.d
chmod +x  /etc/init.d/xx.sh

#设置开机自启
update-rc.d xx.sh defaults

#删除开机自启
update-rc.d -f xx.sh remove

#如果你想禁止程序开机自启，比如apache2、nginx
update-rc.d -f apache2 remove
update-rc.d -f nginx remove</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian/Ubuntu开启超级暴力版魔改BBR教程</title>
    <url>/1973/</url>
    <content><![CDATA[<p><strong>说明：</strong>超级暴力版魔改<code>BBR</code>源码由南琴浪大佬提供，具体有多暴力博主暂时没怎么测试，这里只说下安装教程。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Debian/Ubuntu</code>系统，内核版本<code>v4.9.3</code>-<code>v4.12.x</code>。得安装<code>gcc</code>，<code>Makefile</code>默认只支持<code>gcc 6</code>，你可以修改它（例如）<code>gcc-4.9</code>。</p>
<p><strong>1、更换内核并开启BBR</strong><br>这里手动安装，方法从<code>BBR</code>刚出来时就在博客说过，这里再说一次。内核下载地址：<a href="http://kernel.ubuntu.com/~kernel-ppa/mainline/。且魔改`BBR`需要`3`个内核`linux-image`、`linux-headers-all`、`linux-headers-$bit`，这里以`v4.10.1`为例。" target="_blank" rel="noopener">http://kernel.ubuntu.com/~kernel-ppa/mainline/。且魔改`BBR`需要`3`个内核`linux-image`、`linux-headers-all`、`linux-headers-$bit`，这里以`v4.10.1`为例。</a></p>
<p>内核下载</p>
<pre><code>#64位系统
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-headers-4.10.1-041001-generic_4.10.1-041001.201702260735_amd64.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-headers-4.10.1-041001_4.10.1-041001.201702260735_all.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-image-4.10.1-041001-generic_4.10.1-041001.201702260735_amd64.deb

#32位系统
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-headers-4.10.1-041001-generic_4.10.1-041001.201702260735_i386.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-headers-4.10.1-041001_4.10.1-041001.201702260735_all.deb
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.1/linux-image-4.10.1-041001-generic_4.10.1-041001.201702260735_i386.deb</code></pre><p>内核安装，且安装顺序不要变，依次<code>image</code>、<code>headers_all</code>、<code>headers</code>，不然会出错。</p>
<pre><code>dpkg -i linux-image-4.10.1-041001-generic_4.10.1-041001.201702260735_i386.deb
dpkg -i linux-headers-4.10.1-041001_4.10.1-041001.201702260735_all.deb
dpkg -i linux-headers-4.10.1-041001-generic_4.10.1-041001.201702260735_i386.deb</code></pre><p>查看内核</p>
<pre><code>dpkg -l|grep linux-image
dpkg -l|grep linux-headers</code></pre><p>删除旧内核</p>
<pre><code>apt-get purge （旧内核名称）</code></pre><p>内核更新</p>
<pre><code>update-grub</code></pre><p>重启</p>
<pre><code>reboot</code></pre><p>保存生效</p>
<pre><code>echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf
echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf
sysctl -p</code></pre><p>查看内核是否已开启<code>BBR</code></p>
<pre><code>sysctl net.ipv4.tcp_available_congestion_control</code></pre><p>显示以下即启动成功</p>
<pre><code># lsmod | grep bbr
tcp_bbr                20480  14</code></pre><p><strong>2、安装超级暴力版魔改BBR</strong><br>安装环境</p>
<pre><code>apt install -y gcc git make</code></pre><p>下载暴力魔改<code>BBR</code>源码</p>
<pre><code>git clone https://github.com/nanqinlang/tcp_nanqinlang-test.git</code></pre><p>查看<code>/usr/bin</code>文件夹<code>gcc</code>文件。</p>
<pre><code>find /usr/bin/gcc*</code></pre><p>此时可以看到几个文件，找到<code>gcc-5</code>，也可以是<code>6</code>，具体自己看着办。如果没看到<code>gcc-6</code>，则需要编辑<code>Makefile</code>文件。</p>
<pre><code>cd tcp_nanqinlang*
nano Makefile</code></pre><p>将<code>modules CC=/usr/bin/gcc-6</code>后面的<code>gcc</code>修改成刚刚看到的<code>gcc</code>版本文件，如<code>gcc-5</code>。</p>
<p>安装暴力魔改<code>BBR</code></p>
<pre><code>make
make install</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Debian/Ubuntu快速安装Node.js v8.x及其它版本方法</title>
    <url>/1586/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候我们运行某个软件需要用到<code>Node.js</code>环境，而系统也没有装，这时候我们需要自己安装了，这里说下快速安装方法。</p>
<p><strong>1、升级系统源和安装需要的软件</strong></p>
<pre><code>apt-get update -y
apt-get install -y build-essential curl</code></pre><p><strong>2、安装Node.js最新版本v8.x</strong><br><code>Node.js</code>官方<code>GitHub</code>地址：<a href="https://github.com/nodesource/distributions" target="_blank" rel="noopener">https://github.com/nodesource/distributions</a></p>
<pre><code># Ubuntu系统
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
sudo apt-get install -y nodejs

# Debian系统
curl -sL https://deb.nodesource.com/setup_8.x | bash -
apt-get install -y nodejs</code></pre><p><strong>3、查看当前Node.js版本</strong></p>
<pre><code>node -v</code></pre><p>通过查看，我们可以看到当前<code>Node.js</code>是最新的<code>v8.x</code>版本。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Declaració del lloc web</title>
    <url>/503/</url>
    <content><![CDATA[<p>(1) Aquest lloc està pensat per proporcionar més informació als usuaris, el servei és gratuït, no vol donar endavant a les seves opinions ni confirmar l’autenticitat del seu contingut, la precisió dels enllaços externs que el lloc no proporciona als usuaris i Integritat garanteix que l’enllaç extern apunta al contingut de qualsevol pàgina web no controlada pel lloc. El lloc web no es fa responsable de la seva legalitat i no assumeix cap responsabilitat legal.Tots els continguts d’aquest lloc web no indiquen aquest lloc web. Vista o opinió. (2) Aquest lloc web pertany a un lloc web sense ànim de lucre individual. L’article reeditat segueix la declaració de copyright de l’autor original. Si el text original no té un avís de copyright, segons el principi actual d’obertura a Internet, reimprimirem l’article sense notificar l’autor; El text original indica clarament que “la reproducció està prohibida”, no la reimprimirem. Si l’article que imprimim no compleix l’avís de copyright de l’autor o l’autor no vol que reimprimim el vostre article, envieu un correu electrònic a: <a href="mailto:admin@southcat.net">admin@southcat.net</a>   (3) Els drets d’autor dels articles publicats i reimpressos en aquest lloc web són propietat de l’autor original. Si altres suports, llocs web o individus els descarreguen i usen des d’aquest lloc web, respecteu els drets d’autor dels articles en reimprimir els articles. Indiqueu la “font del manuscrit” i assumiu la responsabilitat legal dels drets d’autor.   [declaració de copyright]</p>
<ol>
<li><p>Seguiu les normes de la indústria, qualsevol manuscrit reimprès identificarà clarament l’autor i la font;  </p>
</li>
<li><p>Per a l’article original d’aquest lloc, si necessiteu reimprimir-lo, assegureu-vos d’indicar l’autor i la font de l’article.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>Debian/Ubuntu系统安装Transmission+h5ai实现离线BT下载</title>
    <url>/1549/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Transmission</code>是一种<code>BitTorrent</code>客户端，是一个跨平台的后端和其上的简洁的用户界面，硬件资源消耗极少，所以受到了很多人喜欢。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/bt(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/bt(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>1、<code>Transmission</code>：下载<code>.torrent</code>文件。<br>2、<code>h5ai</code>：用于显示目录的<code>PHP</code>程序。<br>3、此<code>Linux Shell</code>会自动安装<code>PHP</code>,<code>Transmission</code>,<code>Nginx</code>等相关程序，并根据用户输入的数据进行配置程序。<br>4、适用于<code>Debian8+</code>、<code>Ubuntu16.04+</code>系统，已在<code>Debian8</code>上顺利通过测试。</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>1、为了能顺利安装，请使用纯净系统安装。<br>2、<code>h5ai</code>默认密码：<code>MoeClub.org</code>。<br>3、使用时请自行更改<code>h5ai</code>默认密码。<br>4、<code>Transmission</code>默认用户名：<code>MoeClub.org</code>。<br>5、<code>Transmission</code>默认密码：<code>Vicer</code>。</p>
<h2 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h2><p>1、优化了<code>WebUI</code>界面<code>html</code>源码,提高加载速度。<br>2、修改<code>h5ai</code>源码,提供<code>Transmission</code>的入口。<br>3、修复<code>Transmission</code>不能使用<code>SSL</code>的<code>Tracker</code>的问题。<br>4、自动安装<code>ffmpeg</code>，可在<code>h5ai</code>中查看视频截图(已取消，为兼容<code>ARM</code>构架机器)。<br>5、默认取消<code>Transmission</code>用户认证，为了方便添加<code>SSL</code>证书。<br>6、请使用<code>Nginx</code>密码验证功能，性能更好更安全。</p>
<h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>1、<code>h5ai</code>列表地址：<code>http://site.name/download</code><br>2、下载面板预留地址<code>1</code>：<code>http://site.name/web</code><br>3、下载面板预留地址<code>2</code>：<code>http://site.name/dl</code></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用命令：</p>
<pre><code>wget --no-check-certificate -qO &apos;/tmp/Debian_PT.sh&apos; &apos;https://www.southcat.net/usr/shell/PT/Debian_PT.sh&apos; &amp;&amp; bash /tmp/Debian_PT.sh</code></pre><p>然后可以使用<code>IP</code>访问了，如果想用域名访问的，直接解析一个域名到服务器就行了。</p>
<h2 id="其它功能"><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h2><p><strong>1、Nginx打开密码验证功能</strong><br>生成用户名为<code>MoeClub.org</code>密码为<code>Vicer</code>的用户</p>
<pre><code>echo -n &apos;MoeClub.org:&apos; &gt;&gt;/etc/nginx/password
openssl passwd Vicer &gt;&gt;/etc/nginx/password</code></pre><p>启用<code>Nginx</code>用户名密码认证</p>
<pre><code>sed -i &apos;s/#auth_basic/auth_basic/g&apos; /etc/nginx/sites-available/h5ai</code></pre><p><strong>2、h5ai二维码功能</strong><br>默认为关闭状态，打开二维码功能：</p>
<pre><code>sed -i &apos;s|&quot;qrcode&quot;:.*|&quot;qrcode&quot;: true,|g&apos; &apos;/data/www/_h5ai/private/conf/options.json&apos;</code></pre><p>关闭二维码功能：</p>
<pre><code>sed -i &apos;s|&quot;qrcode&quot;:.*|&quot;qrcode&quot;: false,|g&apos; &apos;/data/www/_h5ai/private/conf/options.json&apos;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Directory Lister：又一款不错的PHP目录索引工具</title>
    <url>/1784/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Directory Lister</code>目录索引看起来很好看，安装简单，也很适用，对于类似的目录索引工具，之前还说到了<code>h5ai</code>，安装方法参考：h5ai安装教程，这<code>2</code>个都不错，有兴趣的可以试试。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>PHP Directory Lister</code>是一个使用<code>PHP</code>开发的目录索引工具，旨在让您列出目录的所有内容以及所有子目录，并允许您在其中导航。您只需将<code>Directory Lister</code>下载并安装到任何<code>Web</code>目录，就可以访问该目录下的所有文件和子目录。</p>
<p><strong>官方网站：</strong><a href="http://www.directorylister.com/" target="_blank" rel="noopener">http://www.directorylister.com/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><h2 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h2><ol>
<li>安装快速，将文件上传到任何可访问网页的目录，<code>Direcectory Lister</code>将为您快速生成列表。</li>
<li>内置主题支持，以适应您的独特风格。控制您的列表与文件/文件夹的自定义排序顺序。</li>
<li>支持MD5查看。</li>
</ol>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><ol>
<li>搭建<code>php</code>网站环境可使用宝塔面板或者军哥<code>lnmp</code>。</li>
<li>下载并提取<code>Directory Lister</code>到网站目录（本地下载 和 官方下载）。</li>
<li>复制<code>resources/default.config.php</code>到<code>resources/config.php</code>。</li>
<li><code>index.php</code>将<code>resources</code>文件夹上传到要列出的文件夹。</li>
<li>将其他文件上传到与<code>index.php</code>相同的目录。</li>
</ol>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Docker-Pan：Filerun+AriaNg+Aria2实现离线下载及在线播放</title>
    <url>/1666/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>docker-pan</code>是一个开箱机用的搭建私有网盘的<code>docker</code>镜像，由<code>Filerun</code>+<code>AriaNg</code>+<code>Aria2</code>几部分构成。</p>
<p><strong>Filerun：</strong>一款简洁的在线文件管理器，可在线对文件进行：图片预览、播放音乐、播放视频、文本编辑还支持语法高亮。</p>
<p><strong>AriaNg：</strong><code>aria2 web</code>界面，可离线下载磁力链接、<code>BT</code>种子等，使用响应式布局,支持各种计算机或移动设备。</p>
<p><strong>Docker Hub：</strong> <a href="https://hub.docker.com/r/jaegerdocker/pan/" target="_blank" rel="noopener">https://hub.docker.com/r/jaegerdocker/pan/</a></p>
<h2 id="一键安装"><a href="#一键安装" class="headerlink" title="一键安装"></a>一键安装</h2><p>运行命令:</p>
<pre><code>docker run --name=pan  -ti -p 8081:80 -p 6800:6800 jaegerdocker/pan</code></pre><p>或者挂着数据卷，数据券路径:<code>/var/www/html/system/data/default_home_folder</code></p>
<pre><code>docker run --name=pan -v /data/pan:/var/www/html/system/data/default_home_folder  -ti -p 8081:80 -p 6800:6800 jaegerdocker/pan</code></pre><p><strong>注意：</strong><code>docker</code>不正常的换下面这条命令看看，上面的命令没有加<code>-d</code>参数，很多人可能不知道运行完命令后关掉了容器导致无法正常访问。</p>
<pre><code>docker run --name=pan  -dti -p 8081:80 -p 6800:6800 jaegerdocker/pan</code></pre><h2 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h2><p><strong>Filerun：</strong><a href="http://yourdomain.com:8081" target="_blank" rel="noopener">http://yourdomain.com:8081</a><br>登陆用户名：<code>superuser</code>，登陆密码：<code>superuser</code>。</p>
<p><strong>AriaNg：</strong><a href="http://yourdomain.com:8081/dweb" target="_blank" rel="noopener">http://yourdomain.com:8081/dweb</a></p>
<h2 id="Filerun文件管理器"><a href="#Filerun文件管理器" class="headerlink" title="Filerun文件管理器"></a>Filerun文件管理器</h2><p><img src="https://www.southcat.net/usr/picture/Docker-Pan(1).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Docker-Pan(2).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Docker-Pan(3).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="AriaNg离线下载界面"><a href="#AriaNg离线下载界面" class="headerlink" title="AriaNg离线下载界面"></a>AriaNg离线下载界面</h2><p><img src="https://www.southcat.net/usr/picture/Docker-Pan(4).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Docker-Pan(5).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<p>老司机加入<code>Telegram</code>群一起交流：<a href="https://t.me/joinchat/GFSJWEF6uA5rSaRAtnfPxw" target="_blank" rel="noopener">https://t.me/joinchat/GFSJWEF6uA5rSaRAtnfPxw</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Directory Lister美化版一键安装脚本，自动签发SSL证书</title>
    <url>/2029/</url>
    <content><![CDATA[<p><strong>说明：</strong>前些日子分享过小夜<code>MM</code>的<code>Directory Lister</code>美化版，挺好看的，就整了个脚本，自动签发<code>SSL</code>证书，伪静态设置，给有需要的人吧。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/DirectoryLister_vpsmm.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>脚本适用于<code>Debian 8、9</code>，安装前请提前解析好域名。</p>
<p>运行命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/DirectoryLister_ssl.sh &amp;&amp; bash DirectoryLister_ssl.sh</code></pre><p>按要求输入域名直到安装完成。网站目录：<code>/home/wwwroot</code>。</p>
<pre><code>整理所有的css/js文件到本地，去掉google字体。
添加了flat-ui效果，个人比较喜欢大字体以及绿色的文字。
核心代码修改了一下，目录进行了伪静态化，原：/?dir=codes改后：/codes/。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Django框架开发的仿zhuye.kim的简单个人主页/导航程序，带后台</title>
    <url>/2161/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主很久前就看上了<code>zhuye.kim</code>的导航程序，简洁也很漂亮，就是搞不到源码，网上也搜不到，现在<code>Loc</code>大佬wenguonideshou已经使用<code>Django</code>框架开发出了仿<code>zhuye.kim</code>的简单导航程序，这里就分享下，而且大佬还在添加更多功能，有兴趣的可以随时关注。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/zhuye.kim(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/zhuye.kim(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/wenguonideshou/zhuye_kim" target="_blank" rel="noopener">https://github.com/wenguonideshou/zhuye_kim</a></p>
<p>本文只写<code>CentOS</code>的安装教程。</p>
<p><strong>1、安装Python3和必备组件</strong></p>
<pre><code>#安装Python 3.6
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#安装必备组件、库
pip3 install django pymysql pillow</code></pre><p><strong>2、安装Mysql</strong></p>
<pre><code>#安装Mysql 5.6
wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
rpm -ivh mysql-community-release-el7-5.noarch.rpm
yum install mysql-server -y

#设置权限 
chown -R root:root /var/lib/mysql
service mysqld restart

#重置Mysql密码，123456为密码，自行修改
mysql -u root  //直接回车进入mysql控制台
mysql &gt; use mysql;
mysql &gt; update user set password=password(&apos;123456&apos;) where user=&apos;root&apos;;
mysql &gt; exit;

#重启数据库
service mysqld restart

#创建zhuye数据库，mypassword为数据库密码
mysql -uroot -pmypassword
mysql &gt; create database zhuye;
mysql &gt; exit;</code></pre><p><strong>3、下载源码并修改数据库信息</strong></p>
<pre><code>yum install git screen -y
git clone https://github.com/wenguonideshou/zhuye_kim
cd zhuye_kim/zhuye_kim</code></pre><p>编辑数据库链接信息</p>
<pre><code>vi settings.py</code></pre><p>修改<code>DATABASES</code>对应的数据库信息，只需要修改数据库密码即可。</p>
<p>如果不会使用<code>vi</code>编辑器的，这里也可以使用<code>sed</code>命令，这里也说下方法。</p>
<pre><code>#查看settings.py文件
cat /root/zhuye_kim/zhuye_kim/settings.py
#找到数据库密码即PASSWORD对应的数值
&apos;PASSWORD&apos;: &apos;6f81f112dbe1efc4&apos;

#使用sed命令更换密码，记得修改前面对应的数值，passwd为数据库密码
sed -i &apos;s/6f81f112dbe1efc4/passwd/g&apos; &apos;/root/zhuye_kim/zhuye_kim/settings.py&apos;</code></pre><p><strong>4、安装源码</strong></p>
<pre><code>cd /root/zhuye_kim
python3 manage.py makemigrations
python3 manage.py migrate</code></pre><p><strong>5、导入数据库</strong><br>这里就不用<code>Mysqldump</code>导入了，好像会出问题。</p>
<pre><code>#进入mysql数据库控制台，mypassword为数据库密码
mysql -u root -pmypassword
#使用zhuye数据库
mysql &gt; use zhuye
#使用source命令导入数据库文件，后面为文件路径
mysql &gt; source /root/zhuye_kim/zhuye.sql
#退出
mysql &gt; exit;</code></pre><p><strong>6、运行网站</strong></p>
<pre><code>screen -S zhuye
python3 manage.py runserver 0.0.0.0:80  #最后面为80端口，也可以自行修改为其它端口</code></pre><p>这时候就可以使用<code>http://ip</code>进入了，后台地址<code>http://ip/admin</code>，管理员用户名<code>admin</code>密码<code>12345678@</code>。如果使用其它端口，比如<code>8080</code>，就是<code>http://ip:8080</code>进入。</p>
<pre><code>#如果你使用其它端口打不开页面的，则需要开启防火墙端口，比如8080端口
#Centos 6系统
iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7系统
firewall-cmd --zone=public --add-port=8080/tcp --permanent 
firewall-cmd --reload</code></pre><p>后台的“大分类”指的是常用/男生/女生 这一行，“小分类”指的是热门/资讯/影音/邮箱的这一列。</p>
<h2 id="域名设置"><a href="#域名设置" class="headerlink" title="域名设置"></a>域名设置</h2><p>如果使用<code>IP</code>登录的可以跳过这一步，域名登录可以继续看。这里依然使用最简单<code>Caddy</code>反代，支持自动签发<code>SSL</code>证书。使用自签发<code>SSL</code>的请提前解析好域名到<code>VPS</code>服务器。</p>
<p><strong>1、安装Caddy</strong><br>使用命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p><strong>2、配置Caddy</strong></p>
<pre><code>#以下全部内容是一个整体，修改域名、IP、端口、邮箱后一起复制到SSH运行！
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 1.1.1.1:8080
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code></p>
<pre><code>/etc/init.d/caddy start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>DomainMegaBot：Linux上最好用的批量扫描域名的工具</title>
    <url>/1874/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前由于<code>PayPal</code>不停的送优惠券，博主也抢到了很多，都给充了<code>namesilo</code>，然后就一直没管，今天本来想全部续费博客域名的，大概可以续费<code>6</code>、<code>7</code>年，一想到哪天要是被<code>Q</code>了就蛋疼了，就想把钱用来注册几个域名玩玩，顺便分享一个扫米工具，香菇肥牛博主自己写的工具，挺好用的。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>DomainMegaBot</code>支持<code>200</code>多个后缀的域名的字典扫描查询，包括了世界上绝大多数国别域名（<code>cctld</code>）。由于没有采用多线程并发查询（事实证明，多线程<code>Whois</code>扫描并不是一个好的解决方法，因为很容易就被<code>Whois Server Ban</code>掉访问），所以无需用户指定延迟时间，程序可以自动根据后缀进行调整。由于采用<code>C</code>语言编写，内存占用优化程度非常高，在<code>32MB</code>内存的小<code>VPS</code>上也可以完美运行。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/Har-Kuun/DomainMegaBot" target="_blank" rel="noopener">https://github.com/Har-Kuun/DomainMegaBot</a><br>运行以下命令：</p>
<pre><code>#Debian和Ubuntu系统
apt-get install git
#CentOS系统
yum install git
#安装工具
git clone https://github.com/Har-Kuun/DomainMegaBot.git
cd DomainMegaBot/
gcc -o DomainMegaBot DomainMegaBot.c
#扫描域名
./DomainMegaBot</code></pre><p>然后输入域名后缀和前缀字典即可扫描可用域名！<br><img src="https://www.southcat.net/usr/picture/DomainMegaBot.png" alt="请输入图片描述" title="请输入图片描述"><br>前缀字典可以选择<code>DICT_LLL</code>和<code>DICT_1000_WORD</code>。前者全部是<code>3</code>位字母，后者是<code>1000</code>个单词。</p>
<p>当然字典可以自己定制，格式是一排一个前缀。如：</p>
<pre><code>moerats
moerat
ratmoe
ratsmoe
......</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>DomainScan：一款好用的域名扫描工具，支持Python 3</title>
    <url>/2016/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一个香菇肥肉写的域名扫描工具，查看：DomainMegaBot：Linux上最好用的批量扫描域名的工具，然后经过一些大佬改造了下，工具更强大了，支持字典更多了，并且添加了<code>Python 3</code>版本。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>DomainScan</code>是一款支持超过<code>200</code>个顶级域名的域名扫描工具。此工具是用<code>C</code>语言写成，可以运行在任何<code>Linux</code>系统上（可能会因为指令集而出现差异），但无法在<code>Windows</code>中运行。 首次使用时，需要编译程序，运行中需要指定域名和字典。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/luodaoyi/DomainScan" target="_blank" rel="noopener">https://github.com/luodaoyi/DomainScan</a></p>
<p>本使用方法有<code>2</code>种，建议使用后面的<code>Python</code>运行。</p>
<p><strong>一、运行方法1</strong><br>运行命令：</p>
<pre><code>#Debian和Ubuntu系统
apt-get -y install git gcc
#CentOS系统
yum -y install git gcc
#安装工具
git clone https://github.com/luodaoyi/DomainScan.git
cd DomainScan/
gcc -o DomainScan DomainScan.c
#扫描域名
./DomainScan</code></pre><p>然后会出现如下选项</p>
<pre><code>Please specify TLD: com  #输入域名后缀
Please specify dictionary file: 2letter  #选择查询字典</code></pre><p><strong>二、运行方法2</strong><br><code>Python</code>版本，只适用<code>Python 3.6 +</code>。一般大多数<code>Ubuntu</code>自带<code>Python3</code>，而<code>Centos</code>、<code>Debian</code>就需要我们安装了。</p>
<p>1、安装<code>Python3</code></p>
<pre><code>#查看是否有Python3
python3 -V

#安装Python3
#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</code></pre><p>然后再输入<code>python3 -V</code>看是否安装成功。</p>
<p>2、下载工具</p>
<pre><code>#Debian和Ubuntu系统
apt-get -y install git
#CentOS系统
yum -y install git

#下载工具
git clone https://github.com/luodaoyi/DomainScan.git</code></pre><p>3、开始扫描</p>
<pre><code>#进入文件夹
cd DomainScan/
#查询xx前缀的所有域名是否可用
python3 domain_scan.py xx 
# 查询2letter文件中所有.com后缀的可以注册的域名
python3 domain_scan.py com 2letter</code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><code>1000w</code>代表<code>1000</code>个常用单词/字母，<code>2letter</code>代表所有的<code>2</code>字母组合， <code>3en</code>代表一些常见的<code>3</code>字母组合，<code>3x</code>代表所有的3字母组合以及<code>2</code>字母和<code>1</code>个数字的组合。</p>
<p>域名数据表为<code>TLD_DATA</code>，此数据表必须和<code>DomainScan</code>处于相同的文件夹。字典每行只能有一个带测的“域名”，具体实现可以直接浏览源代码查看。 所有的输入都只支持英文，严禁输入任何标点符号。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>しらSSL：免费Alphassl泛域名证书申请</title>
    <url>/1765/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在<code>Alphassl</code>泛域名证书很难找到免费的了，这个证书提供者是<code>hostloc</code>大佬<code>dream7758521</code>。对于没为自己网站上<code>ssl</code>证书的人来说也算是一个福利了。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li>目前只有每日签发的<code>32</code>个。</li>
<li>刷新时间为<code>GTM+9:00</code>，每天<code>23:59</code>。</li>
<li>小伙伴面板和<code>py</code>码签发差不多明天就能做完,目前计划每小伙伴每天可以生成<code>100py</code>码。</li>
</ul>
<h2 id="申请"><a href="#申请" class="headerlink" title="申请"></a>申请</h2><p><strong>准备工作：</strong>申请证书前需要准备的就是一张<code>CSR</code>证书请求文件，可使用在线工具：<a href="https://csr.chinassl.net/generator-csr.html生成。这里需要注意的一点是`CSR`里域名那里一定要填`*.southcat.net`这样的，`*`代表前面子域名是泛域。" target="_blank" rel="noopener">https://csr.chinassl.net/generator-csr.html生成。这里需要注意的一点是`CSR`里域名那里一定要填`*.southcat.net`这样的，`*`代表前面子域名是泛域。</a></p>
<p><strong>申请地址：</strong><a href="https://ssl.ni-co.moe/" target="_blank" rel="noopener">https://ssl.ni-co.moe/</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个仿V2EX的开源二次元论坛程序：Vmoex安装教程</title>
    <url>/2309/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Vmoex</code>是一个仿<code>V2ex</code>的开源二次元向的社区程序，使用的<code>php</code>框架<code>symfony3.4</code>版本，支持<code>markdown</code>，主要为动漫、二次元、番剧的(还有萌萌哒的<code>(●´ω｀●)φ</code>)爱好者打造。由于作者的安装教程对新手有点不是很友好，所以这里博主就发个详细的安装教程，有需求的可以搭建一个玩玩。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Vmoex(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vmoex(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vmoex(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vmoex(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li><code>github</code>登录</li>
<li>邮箱验证、用户信息编辑功能</li>
<li>多国语言支持</li>
<li>丰富的后台管理功能</li>
<li>用户发帖、回复（支持@其他人）</li>
<li>站内即时聊天、无刷新获取通知</li>
<li>支持<code>markdown</code></li>
<li>会员主页、关注他人、发送私信给他人</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/yeskn-studio/vmoex-framework" target="_blank" rel="noopener">https://github.com/yeskn-studio/vmoex-framework</a></p>
<p><strong>环境要求：</strong><code>PHP 5.6+</code>、<code>Mysql</code>、<code>Nginx</code>、<code>Redis</code>、<code>Composer</code>、<code>Nodejs</code>、<code>Fileinfo</code>拓展等。</p>
<pre><code>关于环境一些提示：
#由于作者留的数据库文件只兼容Mysql 5.6+，所以你内存如果超过1G，建议直接安装Mysql 5.6+；要是内存低于1G只能安装Mysql 5.5也没事，博主会提供兼容5.5的数据库文件。

#如果在Dev模式下运行是不需要Nginx的，不过不适合我们使用，所以下面主要使用Nginx的Web运行该程序。

#推荐安装环境PHP 7.2+、Mysql 5.6+</code></pre><p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP 5.6+</code>、<code>Nginx</code>、<code>Mysql</code>、<code>Redis</code>。</p>
<p><strong>2、相关配置</strong><br>找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>扩展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、脚本添加，脚本地址：https://www.southcat.net/archives/722/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p>点击左侧软件管理-<code>PHP</code>设置-禁用函数-删除<code>proc_open</code>和<code>proc_get_status</code>。</p>
<p>点击左侧数据库-添加数据库，设置好数据库名、密码。</p>
<p>点击左侧网站-添加站点，数据库不创建，使用上面创建的即可。</p>
<p><strong>3、安装Composer</strong></p>
<pre><code>curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer</code></pre><p><strong>4、安装依赖</strong><br>安装<code>Nodejs</code>：</p>
<pre><code>#Debian、Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt-get install -y nodejs git

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs -y git</code></pre><p>安装<code>Bower</code>：</p>
<pre><code>npm install -g bower </code></pre><p>安装<code>uglifyjs</code>：</p>
<pre><code>npm install -g uglify-js</code></pre><p>安装<code>Yarn</code>：</p>
<pre><code>npm install -g yarn </code></pre><p><strong>5、配置源码</strong></p>
<pre><code>#进入站点文件夹，路径自行修改后再运行
cd /www/wwwroot/www.southcat.net
#下载源码
git clone https://github.com/yeskn-studio/vmoex-framework.git
#将源码文件移动到根目录，如果有提示，enter就行
mv vmoex-framework/{,.}* ./
#修改runtime目录权限
chown -R www:www var web/avatar web/upload app/Resources/translations
#修改配置文件，不会使用nano编辑器的，可以通过面板的文件管理进行操作
nano app/config/parameters.yml.dist</code></pre><p>配置文件大致修改如下：</p>
<pre><code>1、填入你的数据库名称，用户名和密码。
2、填入secret值，且secret必须是没有规则的一些字符，还是不会的，直接填数据库密码吧。
3、关于redis_dsn参数，这里是建议设置密码的，毕竟Redis有漏洞，如果你不会使用Redis的，直接修改为redis_dsn: &apos;redis://localhost&apos;
4、修改socket_host参数，将127.0.0.1修改为你的服务器ip，不然会有小问题。
5、修改cdn地址，参数assets_base_url: https://www.southcat.net，如果你开启SSL，就使用https，反之http
6、其它配置可根据你的需求自行开启。</code></pre><p><strong>6、开始安装</strong><br>调整数据库文件：</p>
<pre><code>#如果你安装的是Mysql 5.5版本数据库，需要先替换下源码的数据库文件，使用命令：
wget https://www.southcat.net/usr/down/vmoex_sql -O var/data/vmoex.sql

#如果你是Mysql 5.6+，可以直接使用源码里的数据库文件。</code></pre><p>然后开始安装，使用命令：</p>
<pre><code>#安装php依赖，期间会提示配置，检查无误可一路回车
composer install
#安装前端依赖
yarn install
#导入数据
php bin/console doctrine:database:init
#载入翻译数据
php bin/console translation:persist
#修改管理员密码
php bin/console change-password -u admin -p [password]
#清理缓存
chown -R www:www var
php bin/console cache:clear --env=prod
#创建静态资源文件
php bin/console assetic:dump --env=prod
#启动websocket
php bin/push-service.php start -d</code></pre><p>然后点击面板左侧安全，开放<code>websocket</code>的<code>3120</code>端口即可。</p>
<p><strong>7、Nginx设置</strong><br>点击左侧网站-站点设置，进行如下修改：</p>
<pre><code>1、网站目录：取消防跨站攻击，运行目录设置/web
2、伪静态：添加以下代码。
if (!-e $request_filename) {
    rewrite  ^(.*)$  /?$1  last;
    break;
}
3、默认文档：可以删除全部，然后添加app.php。
4、SSL等其他设置可自行修改</code></pre><p>最后我们打开站点就可以看到一个萌萌哒的论坛了，历史帖子，评论什么的可以在后台自行删除。</p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>站点运行后，配置文件为<code>app/config/parameters.yml</code>， 需修改配置时请修改此文件，修改完后，需要重新清理缓存或者生成静态资源文件。</p>
<pre><code>#进入站点文件夹，路径自行修改后再运行
cd /www/wwwroot/www.southcat.net
#启动websocket
php bin/push-service.php start -d</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个二次元搜图、搜番、搜本子QQ机器人，支持SauceNAO、WhatAnime、Ascii2d等网站</title>
    <url>/2414/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>CQ-picfinder-robot</code>是一个由綺凜博主使用<code>Nodejs</code>编写的<code>酷Q</code>机器人插件，集成多个优秀的项目，使其用于搜图、搜番、搜本子，并夹带了许多娱乐向功能；原理就是利用<code>SauceNAO</code>、<code>WhatAnime</code>、<code>Ascii2d</code>搜索出自<code>Pixiv</code>、<code>Twitter</code>、<code>Danbooru</code>等<code>20</code>多个站点的插画、本子、动漫。你只需要一张图片，就可以精准定位其图片、本子、动漫的出处，使用方法也是很简单的，不过貌似都是在<code>Windows</code>上使用，毕竟很方便，这里就发下在<code>Linux VPS</code>中的使用方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/cqprqq.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Tsuk1ko/CQ-picfinder-robot" target="_blank" rel="noopener">https://github.com/Tsuk1ko/CQ-picfinder-robot</a></p>
<p><strong>说明：</strong>该插件必须配合<code>酷Q</code>一起使用，且需要启动<code>CoolQ HTTP API</code>插件，并将配置文件<code>use_ws</code>设置为<code>true</code>，可参考：插件使用文档。</p>
<p><strong>提示：</strong>如果你的<code>VPS</code>内存过小，包括<code>512M</code>内存，建议加点虚拟内存，<code>Swap</code>一键脚本→传送门。</p>
<p><strong>1、安装CoolQ机器人</strong></p>
<pre><code>提示：想要完整的功能的，建议使用Pro；不过Pro也不是必须的，Air也可以，但Air无法发送图片，某些功能会受限，但能满足基本使用。</code></pre><p>如果你用<code>Windows</code>系统，则自行安装；<code>Linux</code>系统，则使用<code>Docker</code>安装，这里就使用带<code>CoolQ HTTP API</code>插件的<code>CoolQ Docker</code>镜像，具体步骤如下。</p>
<p>安装<code>Docker</code>：</p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p>安装<code>CoolQ</code>：</p>
<pre><code>#安装酷Q Air图灵版
docker run --name wine-coolq -d \
-v /coolq:/home/user/coolq \
-p 9000:9000 \
-p 6700:6700 \
-e VNC_PASSWD=moerats \
richardchien/cqhttp

#安装酷Q Pro图灵版
docker run --name wine-coolq -d \
-v /coolq:/home/user/coolq \
-p 9000:9000 \
-p 6700:6700 \
-e VNC_PASSWD=moerats \
-e COOLQ_URL=https://dlsec.cqp.me/cqp-tuling \
richardchien/cqhttp</code></pre><p>参数大致说明：</p>
<pre><code>-p 将内部的Web运行端口9000映射到外部的9000，可自行修改端口。
-v 将内部酷Q和其数据文件夹/home/user/coolq映射到外部的/coolq文件夹，可自行修改路径。
-e VNC_PASSWD为VNC密码。注意该密码不能超过8个字符，默认MAX8char。</code></pre><p>再删掉默认的配置文件，不然后面可能不会生成特定的<code>QQ</code>配置文件，使用命令：</p>
<pre><code>rm -rf /coolq/app/io.github.richardchien.coolqhttpapi/config/general.ini</code></pre><p>然后就可以访问<code>http://ip:9000</code>，输入<code>VNC</code>页面密码，文中默认<code>moerats</code>，即可看到一个<code>酷Q</code>已经启动，如果是<code>Pro</code>的话，会先要你输入授权码。</p>
<p>如果打不开界面，还需要开启<code>9000</code>端口，一般出现在<code>CentOS</code>系统，开启如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 9000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=9000/tcp --permanent
firewall-cmd --reload</code></pre><p>有些服务器，比如阿里云，谷歌云等都还需要在面板安全组开启该端口。</p>
<p>第一次登录<code>QQ</code>账号会生成特定的<code>CoolQ HTTP API</code>配置文件，路径为<code>app/io.github.richardchien.coolqhttpapi/config</code>，然后进行如下修改：</p>
<pre><code>#注意每次更换新的QQ号登录机器人，都要进行该操作
1、根据路径找到配置文件，格式为QQ号.json
2、编辑配置文件，将use_ws后面的false改为true

#不想麻烦的，可以直接ssh客户端使用命令修改，命令如下：
sed -i &apos;s#&quot;use_ws&quot;: false#&quot;use_ws&quot;: true#g&apos; /coolq/app/io.github.richardchien.coolqhttpapi/config/*.json</code></pre><p>接下来在<code>VNC</code>页面，右键右下角悬浮球，快速重启机器人即可。</p>
<p><strong>2、安装Nodejs</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y git nodejs 

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs git -y</code></pre><p><strong>3、安装CQ-picfinder-robot</strong></p>
<pre><code>#拉取项目
git clone https://github.com/Tsuk1ko/CQ-picfinder-robot.git
cd CQ-picfinder-robot
#复制配置文件
cp config.default.json config.json
#安装依赖
npm i
#安装pm2
npm install -g pm2</code></pre><p><code>config.json</code>配置文件参考如下：</p>
<pre><code>#别直接将下面配置文件复制进去，JSON是不允许注释的，仅供参考
{
    //前面这几项配置请参考https://github.com/momocow/node-cq-websocket/blob/master/docs/api/CQWebSocket.md#cqwebsocketoption
    &quot;host&quot;: &quot;127.0.0.1&quot;,
    &quot;port&quot;: 6700,
    &quot;enableAPI&quot;: true,
    &quot;enableEvent&quot;: true,
    &quot;access_token&quot;: &quot;&quot;,
    &quot;reconnection&quot;: true,
    &quot;reconnectionAttempts&quot;: 10,
    &quot;reconnectionDelay&quot;: 5000,
    //以下开始都是搜图机器人配置
    &quot;picfinder&quot;: {
        &quot;debug&quot;: false,            //调试模式，启用后会在控制台输出每次查询的返回文本
        &quot;admin&quot;: -1,               //指定管理者QQ，请务必设置
        &quot;autoAddFriend&quot;: false,    //自动同意好友申请（false则忽略，但不会拒绝）
        &quot;addFriendAnswers&quot;: [],    //根据问题回答同意好友申请（后续详解
        &quot;autoAddGroup&quot;: false,     //自动同意入群申请（false同上，但可以用命令手动允许，后续有说明）
        &quot;searchLimit&quot;: 30,         //每名用户每日搜索次数限制
        //复读机
        &quot;repeat&quot;: {
            &quot;enable&quot;: true,        //开关
            &quot;times&quot;: 3,            //当检测到某个群有这么多次相同发言后会概率参与复读
            &quot;probability&quot;: 40,     //复读概率（百分比）
            &quot;commonProb&quot;: 0.1      //日常复读概率（百分比）
        },
        //setu功能
        &quot;setu&quot;: {
            &quot;enable&quot;: false,       //是否启用
            &quot;allowPM&quot;: true,       //是否允许私聊使用
            &quot;pximgProxy&quot;: &quot;&quot;,      //设置发送setu时使用的反向代理，后续详解
            &quot;deleteTime&quot;: 30,      //发送后这么多秒自动撤回（0则不撤回，下同）
            &quot;cd&quot;: 600,             //使用冷却时间（秒），每名用户独立，0则无冷却
            &quot;limit&quot;: 30,           //每名用户每日次数限制
            &quot;whiteGroup&quot;: [],      //群组白名单（请按照json数组格式填写）
            &quot;whiteOnly&quot;: false,    //仅允许白名单群使用（与上面的私聊使用是独立的）
            &quot;whiteCd&quot;: 0,          //白名单群组的使用冷却时间
            &quot;whiteDeleteTime&quot;: 0   //白名单群组的撤回时间
        },
        //指令正则表达式
        &quot;regs&quot;: {
            //开启搜图模式
            &quot;searchModeOn&quot;: &quot;竹竹搜[图圖]&quot;,
            //关闭搜图模式
            &quot;searchModeOff&quot;: &quot;[谢謝]+竹竹&quot;,
            //签到
            &quot;sign&quot;: &quot;我(.*)签到&quot;,
            //setu
            &quot;setu&quot;: &quot;(竹竹.*[来來发發给給].*[色瑟][图圖])|(--setu)&quot;
        },
        //回复
        &quot;replys&quot;: {
            //默认回复
            &quot;default&quot;: &quot;必须要发送图片我才能帮你找噢_(:3」」\n支持批量！&quot;,
            //调试模式时
            &quot;debug&quot;: &quot;维护升级中，暂时不能使用，抱歉啦~&quot;,
            //个人搜索次数到达上限时
            &quot;personLimit&quot;: &quot;您今天搜的图太多辣！休息一下明天再来搜吧~&quot;,
            //搜索失败时
            &quot;failed&quot;: &quot;搜索失败惹 QAQ\n有可能是服务器网络爆炸，请重试一次&quot;,
            //签到相关
            &quot;sign&quot;: &quot;签到成功，送您10个赞！&quot;,
            &quot;signed&quot;: &quot;您今天已经签到过啦_(:3」∠)_&quot;,
            //开启搜图模式
            &quot;searchModeOn&quot;: &quot;了解～请发送图片吧！支持批量噢！\n如想退出搜索模式请发送“谢谢竹竹”&quot;,
            //已经开启搜图模式
            &quot;searchModeAlreadyOn&quot;: &quot;您已经在搜图模式下啦！\n如想退出搜索模式请发送“谢谢竹竹”&quot;,
            //关闭搜图模式
            &quot;searchModeOff&quot;: &quot;不用谢～&quot;,
            //已经关闭搜图模式
            &quot;searchModeAlreadyOff&quot;: &quot;にゃ～&quot;,
            //setu冷却中
            &quot;setuLimit&quot;: &quot;乖，要懂得节制噢 →_→&quot;,
            //setu请求错误
            &quot;setuError&quot;: &quot;瑟图服务器爆炸惹_(:3」∠)_&quot;,
            //其他不满足发送setu的条件
            &quot;setuReject&quot;: &quot;很抱歉，该功能暂不开放_(:3」」&quot;
        },
        //OCR（详细见“附加功能”）
        &quot;ocr&quot;: {
            &quot;use&quot;: &quot;ocr.space&quot;, //选择使用的OCR服务
            &quot;ocr.space&quot;: {
                &quot;defaultLANG&quot;: &quot;eng&quot;,
                &quot;apikey&quot;: &quot;&quot;
            },
            &quot;baidubce&quot;: {
                &quot;useApi&quot;: &quot;accurate_basic&quot;,
                &quot;apiKey&quot;: &quot;&quot;,
                &quot;secretKey&quot;: &quot;&quot;
            }
        },
        //明日方舟公开招募计算器（详细见“附加功能”）
        &quot;akhr&quot;: {
            &quot;enable&quot;: false,    //true则启用
            &quot;ocr&quot;: &quot;ocr.space&quot;  //选择使用的OCR服务
        }
    },
    //数据库配置（用于缓存搜图结果）
    &quot;mysql&quot;: {
        &quot;enable&quot;: false,       //是否开启缓存功能
        &quot;expire&quot;: 172800,      //缓存时间（秒），默认为两天（172800秒）
        &quot;host&quot;: &quot;127.0.0.1&quot;,   //数据库地址
        &quot;port&quot;: 3306,          //端口
        &quot;db&quot;: &quot;&quot;,              //数据库名
        &quot;user&quot;: &quot;&quot;,            //用户名
        &quot;password&quot;: &quot;&quot;,        //密码
        &quot;expire&quot;: 172800       //缓存时间
    },
    //Saucenao地址，一般请不要动，除非你猜到了我提供此设置的意义（
    &quot;saucenaoHost&quot;: [
        &quot;saucenao.com&quot;
    ],
    //WhatAnime的域名，同上
    &quot;whatanimeHost&quot;: [
        &quot;trace.moe&quot;
    ]
}</code></pre><p>启动及其它运行命令：</p>
<pre><code>#运行
npm run pm2start
#停止
npm run pm2stop
#重启
npm run pm2restart
#查看日志
npm run pm2log</code></pre><p>启动成功后建议查看下日志，如果显示连接成功即安装成功。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、日常使用</strong></p>
<pre><code>#私聊
1、直接发送图片即可
2、详见下方搜图模式说明

#群组&amp;讨论组
1、@机器人并发送图片
2、详见下方搜图模式说明(群限定)
3、特别地，在群组中可以发送符合配置中正则表达式的发言以进入搜图模式，在搜图模式中，发送的所有图片即使不@也会被搜图，此功能通常用于在手机上无法在转发图片时@的情况；另外，进入搜图模式后也请务必记得退出搜图模式！

#可以在同一条消息中包含多张图片(针对PC)，会自动批量搜索

#搜索图片时可以在消息内包含以下参数来指定搜索范围或者使用某项功能，参数之间互斥，优先级从上到下
1、--get-url：获取图片的在线链接（不会搜图）
2、--a2d：使用 ascii2d 进行搜索（优势在于可搜索局部图）
3、--pixiv：从P站中搜索
4、--danbooru：从Danbooru中搜索
5、--book：搜索本子
6、--anime：搜索番剧

#如果saucenao得到的结果相似度低于60%，会自动使用ascii2d进行搜索

#如果搜索到本子，会自动在 nhentai 中搜索并返回链接(如果有汉化本会优先返回汉化本链接)

#如果搜到番剧，会自动使用WhatAnime搜索番剧详细信息
1、AnimeDB与WhatAnime的结果可能会不一致，是正常现象，毕竟这是两个不同的搜索引擎
2、同时展示这两个搜索的目的是为了尽力得到你可能想要的识别结果</code></pre><p><strong>2、搜图模式</strong></p>
<pre><code>#搜图模式存在的意义是方便手机用户在转发图片等不方便在消息中夹带@或搜图参数的情况下指定搜索库

#在私聊时直接发送图库关键字
此时你发出来的下一张图（只有下一张，也就是一次性的）会使用指定搜索库

#在群组中发送符合配置中正则表达式的发言进入搜图模式
1、此时你发出的所有图片都会被搜图（默认使用全范围搜索）
2、发送图库关键字后，你后续发出的所有图片都会使用你指定的搜索库
3、每次使用完后请务必记得退出搜图模式啊，同理，也是发送符合配置中正则表达式的发言

#图库关键字：
1、all：默认的全范围搜索模式
2、以下与上方“日常使用”中描述的搜索参数功能相同
pixiv
danbooru
book
anime</code></pre><p><strong>3、处理好友申请</strong></p>
<pre><code>#如果在QQ中设置选择“允许任何人”，则直接通过，酷Q无法干预

#如果选择“需要验证信息”，则是否通过由autoAddFriend设置项决定

#如果选择“需要正确回答问题”，则是否通过由对方的回答决定，酷Q无法干预

#如果选择“需要回答问题并由我确认”，则在autoAddFriend为true，且addFriendAnswers数组不为空的情况下会进行判断，只有对方的回答与addFriendAnswers的设置完全一致才会同意</code></pre><p><code>autoAddFriend</code>为<code>false</code>时不会主动拒绝申请，只是忽略申请而已，<code>autoAddGroup</code>同理。</p>
<p><code>addFriendAnswers</code>配置规则：</p>
<pre><code>#请将问题的答案顺次作为addFriendAnswers数组的元素写入，例：
&quot;addFriendAnswers&quot;: [
    &quot;问题一的答案&quot;,
    &quot;问题二的答案&quot;
]</code></pre><p>目前貌似最多只可以设置两个问题，请一定要写入与问题个数相等数量的元素，多写会爆炸的。</p>
<p>如果你设置了两个问题但是只在<code>addFriendAnswers</code>数组中写了一个元素，那么只会验证第一个问题。</p>
<p><strong>4、手动同意进群申请</strong><br>当你设定了<code>picfinder.admin</code>为你自己的<code>QQ</code>后，假如<code>123456789</code>是你需要让机器人加的群，向机器人私聊发送<code>--add-group=123456789</code>，此时：</p>
<pre><code>#如果该群之前已经在机器人处于运行状态的时候邀请过机器人，那么该邀请会被直接同意

#如果之前没有邀请过，那么下一次邀请将会被同意

#以上两种操作都是一次性的</code></pre><p><strong>5、封禁用户/群组</strong><br>发送<code>--ban-u=Q</code>号或<code>--ban-g=</code>群号，该封禁功能并不是真的拉入黑名单，仅仅是忽略用户/群的发言，如果想解封请自行编辑<code>data/ban.json</code>删除对应<code>Q</code>号/群号。</p>
<p>更多配置和使用说明可以直接看下<code>Github</code>说明→传送门。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><pre><code>#为什么有时候搜不想要的出结果？
需要说明的是，搜图引擎发现新图片并收录也是需要时间的，因此画师刚上传的画作一般情况下是没办法搜到的

另外，搜图时发送的图片必须是刚好完整的图片，使用以下几种情况的图片会导致大概率搜不到结果：
1、使用的是原图的局部图，即因剪裁而不完整，此时可以尝试使用ascii2d的特征搜索功能
2、图片被 马赛克/图片马赛克等 遮挡的部分面积过大
3、截图没截好，留有黑边，例如为了省事直接使用手机截屏或者电脑手动框选截图，这种情况请在搜图前4自行编辑裁去与图片无关的部分
4、清晰度过低的图片</code></pre><p>最后说下重启操作，每次重启镜像都会生成<code>general.ini</code>文件，这貌似会引起特定<code>QQ</code>配置不生效，这可以在安装<code>Docker</code>镜像的时候加入变量<code>-e COOLQ_ACCOUNT=123456</code>来解决这个问题，也可以在重启时删掉该文件，然后登录<code>VNC</code>即可。</p>
<pre><code>docker restart wine-coolq
rm -rf /coolq/app/io.github.richardchien.coolqhttpapi/config/general.ini</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个免费、安全、稳定、高效的发卡系统：ZFAKA安装教程</title>
    <url>/2244/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>ZFAKA</code>是一款开源的基于<code>yaf+layui</code>开发的发卡系统，永久免费，支持支付宝当面付，支付宝即时到账，码支付，有赞支付。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/ZFAKA(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ZFAKA(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ZFAKA(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><pre><code>#会员模块
默认情况下，不支持注册，当然后台可以开放注册；注册成会员可查看历史购买记录。

#购买模块
支持自动发卡和手工发卡模式。

#后台模块
包含订单模块、商品模块、配置模块、卡密导入导出等。

#支付渠道
支付宝当面付，支付宝即时到账，码支付，有赞支付。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/zlkbdotnet/zfaka" target="_blank" rel="noopener">https://github.com/zlkbdotnet/zfaka</a></p>
<p><strong>1、安装LNMP</strong></p>
<pre><code>wget http://soft.vpser.net/lnmp/lnmp1.5.tar.gz -cO lnmp1.5.tar.gz &amp;&amp; tar zxf lnmp1.5.tar.gz &amp;&amp; cd lnmp1.5 &amp;&amp; ./install.sh lnmp</code></pre><p>这里可以选择安装<code>Mysql 5.5</code>、<code>PHP 7.1</code>。</p>
<p><strong>2、添加域名</strong></p>
<pre><code>lnmp vhost add</code></pre><p>输入你添加的域名，如果你需要使用自动签发的<code>SSL</code>证书，需要提前将域名解析到服务器。</p>
<pre><code>#添加域名时，这2个选n
Allow Rewrite rule? (y/n) n
Enable PHP Pathinfo? (y/n) n</code></pre><p><strong>3、下载程序源码</strong></p>
<pre><code>cd /home/wwwroot/xx.com
git clone https://github.com/zlkbdotnet/zfaka.git
mv zfaka/* ./
chown www:www -R ./
mv ./conf/application.ini.new ./conf/application.ini</code></pre><p><strong>4、nginx配置修改</strong><br>编辑域名配置文件：</p>
<pre><code>#xx.com为你添加的域名
nano /usr/local/nginx/conf/vhost/xx.com.conf</code></pre><p>进行如下修改：</p>
<pre><code>#将root后面的参数加个public
root  /home/wwwroot/southcat.net/public;

#在配置文件里找个地方添加以下代码
location / {
          if (!-e $request_filename) {
                  rewrite ^/(.*)$ /index.php?$1 last;
          }
  }</code></pre><p>然后使用<code>lnmp nginx restart</code>命令重启<code>Nginx</code>。</p>
<p><strong>5、允许跨目录访问</strong><br>由于该网站目录是在<code>public</code>下，<code>LNMP</code>默认是不允许跨目录访问的，所以这里需要将防跨目录访问的设置去掉，不然会出现<code>HTTP ERROR 500</code>错误。</p>
<pre><code>#这里只需要删除目录下user.ini文件就可以了
chattr -i /home/wwwroot/xx.com/.user.ini
rm -rf /home/wwwroot/xx.com/.user.ini</code></pre><p>这时候就可以跨目录访问了。</p>
<p><strong>6、安装YAF</strong><br><code>YAF</code>官方下载→传送门，找到最新的<code>YAF</code>包。<br>安装<code>YAF</code>：</p>
<pre><code>wget http://pecl.php.net/get/yaf-3.0.7.tgz
tar zxf yaf-3.0.7.tgz &amp;&amp; rm -rf yaf-3.0.7.tgz
cd yaf-3.0.7 &amp;&amp; phpize
./configure --with-php-config=/usr/local/php/bin/php-config
make &amp;&amp; make install</code></pre><p>配置<code>php.ini</code>：</p>
<pre><code>#整条命令一起输入SSH运行
echo &quot;extension=yaf.so
yaf.environ=&apos;product&apos;
yaf.use_namespace=1&quot; &gt;&gt; /usr/local/php/etc/php.ini</code></pre><p>再使用<code>lnmp php-fpm restart</code>命令重启<code>PHP</code>。</p>
<p><strong>7、检查目录权限</strong></p>
<pre><code>#记得给予以下目录权限
/conf/application.ini 配置文件，可读可写
/install 安装目录，需要可读写
/log 日志目录，需要可写
/temp 缓存目录，需要可读写</code></pre><p><strong>8、安装并设置程序</strong><br>然后我们再去数据库面板新建一个数据库，数据库地址：<code>ip/phpmyadmin</code>。然后再打开域名进行安装。<br><img src="https://www.southcat.net/usr/picture/ZFAKA(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>安装好了后，再设置定时计划。</p>
<pre><code>#编辑定时任务
crontab -e
#添加以下任务，注意替换域名
*/2 * * * * php -q /home/wwwroot/xx.com/public/cli.php request_uri=&quot;/crontab/sendemail/index&quot;</code></pre><p>然后我们可以修改默认管理员邮箱账号，先进入数据库面板<code>ip/phpmyadmin</code>，找到发卡数据库，再编辑<code>t_admin_user</code>数据表，将邮箱改成自己的就行了，至于密码可以在后台自己改。</p>
<pre><code>#后台设置注意以下2点
web_url必须修改为当前站点地址，用于支付回调。
admin_email必须修改为管理员邮箱，用于管理员接收邮件；如果设置为非邮箱格式，即可取消管理员接收邮件。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个功能强大又好用的RSS订阅器：FreshRSS安装教程</title>
    <url>/2073/</url>
    <content><![CDATA[<p><strong>说明：</strong>前面说了很多<code>RSS</code>订阅器了，查看：Miniflux 2，Telegram RSS。今天再介绍个<code>FreshRSS</code>订阅器，免费，界面很美观，支持导入/导出为<code>OPML</code>文件，过滤、标记、搜索等，有助于轻松查找和阅读文章，也可以多用户使用，还可以安装很多拓展和更换不同的主题，而且查看<code>10</code>万篇文章都不会卡，这里简单说下常规的<code>LNMP</code>安装和<code>Docker</code>教程。</p>
<p><strong>官方网站：</strong><a href="https://freshrss.org" target="_blank" rel="noopener">https://freshrss.org</a><br><strong>演示地址：</strong><a href="https://demo.freshrss.org" target="_blank" rel="noopener">https://demo.freshrss.org</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/FreshRSS(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/FreshRSS(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/FreshRSS(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="LNMP安装"><a href="#LNMP安装" class="headerlink" title="LNMP安装"></a>LNMP安装</h2><p>该方法属于常见的安装方法，不过有点慢，如果想快点安装的，使用下面的<code>Docker</code>安装即可，不过<code>Docker</code>不适用于<code>OVZ</code>。</p>
<p><strong>环境要求：</strong><code>Nginx</code>、<code>7.0 &gt;= PHP &gt;= 5.3</code>、<code>MySQL &gt;= 5.5</code>，需要<code>Fileinfo</code>组建支持。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh

#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh

#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>然后进入后台再安装<code>PHP</code>、<code>Nginx</code>和<code>Mysql</code>环境，再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>拓展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、手动添加，方法查看：https://www.southcat.net/archives/19/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p><strong>2、上传程序</strong><br>安装好环境后解析并添加域名，然后下载源码：FreshRSS，再放到站点根目录并解压。</p>
<pre><code>#或者使用命令下载源码
#进入站点根目录，请修改为自己域名
cd /www/wwwroot/domain.com
#下载程序
git clone https://github.com/FreshRSS/FreshRSS.git
#移动到根目录
mv FreshRSS/{,.}* ./
#授权
chown 755 ./*</code></pre><p>提示<code>git</code>命令不存在的运行：</p>
<pre><code>#Debian和Ubuntu系统
apt-get -y install git

#CentOS系统
yum -y install git</code></pre><p><strong>3、新建数据库并安装</strong><br>新建数据库，然后打开域名根据提示输入管理员账号、密码，数据库信息安装即可。<br><img src="https://www.southcat.net/usr/picture/FreshRSS(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/FreshRSS(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/FreshRSS(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>curl -sSL https://get.docker.com/ | sh
service docker start</code></pre><p><strong>2、安装镜像</strong></p>
<pre><code>#下载文件并进入文件夹
git clone https://github.com/FreshRSS/FreshRSS.git
cd ./FreshRSS/
#创建文件夹，并且数据会保存在这里
mkdir -p ./data/
#安装镜像，8080端口自己定义
docker run -dit --restart unless-stopped --log-opt max-size=10m \
    -v $(pwd)/data:/var/www/FreshRSS/data \
    -p 8080:80 \
    --name freshrss freshrss/freshrss</code></pre><p>提示<code>git</code>命令不存在的运行：</p>
<pre><code>#Debian和Ubuntu系统
apt-get -y install git

#CentOS系统
yum -y install git</code></pre><p>安装完成后，打开<code>http://IP:8080</code>访问，如果你修改了端口，就用<code>IP:Port</code>访问。</p>
<p><strong>3、域名访问</strong><br>如果想用<code>IP</code>访问的，直接无视该步骤。由于博主喜欢用<code>Caddy</code>，所以这里使用<code>Caddy</code>反代。请先解析一个域名到服务器上。</p>
<p>安装<code>Caddy</code></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>编辑配置文件</p>
<pre><code>#以下全部内容是一个整体，修改域名、IP、邮箱后一起复制到SSH运行！
echo &quot;https://xx.com {
 tls admin@southcat.net
 proxy / 111.111.111.111:8080 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
 log /var/log/caddy.log
 gzip
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code></p>
<pre><code>/etc/init.d/caddy restart</code></pre><p>最后就可以通过域名<code>https</code>访问了</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个功能强大的网址缩短程序：Polr搭建教程</title>
    <url>/1996/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前说过一个短网址程序。参考：短网址程序YOURLS安装及配置教程与设置中文，这里再说个<code>Polr</code>短网址程序，<code>Polr</code>是一个开源的短链接软件，也就是不存在收费的问题，而且功能也足够强大，由于官方的没有中文版本，所以就找了个<code>Polr</code> 中文优化版。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Polr(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Polr(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul>
<li>修改缩短的域名</li>
<li>统计功能(来源，时间)</li>
<li><code>API</code>支持</li>
<li>二维码生成</li>
</ul>
<h2 id="优化内容"><a href="#优化内容" class="headerlink" title="优化内容"></a>优化内容</h2><ul>
<li>安装界面，使用界面中文化</li>
<li>时区&amp;<code>CDN</code>获取<code>IP</code></li>
</ul>
<h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><p><strong>Github地址：</strong><a href="https://github.com/cydrobolt/polr" target="_blank" rel="noopener">https://github.com/cydrobolt/polr</a></p>
<p><strong>1、安装Web环境</strong><br>我们可以用<code>lnmp</code>、<code>lamp</code>一键包或者宝塔之类的面板来搭建<code>web</code>环境。本教程以宝塔面板为例。<br><code>lnmp</code>安装方法可参考：<a href="https://www.southcat.net/archives/61/" target="_blank" rel="noopener">https://www.southcat.net/archives/61/</a><br>宝塔安装方法可看：<a href="https://www.bt.cn/Download/btsoftlinux.html" target="_blank" rel="noopener">https://www.bt.cn/Download/btsoftlinux.html</a></p>
<p><strong>2、添加网站并下载程序</strong><br>添加域名，并进入网站根目录，使用命令：</p>
<pre><code>cd /www/wwwroot/xx.com
#下载官方源码
git clone https://github.com/cydrobolt/polr.git
mv polr/{.,}* ./
#下载汉化文件
cd resources &amp;&amp; rm -rf views &amp;&amp; wget https://www.southcat.net/usr/down/porl_views.tar.gz
tar zxvf porl_views.tar.gz
cd ..</code></pre><p>如果汉化文件有问题的，可以参考该汉化地址：<a href="https://gitea.shiruihua.app/Quarter/polr\_view\_cn。" target="_blank" rel="noopener">https://gitea.shiruihua.app/Quarter/polr\_view\_cn。</a></p>
<p>提示<code>git</code>未安装的，使用命令：</p>
<pre><code>#Debian和Ubuntu系统
apt-get install git
#CentOS系统
yum install git</code></pre><p><strong>3、使用Composer安装</strong></p>
<pre><code>#安装Composer
curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer

#进入网站根目录运行
composer install --no-dev -o</code></pre><p><strong>4、编辑文件</strong><br>将<code>.env.setup</code>创建一个名为<code>.env</code>的副本。</p>
<pre><code>cp .env.setup .env</code></pre><p><strong>5、伪静态</strong><br>在宝塔面板上直接点击网站-设置-网站目录，选择<code>/public</code>文件夹，然后在伪静态那里填入以下代码：</p>
<pre><code>location / {
            try_files $uri $uri/ /index.php$is_args$args;
}</code></pre><p>再重启<code>Nginx</code>。最后进入<code>http://xx.com/setup</code>设置就可以了，如果打开出现错误，授权根目录所有文件就行了。<br><img src="https://www.southcat.net/usr/picture/Polr(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Polr(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="其它操作"><a href="#其它操作" class="headerlink" title="其它操作"></a>其它操作</h2><p><strong>1、修改设置</strong><br>是的，你没看错设置仅能通过<code>.env</code>这个文件修改。</p>
<p><strong>2、通过CDN获取真实IP</strong><br>若使用<code>Cloudflare</code>，请在<code>vender/autoload.php</code>的第<code>6</code>行加入：</p>
<pre><code>if (isset($_SERVER[&quot;HTTP_CF_CONNECTING_IP&quot;])) {
  $_SERVER[&apos;REMOTE_ADDR&apos;] = $_SERVER[&quot;HTTP_CF_CONNECTING_IP&quot;];
}</code></pre><p>其他<code>CDN</code>请自行查找。</p>
<pre><code>APP_TIMEZONE=Asia/Shanghai</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个去中心化的图片分享平台：ipfs.pics搭建教程</title>
    <url>/2280/</url>
    <content><![CDATA[<p>说明：<code>N</code>月前博主就分享过一个基于<code>IPFS</code>的去中心视频分享平台，查看：ipfstube安装教程，今天再分享个图片分享平台<code>ipfspics</code>，大概原理这里再说下，就是是你上传图片后，并不会存储到自己的服务器，而是会上传到<code>IPFS</code>，再转化成一个哈希值，你可以根据这个哈希进行下载，任何人都无法删除，包括你自己，就算你上传的那个平台倒闭，该图片也会存在。对这个有兴趣的也可以拿来做个图床什么的。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/ipfspics(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ipfspics(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/ipfspics/ipfspics-server" target="_blank" rel="noopener">https://github.com/ipfspics/ipfspics-server</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Docker Compose</strong></p>
<pre><code>curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
#验证是否安装成功
docker-compose --version
#返回以下类似信息即安装成功
docker-compose version 1.x</code></pre><p><strong>3、下载源码</strong></p>
<pre><code>git clone https://github.com/ipfspics/ipfspics-server.git
cd ipfspics-server
#安装镜像
docker-compose up -d</code></pre><p>然后就可以通过<code>ip:5000</code>访问。</p>
<p><code>CentOS</code>系统可能还需要开齐心ia端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 5000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=5000/tcp --permanent
firewall-cmd --reload</code></pre><h2 id="域名访问"><a href="#域名访问" class="headerlink" title="域名访问"></a>域名访问</h2><p>反代可以用<code>Nginx</code>、<code>Caddy</code>，这里只说宝塔和<code>Caddy</code>。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:5000</code>，再启用反向代理即可。至于启用<code>SSL</code>就不说了，直接在站点配置就可以启用。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;xx.com {
 gzip
 proxy / 127.0.0.1:5000
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;xx.com {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:5000
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<p><strong>3、Nginx配置</strong><br>如果你使用其它的，这里就大概发个<code>Nginx</code>反代配置，直接添加到配置文件即可。</p>
<pre><code>#在配置文件里添加
location / {
     proxy_pass http://127.0.0.1:5000;
     proxy_redirect off;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>博主发现这里有点坑的是，目录分类里，除了上传是正常的，其它貌似会报<code>500</code>错误，不过这个系统也只有上传有用，还可以拿来将就。而且上传完成后展示的地址来源直接是官方的，这对很多人来说估计很不适应，其实我们自己搭建的地址也可以做来源。</p>
<p>不过博主看了下源码，其实都可以解决掉，但需要我们修改下界面源码，这里就大概的说下修改方法。</p>
<pre><code>#该源码根目录在/root/ipfspics-server/app，如果我们修改主界面布局，或者想要去掉无效的分类，编辑index.php即可。
#上传后的界面显示源码在/root/ipfspics-server/app/pages，如果修改上半部分的显示，编辑preview.php文件；下半部分编辑browse.php文件。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以免费申请Let&#39;s Encrypt和TrustAsia SSL证书的网站</title>
    <url>/1881/</url>
    <content><![CDATA[<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以保护个人隐私的网络搜索服务：秘迹搜索搭建教程</title>
    <url>/2377/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前介绍过一个多平台聚合搜索服务<code>Searx</code>，都是以<code>Google</code>等国外搜索为主→传送门，然后这里说的秘迹搜索就是基于<code>Searx</code>二次开发，主要是聚合国内的百度、<code>360</code>、搜狗等搜索服务，专为国人开发，而且秘迹搜索可以最大程度的保护个人搜索隐私，<code>Ta</code>不会根据搜索关键词追踪用户，也不会通过历史搜索内容做广告推荐，目前该搜索源码开源，看见很多人想搭建个，发现教程挺简单的，这里就水个搭建教程。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/mijisousuo(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/mijisousuo(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/entropage/mijisou" target="_blank" rel="noopener">https://github.com/entropage/mijisou</a></p>
<p><strong>官方网站：</strong><a href="https://mijisou.com，不想自己搭建的直接就使用这个地址搜索。" target="_blank" rel="noopener">https://mijisou.com，不想自己搭建的直接就使用这个地址搜索。</a></p>
<p><strong>1、安装依赖</strong><br><code>CenOS 6</code>系统：</p>
<pre><code>#安装EPEL
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
#安装Python3和Redis
yum install python34 redis git screen -y
#安装pip3
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py
#启动Redis
service redis start
#设置Redis开机自启
chkconfig redis on</code></pre><p><code>CenOS 7</code>系统：</p>
<pre><code>#安装EPEL
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#安装Python3和Redis
yum install python36 redis git screen -y
#安装pip3
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py
#启动Redis
systemctl start redis
#设置Redis开机自启
systemctl enable redis</code></pre><p><code>Debian</code>/<code>Ubuntu</code>系统：</p>
<pre><code>#安装pip3和Redis
apt update
apt install python3-pip redis-server git screen -y</code></pre><p><strong>2、安装搜索</strong></p>
<pre><code>#拉取源码
git clone https://github.com/entropage/mijisou.git
#安装依赖
cd mijisou &amp;&amp; pip3 install -r requirements.txt
#编辑配置文件
nano searx/settings_et_dev.yml</code></pre><p>这里只说主要配置，先填写<code>Reids</code>服务器<code>IP</code>，参数如下：</p>
<pre><code>cache_server : &quot;127.0.0.1&quot;</code></pre><p>然后设置匿名访问，这个之前没有在<code>Searx</code>教程提过，主要是秘迹搜索以隐私为主，所以就配合下，这里就说下配置过程，具体方法看后面，当然你不设置也是不影响基本使用的。</p>
<p>运行的话，貌似<code>Github</code>只给了<code>flask</code>开发运行方法，这里不建议使用，所以就不写出来了，然后博主提供个<code>gunicorn</code>运行方法，使用命令：</p>
<pre><code>#设置下变量
export SEARX_SETTINGS_PATH=settings_et_dev.yml
#启动，端口可以自行修改
gunicorn searx.webapp:app -w 4 -b 127.0.0.1:8888 -D</code></pre><p>此时访问地址为<code>127.0.0.1:8888</code>，还需要使用域名反代才能访问，如果你要使用<code>ip</code>访问，将运行命令改成<code>0.0.0.0:8888</code>即可。</p>
<h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>反代可以用<code>Nginx</code>、<code>Apache</code>、<code>Caddy</code>，这里只说宝塔和<code>Caddy</code>。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:8888</code>，再启用反向代理即可。至于启用<code>SSL</code>就不说了，直接在站点配置就可以启用。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;www.southcat.net {
 gzip
 proxy / 127.0.0.1:8888 
}&quot; &gt;&gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:8888
}&quot; &gt;&gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<p><strong>3、Nginx配置</strong><br>如果你使用其它的，这里就大概发个<code>Nginx</code>反代配置，直接添加到配置文件即可。</p>
<pre><code>#在配置文件里添加
  location / {
      proxy_pass http://127.0.0.1:8888;
      proxy_set_header        Host                 $host;
      proxy_set_header        X-Real-IP            $remote_addr;
      proxy_set_header        X-Forwarded-For      $proxy_add_x_forwarded_for;
      proxy_set_header        X-Remote-Port        $remote_port;
      proxy_set_header        X-Forwarded-Proto    $scheme;
      proxy_redirect          off;
  }</code></pre><p>就可以打开域名进行访问了。</p>
<h2 id="配置匿名访问"><a href="#配置匿名访问" class="headerlink" title="配置匿名访问"></a>配置匿名访问</h2><p><strong>Morty项目地址：</strong><a href="https://github.com/asciimoo/morty" target="_blank" rel="noopener">https://github.com/asciimoo/morty</a></p>
<p>该功能主要用的<code>Morty</code>，大致就是重写网页以排除恶意<code>HTML</code>标记和属性，还替换外部资源引用以防止第三方信息泄露。</p>
<p><strong>1、安装Golang环境</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install golang
#创建目录并定义GOPATH环境变量指向该目录
mkdir ~/mjsmorty
echo &apos;export GOPATH=&quot;$HOME/mjsmorty&quot;&apos; &gt;&gt; ~/.bashrc
source ~/.bashrc

#CentOS/RHEL系统
yum -y install golang
#创建目录并定义GOPATH环境变量指向该目录。
mkdir ~/mjsmorty
echo &apos;export GOPATH=&quot;$HOME/mjsmorty&quot;&apos; &gt;&gt; ~/.bashrc
source ~/.bashrc</code></pre><p><strong>2、安装Morty</strong></p>
<pre><code>#安装
go get github.com/asciimoo/morty
mv ~/mjsmorty/bin/morty /usr/local/bin

#查看版本，有版本输出信息即按照成功
morty -version</code></pre><p><strong>3、启动Morty</strong><br>先随机生成一个十六进制的<code>key</code>，使用命令：</p>
<pre><code>openssl rand -hex 16</code></pre><p>启动命令：</p>
<pre><code>#监听端口和key值自行修改
screen -dmS morty morty -listen 127.0.0.1:3000 -key moerats</code></pre><p>此时<code>Morty</code>监听地址为<code>http://127.0.0.1:3000</code>，然后再使用一个二级域名，比如<code>morty.southcat.net</code>对该地址反代，反代参考上面的教程，建议加上<code>SSL</code>。</p>
<p>然后修改配置文件<code>searx/settings_et_dev.yml</code>，大致修改如下：</p>
<pre><code>#这里的key值修改成上面随机生成的十六进制值
secret_key : &quot;moerats&quot;

#填入你的morty地址、key值、秘迹搜索地址，这里的key需要和上面的一致
result_proxy:
    url : https://morty.southcat.net
    key : moerats
    server_name : https://www.southcat.net</code></pre><p>然后重启秘迹搜索生效。最后主题目录为<code>searx/static/themes</code>，设置方法可以自己参考<code>Github</code>地址的提示。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以同时监控多个VPS服务器信息的面板：psdash安装教程</title>
    <url>/1870/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>psdash</code>是一个可以监控所有<code>VPS</code>服务器的<code>CPU</code>、内存、硬盘、网络、<code>SWAP</code>的面板。本教程是基于<code>psdash</code>的基础上添加<code>httpbasicauth</code>（也就是打开页面弹出提示框，要输入用户名密码），可自定义模板。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/psdash_HTTPBasicAuth(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/psdash_HTTPBasicAuth(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/psdash_HTTPBasicAuth(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/psdash_HTTPBasicAuth(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p><code>psdash</code>的所有功能支持多节点/集群部署，所有数据每<code>3</code>秒自动更新，无需手动刷新页面。</p>
<pre><code>总览页：支持查看 cpu, disks, network, users, memory, swap , network
进程：进程列表，并展示每个进程详情，包括打开的文件数、打开的连接数、内存占用、子进程、资源限制
硬盘：所有硬盘和分区
网络：所有网络接口和使用的流量，以及当前的网络连接
日志：展现自定义的日志文件详情，并支持搜索文件内容</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/wenguonideshou/psdash_HTTPBasicAuth。" target="_blank" rel="noopener">https://github.com/wenguonideshou/psdash_HTTPBasicAuth。</a></p>
<p>1、主节点和<code>agent</code>节点都执行下面的命令(安装<code>psdash</code>)</p>
<pre><code>#Debian/Ubuntu
apt-get install build-essential python-dev -y
apt-get install python-setuptools -y
git clone https://github.com/Jahaja/psdash.git
cd psdash
pip install -U setuptools
python setup.py install

#RHEL (Fedora, CentOS)
yum groupinstall &quot;Development Tools&quot; -y
yum install python-devel -y
yum install python-setuptools -y
git clone https://github.com/Jahaja/psdash.git
cd psdash
pip install -U setuptools
python setup.py install</code></pre><p>2、主节点执行</p>
<pre><code>pip install flask-httpauth
git clone https://github.com/wenguonideshou/psdash_HTTPBasicAuth.git
cd psdash_HTTPBasicAuth
python run.py -l &apos;/var/log/**/*.log&apos;</code></pre><p>3、<code>agent</code>节点执行</p>
<pre><code>psdash -a --register-as xxx -l &apos;/var/log/**/*.log&apos; --register-to http://主节点IP:5000</code></pre><h2 id="如何修改参数？"><a href="#如何修改参数？" class="headerlink" title="如何修改参数？"></a>如何修改参数？</h2><p>在<code>run.py</code>的<code>app=Flask</code>(<code>__name__</code>)下面添加如下语句：</p>
<pre><code>app.config.xxx = yyy</code></pre><p><code>xxx</code>为下面的参数，<code>yyy</code>为值，比如：</p>
<pre><code>app.config.PSDASH_ALLOWED_REMOTE_ADDRESSES = &quot;10.0.0.2, 192.29.20.2&quot;
app.config.PSDASH_URL_PREFIX = &quot;/psdash&quot;
app.config.PSDASH_LOG_LEVEL = logging.INFO
app.config.PSDASH_LOG_LEVEL = &quot;%(levelname)s&quot;
app.config.PSDASH_NODES = [{&apos;name&apos;: &apos;mywebnode&apos;, &apos;host&apos;: &apos;10.0.0.2&apos;, &apos;port&apos;: 5000}]
app.config.PSDASH_NET_IO_COUNTER_INTERVAL = 3
app.config.PSDASH_LOGS_INTERVAL = 60
app.config.PSDASH_REGISTER_INTERVAL = 60
app.config.PSDASH_LOGS    = [&apos;/var/log/*.log&apos;]
app.config.PSDASH_REGISTER_TO = &apos;http://10.0.20.2:5000&apos;
app.config.PSDASH_REGISTER_AS = &apos;myvps&apos;
app.config.PSDASH_HTTPS_KEYFILE = &apos;/home/user/private.key&apos;
app.config.PSDASH_HTTPS_CERTFILE    = &apos;/home/user/certificate.crt&apos;
app.config.PSDASH_ENVIRON_WHITELIST = [&apos;HOME&apos;]</code></pre><p>参数详细说明请参考：<a href="https://github.com/Jahaja/psdash#configuration。" target="_blank" rel="noopener">https://github.com/Jahaja/psdash#configuration。</a></p>
<p>修改用户名密码：</p>
<pre><code>修改web.py里的users = {&quot;admin&quot;: &quot;admin&quot;,}   前面是用户名后面是密码，可以添加多个用户</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以将本地文件上传至VPS服务器的工具：jQuery-File-Upload精简美化版</title>
    <url>/2240/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前老有人问博主除了<code>FTP</code>还有啥方法能把本地文件上传到<code>VPS</code>服务器，这里就分享个工具<code>jQuery-File-Upload</code>，一个文件上传工具，该工具可以上传任何文件，支持在线预览视频，上传后也可以在线删除等等，很方便，而且个人觉得上传比<code>FTP</code>要稳。由于原文件样式很不好看，所以博主就找前端大佬Zero博主帮忙进行精简和美化了下，也小小的适配了手机端。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/jQuery-File-Upload.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>文件下载：</strong>jQuery-File-Upload.zip</p>
<p>为了考虑国内服务器的加载速度，该源码所有资源都本地化了，所以体积比简化前还大。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>环境要求：</strong><code>Nginx/Apache</code>、<code>PHP</code></p>
<p><strong>1、直接使用</strong><br>如果你自己有建站环境，直接将源码丢进网站根目录，再给予<code>server/php/files</code>目录可写入权限即可。上传后的文件保存在<code>server/php/files</code>文件夹，相关上传配置可在<code>server/php/UploadHandler.php</code>里修改。</p>
<p><strong>2、Docker安装</strong><br>如果你只是单纯的想上传文件，这里博主就制作了个<code>Docker</code>镜像，很快就装好了。</p>
<p>安装<code>Docker</code>：</p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p>安装<code>jQuery-File-Upload</code>：</p>
<pre><code>docker run --name upload -d -p 6800:80 -v /home:/var/www/server/php/files moerats/jquery-file-upload:latest

#参数说明
-p 6800:80 前面的6800为容器映射到外部的端口，等于你访问ip:6800就等于访问程序，可自行修改
-v /home:/var/www/server/php/files 将程序里上传的文件映射到服务器的/home文件夹，可自行修改</code></pre><p>完成后我们可以通过<code>ip:6800</code>访问程序，并上传文件至<code>/home</code>文件夹。</p>
<p>注意我们需要给映射的文件夹<code>777</code>权限，不然会上传失败。</p>
<pre><code>chmod 777 /home</code></pre><p>部分<code>CentOS</code>系统可能需要开启防火墙端口，不然会打不开。</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 6800 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=6800/tcp --permanent
firewall-cmd --reload</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该程序配合无上传功能的<code>H5ai</code>、<code>DirectoryLister</code>目录索引一起使用挺不错的。特别是<code>Docker</code>可以直接将上传目录映射到具体的文件夹，有兴趣的可以玩玩。</p>
<p>如果你服务器空间很大，需要分批上传多个文件夹，可以多开几个<code>Docker</code>容器，比如分批传到<code>/home</code>和<code>/rats</code>文件夹，可分别运行命令</p>
<pre><code>#记得--name参数和-p端口映射得不一样
docker run --name Linux -d -p 6800:80 -v /home:/var/www/server/php/files moerats/jquery-file-upload:latest
docker run --name Win -d -p 6877:80 -v /rats:/var/www/server/php/files moerats/jquery-file-upload:latest</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以在线获取Let&#39;s Encrypt的免费SSL证书的网站</title>
    <url>/1614/</url>
    <content><![CDATA[<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以自动安装多网站程序的面板 ：YunoHost安装教程</title>
    <url>/2092/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>YunoHost</code>是一个完全免费的多功能应用程序面板，提供了使用简便的一键安装网站程序并自动配置功能，让不熟悉一些网站搭建的小白更傻瓜式建站。通俗的讲，该面板更像是一个集齐很多网站应用程序的商店，让我们搭建网站和安装手机软件一样简单。而且还带备份，监控服务器，防火墙设置，添加多用户和多域名等功能，可以对指定的用户分配不同的应用程序和域名，可以说非常的强大。</p>
<p>博主仔细看了下支持的程序非常多，目前已接近<code>300</code>个了，电影，博客，社交，聊天等等都有，这里列举几个常见的：</p>
<pre><code>Flarum轻论坛、Nextcloud网盘、owncloud网盘、Plex媒体服务器、Seafile网盘、Telegram机器人、Transmission客户端、WordPress博客、Yourls短地址</code></pre><p>更多程序查看：<a href="https://github.com/YunoHost-Apps。" target="_blank" rel="noopener">https://github.com/YunoHost-Apps。</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/YunoHost(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/YunoHost(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/YunoHost(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong>仅支持<code>Debian 9</code>，且未安装<code>Apache</code>/<code>Nginx</code>。</p>
<p>运行命令：</p>
<pre><code>#安装必要环境
apt-get update -y
apt-get install ca-certificates dialog git -y
#安装YunoHost
git clone https://github.com/YunoHost/install_script /tmp/install_script
cd /tmp/install_script &amp;&amp; ./install_yunohost</code></pre><p>安装完成后，会继续要我们安装<code>Post</code>来完成<code>YunoHost</code>的初始配置。</p>
<pre><code>#安装Post时，会要求我们输入域名和管理员密码
Main domain: 
New administration password: 
Confirm new administration password: </code></pre><p>最后我们通过访问<code>https://xx.com</code>并输入管理员密码就可以进入后台了。</p>
<p>注意刚开始使用<code>https</code>访问是会提示不安全的，这时候我们去后台点击<code>Domains</code>，找到该域名，进入并配置<code>Let&#39;s Encrypt</code>证书，然后重新打开域名就会提示安全了。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>添加多用户，多域名等其它操作就不过多讲解了，这里只说下应用安装，我们除了可以安装面板自带的程序以外，还可以安装<code>Github</code>上指定的应用程序，先点击<code>Applications</code>-<code>Install</code>，在最下面可以看到安装入口，然后直接将程序的<code>Github</code>地址复制进去安装即可，<code>Github</code>程序地址：点击进入。<br><img src="https://www.southcat.net/usr/picture/YunoHost(4).png" alt="请输入图片描述" title="请输入图片描述"><br>管理员面板地址：<code>https://xx.com/yunohost/admin/</code>，其它的自行研究。</p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以绑定多个OneDrive网盘的极简目录列表：OneList</title>
    <url>/2463/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>OneList</code>以前介绍过，主要的特色就是解决了因<code>OneDrive API</code>抽风导致的很多问题，稳定性和访问速度都是不错的。不过由于使用<code>Python</code>写的，而<code>Py</code>单线程容易阻塞，响应不够迅速，刷新缓存时，<code>Web</code>端请求基本不可用，所以在整体性能上有点瑕疵。基于<code>Golang</code>的性能更好，效率更高，多盘并发缓存等众多好处，于是萌咖大佬就弃用<code>Python</code>版本，使用<code>Golang</code>重写了<code>OneList</code>，同时支持国际版、个人免费版(家庭版)、中国版(世纪互联)及多网盘绑定。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/onelistgo.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2020.01.09】
修复内存占用过大。
新增支持在线视频播放的移动端自适应主题。

【2019.12.29】
新增隐藏目录或者文件。直接跳过缓存，减少API调用。
新增目录加密，支持不同目录不同账户密码。HTTP 401认证。

【2019.12.28】
新增搜索功能。</code></pre><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>支持国际版、个人免费版(家庭版)、中国版(世纪互联)。</li>
<li>支持同时列出多个盘的目录。(要求每个盘的<code>SubPath</code>唯一)</li>
<li>支持文件夹内超过<code>200</code>个项目。</li>
<li>支持后台自动刷新缓存。</li>
<li>支持路径中含有特殊字符。</li>
<li>数据储存在内存中，响应更加迅速。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/MoeClub/OneList/tree/master/Rewrite" target="_blank" rel="noopener">https://github.com/MoeClub/OneList/tree/master/Rewrite</a></p>
<p><strong>1、授权认证</strong><br>点击右侧<code>URL</code>登录并授权，授权【国际版、个人版(家庭版)】、【中国版(世纪互联)】。</p>
<p>授权后会获取一个<code>localhost</code>开头打不开的链接，这里复制好整个链接地址，包括<code>localhost</code>。</p>
<p><strong>2、安装OneList</strong></p>
<pre><code>#新建并进入OneList目录
mkdir /opt/OneList &amp;&amp; cd $_

#64位系统下载
wget https://raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/amd64/linux/OneList
#32位系统下载
wget https://raw.githubusercontent.com/MoeClub/OneList//master/Rewrite/i386/linux/OneList
#arm架构下载
wget https://raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/arm/linux/OneList

#给予权限
chmod +x OneList</code></pre><p><strong>3、使用命令</strong></p>
<pre><code>Usage of OneList:
  -a string
        // 初始化配置文件,添加新配置
        Setup and Init auth.json.
  -bind string
        // 绑定IP地址(公网: 0.0.0.0)
        Bind Address (default &quot;127.0.0.1&quot;)
  -port string
        // 绑定端口(HTTP:80)
        Port (default &quot;5288&quot;)
  -s string
        // 设置 SubPath 项, 需要与 -a 一起使用.
        Set SubPath. [unique per account] (default &quot;/&quot;)
  -c string
        // 配置文件
        Config file. (default &quot;config.json&quot;)
  -t string
        // Index.html 目录样式文件
        Index file. (default &quot;index.html&quot;)
  -cn
        // 开关
        // 授权中国版(世纪互联), 需要此参数.
        OneDrive by 21Vianet.
  -ms
        // 开关
        // 授权个人版(家庭版), 需要此参数.
        OneDrive by Microsoft.</code></pre><p><strong>4、生成配置文件</strong></p>
<pre><code>#国际版，将url换成你上面复制的授权地址，包括http://loaclhost。
./OneList -a &quot;url&quot; -s &quot;/onedrive01&quot;

#个人版(家庭版)，将url换成你上面复制的授权地址，包括http://loaclhost。
./OneList -ms -a &quot;url&quot; -s &quot;/onedrive02&quot;

#中国版(世纪互联)，将url换成你上面复制的授权地址，包括http://loaclhost。
./OneList -cn -a &quot;url&quot; -s &quot;/onedrive03&quot;</code></pre><p>提示<code>Success! Add config. &#39;/path/to/config.json&#39;</code>信息，则添加成功。</p>
<p>这里要注意的是：</p>
<pre><code>1、授权url地址只能用一次，超过需要重新授权。
2、命令中的/onedrive01参数为指定网盘地址后缀，比如http://domain.com/onedrive01。
3、授权多个网盘的话，重复授权多次即可，参数均会添加到一个配置文件，且后缀不能重复。
4、地址后缀填错了的，可以稍后在配置文件中修改。</code></pre><p>本文默认的配置文件路径<code>/opt/OneList/config.json</code>，参数详解，可自行修改：</p>
<pre><code>[
  {
    // 如果是家庭版或者个人免费版, 此项应为 true.
    &quot;MSAccount&quot;: false,
    // 如果是中国版(世纪互联), 此项应为 true.
    &quot;MainLand&quot;: false,
    // 授权令牌
    &quot;RefreshToken&quot;: &quot;1234564567890ABCDEF&quot;,
    // 单配置文件中,此项要唯一.将此OneDrive中设置为`RootPath`目录映射在`http://127.0.0.1:5288/onedrive` 下.
    // (只推荐一个盘位的时候使用根目录&quot;/&quot;.)
    &quot;SubPath&quot;: &quot;/onedrive&quot;,
    // 读取OneDrive的某个目录作为根目录. (支持根目录&quot;/&quot;)
    &quot;RootPath&quot;: &quot;/Test&quot;,
    // 隐藏OneDrive目录中的文件夹和文件, 条目间使用 &quot;|&quot; 分割. (跳过缓存设置的条目.)
    &quot;HidePath&quot;: &quot;/Test/Obj01|/Test/Obj02&quot;,
    // 使用用户名和密码加密OneDrive目录. 目录和用户名密码间使用 &quot;?&quot; 分割, 用户名密码使用 &quot;:&quot; 分割, 条目间使用 &quot;|&quot; 分割. 无效条目将跳过.
    &quot;AuthPath&quot;: &quot;/Test/Auth01?user01:pwd01|/Test/Auth02?user02:pwd02&quot;,
    // 缓存刷新间隔.(所有项目中的刷新时间取最小值为有效刷新间隔)
    &quot;RefreshInterval&quot;: 900
  }
]</code></pre><p>这里注意，挂载多个盘符的时候，<code>SubPath</code>参数请不要为<code>/</code>，单个网盘建议为<code>/</code>。</p>
<p><strong>5、运行OneList</strong></p>
<pre><code>#下载默认的index.html主题，与config.json同目录，即本文默认的/opt/OneList
wget https://raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/index.html -P /opt/OneList
#监听8000地址，自行修改
/opt/OneList/OneList -bind 0.0.0.0 -port 8000</code></pre><p>最后打开<code>ip:端口</code>访问即可，如果你挂载网盘的时候<code>SubPath</code>为<code>/</code>，那么直接通过根目录查看，如果为<code>/onedrive1</code>，那么通过<code>ip:端口/onedrive1</code>查看，如果该路径不存在，则会提示<code>No Found.</code>。</p>
<p>且首次运行会异步缓存，也就是至少有一个盘缓存成功了，才会显示。</p>
<p><strong>6、开机自启</strong><br>这里新建一个简单的<code>systemd</code>配置文件，适用<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p>
<p>使用命令：</p>
<pre><code>#设置你的运行监听端口，即你可以通过ip:端口访问程序，这里默认8000。
port=&quot;8000&quot;
#将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/onelist.service &lt;&lt;EOF
[Unit]
Description=onelist
After=network.target

[Service]
Type=simple
ExecStart=/opt/OneList/OneList -bind 0.0.0.0 -port ${port}
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF
#启动并设置开机自启
systemctl start onelist
systemctl enable onelist</code></pre><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><pre><code>提示：下载主题的index.html文件，覆盖默认index.html文件，本文默认存放/opt/OneList，然后重启程序即可</code></pre><p><strong>主题地址：</strong><a href="https://github.com/MoeClub/OneList/tree/master/Rewrite/@Theme" target="_blank" rel="noopener">https://github.com/MoeClub/OneList/tree/master/Rewrite/@Theme</a></p>
<p><strong>1、HaorWu</strong></p>
<pre><code>#作者
https://github.com/HaorWu

#特点
支持移动端自适应
支持当页搜索
支持按文件名, 日期, 大小排序
支持主动查看图片
支持在线播放视频

#下载地址
https://raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/%40Theme/HaorWu/index.html</code></pre><p><strong>2、jackjieYYY</strong></p>
<pre><code>#作者
https://github.com/jackjieYYY
https://www.hostloc.com/space-uid-38920.html

#特点
支持移动端自适应
支持当页搜索
支持按文件名, 日期, 大小排序
支持在线播放视频

#下载地址
https://raw.githubusercontent.com/MoeClub/OneList/master/Rewrite/%40Theme/jackjieYYY/index.html</code></pre><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>启动：systemctl start onelist
停止：systemctl stop onelist
重启：systemctl restart onelist
查看状态：systemctl status onelist</code></pre><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><pre><code>#未设置开机自启
rm -rf /opt/OneList

#设置过开机自启
systemctl stop onelist
systemctl disable onelist
rm -rf /opt/OneList /etc/systemd/system/onelist.service</code></pre><p>最后如果我们只想显示网盘的某些文件夹，那么可以分别挂载该网盘的不同目录即可，具体操作看配置文件说明。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以观看斗鱼/虎牙/熊猫/B站/全民等直播平台的第三方客户端：Moon Light v0.5</title>
    <url>/1986/</url>
    <content><![CDATA[<p><strong>说明：</strong>在吾爱逛了一圈，发现了这个客户端，很实用，解析很快，支持斗鱼<code>TV</code>、虎牙<code>TV</code>、熊猫<code>TV</code>、<code>B</code>站、龙珠、金刚、全民等直播平台，对于喜欢逛各大直播平台的人来说，方便了不少，毕竟一个客户端就可以观看所有平台你喜欢的主播，还支持监控各主播在线情况。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Moon_Light.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>支持多个直播平台，可以添加多个主播。</li>
<li>绿色小巧，极低的<code>CPU</code>占用率。</li>
<li>软件会定期监控主播的在线状态，在线小红点会显示红色，不在线显示灰色。</li>
<li>退出软件自动保存主播列表，下次启动会自动加载。</li>
<li>双击画面或者按<code>F11</code>即可全屏观看，再次双击画面，或者按<code>F11</code>，或者按<code>ESC</code>键即可退出全屏。</li>
<li>鼠标移到画面中会显示调节菜单，暂时支持调节音量，后续会支持更多功能。</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>下载地址：</strong>Moon_Light v0.5.7z</p>
<p>1、打开软件，把直播间地址复制到右下角的空白处，点击添加。<br>2、添加后主播会显示在右侧的主播列表。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以在浏览器上运行的SSH客户端：WebSSH2安装教程</title>
    <url>/1895/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们登录<code>VPS</code>都会使用<code>Xshell</code>，<code>Putty</code>客户端，当然这里指的是<code>Windows</code>电脑的用户，不过好像在<code>MAC</code>电脑上登录有点麻烦，有的手机也不好操作，这里就需要使用到本文介绍的<code>WebSSH</code>客户端了，可以直接在浏览器里打开使用，有时候还是挺方便的。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/WebSSH2.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装NPM</strong><br>教程查看：Debian/Ubuntu/CentOS安装最新版的Node.js和NPM教程</p>
<p><strong>2、安装Webssh2</strong></p>
<pre><code>apt-get -y install git  #debian/ubuntu系统
yum -y install git  #centos系统
git clone https://github.com/billchurch/WebSSH2
cd WebSSH2
npm install --production</code></pre><p><strong>3、运行Webssh2</strong><br>这里需要使用到<code>screen</code>，让<code>Webssh2</code>程序在后台一直运行即可。<br>使用命令：</p>
<pre><code>yum install screen  #centos系统
apt-get install screen  #debian/ubuntu系统
screen -S Webssh2
cd WebSSH2
npm start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个在浏览器上运行的FTP客户端：SPRUT.io安装教程</title>
    <url>/2005/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前介绍了个可以在浏览器上运行的<code>SSH</code>客户端<code>WebSSH2</code>，查看：一个可以在浏览器上运行的SSH客户端：WebSSH2，这次再介绍个在浏览器上运行的<code>FTP</code>客户端<code>SPRUT.io</code>，可以很方便让我们无论在哪里，都可以在浏览器上轻易的操作<code>VPS</code>上的文件。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>SPRUT.io</code>是一个全功能的文件管理器，它可以当作<code>FTP</code>客户端来使用，可以直接通过浏览器在<code>VPS</code>服务器上方便地操作编辑文件。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/SPRUT.io(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/SPRUT.io(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/SPRUT.io(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装并启动Docker</strong></p>
<pre><code>curl -sSL https://get.docker.com/ | sh
service docker start</code></pre><p><strong>2、安装SPRUT.io</strong></p>
<pre><code>#创建目录
mkdir /opt/sprutio
cd /opt/sprutio

#下载并安装SPRUT.io
wget https://raw.githubusercontent.com/LTD-Beget/sprutio/master/run.sh
chmod +x run.sh
./run.sh</code></pre><p>安装完成后，可以进入<code>https://IP:9443</code>，输入用户名和密码进行访问了。由于没有<code>SSL</code>证书，浏览器可能显示不安全，继续访问即可。</p>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><p><strong>1、启动</strong></p>
<pre><code>./run.sh</code></pre><p><strong>2、停止</strong></p>
<pre><code>./run.sh stop</code></pre><p><strong>3、升级</strong></p>
<pre><code>./run.sh pull</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以让用户执行测试命令的Web界面：LookingGlass一键安装脚本</title>
    <url>/2110/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>LookingGlass</code>大家可能都有点熟悉，因为很多主机商给的测试界面就是用<code>LookingGlass</code>搭建的，可以允许公众用户代表你的<code>VPS</code>服务器执行一些网络命令，比如<code>host</code>、<code>mtr</code>、<code>ping</code>、<code>traceroute</code>、下载速度测试等，可以让人很清楚的知道<code>VPS</code>服务器的网络情况，这里整了个一键脚本，顺便说下手动安装教程。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/LookingGlass_wb.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h2><p><strong>Github地址：</strong><a href="https://github.com/telephone/LookingGlass" target="_blank" rel="noopener">https://github.com/telephone/LookingGlass</a></p>
<p>脚本适用于<code>Debian 8、9</code>系统，且为纯净无<code>Web</code>环境的系统，本脚本自动签发<code>SSL</code>证书，运行前请先解析好域名到服务器。</p>
<p>运行命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/LookingGlass_install.sh &amp;&amp; bash LookingGlass_install.sh</code></pre><p>期间会要求你输入域名，及<code>LookingGlass</code>配置信息。</p>
<pre><code>请输入你的LookingGlass域名信息: lg.southcat.net  #输入你的域名

Do you wish to install LookingGlass? (y/n): y  #选择y开始安装
Enter your website name (Header/Logo) []:Vultr JP  #设置名称
Enter the public URL to this LG (including http://) []: https：lg.southcat.net  #输入域名网站
Enter the servers location []: Tokyo, Japan  #输入VPS服务器所在地
Enter the test IPv4 address []: 108.61.126.*  #输入服务器IP
Enter the test IPv6 address (Re-enter everytime this script is run) []:  #输入IPV6，没有就跳过
Enter the size of test files in MB (Example: 50MB 100MB 1000MB) []:  #输入测试文件大小，可同时输入多个
Do you wish to enable rate limiting of network commands? (y/n): n  #选择n
Would you like to choose a different theme? (y/n): y  #输入y选择其他主题
Enter the name of the theme (case sensitive) [bootstrap]:  #直接Enter默认
Enter the username of your webserver (E.g. www-data): root  #选择root
Enter the user group of your webserver (E.g. www-data): root  #选择root</code></pre><p>最后等待完成后，打开域名即可。</p>
<p>如果获取<code>SSL</code>证书失败，提示<code>Failed to connect to get.acme.sh port 443: Connection refused</code>，可能是<code>get.acme.sh</code>抽风打不开，这时候我们可以从<code>Github</code>上安装<code>acme.sh</code>。</p>
<pre><code>apt-get install git socat netcat -y
git clone https://github.com/Neilpang/acme.sh.git
cd ./acme.sh
./acme.sh --install</code></pre><p>然后再运行脚本即可。</p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p>该方法适用于任何系统，特别是已经装了<code>Web</code>网站环境的。</p>
<p><strong>1、安装Web环境</strong><br>如果你已经安装了<code>Web</code>网站环境，则跳过这一步，没有就安装。</p>
<pre><code>#请进入相应的安装界面进行操作，只需要安装Nginx、PHP。
宝塔面板：https://www.bt.cn/bbs/thread-1186-1-1.html
OneinStack：https://oneinstack.com/auto</code></pre><p><strong>2、安装LookingGlass</strong><br>添加域名，然后进入网站根目录。将<code>LookingGlass</code>源码下到根目录。</p>
<pre><code>#进入网站目录
cd /www/xx.com
#PHP5.x下载
wget https://www.southcat.net/usr/down/LookingGlass_php5.zip
#PHP7.x下载
wget https://www.southcat.net/usr/down/LookingGlass_php7.zip

#解压，如果是5.x，就将7改成5
unzip LookingGlass_php7.zip &amp;&amp; mv LookingG/* ..
#开始配置LookingGlass
cd LookingGlass &amp;&amp; bash configure.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个可以解决因api抽风出现空目录的OneDrive目录程序：OneList</title>
    <url>/2365/</url>
    <content><![CDATA[<p><strong>说明：</strong>目前<code>OneDrive</code>目录程序已经很多了，比如：PyOne、OneIndex和OLAINDEX。这几个各有特色，都挺好用的，不过有时候<code>api</code>在高峰期抽风的时候，都很容易出现空目录的情况，导致下载会出现问题，这里萌咖和sxyazi大佬就历时<code>N</code>天，写了个基于<code>Python3</code>的简约<code>OneDrive</code>目录列表，同时换了一种<code>api</code>来防止因使用人过多导致抽风等问题，稳定性大大的增加，而且使用<code>Redis</code>动态缓存策略，打开目录的速度是相当的快，不过该程序初衷只想安静的做个目录程序，所以是不会增加看视频的功能，如果你想看视频，那就选择开头的<code>3</code>个程序。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/OneList.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/0oVicero0/OneList/" target="_blank" rel="noopener">https://github.com/0oVicero0/OneList/</a></p>
<p><strong>说明：</strong>该程序不适用<code>OneDrive</code>个人版，且建议使用<code>Debian</code>系统安装，会很快。</p>
<p><strong>1、安装依赖</strong><br><code>CenOS 6</code>系统：</p>
<pre><code>#安装EPEL
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
#安装Python3和Redis
yum install python34 redis git -y
#安装pip3
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py
#启动Redis
service redis start
#设置Redis开机自启
chkconfig redis on</code></pre><p><code>CenOS 7</code>系统：</p>
<pre><code>#安装EPEL
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#安装Python3和Redis
yum install python36 redis git -y
#配置Python3软链接
ln -s /usr/bin/python3.6 /usr/bin/python3
#安装pip3
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py
#启动Redis
systemctl start redis
#设置Redis开机自启
systemctl enable redis</code></pre><p><code>Debian</code>/<code>Ubuntu</code>系统：</p>
<pre><code>#安装pip3和Redis
apt update
apt install python3-pip redis-server git -y</code></pre><p><strong>2、安装OneList</strong></p>
<pre><code>#拉取源码
git clone https://github.com/0oVicero0/OneList.git
#安装依赖
cd OneList &amp;&amp; pip3 install -r requirements.txt</code></pre><p><strong>3、获取auth_token</strong></p>
<pre><code>提示：获取方式建议选择方法一。</code></pre><p>方法一：直接访问地址→传送门，然后登录你的账号获取<code>auth_token</code>即可。</p>
<p>方法二：先使用浏览器访问该地址→传送门，登录你的<code>OneDrive</code>账号，复制地址栏<code>code=</code>和<code>&amp;session</code>之间的参数。</p>
<p>获取<code>refresh_token</code>，在<code>SSH</code>客户端使用命令：</p>
<pre><code>#将下面auth_token替换成你获取到的参数，再使用命令
code=&quot;auth_token&quot;
wget --no-check-certificate --post-data=&quot;client_id=ea2b36f6-b8ad-40be-bc0f-e5e4a4a7d4fa&amp;client_secret=h27zG8pr8BNsLU0JbBh5AOznNS5Of5Y540l/koc7048=&amp;grant_type=authorization_code&amp;resource=https://api.office.com/discovery/&amp;redirect_uri=http://localhost/onedrive-login&amp;code=$code&quot; &apos;https://login.microsoftonline.com/common/oauth2/token&apos; -qO-</code></pre><p>然后复制<code>refresh_token</code>参数后面的字段。</p>
<p><strong>4、运行</strong><br>接下来在<code>OneList</code>目录新建<code>config.json</code>配置文件。</p>
<pre><code>nano config.json</code></pre><p>将以下内容复制进去：</p>
<pre><code>#将下面refresh_token替换成你获取到的字段
{
  &quot;token&quot;: &quot;&lt;refresh_token&gt;&quot;,
  &quot;location_path&quot;: &quot;/&quot;,
  &quot;start_directory&quot;: &quot;/&quot;,
  &quot;threads&quot;: 3,
  &quot;diff_seconds&quot;: 480,
  &quot;refresh_seconds&quot;: 720,
  &quot;metadata_cached_seconds&quot;: 768,
  &quot;structure_cached_seconds&quot;: 840
}</code></pre><p>再使用<code>ctrl+x</code>、<code>y</code>保存退出。</p>
<p>开始运行：</p>
<pre><code>gunicorn app:app -b 127.0.0.1:8888 -D</code></pre><p>此时访问地址为<code>127.0.0.1:8888</code>，还需要使用域名反代才能访问，如果你要使用<code>ip</code>访问，将运行命令改成<code>0.0.0.0:8888</code>即可。</p>
<p><strong>5、域名反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:8888
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>该配置会自动签发<code>SSL</code>，请提前解析域名到<code>VPS</code>服务器。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个基于新浪的图床：Atc图床程序，支持QQ截图后直接粘贴上传</title>
    <url>/2317/</url>
    <content><![CDATA[<p><strong>说明：</strong>目前博主发的图床程序挺多的，基于新浪的大概有：<code>Fantasy-field</code>、<code>AUXPI</code>，这里就再分享个由<code>PyOne</code>作者使用<code>WebUploader</code>写的一个基于新浪的<code>Atc</code>图床程序，上传图片后直接放进新浪图床，不占用服务器空间，且支持<code>QQ</code>截图后，使用<code>Ctrl+V</code>键导入上传，安装挺简单的，这里发下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Atc_tc(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Atc_tc(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>上传模式，支持拖拽文件、点击上传、复制粘贴(截图之后粘贴板有图片信息)</li>
<li>支持批量上传</li>
<li>支持选择图片大小</li>
</ul>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li>兼容<code>Python2.7</code>及以上版本</li>
<li>兼容<code>windows</code>和<code>linux</code></li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/abbeyokgo/Atc" target="_blank" rel="noopener">https://github.com/abbeyokgo/Atc</a></p>
<p>这里依然只说<code>Linux</code>系统使用方法。</p>
<p><strong>1、安装pip</strong></p>
<pre><code>#CentOS 6.x 32位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 6.x 64位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 7.x
yum install -y epel-release
yum install -y python-pip
#如果CentOS 7安装出现No package python-pip available，可以用以下命令进行安装
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py

#Debian/Ubuntu系统
apt-get -y update
apt-get -y install python-pip</code></pre><p><strong>2、下载源码</strong></p>
<pre><code>#进入/home文件夹下载源码
cd /home
git clone https://github.com/abbeyokgo/Atc.git
cd Atc
#配置账号信息
nano config.py</code></pre><p>填入以下信息：</p>
<pre><code>WEIBO_USERNAME : 微博账号
WEIBO_PASSWORD : 微博密码
YUNDAMA_USERNAME : 云打码账号
YUNDAMA_PASSWORD : 云打码密码</code></pre><p>这里为了可以正常登陆微博，使用云打码通过验证码验证。请提前注册云打码(注册地址)，并充值<code>1</code>元才能使用！</p>
<p><strong>3、安装依赖并运行</strong></p>
<pre><code>#安装依赖
pip install -r requirements.txt
#使用35000端口运行，端口可自行修改为其它端口，后面的就自行修改
gunicorn -keventlet -b 0:35000 run:app</code></pre><p>接下来访问：<code>http://ip:35000</code>即可。</p>
<p>如果<code>Web</code>界面打不开，可能还需要打开防火墙端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 35000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=35000/tcp --permanent
firewall-cmd --reload</code></pre><h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>如果你使用域名的话，还需要反代下端口，反代可以用<code>Nginx</code>、<code>Caddy</code>。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:35000</code>，再启用反向代理即可。至于启用<code>SSL</code>就不说了，直接在站点配置就可以启用。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#修改你的域名，再将下面整体一起复制到SSH运行！
echo &quot;xx.com {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:35000
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>然后就可以使用域名访问了。</p>
<p><strong>3、Nginx配置</strong><br>如果你使用其它的，这里就大概发个<code>Nginx</code>反代配置，直接添加到配置文件即可。</p>
<pre><code>#在配置文件里添加
location / {
     proxy_pass http://127.0.0.1:35000;
     proxy_redirect off;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }</code></pre><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>这里就使用最简单的<code>rc.local</code>自启，不过<code>Debian 9</code>、<code>Ubuntu 17+</code>是没有<code>rc.local</code>文件的，所以使用该系统的需要先配置一下。</p>
<pre><code>1、添加rc-local.service，以下为一整条命令，一起复制运行
cat &gt; /etc/systemd/system/rc-local.service &lt;&lt;EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF

2、新建rc-local文件，以下为一整条命令，一起复制运行
cat &gt; /etc/rc.local &lt;&lt;EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will &quot;exit 0&quot; on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.    
EOF

3、添加权限并设置开机自启
chmod +x /etc/rc.local
systemctl start rc-local
systemctl enable rc-local</code></pre><p>先复制<code>supervisord.conf</code>：</p>
<pre><code>cp supervisord.conf.sample supervisord.conf</code></pre><p>该配置文件指定的运行目录为<code>/home/Atc</code>，默认运行端口为<code>35000</code>，如果源码不是在<code>/home</code>文件夹的或者端口修改过，请自行修改该配置文件。</p>
<p>最后将启动命令加入<code>rc.local</code>文件，使用命令：</p>
<pre><code>#CentOS 7系统
echo &quot;supervisord -c /home/Atc/supervisord.conf&quot; &gt;&gt; /etc/rc.d/rc.local
chmod +x /etc/rc.d/rc.local

#CentOS 6、Debian、Ubuntu系统
echo &quot;supervisord -c /home/Atc/supervisord.conf&quot; &gt;&gt; /etc/rc.local
chmod +x /etc/rc.local</code></pre><p>请注意下<code>supervisord.conf</code>文件所在目录是否和上面命令一致。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个基于GO的轻量级文件管理系统：Filebrowser安装教程</title>
    <url>/1718/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>File Browser</code>是一个基于<code>GO</code>的轻量级文件管理系统支持登录系统 角色系统、在线<code>PDF</code>、图片、视频浏览、上传下载、打包下载等功能。总而言之很强大。</p>
<p>类似的文件管理还有<code>h5ai</code>、<code>NextCloud</code>等，安装方法可参考：NextCloud安装教程，h5ai安装教程。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/FileManager.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>官方地址：</strong><a href="https://filebrowser.xyz/" target="_blank" rel="noopener">https://filebrowser.xyz/</a></p>
<p><strong>1、安装运行</strong><br>安装命令：</p>
<pre><code>curl -fsSL https://filebrowser.xyz/get.sh | bash</code></pre><p>运行命令：</p>
<pre><code>#后面参数分别是监听地址、端口，文件存放根目录，数据库存放路径
filebrowser -a 0.0.0.0 -p 8888 -r /file -d /opt/filebrowser.db</code></pre><p>如果文件根目录不存在的话，就需要新建一下再启动，然后就可以访问<code>ip:8888</code>了，管理员用户名和密码均为<code>admin</code>。</p>
<p>对于<code>CentOS</code>系统，还需要开启<code>8888</code>端口，不然会打不开<code>Web</code>面板，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8888 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8888/tcp --permanent
firewall-cmd --reload</code></pre><p><strong>2、开机自启</strong><br>接下来这里可以建一个简单的<code>systemd</code>配置文件，适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>，使用命令：</p>
<pre><code>#先输入命令参数，只要上面filebrowser后面的即可
command=&quot;-a 0.0.0.0 -p 8888 -r /file -d /opt/filebrowser.db&quot;
#然后将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/filebrowser.service &lt;&lt;EOF
[Unit]
Description=filebrowser
After=network.target

[Service]
Type=simple
ExecStart=$(command -v filebrowser) $command
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF </code></pre><p>然后启动并设置开机自启：</p>
<pre><code>systemctl start filebrowser
systemctl enable filebrowser</code></pre><p>此时可以查看运行状态，使用命令：</p>
<pre><code>systemctl status filebrowser</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个基于Go的Telegram RSS Bot机器人，支持应用内阅读预览</title>
    <url>/2426/</url>
    <content><![CDATA[<p><strong>说明：</strong>很久前博主介绍过一个<code>Telegram RSS</code>机器人→传送门，用起来还不错，就是安装对新手不太友好，这里就再介绍一个基于<code>Go</code>的<code>Telegram RSS Bot</code>，安装很快，也支持直接在<code>Telegram</code>应用内预览订阅文章，很方便，也是博主用过最好用的一个<code>Telegram RSS</code>机器人，这里就说下使用方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/flowerss.jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>支持<code>Telegram</code>应用内<code>Instant View</code>。</li>
<li>默认<code>10</code>分钟抓取一次。</li>
<li>支持为<code>Group</code>和<code>Channel</code>订阅<code>RSS</code>消息。</li>
</ul>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p><strong>Github地址：</strong><a href="https://github.com/indes/flowerss-bot" target="_blank" rel="noopener">https://github.com/indes/flowerss-bot</a></p>
<p><strong>1、申请Bot Token</strong><br>打开<code>Telegram</code>，搜索<code>@BotFather</code>，发送<code>/newbot</code> ，申请一个<code>Bot</code>，申请完成后，会发给你一个<code>Bot Token</code>。</p>
<p><strong>2、申请Telegraph Token</strong></p>
<pre><code>curl https://api.telegra.ph/createAccount?short_name=moerats&amp;author_name=moerats&amp;author_url=https://www.southcat.net</code></pre><p>返回的<code>JSON</code>中<code>access_token</code>字段值即为<code>Telegraph Token</code>。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、运行镜像</strong></p>
<pre><code>#填入bot_token和telegraph_token参数后运行即可
docker run --restart=always --name flowerss -d -v /flowerssdata:/var/flowerss indes/flowerss-bot -b bot_token -t telegraph_token</code></pre><p><code>Docker</code>默认使用<code>SQLite</code>数据库，且文件存放在<code>/flowerssdata</code>文件夹。</p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>1、安装golang</strong><br>这里直接使用最新版的<code>go</code>二进制安装，不然后面编译会因版本问题出错。</p>
<pre><code>wget https://dl.google.com/go/go1.12.6.linux-amd64.tar.gz
#解压
tar -C /usr/local -xzf go1.12.6.linux-amd64.tar.gz
#生效
echo &apos;export PATH=$PATH:/usr/local/go/bin&apos; &gt;&gt;/etc/profile
source /etc/profile</code></pre><p><strong>2、安装依赖</strong></p>
<pre><code>#Debian、Ubuntu系统
apt install make gcc git -y

#CentOS系统
yum install make gcc git -y</code></pre><p><strong>3、运行机器人</strong></p>
<pre><code>#拉取源码
git clone https://github.com/indes/flowerss-bot
cd flowerss-bot
#编译
make build
#新建配置文件
nano config.yml</code></pre><p>参数说明大致如下：</p>
<pre><code>#Telegram Bot Token，必填
bot_token: XXX
#Telegraph Token，用于转存原文到Telegraph，也就是即时查看功能，选填    
telegraph_token: xxxx
#用于国内等无法连接Telegram API的情况，国外忽略
socks5: 127.0.0.1:1080
#RSS源扫描间隔(分钟)，选填
update_interval: 10
#使用Mysql数据库，默认使用SQLite
mysql:
  host: 123.123.132.132
  port: 3306
  user: moerats
  password: moerats
  database: moerats


##这里博主默认使用的SQLite，扫描间隔为5分钟，所以使用到的参数如下：
bot_token: XXX
telegraph_token: xxxx
update_interval: 5</code></pre><p>然后新建<code>Systemd</code>配置文件，只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>等。</p>
<pre><code>#修改下flowerss-bot源码路径即可，然后一起复制到SSH运行
cat &gt; /etc/systemd/system/flowerss.service &lt;&lt;EOF
[Unit]
Description=flowerss
After=network.target
Wants=network.target

[Service]
Type=simple
PIDFile=/var/run/flowerss.pid
WorkingDirectory=/root/flowerss-bot
ExecStart=/root/flowerss-bot/flowerss-bot
RestartPreventExitStatus=23
Restart=always

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>启动并开机自启：</p>
<pre><code>systemctl start flowerss
systemctl enable flowerss</code></pre><p>如果没有<code>Systemd</code>的，比如<code>CentOS 6</code>，<code>Debian 7</code>等，直接使用<code>rc.local</code>，使用命令：</p>
<pre><code>#先启动
nohup ./flowerss-bot &amp;
#设置开机自启，路径和命令自行修改
sed -i &apos;/exit/d&apos; /etc/rc.local
echo &quot;cd /root/flowerss-bot &amp;&amp; nohup ./flowerss-bot &amp;&quot; &gt;&gt; /etc/rc.local</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用命令：</p>
<pre><code>/sub [url] 订阅（url 为可选）
/unsub [url] 取消订阅（url 为可选）
/list 查看当前订阅
/set 设置订阅
/help 帮助</code></pre><p><code>Channel</code>订阅使用方法：</p>
<pre><code>1、将Bot添加为Channel管理员
2、发送相关命令给Bot

#Channel订阅支持的命令
/sub @ChannelID [url] 订阅
/unsub @ChannelID [url] 取消订阅
/list @ChannelID 查看当前订阅</code></pre><p><code>ChannelID</code>只有设置为<code>Public Channel</code>才有。如果是<code>Private Channel</code>，可以暂时设置为<code>Public</code>，订阅完成后改为<code>Private</code>，不影响<code>Bot</code>推送消息。</p>
<p>例如要给<code>t.me/moerats</code>频道订阅<code>RSS</code>更新：</p>
<pre><code>1、将Bot添加到moerats频道管理员列表中
2、给Bot发送/sub @moerats https://www.southcat.net/feed/ 命令</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个基于Laravel5且功能强大的个人博客系统：Lablog搭建教程</title>
    <url>/2322/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前有同学投稿想要个<code>Lablog</code>宝塔教程，拖到现在才想起来，这里就发个搭建教程，<code>Lablog</code>博客基于最新<code>PHP</code>框架<code>Laravel 5.7</code>搭建而成，由OLAINDEX程序作者制作，前后基于<code>adminlte</code>响应式页面布局，适配<code>PC</code>、平板、手机；后台支持<code>QQ</code>、微博、<code>github</code>第三方登录；集成优秀的<code>Markdown</code>文本编辑器，支持图片拖拽上传；后台基于路由搭建完整的权限控制系统，支持多后台用户。且集成<code>SM.MS</code>上传接口，方便用户上传图片，作者也更新很勤快，对该类博客程序有兴趣的可以搭建个玩玩。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Lablog(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Lablog(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Lablog(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Lablog(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><pre><code>#必需
PHP &gt;= 7.1.3
Nginx/Apache等
Mysql/Sqlite/Pgsql
PHP Fileinfo 扩展
PHP OpenSSL 扩展
PHP PDO 扩展
PHP Mbstring 扩展
PHP Tokenizer 扩展
PHP XML 扩展
PHP Ctype 扩展
PHP JSON 扩展

#非必需，建议安装
PHP Imagick 扩展
PHP GD库 扩展
PHP Redis扩展</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/WangNingkai/Lablog" target="_blank" rel="noopener">https://github.com/WangNingkai/Lablog</a></p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP 7.1+</code>、<code>Nginx</code>、<code>Mysql</code>。</p>
<p>接下来再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>和<code>Redis</code>扩展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、脚本添加，脚本地址：https://www.southcat.net/archives/722/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p>然后同样的在<code>PHP</code>设置里找到禁用函数，删除<code>proc_open</code>和<code>proc_get_status</code>函数，再重启<code>PHP</code>。</p>
<p><strong>2、安装Imagick扩展</strong><br>经过步骤<code>1</code>后，该程序所需拓展除了<code>Imagick</code>都已经有了，这里就选择编译安装该扩展。以教程里的<code>PHP 7.1</code>为例，如果你是<code>7.2</code>将下面目录<code>71</code>改成<code>72</code>即可。</p>
<pre><code>#imagick包下载地址http://pecl.php.net/package/imagick，这里以最新版3.4.3为准
wget http://pecl.php.net/get/imagick-3.4.3.tgz
tar -zxvf imagick-3.4.3.tgz &amp;&amp; cd imagick-3.4.3
phpize
./configure --with-php-config=/www/server/php/71/bin/php-config  --with-imagick=/usr/local/imagemagick
make &amp;&amp; make install
echo &quot;extension=imagick.so&quot; &gt;&gt; /www/server/php/71/etc/php.ini</code></pre><p><strong>3、安装Composer</strong></p>
<pre><code>curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer</code></pre><p><strong>4、安装程序</strong><br>我们先点击左侧网站，添加域名；然后再点击左侧数据库-添加数据库。</p>
<p>运行命令：</p>
<pre><code>#进入网站根目录，将路径修改成自己的再运行
cd /www/wwwroot/www.southcat.net
git clone https://github.com/WangNingkai/Lablog.git tmp 
mv tmp/.git . 
rm -rf tmp 
git reset --hard 
composer install -vvv 
#该步骤会要求你输入相关信息，包括数据库，如果名称带空格的话，记得用双引号&quot;&quot;，比如&quot;Rat&apos;s Blog&quot;，不然会报错
php artisan lablog:install
php artisan lablog:migrate 
chmod -R 755 storage/
chown -R www:www *</code></pre><p><strong>5、伪静态设置</strong><br>点击域名设置-网站目录，运行目录选择<code>public</code>，并把防跨站的勾去掉并重启<code>PHP</code>。然后点击伪静态，输入以下代码：</p>
<pre><code>location / {  
    try_files $uri $uri/ /index.php$is_args$query_string;  
}  </code></pre><p>最后打开站点自行设置即可，后台路径<code>/admin</code>，当然如果你想设置更多功能可以直接修改编辑根目录的<code>.env</code>文件。</p>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>#刷新缓存
php artisan flush:cache
#自定义排序推荐文章
php artisan sync:rank 
#自动生成站点地图
php artisan generate:sitemap


#刷新命令，记得修改下根目录路径
/usr/bin/php /www/wwwroot/www.southcat.net/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1 &amp;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个基于NodeJS和Markdown的轻量级wiki应用程序：Wiki.js安装教程</title>
    <url>/2311/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Wiki.js</code>是一个基于<code>Node.js</code>，<code>Git</code>和<code>Markdown</code>构建的免费开源，现代且功能强大的<code>wiki</code>应用程序。支持用户登录，可以让用户在本地注册或直接使用<code>Microsoft</code>，<code>Google</code>，<code>GitHub</code>等账户无缝登录体验，并选择限制对特定用户或甚至部分内容的<code>Wiki</code>访问。还可以定时远程备份数据到<code>Git</code>远程仓库。支持<code>Windows</code>，<code>Linux</code>和<code>Mac</code>平台，这里就说下<code>Linux</code>系统手动安装教程。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Wikijs(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Wikijs(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Wikijs(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h2><pre><code>#Markdown编辑，由Git支持
使用内置的可视化编辑器，以广泛使用的简单Markdown格式编写您的内容。与将数据保存在难以提取格式的数据库中的其他wiki软件不同，Wiki.js将所有内容直接保存到Markdown（.md）文件中，并且该内容会自动与远程Git存储库同步。因此，您的内容可以直接从您的Git存储库中安全地读取。    

#轻巧，但功能非常强大
Wiki.js在速度极快的Node.js引擎上运行，并且优化为CPU资源不足。它在很大程度上依赖于缓存来快速向用户提供内容，并利用最新的Web技术（如WebSockets）在网页中提供即时交互性。

#精美的现代网络设计
内容自动处理成美观的阅读格式，呈现在优雅的用户界面中。根据标题为每个页面生成侧边栏菜单，并以不同颜色呈现部分以增强可读性。

#综合访问控制
选择限制对特定用户或甚至部分内容的Wiki访问。您可以完全控制Wiki.js中内置的易于使用的访问控制。使用本地数据库登录或与Microsoft帐户，Google ID，Facebook，GitHub，Slack或LDAP（Active Directory）等外部身份验证提供程序连接，为您的用户提供无缝登录体验。

#直觉资产管理
使用内置资产管理器在Wiki.js中插入图像，模式，文档，视频，链接等。将媒体文件整理到文件夹中，让内置编辑器为您生成正确的Markdown标记。您甚至可以要求Wiki.js为您从外部网站获取图像。再一次，所有文件都会自动同步到远程Git存储库以便妥善保管。

#内置搜索引擎
使用内置搜索引擎快速查找您正在寻找的wiki条目，可从任何页面访问。它通过分析您的wiki条目元数据和内容提供相关结果和建议。

#免费和开源
我们相信优秀的软件应该是免费和透明的。这就是为什么Wiki.js在GNU AGPLv3许可下是完全开源的原因。您可以自由查看完整的源代码并提供新功能！将其托管在本地服务器，云端甚至家中。免费。</code></pre><h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Requarks/wiki/" target="_blank" rel="noopener">https://github.com/Requarks/wiki/</a></p>
<p><strong>环境要求：</strong><code>Node.js &gt;= 6.11.1</code>、<code>MongoDB &gt;= 3.2</code>、<code>Git &gt;= 2.7.4</code>。内存<code>768M</code>以上，不然装不了。</p>
<p><strong>系统要求：</strong>这里仅争对本教程的系统要求(非程序)，<code>CentOS 6+</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>，建议使用最新版系统。</p>
<p><strong>1、安装Git</strong><br>这里由于<code>CentOS</code>和<code>Debian 8</code>自带的的<code>Git</code>软件包有点老，所以可以选择编译安装，下面编译最新的<code>2.20.1</code>版本。</p>
<pre><code>#CentOS系统
yum -y groupinstall &quot;Development Tools&quot;
yum install gettext-devel openssl-devel perl-CPAN perl-devel zlib-devel curl-devel expat-devel -y
wget https://github.com/git/git/archive/v2.20.1.tar.gz
tar -zxf v2.20.1.tar.gz &amp;&amp; cd git-*
make configure
./configure --prefix=/usr/local
make install

#Debian、Ubuntu系统
apt update
apt install -y build-essential libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev curl autoconf perl
wget https://github.com/git/git/archive/v2.20.1.tar.gz
tar -zxf v2.20.1.tar.gz &amp;&amp; cd git-*
make configure
./configure --prefix=/usr/local
make install</code></pre><p>如果你是<code>Debian 9</code>和<code>Ubuntu</code>系统，也可以选择不编译安装，直接使用命令：</p>
<pre><code>apt-get update -y
apt-get install -y git</code></pre><p>安装好了后，使用<code>git --version</code>命令查看<code>git</code>版本，大于等于<code>2.7.4</code>就可以了。</p>
<p>最后，如果是编译安装的，还需要设置一下<code>PATH</code>，不然会影响使用，可以直接使用命令：</p>
<pre><code>echo &apos;export PATH=/usr/local/libexec/git-core:$PATH&apos; &gt;&gt; /etc/profile
source /etc/profile</code></pre><p><strong>2、安装Nodejs</strong></p>
<pre><code>#Debian、Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt-get install -y nodejs

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs -y</code></pre><p><strong>3、安装Mongodb</strong></p>
<pre><code>#CentOS 6系统，将下面命令一起复制进SSH客户端运行
cat &lt;&lt;EOF &gt; /etc/yum.repos.d/mongodb.repo
[mongodb-org-4.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/6/mongodb-org/4.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc
EOF
yum -y install mongodb-org

#CentOS 7系统，将下面命令一起复制进SSH客户端运行
cat &lt;&lt;EOF &gt; /etc/yum.repos.d/mongodb.repo
[mongodb-org-4.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/7/mongodb-org/4.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc
EOF
yum -y install mongodb-org

#Debian 8系统
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo &quot;deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/4.0 main&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt-get update -y
apt-get install -y mongodb-org

#Debian 9系统
curl https://www.mongodb.org/static/pgp/server-4.0.asc | apt-key add -
echo &quot;deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt-get update -y
apt-get install -y mongodb-org

#Ubuntu系统
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo &quot;deb https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt-get update -y
apt-get install -y mongodb-org</code></pre><p>启动<code>Mongodb</code>并设置开机自启：</p>
<pre><code>#CentOS 6系统
service mongod start
chkconfig mongod on

#CentOS 7、Debian 8+、Ubuntu 16+系统
systemctl start mongod
systemctl enable mongod</code></pre><p><strong>4、安装wiki.js</strong></p>
<pre><code>#创建存放wiki.js的文件夹并进入
mkdir /root/wikijs &amp;&amp; cd /root/wikijs
#安装wiki.js
curl -sSo- https://wiki.js.org/install.sh | bash</code></pre><p><strong>5、配置wiki.js</strong></p>
<pre><code>node wiki configure</code></pre><p>接下来打开<code>ip:3000</code>，如果是<code>CentOS 7</code>系统，可能还需要打开防火墙端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 3000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=3000/tcp --permanent
firewall-cmd --reload</code></pre><p>这时候开始初始化配置<code>Wiki.js</code>了。<br><img src="https://www.southcat.net/usr/picture/Wikijs(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Wikijs(5).png" alt="请输入图片描述" title="请输入图片描述"><br>第<code>3</code>步如果你想使用<code>ip</code>访问的话，<code>Host</code>直接填<code>ip</code>地址，端口随意，最后访问地址为<code>ip:port</code>，如果使用<code>https</code>域名访问，<code>Host</code>填<code>https://xx.com</code>，端口可以填<code>8888</code>等其它数字。</p>
<p>如果<code>Git Repository</code>(备份到<code>git</code>用的)你不会配置就跳过该步骤。</p>
<p>关于配置参数，我们可以手动去<code>/root/wikijs/config.yml</code>进行编辑修改。</p>
<p><strong>6、反向代理</strong><br>如果你使用<code>https</code>域名的话，还需要反代下端口，这里使用<code>Caddy</code>反代，且会自动签发<code>SSL</code>，请提前解析域名到<code>VPS</code>服务器。</p>
<p>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#请先修改你上面设置的端口，这里默认8888，然后将下面整体一起复制到SSH运行！
echo &quot;xx.com {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:8888 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。关于客户端配置<code>Microsoft</code>，<code>Google</code>，<code>GitHub</code>登录可以查看文档→点击查看。</p>
<p>每次重启服务器后，我们需要先手动启动<code>Wiki.js</code>，使用命令：</p>
<pre><code>cd /root/wikijs
node wiki start</code></pre><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>这里就使用最简单的<code>rc.local</code>自启，不过<code>Debian 9</code>、<code>Ubuntu 17+</code>是没有<code>rc.local</code>文件的，所以使用该系统的需要先配置一下。</p>
<pre><code>1、添加rc-local.service，以下为一整条命令，一起复制运行
cat &gt; /etc/systemd/system/rc-local.service &lt;&lt;EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF

2、新建rc-local文件，以下为一整条命令，一起复制运行
cat &gt; /etc/rc.local &lt;&lt;EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will &quot;exit 0&quot; on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.    
EOF

3、添加权限并设置开机自启
chmod +x /etc/rc.local
systemctl start rc-local
systemctl enable rc-local</code></pre><p>最后将启动命令加入<code>rc.local</code>文件，使用命令：</p>
<pre><code>#CentOS 7系统
echo &quot;cd /root/wikijs &amp;&amp; node wiki start&quot; &gt;&gt; /etc/rc.d/rc.local
chmod +x /etc/rc.d/rc.local

#CentOS 6、Debian、Ubuntu系统
echo &quot;cd /root/wikijs &amp;&amp; node wiki start&quot; &gt;&gt; /etc/rc.local
chmod +x /etc/rc.local</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该<code>1.x</code>版本还是有点小问题的，不过不影响使用，按照作者的说法，全新的<code>2.x</code>版本就快公布了，对比1.x的变化如下：</p>
<pre><code>#功能变化
彻底解耦前端和后端。
所有操作和查询都将通过GraphQL API完成。
全新的完全响应式布局，具有更好的自定义功能。
完全本地化支持，特别是对于非拉丁语言。
模块化的身份验证，编辑器，日志记录，搜索和存储方法。

#安装环境
逐步淘汰MongoDB，支持PostgreSQL/MySQL/MSSQL/SQLite和Redis。将提供升级工具以将现有数据迁移到新系统。
Node.js 10 LTS或更高版本将是支持的最低版本。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个基于Python 3的Pixiv爬虫，可下载画师和排行榜原图</title>
    <url>/2435/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>P</code>站很多人不陌生了，这里分享个萌咖写的爬虫脚本，基于<code>Python3</code>，可直接下载排行榜、画师的原图。无需登录，无需<code>cookies</code>，也不需要其它依赖，使用纯<code>Python</code>原生模块，支持多线程下载，支持过滤已下载。由于官方需要登录才能下载原图，这里就绕过了官方，直接获取下载原图，毕竟不是原图就没得意义了，有需求的可以收藏下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/pixiv_py.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/MoeClub/Pixiv" target="_blank" rel="noopener">https://github.com/MoeClub/Pixiv</a></p>
<p><strong>要求：</strong><code>Python 3</code>、网络能访问<code>Pixiv</code>站。</p>
<p><strong>1、安装Python 3</strong></p>
<pre><code>#CenOS 6系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
yum install python34 -y

#CenOS 7系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install python36 -y

#Debian 7、8系统
apt update
apt install python3 -y</code></pre><p><code>Debian 9</code>、<code>10</code>和<code>Ubuntu</code>系统自带<code>Python 3</code>，无需安装，可直接进行下一步。</p>
<p><strong>2、下载脚本</strong></p>
<pre><code>wget https://raw.githubusercontent.com/MoeClub/Pixiv/master/pixiv.py</code></pre><p>脚本默认<code>25</code>线程，想改的话，直接编辑脚本，搜索<code>25</code>，改成相应数字就可以了。</p>
<pre><code>#下载画师原图，使用画师UID即可
python3 pixiv.py &quot;673179&quot; 

#下载排行榜原图，使用排行榜地址即可    
python3 pixiv.py &quot;https://www.pixiv.net/ranking.php?mode=male&quot; </code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个基于Python3的VPS服务器在线监控脚本</title>
    <url>/2000/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本脚本基于<code>Python3</code>写的，原理是通过监测端定时运行监测程序来<code>ping</code>被监测端的<code>VPS</code>，只进行一次<code>ping</code>操作，并对反馈回来的数据进行分析，一旦发现<code>ping</code>失败了，就通过<code>server</code>酱推送到微信上，通知<code>VPS</code>服务器已经断线了。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>本脚本需要配合<code>server</code>酱的<code>sckey</code>使用，没有的去<code>http://sc.ftqq.com</code>申请一个。</p>
<p><strong>1、安装Python3</strong><br>一般<code>Ubuntu</code>系统都是自带<code>Python3</code>，<code>Centos</code>、<code>Debian</code>系统使用以下脚本进行安装。</p>
<pre><code>#检查系统是否有Python3
python3 -V

#安装Python3
#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</code></pre><p><strong>2、安装requests</strong><br>运行命令：</p>
<pre><code>pip3 install requests</code></pre><p><strong>3、下载并编辑脚本</strong></p>
<pre><code>#下载脚本
wget https://www.southcat.net/usr/shell/Python3/ping_jk.py
#编辑脚本
nano ping_jk.py</code></pre><p>修改以下两个地方：</p>
<pre><code>key = &apos;SCKEY&apos;  #SCKEY替换成你自己的SCKEY
hostname = &quot;xx.xx.xx.xx&quot;  #换成你需要监控的VPS的IP</code></pre><p>然后<code>Ctrl</code>+<code>C</code>保存并退出。</p>
<p><strong>4、运行脚本</strong></p>
<pre><code>python3 ping_jk.py</code></pre><p>请配合<code>crontab</code>定时任务使用，建议每<code>15</code>分钟运行一次，参考：Linux系统Crontab的安装及定时任务的命令详解。</p>
<p><strong>提示：</strong>如果想监控多个<code>VPS</code>服务器，把<code>ping</code>和<code>content</code>那里重复一下就可以了。不会重复的多用几个同样脚本，命名不同的脚本名称，并在监控提示那里编辑好服务器信息用来区分就可以了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个基于Web界面的Linux性能监控工具：pyDash安装教程</title>
    <url>/1651/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>pydash</code>是一款基于<code>Web</code>的轻量级监控工具，用<code>Python</code>和<code>Django</code>等实现。它已经过测试，可以运行在以下主流的<code>Linux</code>发行版：<code>CentOS</code>，<code>Fedora</code>，<code>Ubuntu</code>，<code>Debian</code>，<code>Arch Linux</code>，<code>Raspbian</code>以及<code>Pidora</code>。</p>
<p>您可以使用它来关注您的<code>Linux PC</code>/服务器资源，如<code>CPU</code>，<code>RAM</code>，网络统计信息，包括在线用户等进程。仪表板完全使用<code>Python</code>分发中提供的<code>Python</code>库开发，因此它具有一些依赖关系; 您不需要安装许多软件包或库来运行它。</p>
<p>在本文中，我们将向您展示如何安装<code>pydash</code>来监控<code>Linux</code>服务器的性能。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1、安装<code>git</code>和<code>Python pip</code></p>
<pre><code>-------------- On Debian/Ubuntu -------------- 
$ sudo apt-get install git python-pip
-------------- On CentOS/RHEL -------------- 
# yum install epel-release
# yum install git python-pip
-------------- On Fedora 22+ --------------
# dnf install git python-pip</code></pre><p>2、安装<code>virtualenv</code></p>
<pre><code># pip install virtualenv
OR
$ sudo pip install virtualenv</code></pre><p>3、使用<code>git</code>命令，将<code>pydash</code>目录克隆到您的主目录中</p>
<pre><code># git clone https://github.com/k3oni/pydash.git
# cd pydash</code></pre><p>4、使用下面的<code>virtualenv</code>命令为您的项目创建一个名为<code>pydashtest</code>的虚拟环境</p>
<pre><code>$ virtualenv pydashtest #give a name for your virtual environment like pydashtest</code></pre><p><img src="https://www.southcat.net/usr/picture/pyDash(1).png" alt="请输入图片描述" title="请输入图片描述"><br>提示：记下上面截图中突出显示的虚拟环境的<code>bin</code>目录路径，第5步会用到，根据您克隆<code>pydash</code>文件夹的位置可能会有所不同。</p>
<p>5、创建虚拟环境（<code>pydashtest</code>）后，先激活它</p>
<pre><code>$ source /home/aaronkilik/pydash/pydashtest/bin/activate</code></pre><p><img src="https://www.southcat.net/usr/picture/pyDash(2).png" alt="请输入图片描述" title="请输入图片描述"><br>6、安装<code>requirements</code></p>
<pre><code>cat requirements.txt
pip install -r requirements.txt</code></pre><p>7、现在进入包含<code>settings.py</code>的<code>pydash</code>目录，或者简单的运行下面的命令来打开这个文件，将<code>SECRET_KEY</code>更改为自定义值。</p>
<pre><code>$ vi pydash/settings.py</code></pre><p><img src="https://www.southcat.net/usr/picture/pyDash(3).png" alt="请输入图片描述" title="请输入图片描述"><br>8、创建管理员账户</p>
<pre><code>$ python manage.py syncdb</code></pre><p>会要你输入以下内容：</p>
<pre><code>Would you like to create one now? (yes/no): yes
Username (leave blank to use &apos;root&apos;): admin
Email address: moerats@xx.com
Password: ###########
Password (again): ############</code></pre><p><img src="https://www.southcat.net/usr/picture/pyDash(4).png" alt="请输入图片描述" title="请输入图片描述"><br>9、运行</p>
<pre><code>$ python manage.py runserver  #本地运行
OR
$ ./manage.py runserver 服务器IP地址:1000  #远程链接，端口随便设一个</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个基于WEB的邮件服务器系统：RainLoop安装教程</title>
    <url>/1640/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>RainLoop</code>是一个基于<code>WEB</code>的邮件系统，使用<code>PHP</code>开发，通过<code>RainLoop</code>可以将多个邮箱聚合在一起，程序拥有简介的界面和全面的功能，支持<code>SMTP</code>+<code>IMAP</code>，是个人邮件客户端的最佳程序。这里说下安装方法。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、搭建web环境</strong><br>我们可以用<code>lnmp</code>、<code>lamp</code>一键包或者宝塔之类的面板来搭建<code>web</code>环境。<br><code>lnmp</code>安装方法可参考：<a href="https://www.southcat.net/archives/61/" target="_blank" rel="noopener">https://www.southcat.net/archives/61/</a><br>宝塔安装方法可看：<a href="https://www.bt.cn/Download/btsoftlinux.html" target="_blank" rel="noopener">https://www.bt.cn/Download/btsoftlinux.html</a></p>
<p><strong>2、上传RainLoop程序</strong><br>搭建好<code>web</code>环境后，这里以<code>lnmp</code>环境为例，添加网站并解析，再上传<code>RainLoop</code>程序到网站目录，<code>RainLoop</code>官网下载地址：<a href="http://www.rainloop.net/downloads/" target="_blank" rel="noopener">http://www.rainloop.net/downloads/</a></p>
<p>进入您的站点根目录，执行下面的命令：</p>
<pre><code>cd /home/wwwroot/www.yourdomain.com
wget http://www.rainloop.net/repository/webmail/rainloop-latest.zip
unzip rainloop-latest.zip</code></pre><p>如果<code>unzip</code>解压文件时出现问题，这说明没安装<code>unzip</code>，所以解压前需要先执行命令：<code>apt-get install unzip</code>或者<code>yum install unzip</code>即可。当然这里也可以用<code>WinSCP</code>等<code>ftp</code>工具完成程序上传步骤！</p>
<p>安装完成后访问<code>http://www.yourdomain.com/?admin</code>输入用户名：<code>admin</code>，密码：<code>12345</code>进行登录。<br><img src="https://www.southcat.net/usr/picture/RainLoop(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>1、进入后台后首先会要求你改密码，然后设置邮局语言、主题、缩略图、背景选择、附件大小等等。<br><img src="https://www.southcat.net/usr/picture/RainLoop(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>2、在后台点击域名，你会看到<code>RainLoop</code>默认启用了<code>Gmail</code>，如果您需要使用<code>outlook</code>、<code>qq</code>邮箱等，可以一并启用了。或者添加其它邮箱也可以。<br><img src="https://www.southcat.net/usr/picture/RainLoop(3).png" alt="请输入图片描述" title="请输入图片描述"><br>3、自己摸索了，就不多说了。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个多功能的PHP短网址程序：Shortny，自定义后缀/二维码/链接统计等</title>
    <url>/2333/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Shortny</code>是一款国外的<code>PHP</code>短网址源码，程序非常小巧，但是功能是很多的，支持自定义后缀、加密访问，查看链接统计，而且还支持放广告，这个广告功能相信有些人会喜欢。界面也比较好看，支持白天/夜晚切换模式，由于官方的程序是收费的，所以这里博主提供的是由顶点网破解的最新版<code>Shortny v2.0.1</code>，顺便说下安装方法和一些细节处理。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Shortny(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Shortny(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Shortny(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Shortny(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><pre><code>#前端
简洁、优雅、反应灵敏的设计
创建URL
创建自定义URL
密码保护的链接
链接统计
暗色主题
小书签
复制和共享链接

#后端
删除网址
编辑网站设置
添加或编辑广告
分析
使用自定义CSS

#功能
垃圾邮件检查器
所有输入都经过验证以进行保护。
安全支护板
命中计数</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>PHP</code>、<code>Mysql</code>、<code>Nginx</code>/<code>Apache</code>，搭建方法自行选择，这里使用宝塔演示。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP</code>、<code>Nginx</code>或<code>Apache</code>、<code>Mysql</code>。</p>
<p><strong>2、上传程序</strong><br>点击面板左侧-添加站点，数据库选择<code>Mysql</code>，设置好数据库名称、密码。</p>
<p>然后上传源码到根目录并解压出来(源码下载：Shortny_v2.0.1)，也可以直接在<code>SSH</code>客户端使用命令：</p>
<pre><code>#将下面根目录地址改成自己的再运行
cd /www/wwwroot/www.southcat.net
wget https://www.southcat.net/usr/down/Shortny_v2.0.1.zip
unzip Shortny_v2.0.1.zip &amp;&amp; rm -rf Shortny_v2.0.1.zip</code></pre><p><strong>3、伪静态设置</strong></p>
<pre><code>#Apache，编辑.htaccess文件，将本地地址修改成自己的域名，比如：
ErrorDocument 404 https://www.southcat.net/404
ErrorDocument 403 https://www.southcat.net/404

#Nginx，点击域名设置-伪静态，然后将下面例子的域名改成自己的，再复制进去，例子：
rewrite ^/about /about.php last;
rewrite ^/api-about /api-about.php last;
rewrite ^/contact /contact.php last;
rewrite ^/tos /tos.php last;
rewrite ^/([^/.]+)/?$ /link.php?id=$1 last;
rewrite ^/404 /404.php last;
error_page 404 http://www.southcat.net/404;
error_page 403 http://www.southcat.net/404;</code></pre><p>最后开始安装，由于伪静态问题，只能通过具体路径安装，链接如下：</p>
<pre><code>#安装路径，记得修改下面域名地址
https://www.southcat.net/install/index.html
#后台路径
https://www.southcat.net/admin/index.php</code></pre><p>安装完成后，默认用户名和密码均为<code>admin</code>。</p>
<h2 id="二维码修改"><a href="#二维码修改" class="headerlink" title="二维码修改"></a>二维码修改</h2><p>源码默认的使用<code>google</code>的<code>api</code>生成二维码图片，在国内访问肯定是不会显示出来的，这就大大减少了体验，不过不用慌，有爱的博主自然会提前研究下解决方法，这里就说下，使其在国内也可以使用二维码功能。</p>
<p>1、下载博主提供的二维码文件，下载地址：Shortnyqr.zip。</p>
<p>2、文件解压出<code>3</code>个文件，如果你的短地址网站使用<code>http</code>，那将<code>http_qr</code>文件命名为<code>qr</code>；反之使用<code>https</code>，那么将<code>https_qr</code>命名为<code>qr</code>。然后再将<code>phpqrcode</code>和重新命令的<code>qr</code>文件上传到网站根目录。</p>
<p>3、找到网站根目录<code>stats.php</code>文件的<code>87</code>行和<code>functions/created.php</code>文件的<code>71</code>行，将<code>src</code>后面的参数替换下，修改如下：</p>
<pre><code>#记得将域名替换成自己的
src=&quot;https://www.southcat.net/qr.php?url=&lt;?php echo $created_link; ?&gt;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个好用的制作GIF动画或视频的软件：ScreenToGif</title>
    <url>/1894/</url>
    <content><![CDATA[<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个好用的网站日志分析工具：360星图</title>
    <url>/1908/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>360</code>星图<code>360</code>旗下开发的网站日志分析工具，使用<code>360</code>网站卫士核心数据分析模块，云+端联动分析，转化为全新的<code>Web</code>日志分析系统，深入分析黑客攻击行为和异常访问，比如<code>Web</code>漏洞攻击识别、<code>CC</code>攻击识别、恶意爬虫扫描识别、异常访问识别等。使用也比较简单，可以快速生成直观的日志报告。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>官方地址：</strong><a href="http://wangzhan.360.com/activity/xingtu。" target="_blank" rel="noopener">http://wangzhan.360.com/activity/xingtu。</a><br><strong>下载地址：</strong>官方下载，本地下载。</p>
<p>下载后解压，然后进行如下操作：</p>
<ol>
<li>打开<code>/conf/config.ini</code>在<code>log_file:</code>这一行填写日志路径，可以是目录或具体文件。</li>
<li>运行<code>start.bat</code>自动处理日志。</li>
<li>结果会生成在<code>result</code>目录。</li>
</ol>
<p>最后打开<code>result</code>文件夹可以看到<code>html</code>报告，直接浏览器打开即可看到直观的结果，包括流量、<code>IP</code>、攻击等情况。<br><img src="https://www.southcat.net/usr/picture/xingtu(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/xingtu(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个小巧而强大的BT种子下载客户端：Deluge一键安装脚本</title>
    <url>/1839/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Deluge</code>是一个小巧且功能强大的<code>BT</code>种子下载客户端，功能很多，且安装很快，界面虽然丑了点，但使用挺方便的，下载速度也很快，特别是一些热门资源，超级快。<code>Deluge</code>一键安装脚本在国内好像没怎么见到，所以分享一下，使用该脚本<code>1</code>分钟即可安装完成，有兴趣的可以试试。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Deluge</code>是一个通过<code>PyGTK</code>建立图形界面的<code>BitTorrent</code>客户端，后端使用<code>libtorrent</code>。<code>Deluge</code>可以在多个平台上使用，如<code>Linux</code>、<code>OS X</code>、<code>Unix</code>和<code>Windows</code>操作系统。该项目的目标是要在<code>GTK</code>框架上建立一个原生和全功能的<code>BitTorrent</code>客户端。体积小巧且节约系统资源，通过丰富的插件来实现核心以外的众多功能，还支持<code>ipv6</code>。</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>可以做种</li>
<li>支持各种插件</li>
<li><code>UPnP</code>和<code>NAT-PMP</code>网络支持数据加密</li>
<li><code>DHT</code>支持</li>
<li><code>uTorrent</code>种子交换</li>
<li><code>BitTorrent</code>协议加密</li>
<li>可以使用代理下载</li>
<li>同时下载多个文件</li>
<li>下载完成后移动文件到指定目录</li>
<li>全局/单个文件速度、连接数限制</li>
<li>文件预览</li>
<li>可以在达到指定的分享比例后停止做种</li>
<li>可指定密码保护</li>
</ul>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Deluge(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Deluge(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/sayem314/My-Deluge-Installer" target="_blank" rel="noopener">https://github.com/sayem314/My-Deluge-Installer</a></p>
<p><strong>支持系统：</strong><code>Ubuntu</code>、<code>Debian</code></p>
<p>使用以下命令安装：</p>
<pre><code>wget -q --no-check-certificate https://raw.githubusercontent.com/sayem314/My-Deluge-Installer/master/install-deluge.sh -O install-deluge.sh &amp;&amp; chmod +x install-deluge.sh &amp;&amp; ./install-deluge.sh -install</code></pre><p>安装完成后，使用<code>http://ip:8112</code>进入界面，密码<code>deluge</code>。首次登录会有让你修改密码的提示，使用时需要在<code>Connection Manage</code>中选择后端并连接。当然，你也可以添加你已经在别的服务器上部署的后端。最后点击<code>Add</code>添加并下载种子文件。</p>
<pre><code>./install-deluge.sh -uninstall</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个好用的OneDrive网盘上传工具，支持文件和文件夹上传</title>
    <url>/2460/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主很久前分享过使用<code>Shell</code>写的<code>OneDrive</code>网盘上传工具→传送门，不过由于使用的是旧<code>API</code>，而微软使旧<code>API</code>强制过时，也就是强制不让用了，不让授权了，导致全部人无法使用，所以在外搬砖多日的萌咖大佬重新出山，使用<code>Golang</code>基于新的<code>API</code>写了个效率更高的上传工具，同时也修复了各种<code>Shell</code>版本遗留下来的小问题，该版本特点就是授权简单，无需依赖，单文件。同样的也可以配合<code>Aria2</code>一起自动上传，这里就再分享下，方便下有需求的人。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.12.21】
 支持跳过网盘中已存在的同名文件。

【2019.12.20】
目前同时支持国际版、个人版(家庭版)、中国版(世纪互联)。

【2019.12.15】
修复授权失败、上传文件大小为0等问题。
现已支持arm、x86、x64平台的系统。

【2019.11.29】
新增多线程上传、MacOS客户端。
修复了一个致命bug，建议之前装过的更新下程序。</code></pre><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>支持上传文件和文件夹到指定目录，并保持上传前的目录结构。</li>
<li>支持命令参数使用，方便外部程序调用。</li>
<li>支持自定义上传分块大小。</li>
<li>支持多线程上传(多文件同时上传)。</li>
<li>支持根据文件大小动态调整重试次数，对抗不好的网络环境。</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/MoeClub/OneList/tree/master/OneDriveUploader" target="_blank" rel="noopener">https://github.com/MoeClub/OneList/tree/master/OneDriveUploader</a></p>
<p>这里只详细说下<code>Linux</code>的用法，<code>Windows</code>后面大概说下。</p>
<p><code>Windows</code>、<code>MacOS</code>系统下载地址→传送门，直接将程序下载到本地后，按照下面方法进行授权、初始化，然后就可以使用命令上传了。</p>
<p><strong>1、授权认证</strong><br>点击右侧<code>URL</code>登录并授权，授权地址→【国际版、个人版(家庭版)】、【中国版(世纪互联)】。</p>
<p>授权后会获取一个<code>localhost</code>开头打不开的链接，这里复制好整个链接地址，包括<code>localhost</code>。</p>
<p><strong>2、安装OneDriveUploader</strong></p>
<pre><code>#64位系统下载
wget https://raw.githubusercontent.com/MoeClub/OneList/master/OneDriveUploader/amd64/linux/OneDriveUploader -P /usr/local/bin/
#32位系统下载
wget https://raw.githubusercontent.com/MoeClub/OneList/master/OneDriveUploader/i386/linux/OneDriveUploader -P /usr/local/bin/
#arm架构下载
wget https://raw.githubusercontent.com/MoeClub/OneList/master/OneDriveUploader/arm/linux/OneDriveUploader -P /usr/local/bin/

#给予权限
chmod +x /usr/local/bin/OneDriveUploader</code></pre><p><strong>3、初始化配置</strong></p>
<pre><code>#国际版，将url换成你上面复制的授权地址，包括http://loaclhost。
OneDriveUploader -a &quot;url&quot;

#个人版(家庭版)，将url换成你上面复制的授权地址，包括http://loaclhost。
OneDriveUploader -ms -a &quot;url&quot;

#中国版(世纪互联)，将url换成你上面复制的授权地址，包括http://loaclhost。
OneDriveUploader -cn -a &quot;url&quot;</code></pre><p>如果提示<code>Init config file: /path/to/file/auth.json</code>类似信息，则初始化成功。</p>
<p><strong>4、使用命令</strong></p>
<pre><code>Usage of OneDriveUploader:
  -a string
        // 初始化授权
        Setup and Init auth.json.
  -b string
        // 自定义上传分块大小, 可以提高网络吞吐量, 受限于磁盘性能和网络速度.
        Set block size. [Unit: M; 5&lt;=b&lt;=60;] (default &quot;10&quot;)
  -c string
        // 配置文件路径
        Config file. (default &quot;auth.json&quot;)
  -n string
        // 上传单个文件时,在网盘中重命名
        Rename file on upload to remote.
  -r string
        // 上传到网盘中的某个目录, 默认: 根目录
        Upload to reomte path.
  -s string
        // *必要参数, 要上传的文件或文件夹
        Upload item.
  -t string
        // 线程数, 同时上传文件的个数. 默认: 2
        Set thread num. (default &quot;2&quot;)
  -f
        // 开关(推荐)
        // 加上 -f 参数，强制读取 auth.json 中的块大小配置和多线程配置.
        // 不加 -f 参数, 每次覆盖保存当前使用参数到 auth.json 配置文件中.
        Force Read config form config file. [BlockSize, ThreadNum]
  -skip
        // 开关
        // 跳过上传网盘中已存在的同名文件. (默认不跳过)
        Skip exist file on remote.
  -cn
        // 开关
        // 授权中国版(世纪互联), 需要此参数.
        OneDrive by 21Vianet.
  -ms
        // 开关
        // 授权个人版(家庭版), 需要此参数.
        OneDrive by Microsoft.</code></pre><p><strong>5、命令示例</strong></p>
<pre><code>#将当前目录下的mm00.jpg文件上传到OneDrive网盘根目录
OneDriveUploader -c /path/to/file/auth.json -s &quot;mm00.jpg&quot;

#将当前目录下的mm00.jpg文件上传到OneDrive网盘根目录，并改名为mm01.jpg
OneDriveUploader -c /path/to/file/auth.json -s &quot;mm00.jpg&quot; -n &quot;mm01.jpg&quot;

#将当前目录下的Download文件夹上传到OneDrive网盘根目录
OneDriveUploader -c /path/to/file/auth.json -s &quot;Download&quot; 

#将当前目录下的Download文件夹上传到OneDrive网盘Test目录中
OneDriveUploader -c /path/to/file/auth.json -s &quot;Download&quot; -r &quot;Test&quot;

#将同目录下的Download文件夹上传到OneDriv网盘Test目录中，使用10线程
OneDriveUploader -c /path/to/file/auth.json -t 10 -s &quot;Download&quot; -r &quot;Test&quot;

#将同目录下的Download文件夹上传到OneDrive网盘Test目录中，使用15线程，并设置分块大小为20M
OneDriveUploader -c /path/to/file/auth.json -t 15 -b 20 -s &quot;Download&quot; -r &quot;Test&quot;</code></pre><p><code>/path/to/file/auth.json</code>为初始化时，生成的<code>auth.json</code>绝对路径地址，本文默认<code>/root/auth.json</code>，自行调整。</p>
<p><strong>注意：</strong>如果你之前上传手动中断过，再上传的时候，请使用<code>-skip</code>参数，默认会跳过你已经上传过的文件/文件夹。</p>
<h2 id="Aria2自动上传"><a href="#Aria2自动上传" class="headerlink" title="Aria2自动上传"></a>Aria2自动上传</h2><p>同样的这里也会提供个配套的<code>Aria2</code>自动上传脚本，上传配置方法参考→传送门。</p>
<p>上传脚本代码如下：</p>
<pre><code>#!/bin/bash

GID=&quot;$1&quot;;
FileNum=&quot;$2&quot;;
File=&quot;$3&quot;;
MaxSize=&quot;15728640&quot;;
Thread=&quot;3&quot;;  #默认3线程，自行修改，服务器配置不好的话，不建议太多
Block=&quot;20&quot;;  #默认分块20m，自行修改
RemoteDIR=&quot;&quot;;  #上传到Onedrive的路径，默认为根目录，如果要上传到MOERATS目录，&quot;&quot;里面请填成MOERATS
LocalDIR=&quot;/www/download/&quot;;  #Aria2下载目录，记得最后面加上/
Uploader=&quot;/usr/local/bin/OneDriveUploader&quot;;  #上传的程序完整路径，默认为本文安装的目录
Config=&quot;/root/auth.json&quot;;  #初始化生成的配置auth.json绝对路径，参考第3步骤生成的路径


if [[ -z $(echo &quot;$FileNum&quot; |grep -o &apos;[0-9]*&apos; |head -n1) ]]; then FileNum=&apos;0&apos;; fi
if [[ &quot;$FileNum&quot; -le &apos;0&apos; ]]; then exit 0; fi
if [[ &quot;$#&quot; != &apos;3&apos; ]]; then exit 0; fi

function LoadFile(){
  if [[ ! -e &quot;${Uploader}&quot; ]]; then return; fi
  IFS_BAK=$IFS
  IFS=$&apos;\n&apos;
  tmpFile=&quot;$(echo &quot;${File/#$LocalDIR}&quot; |cut -f1 -d&apos;/&apos;)&quot;
  FileLoad=&quot;${LocalDIR}${tmpFile}&quot;
  if [[ ! -e &quot;${FileLoad}&quot; ]]; then return; fi
  ItemSize=$(du -s &quot;${FileLoad}&quot; |cut -f1 |grep -o &apos;[0-9]*&apos; |head -n1)
  if [[ -z &quot;$ItemSize&quot; ]]; then return; fi
  if [[ &quot;$ItemSize&quot; -ge &quot;$MaxSize&quot; ]]; then
    echo -ne &quot;\033[33m${FileLoad} \033[0mtoo large to spik.\n&quot;;
    return;
  fi
  ${Uploader} -c &quot;${Config}&quot; -t &quot;${Thread}&quot; -b &quot;${Block}&quot; -s &quot;${FileLoad}&quot; -r &quot;${RemoteDIR}&quot; -skip
  if [[ $? == &apos;0&apos; ]]; then
    rm -rf &quot;${FileLoad}&quot;;
  fi
  IFS=$IFS_BAK
}
LoadFile;</code></pre><p>编辑好上传脚本后，可以检测下脚本编码是否正确，比如我脚本路径为<code>/root/upload.sh</code>，使用命令：</p>
<pre><code>bash /root/upload.sh</code></pre><p>如果无任何输出，则正确，反之输出类似<code>$&#39;r&#39;: command not found</code>错误，则需要转换下编码格式，具体步骤如下。</p>
<p>先安装<code>dos2unix</code>：</p>
<pre><code>#CentOS系统
yum install dos2unix -y

#Debian/Ubuntu系统
apt install dos2unix -y</code></pre><p>再转换编码：</p>
<pre><code>#后面为脚本路径
dos2unix /root/upload.sh</code></pre><h2 id="Windows使用"><a href="#Windows使用" class="headerlink" title="Windows使用"></a>Windows使用</h2><p>这里就随便补充下<code>Windows</code>使用，先下载程序文件，下载地址→传送门。</p>
<p>比如我将<code>exe</code>文件放到<code>D</code>盘，然后使用<code>Win+R</code>，输入<code>CMD</code>运行，调出窗口后，使用命令：</p>
<pre><code>#进入D盘
cd /d D:\

#国际版初始化，将url换成你上面复制的授权地址，包括http://loaclhost。
OneDriveUploader.exe -a &quot;url&quot;

#个人版(家庭版)初始化，将url换成你上面复制的授权地址，包括http://loaclhost。
OneDriveUploader.exe -ms -a &quot;url&quot;

#中国版(世纪互联)初始化，将url换成你上面复制的授权地址，包括http://loaclhost。
OneDriveUploader.exe -cn -a &quot;url&quot;</code></pre><p>然后上传命令和上面一样，只需要把<code>OneDriveUploader</code>改成<code>OneDriveUploader.exe</code>即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个强大的数据库管理工具：Navicat Premium中文破解版</title>
    <url>/1794/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多做网站的都需要用到数据库管理工具，之前介绍过一个类似的工具，参考：Database.NET-多数据库管理工具，今天再介绍一个<code>Navicat Premium</code>工具，用起来很不错。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Navicat_Premium.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Navicat Premium</code>是一套数据库开发工具，让你从单一应用程序中同时连接<code>MySQL</code>、<code>MariaDB</code>、<code>SQL Server</code>、<code>Oracle</code>、<code>PostgreSQL</code>和<code>SQLite</code>数据库。</p>
<p>基本涵盖了所有常见的数据库。其中<code>MySQL</code>还支持用户管理等操作，还是不错滴。</p>
<p>它与<code>Amazon RDS</code>、<code>Amazon Aurora</code>、<code>Amazon Redshift</code>、<code>SQL Azure</code>、<code>Oracle Cloud</code>和<code>Google Cloud</code>等云数据库兼容。你可以快速轻松地创建、管理和维护数据库。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个很实用的搬瓦工VPS本地管理工具</title>
    <url>/2084/</url>
    <content><![CDATA[<p><strong>说明：</strong>本工具可以让你很方便的管理你的搬瓦工<code>VPS</code>，并且查看具体信息，启动<code>VPS</code>，还可当<code>SSH</code>使用，而不需要经常登录网页后台，很方便。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/BWH_C(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BWH_C(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>查看<code>VPS</code>的内存/流量/硬盘/系统的情况。</li>
<li>简易的<code>shell</code>功能。</li>
<li>基本的<code>VPS</code>控制（启动/停止/重启/强制关闭）。</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>软件下载：</strong>Github地址，进入后，下载最新版软件。</p>
<p>先登录搬瓦工后台，找到左侧<code>API</code>，记下你的<code>VEID</code>，并点击<code>Show API Key</code>获取你的<code>API Key</code>。</p>
<p>再打开软件，填入<code>VEID</code>和<code>API_KEY</code>就可以登录了。<br><img src="https://www.southcat.net/usr/picture/BWH_C(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>没有搬瓦工想买的可以查看：搬瓦工VPS。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个支持微信/TG频道推送的VPS在线监控系统：vps-inventory-monitoring</title>
    <url>/2019/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这是一个在实际应用场景下的软件。 通过<code>Curl</code>抓取网页源代码来监控目标字段的变化，实时把握库存信息，支持微信/<code>TG</code>频道推送。</p>
<p><strong>演示地址：</strong><a href="http://vps.hcaiyue.top/" target="_blank" rel="noopener">http://vps.hcaiyue.top/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/vps-inventory-monitoring.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/546669204/vps-inventory-monitoring" target="_blank" rel="noopener">https://github.com/546669204/vps-inventory-monitoring</a></p>
<p>本教程使用的是宝塔面板，建议新手也使用这个。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh

#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh

#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，请进入面板安装<code>PHP</code>至少<code>5.4</code>，<code>Nginx</code>，<code>mysql</code>环境。再添加域名。</p>
<p><strong>2、下载程序</strong></p>
<pre><code>#进入根目录
cd /www/wwwroot/xx.com
git clone https://github.com/546669204/vps-inventory-monitoring.git
mv vps-inventory-monitoring/{.,}* ./
chmod -Rf 755 ./*</code></pre><p><strong>3、伪静态设置</strong><br>左侧网站-域名设置-找到网站目录，把运行目录改成<code>public</code>。再找到伪静态，添加：</p>
<pre><code>location / {
   if (!-e $request_filename) {
   rewrite  ^(.*)$  /index.php?s=/$1  last;
   break;
    }
 }</code></pre><p><strong>4、配置数据库</strong><br>将根目录下的<code>mysql.sql</code>导入到你的数据库，编辑<code>app/database.example.php</code>文件，填写数据库信息，并重命名为<code>database.php</code>。</p>
<p><strong>5、修改系统配置</strong><br>编辑<code>app/index/config.php</code>文件修改定时时间、域名等。然后打开域名访问即可。</p>
<p><strong>6、自动检测</strong><br>最后我们需要定时设置检测，有<code>2</code>种方法，自己选择吧。</p>
<pre><code>1、定时任务设置
点击宝塔左侧定时计划，任务类型选择URL访问，时间设置每5分钟，URL：https://xx.com/index/index/test

2、运行验证程序，间隔时间去app/index/config.php修改
screen -S vpstest //创建screen
cd [网站根目录]
php think VpsTest
CTRL A D //退出screen
然后关闭ssh即可 重新进入查看可使用
screen -r vpstest</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>由于原项目没有说明初始用户名和密码，所以我们需要自己注册账号后，去数据库找到<code>xm_user</code>删除<code>id</code>为<code>1</code>的初始账户，找到自己注册账户<code>id</code>，并编辑<code>app/index/config.php</code>文件，将<code>adduid</code>改成自己的。</p>
<p>程序暂时没有删除操作，我们可以去数据库，通过操作<code>xm_place</code>、<code>xm_company</code>、<code>xm_index</code>进行删除操作。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个支持多用户的在线书签管理系统：My-BookMark</title>
    <url>/2407/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前一直想找个书签系统，然后最近发现了个<code>My-BookMark</code>，用了下还不错，总算不用经常重复在不同电脑或者浏览器上备份书签了，该工具可以整合多个浏览器上的书签，对于快速搜索某个时间段的书签起到便捷式的作用，有效的避免了你在重装系统和更换浏览器上对书签的备份，无法整合分类和在其他地方上网时无法查看自己的书签！无论你在何时何地都可以查看搜索自己收藏的书签数据，安装也是很简单的，有需求的可以玩玩。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/My-BookMark(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/My-BookMark(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/My-BookMark(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>需要注册账号用户。</li>
<li>网站展示有三种展示方式：导航，标签，列表。其中导航以分类展示，分类顺序可以在书签分类下面拖动编辑。按照点击的次数从高到低在每个分类里面提取<code>16</code>个书签，再按照最近添加的书签提取前面的<code>16</code>个书签，然后合并起来。标签是一个快捷方式。列表以表格展示，显示书签详细类容，按照点击次数优先显示，点击次数相同，则按添加顺序优先。这几种展示方式，可以在设置里面默认一种你常用的方式。</li>
<li>在书签分类里面，可以更新分类，删除分类，新增分类，对分类显示进行排序。分类的标签默认按照添加日期展示，但是可以点击表格的标题，按照点击次数，添加日期，最后点击从大到小进行排序。</li>
<li>可以按照指定添加时间段，指定分类目录，指定网址关键字等进行查询。</li>
<li>添加书签的时候，会自动获取<code>title</code>，供用户编辑。其中<code>Insert</code>键打开添加页面，再次按<code>Insert</code>键保存书签，<code>Esc</code>取消添加。</li>
<li>可以导入<code>Chrome</code>的书签导出文件，暂时做在设置里面。</li>
<li>书签可以作为公有或者私有，公有可供所有人搜索。</li>
<li>可以将搜索到其他用户的书签转存为自己的书签。</li>
<li>可以将书签导出来，然后导入到浏览器。</li>
<li>在热门标签里面，有在网上找的热门书签。可以转存收藏到自己书签里面，快捷键<code>R</code>随机查看热门书签。</li>
<li>新增备忘录功能，有时候随手要做点纪录，就方便了。任意界面按快捷键<code>A</code>增加备忘录。双击备忘录可查看详情！亦可分享备忘。</li>
<li>在设置的全局链接，可设置快捷键，用来在任何页面，快速打开设置的链接。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/luchenqun/my-bookmark" target="_blank" rel="noopener">https://github.com/luchenqun/my-bookmark</a></p>
<p><strong>所需环境：</strong><code>Mysql 5.6+</code>、<code>Node.js 8+</code>、<code>Redis</code>，这里说下使用宝塔安装和手动安装，由于宝塔需要<code>1G</code>内存才能安装<code>Mysql 5.6</code>，所以内存为<code>512 M</code>的建议用手动安装。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>Mysql 5.6</code>、<code>Redis</code>、<code>Nginx</code>(如果使用域名访问就建议安装)。</p>
<p>安装完成后再点击左侧数据库-添加数据库，设置好<code>Mysql</code>数据库信息，编码为<code>utf-8</code>。</p>
<p><strong>2、安装Nodejs</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y nodejs 

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs -y</code></pre><p><strong>3、安装My-BookMark</strong></p>
<pre><code>#拉取源码
git clone https://github.com/luchenqun/my-bookmark.git
cd my-bookmark
#安装依赖
npm install
#导入数据库，依次为数据库用户名、密码、数据库名，记得修改为自己的
mysql -uroot -pmoerats bookmark &lt; schema.sql
#编辑数据库信息
cp config.default.js config.js
nano config.js</code></pre><p>填上你的数据库名称，用户名和密码，然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>最后就可以启动了，这里就直接使用<code>pm2</code>了，方便开机自启。</p>
<pre><code>npm install -g pm2
pm2 start bin/www -i 0
pm2 save
pm2 startup</code></pre><p>然后访问地址<code>ip:2000</code>，建议使用域名反代下并开启<code>https</code>访问，如果你想直接使用<code>ip</code>访问，那需要去面板左侧-安全，放行<code>2000</code>端口即可，反之不用开放端口，直接进行第<code>4</code>步。</p>
<p><strong>4、域名反代</strong><br>点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:2000</code>，再启用反向代理，然后点击<code>SSL</code>，申请免费的<code>Let&#39;s Encrypt</code>证书，并强制<code>HTTPS</code>。</p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p>这里建议内存<code>512M+</code>，太小的可以先添加点<code>Swap</code>虚拟内存，教程查看→传送门，且系统建议<code>Debain</code>。</p>
<p><strong>1、安装Nodejs</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y git nodejs 

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs git -y</code></pre><p><strong>2、安装Mysql 5.7</strong></p>
<pre><code>#CentOS 6系统
rpm -ivh http://repo.mysql.com/mysql57-community-release-el6.rpm
yum install mysql-community-server -y
service mysqld start
chkconfig mysqld on

#CentOS 7系统
rpm -ivh http://repo.mysql.com/mysql57-community-release-el7.rpm
yum install mysql-community-server -y
systemctl start mysqld
systemctl enable mysqld

#Debian 8系统
echo &apos;deb http://repo.mysql.com/apt/debian/ jessie mysql-5.7
deb-src http://repo.mysql.com/apt/debian/ jessie mysql-5.7&apos; &gt;/etc/apt/sources.list.d/mysql.list
wget https://repo.mysql.com/RPM-GPG-KEY-mysql
apt-key add RPM-GPG-KEY-mysql
apt update
#安装的时候会要你输入数据库密码
apt install mysql-server -y

#Debian 9系统
echo &apos;deb http://repo.mysql.com/apt/debian/ stretch mysql-5.7
deb-src http://repo.mysql.com/apt/debian/ stretch mysql-5.7&apos; &gt;/etc/apt/sources.list.d/mysql.list
wget https://repo.mysql.com/RPM-GPG-KEY-mysql
apt-key add RPM-GPG-KEY-mysql
apt update
#安装的时候会要你输入数据库密码
apt install mysql-server -y

#Ubuntu系统
apt install mysql-server-5.7 -y</code></pre><p>如果<code>Ubuntu</code>在安装期间有弹出窗口要你输入密码就设置一个，没有的话密码就是空格。</p>
<p>对于<code>CentOS</code>安装<code>MySQL 5.7</code>的时候会生成一个随机密码，使用命令查看：</p>
<pre><code>grep &quot;password&quot; /var/log/mysqld.log
#大致信息，******为密码
[Note] A temporary password is generated for root@localhost: ******</code></pre><p>然后接下来<code>CentOS</code>和安装期间没要求输入密码的<code>Ubuntu</code>，就需要修改数据库密码：</p>
<pre><code>#CentOS系统，第一行passwd为你上面看到的密码，第四行moerats为要修改的密码，均自行修改
mysql -u root -ppasswd
mysql&gt; set global validate_password_policy=0;
mysql&gt; set global validate_password_length=4;
mysql&gt; set password=password(&quot;moerats&quot;);
mysql&gt; exit;

#Ubuntu系统，第一行登录数据库的时候直接Enter跳过，第二行moerats为要修改的密码，自行修改
mysql -u root -p
mysql&gt; UPDATE mysql.user SET authentication_string=PASSWORD(&apos;moerats&apos;), PLUGIN=&apos;mysql_native_password&apos; WHERE USER=&apos;root&apos;;
mysql&gt; exit;</code></pre><p>最后修改过密码的还需要重启数据库：</p>
<pre><code>#CentOS 6
service mysqld restart
#CentOS 7
systemctl restart mysqld
#Ubuntu
systemctl restart mysql</code></pre><p>此时<code>Mysql</code>算是安装完成了。</p>
<p>接下来创建新的数据库，使用命令：</p>
<pre><code>#创建编码为utf-8的bookmark数据库，moerats为数据库密码，自行修改
mysql -uroot -pmoerats
mysql &gt; create database bookmark default character set utf8 collate utf8_general_ci;
#退出
mysql &gt; exit;</code></pre><p><strong>3、安装Redis</strong></p>
<pre><code>#CentOS 6系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
yum install redis -y
service redis start
chkconfig redis on

#CentOS 7系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install redis -y
systemctl start redis
systemctl enable redis

#Debian/Ubuntu系统
apt install redis-server -y</code></pre><p><strong>4、安装My-BookMark</strong></p>
<pre><code>#拉取源码
git clone https://github.com/luchenqun/my-bookmark.git
cd my-bookmark
#安装依赖
npm install
#导入数据库，依次为数据库用户名、密码、数据库名，记得修改为自己的
mysql -uroot -pmoerats bookmark &lt; schema.sql
#编辑数据库信息
cp config.default.js config.js
nano config.js</code></pre><p>填上你的数据库名称，用户名和密码，然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>最后就可以启动了，这里就直接使用<code>pm2</code>了，方便开机自启。</p>
<pre><code>npm install -g pm2
pm2 start bin/www -i 0
pm2 save
pm2 startup</code></pre><p>然后访问地址<code>ip:2000</code>，同样的，这里建议使用域名反代，并开启<code>HTTPS</code>访问。</p>
<p><strong>5、域名反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:2000 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个极简且美观的多用户网盘程序：Veno File Manager V3.4.8</title>
    <url>/2266/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Veno File Manager</code>估计很多人用过，极简而且功能强大，安装也简单，只要支持<code>PHP</code>即可，无需数据库，只是需要花钱购买，目前官方更新到了<code>V3.4.5</code>，这里就分享由顶点网破解的<code>Veno File Manager V3.4.5</code>程序，博主用了下，相比较以前老版本，更新还是挺多的，详细介绍可以查看官网→传送门。</p>
<pre><code>提示：目前最新版为V3.4.8，已在文中分享出来。</code></pre><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/veno-file-manager(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/veno-file-manager(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/veno-file-manager(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/veno-file-manager(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>所需环境：</strong><code>Nginx</code>/<code>Apache</code>、<code>PHP</code><br><strong>程序下载：</strong>veno-file-manager-v3.4.5.zip、veno-file-manager-v3.4.8.zip</p>
<p>先搭建好环境，然后将源码上传到网站根目录即可，默认登录管理的用户名是<code>admin</code>密码是<code>password</code>，进后台后记得设置一下语言和更改密码。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个极简的HTTP Server： Caddy一键安装脚本，带网站配置教程</title>
    <url>/1829/</url>
    <content><![CDATA[<p><strong>说明：</strong>这几天一直在看逗比根据地，发现<code>Caddy</code>很是强大，是一个极简的<code>HTTP</code>服务器，支持<code>HTTP/2</code>静态网页服务器，安装也很快，在很多方面都可以不用安装时间很长的<code>lnmp</code>，<code>lamp</code>环境了，配置文件也很简单，同时还有一些有趣的扩展，可以非常方便的搭建一个<code>HTTP</code>服务器。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>CentOS 6+</code>/<code>Debian 6+</code>/<code>Ubuntu 14.04 +</code>。推荐<code>Debian 7 x64</code>。</p>
<p>本脚本只是一个一键安装+运行控制的脚本，没有其他管理虚拟主机等功能。</p>
<p>执行下面的代码安装<code>Caddy</code>，如果想要安装其他扩展可以把名字加到命令后面（<code>bash caddy_install.sh install xxx,xxx,xxx，</code>扩展列表点击查看）。</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><pre><code>启动：/etc/init.d/caddy start
停止：/etc/init.d/caddy stop
重启：/etc/init.d/caddy restart
查看状态：/etc/init.d/caddy status
查看Caddy启动日志：tail -f /tmp/caddy.log
安装目录：/usr/local/caddy
Caddy配置文件位置：/usr/local/caddy/Caddyfile
Caddy自动申请SSL证书位置：/.caddy/acme/acme-v01.api.letsencrypt.org/sites/xxx.xxx(域名)/</code></pre><h2 id="升级Caddy或者更新扩展"><a href="#升级Caddy或者更新扩展" class="headerlink" title="升级Caddy或者更新扩展"></a>升级Caddy或者更新扩展</h2><p>只需要重新执行你当初安装时候用的命令即可，会覆盖安装最新的<code>Caddy+</code>扩展。</p>
<h2 id="卸载Caddy"><a href="#卸载Caddy" class="headerlink" title="卸载Caddy"></a>卸载Caddy</h2><p>卸载不会删除虚拟主机的内容，只会删除<code>Caddy</code>自身和配置文件。</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; bash caddy_install.sh uninstall
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; bash caddy_install.sh uninstall</code></pre><h2 id="网站配置文件"><a href="#网站配置文件" class="headerlink" title="网站配置文件"></a>网站配置文件</h2><p>配置文件为<code>Caddyfile</code>，列举几种<code>caddy</code>的<code>conf</code>的写法</p>
<p><strong>1、本地访问80</strong></p>
<pre><code>:80</code></pre><p><strong>2、单网站访问</strong></p>
<pre><code>example.com
root /usr/local/caddy/www
//更多模块</code></pre><p><strong>2、多网站</strong></p>
<pre><code>example.com {
  gzip
  root /usr/local/caddy/www
  //更多模块
}</code></pre><p>常用基本组成模块，均写入到<code>conf</code>站点配置中。</p>
<pre><code>#log日志
log /usr/local/caddy/www/example.log

#目录访问
browse

#gzip压缩
gzip

#自主ssl证书
tls /path/ssl/example.com.crt /path/ssl/example.com.key

#访问口令认证（用户emiria，密码abc123）
basicauth / emiria abc123

#跳转功能
redir http://example.com{url}

#自定义错误页面
errors {
    404 404.html
    500 /usr/local/caddy/www/500.html
}</code></pre><p>例如，通过<code>IP</code>即<code>80</code>端口访问目录：</p>
<pre><code>:80 {
     root /usr/local/caddy/www
     gzip
     browse
    }</code></pre><p>也可以直接执行命令写入，以下是一个命令，直接复制粘贴即可。</p>
<pre><code>echo &quot;:80 {
 root /usr/local/caddy/www
 gzip
 browse
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>更多配置参考：<a href="https://caddyserver.com/tutorial/caddyfile" target="_blank" rel="noopener">https://caddyserver.com/tutorial/caddyfile</a><br>设置文档参考：<a href="https://caddyserver.com/docs" target="_blank" rel="noopener">https://caddyserver.com/docs</a></p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>1、Caddy启动失败，打开ip访问地址显示的是 It works !</strong><br>一些系统会自带<code>apache2</code>，而<code>apache2</code>会占用<code>80</code>端口，导致<code>Caddy</code>无法绑定端口，所以只要关掉就好了。</p>
<pre><code>netstat -lntp
# 我们可以通过这个命令查看是不是被其他软件占用了80端口。</code></pre><p>不过<code>apache2</code>会默认开机自启动，如果不需要可以关闭自启动或者卸载<code>apache2</code>。</p>
<p>停止<code>Apache2</code></p>
<pre><code># CentOS系统
/etc/init.d/httpd stop
# Debian/Ubuntu系统
/etc/init.d/apache2 stop

# 尝试使用上面代码关闭，如果没效果或者提示什么错误无法关闭，那就用下面这个强行关闭进程。
kill -9 $(ps -ef|grep &quot;apache2&quot;|grep -v &quot;grep&quot;|awk &apos;{print $2}&apos;)</code></pre><p>取消开机自启动</p>
<pre><code># CentOS 系统
chkconfig --del httpd
# Debian/Ubuntu 系统
update-rc.d -f apache2 remove</code></pre><p>卸载<code>Apache2</code></p>
<pre><code># CentOS 系统
yum remove httpd
# Debian/Ubuntu 系统
apt-get remove --purge apache2</code></pre><p>关闭<code>Apache2</code>后，就可以尝试启动<code>Caddy</code>，并试试能不能打开网页。</p>
<pre><code>/etc/init.d/caddy start</code></pre><p><strong>2、启动Caddy后，无法访问</strong><br>这个可能是防火墙的问题，开放防火墙端口即可。</p>
<pre><code>iptables -I INPUT -m state --state NEW -m tcp -p tcp --dport 端口 -j ACCEPT
iptables -I INPUT -m state --state NEW -m udp -p udp --dport 端口 -j ACCEPT

# 删除防火墙规则，内容一样把 -I 换成 -D 就行了：
iptables -D INPUT -m state --state NEW -m tcp -p tcp --dport 端口 -j ACCEPT
iptables -D INPUT -m state --state NEW -m udp -p udp --dport 端口 -j ACCEPT</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个现代、安全且简洁的PHP短链接程序：URL-Shorter</title>
    <url>/2038/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>URL-Shorter</code>是一个现代、安全且简洁的<code>PHP</code>短链接，由岁月小筑博主开发，后期功能会逐步添加。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/URL-Shorter.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>使用<code>PDO</code>和<code>Bindparam</code>防注入</li>
<li>使用<code>Ajax</code>获取短链接(免刷新)</li>
<li>使用纯<code>JS</code>复制生成的短链接</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/littleplus/url-shorter" target="_blank" rel="noopener">https://github.com/littleplus/url-shorter</a></p>
<p>1、搭建好<code>web</code>环境，并添加域名</p>
<p>2、<code>git clone</code>或者下载代码到网站根目录。</p>
<pre><code>#git下载，仅作参考
cd /home/xx.com
git clone https://github.com/littleplus/url-shorter.git
mv url-shorter/{,.}* ./</code></pre><p>3、新建数据库，并导入根目录的<code>url.sql</code>数据。</p>
<p>4、编辑根目录<code>config.php</code>配置文件，填入域名和数据库信息</p>
<p>5、配置好伪静态<br><code>Apache</code>直接使用根目录下的<code>.htaccess</code>就可以了。</p>
<p><code>Nginx</code>添加以下代码</p>
<pre><code>location / {
    try_files $uri $uri/ /index.php?$args;
}</code></pre><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><ul>
<li>使用<code>Redis</code>缓存，更快，抗压能力更强</li>
<li>使用<code>Redis</code>控制访问速率，抗<code>CC</code></li>
<li>鉴定不良网站，网站黑名单，后台管理，跳转格式设置，用户注册等</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个强大的多功能团队聊天室：Rocket.Chat安装教程</title>
    <url>/1983/</url>
    <content><![CDATA[<p><strong>说明：</strong>今天接触了下<code>Rocket.Chat</code>感觉很强大，功能也多，安卓，苹果都有应用软件，不过我们可以自己搭建个<code>Rocket.Chat</code>聊天室，这里说下安装方法，有兴趣可以玩玩。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Rocket.Chat</code>使用<code>Meteor</code>框架做的开源消息应用。是领先的免费开源团队聊天<code>Slack</code>的替代品，功能强大，它支持群组聊天，直接通信，私聊群，桌面通知，媒体嵌入，链接预览，文件上传，语音/视频聊天，截图等等，还支持实时翻译，实现用户之间的自动实时消息转换。使用<code>Rocket.Chat</code>可以完全控制交流通信。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Rocket.Chat(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Rocket.Chat(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Rocket.Chat(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/RocketChat/Rocket.Chat" target="_blank" rel="noopener">https://github.com/RocketChat/Rocket.Chat</a></p>
<p>这里只说<code>Ubuntu 16.04 +</code>系统的安装教程，毕竟简单。<code>Debian</code>安装教程：点击查看，<code>CentOS</code>安装教程：点击查看，<code>Docker</code>安装教程：点击查看，宝塔面板安装教程：点击查看。</p>
<p><strong>1、安装Rocket.Chat</strong></p>
<pre><code>#更新系统
apt-get update -y
#安装rocketchat-server
snap install rocketchat-server</code></pre><p>这时候可以通过<code>http://ip:3000</code>进入聊天室界面了。一般安装后，如果有新版本发布，会在<code>6</code>小时后自动更新应用，如果你想快点，使用命令<code>sudo snap refresh rocketchat-server</code>即可。</p>
<p><strong>2、使用Caddy给站点添加SSL</strong><br>如果你想域名进入，可以使用<code>Caddy</code>，还可以自动添加免费<code>SSL</code>证书，先把域名解析到<code>VPS</code>服务器，然后使用命令：</p>
<pre><code>#请修改成你的域名
sudo snap set rocketchat-server caddy-url=https://www.southcat.net
sudo snap set rocketchat-server caddy=enable
sudo snap set rocketchat-server https=enable
sudo rocketchat-server.initcaddy</code></pre><p>再编辑<code>Caddyfile</code>文件：<code>/var/snap/rocketchat-server/current/Caddyfile</code>。</p>
<pre><code>nano /var/snap/rocketchat-server/current/Caddyfile</code></pre><p>修改如下：</p>
<pre><code>#在适当位置加{}就好了
https://www.southcat.net {
proxy / localhost:3000 {
  websocket
  transparent
}
}</code></pre><p>重启<code>Caddy</code>服务生效</p>
<pre><code>sudo systemctl restart snap.rocketchat-server.rocketchat-caddy</code></pre><p>这时候就可以通过<code>https://your_domain.com</code>进入聊天室了。</p>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>#检查Rocket状态
sudo systemctl status snap.rocketchat-server.rocketchat-server.service
#查看日志
sudo journalctl -u snap.rocketchat-server.rocketchat-server
#重启Rocket
sudo systemctl restart snap.rocketchat-server.rocketchat-server</code></pre><h2 id="备份还原"><a href="#备份还原" class="headerlink" title="备份还原"></a>备份还原</h2><p><strong>1、备份数据</strong></p>
<pre><code>#停止Rocket
sudo service snap.rocketchat-server.rocketchat-server stop
#开始备份，备份文件会保存在/var/snap/rocketchat-server/common/backup
sudo snap run rocketchat-server.backupdb
#重启Rocket
sudo service snap.rocketchat-server.rocketchat-server start</code></pre><p><strong>2、还原数据</strong></p>
<pre><code>#停止Rocket
sudo service snap.rocketchat-server.rocketchat-server stop
#再将备份的文件放在/var/snap/rocketchat-server/common/文件夹
#开始还原
sudo snap run rocketchat-server.restoredb /var/snap/rocketchat-server/common/rocketchat_backup*.tgz
#如果要替换现有数据库，则会收到警告
*** ATTENTION ***
* Your current database WILL BE DROPPED prior to the restore!
* Would you like to make a backup of the current database before proceeding?
* (y/n/Q)&gt;
按y和Enter以当前状态备份数据库。
按n和Enter继续，而不备份当前状态的数据库。
按任意键和/或Enter退出还原过程而不进行任何更改。
#重启Rocket
sudo service snap.rocketchat-server.rocketchat-server start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个生成可自定义地址的短链接URL网站</title>
    <url>/1584/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多时候因为网站链接太长，或者不方便让人看到，就需要将网址生成短链接再发出去，这里推荐个很好用的短链接<code>URL</code>网站，可以自定义地址。</p>
<p><img src="https://www.southcat.net/usr/picture/duandiz.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>支持隐形<code>URL</code>转发</li>
<li>支持显性<code>URL</code>转发</li>
<li>支持短链接<code>URL</code>设置密码</li>
<li>支持设置合集页面（或者说是分类/专辑）</li>
<li>支持显示统计信息（国家/语言/设备/浏览器等）</li>
</ul>
<p><strong>官方网站：</strong><a href="https://url.vps.re/" target="_blank" rel="noopener">https://url.vps.re/</a></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>第一行 填写要缩短的长链接，如写<code>https://www.southcat.net/music</code><br>第二行(<code>Alias</code>) 填写要设置的别名(只支持字母和数字)，也就是短链接地址，如写<code>Rats</code><br>然后点击<code>Shorten</code>按钮生成，等几秒你就会获得一个短链接：<code>https://url.vps.re/Rats</code></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个简单、快速的多媒体文件服务器：Gossa</title>
    <url>/2401/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>gossa</code>是一个基于<code>golang</code>的文件网络服务器，可以让你通过浏览器直接对服务器指定目录进行相关操作，比如上传文件、创建文件夹/文件、移动文件、编辑文本等操作，也可以在线播放文件中的视频/音乐等。安装也是很简单，易上手，拿来临时玩玩也不错。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Gossa.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/pldubouilh/gossa" target="_blank" rel="noopener">https://github.com/pldubouilh/gossa</a></p>
<p>该程序支持<code>Linux</code>、<code>Windows</code>、<code>Mac</code>，不过感觉后面<code>2</code>个用处不大，这里也只说<code>Linux</code>。</p>
<p>首先下载作者提供的编译好的二进制文件→传送门，根据自己的系统架构下载对应的最新版压缩包，目前最新版本为<code>v0.0.7</code>。</p>
<p>先登录<code>SSH</code>客户端，使用命令：</p>
<pre><code>wget https://github.com/pldubouilh/gossa/releases/download/v0.0.7/gossa-linux64
mv gossa-linux64 /usr/local/bin/gossa
#授权
chmod +x /usr/local/bin/gossa</code></pre><p>启动程序：</p>
<pre><code>gossa /root/moerats</code></pre><p>指定目录为<code>/root/moerats</code>，默认运行地址<code>127.0.0.1:8001</code>。</p>
<p>如果想使用<code>ip:8001</code>访问的话，则命令如下：</p>
<pre><code>gossa -h 0.0.0.0 /root/moerats
#后台运行
nohup gossa -h 0.0.0.0 /root/moerats &amp;</code></pre><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、运行镜像</strong><br>新建<code>Dockerfile</code>文件，使用命令：</p>
<pre><code>#将下面一起复制进SSH客户端运行
cat &gt; Dockerfile &lt;&lt;EOF
FROM alpine
EXPOSE 8001
RUN wget https://github.com/pldubouilh/gossa/releases/download/v0.0.7/gossa-linux64 &amp;&amp; mv gossa-linux64 /gossa &amp;&amp; chmod +x /gossa
ENTRYPOINT [ &quot;/gossa&quot;, &quot;-h&quot;, &quot;0.0.0.0&quot;, &quot;/shared&quot; ]
EOF</code></pre><p>构建镜像：</p>
<pre><code>docker build -t gossa .</code></pre><p>运行镜像：</p>
<pre><code>docker run --name gossa -d -p 8001:8001 -v /root/moerats:/shared gossa</code></pre><p>指定目录为<code>/root/moerats</code>，访问地址<code>ip:8001</code>，都可以自行修改。</p>
<h2 id="详细操作"><a href="#详细操作" class="headerlink" title="详细操作"></a>详细操作</h2><p>浏览器操作：</p>
<pre><code>#创建新文件夹
单击新文件夹图标    

#打开文件编辑器
点击文本图标    

#重命名项目
单击文件图标

#删除项目    
双击文件图标

#移动项目    
鼠标左键按住文件不动，直接拖动

#上传文件/文件夹    
将外部文件直接拖至浏览器窗口</code></pre><p>纯键盘快捷键操作：</p>
<pre><code>#浏览文件/目录和图片
键盘上下左右箭头

#将文件URL复制到剪贴板
Ctrl/Meta + C

#重命名文件/文件夹
Ctrl/Meta + E

#删除文件/文件夹
Ctrl/Meta + Del

#上传新文件/文件夹    
Ctrl/Meta + U    

#创建一个新目录
Ctrl/Meta + D    

#将以前选择的路径粘贴到目录
Ctrl/Meta + V    </code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个简单易用的Linux文本编辑器：nano的安装与使用</title>
    <url>/1917/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多情况下我们都需要编辑服务器里的文本内容，而现在用的比较多的文本编辑器是<code>vim</code>，这个估计很多人都觉得很难用，这里博主推荐一个简单易用的文本编辑器<code>nano</code>，比<code>vim</code>简单很多，很容易上手。这里大概说下教程。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre><code>#CentOS系统
yum -y install nano
#Debian/Ubuntu系统
apt-get install -y nano</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、打开文件</strong></p>
<pre><code>nano 文件路径</code></pre><p>然后可以通过方向键移动和鼠标右键直接操作。</p>
<pre><code>Alt+6   #复制一整行
Ctrl+K  #剪贴一整行
Ctrl+U  #粘贴文字
Ctrl+Y  #上一页
Ctrl+V  #下一页
Ctrl+O  #保存
Ctrl+X  #退出，如果你修改了文件，会要你输入保存文件名，直接确认即可。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个简单的MySQL备份bash脚本，直接发送到邮箱</title>
    <url>/1662/</url>
    <content><![CDATA[<h2 id="脚本说明"><a href="#脚本说明" class="headerlink" title="脚本说明"></a>脚本说明</h2><p>这是一个简单的<code>mysql</code>备份脚本。脚本可以手动使用，也可以在<code>crontab</code>中定时使用。编辑下面给出的脚本，并提供脚本中所需的信息。该脚本将采用<code>.sql</code>格式的备份，它将压缩<code>.sql</code>文件，最后发送有关<code>mysql</code>备份状态的邮件。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、安装邮件命令</strong></p>
<pre><code>yum install mailx   (For Red Hat and CentOS)
OR
apt-get install mail-utils (For Debian and Ubuntu)</code></pre><p><strong>2、创建备份文件夹</strong></p>
<pre><code>mkdir -p /root/database-backup/</code></pre><p><strong>3、下载脚本并使用FTP软件编辑</strong></p>
<pre><code>wget --no-check-certificate https://www.southcat.net/usr/down/db-backupscript.sh

chmod +x db-backupscript.sh
./db-backupscript.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个简单的PHP Web代理：miniProxy</title>
    <url>/2444/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>miniProxy</code>是一个用<code>PHP</code>编写的简单<code>Web</code>代理，可以让您绕过网页过滤器，或匿名浏览网页。一般我们可以拿来访问谷歌查询学习资料等，对于谷歌重度使用者或者需要经常使用谷歌的团队/班级来说，还是挺方便的，毕竟不用梯子就可以直接访问谷歌了。</p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>GitHub地址：</strong><a href="https://github.com/joshdick/miniProxy" target="_blank" rel="noopener">https://github.com/joshdick/miniProxy</a></p>
<p><strong>环境要求：</strong><code>PHP &gt;= 5.4.7</code>，并且要求安装<code>PHP curl</code>和<code>mbstring</code>拓展；建议使用域名并开启<code>HTTPS</code>；如果想访问谷歌等，则需要国外服务器。</p>
<p>手动只推荐有现成环境的，比如已经装过宝塔面板或者其它的<code>LNMP</code>安装包等，然后直接访问上面的<code>Github</code>地址，将<code>PHP</code>文件下载并上传至网站根目录，最后直接访问即可。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>由于官方的界面太简陋了，于是某大佬花了几分钟改了下，比官方的稍微好点了，这里就直接做成了<code>Docker</code>镜像，拉取镜像的时候，建议直接使用域名访问，期间会自动给你配置<code>SSL</code>，用<code>IP</code>可能会出现很多未知问题。</p>
<p>修改后的截图如下：<br><img src="https://www.southcat.net/usr/picture/miniproxy.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong></p>
<pre><code>#使用ip访问，不建议选择
docker run --name miniproxy -d \
--restart=always \
-p 80:80 \
moerats/miniproxy

#使用域名访问，请修改为自己的域名后运行
docker run --name miniproxy -d \
--restart=always \
-p 80:80 \
-p 443:443 \
-e domain=www.southcat.net \
moerats/miniproxy</code></pre><p>使用域名访问的话，请提前解析好域名并生效，不然给你签发<code>SSL</code>证书的时候会失败，导致打不开等情况。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个简洁的去中心化视频分享平台：ipfstube安装教程</title>
    <url>/2070/</url>
    <content><![CDATA[<p><strong>说明：</strong>前几天分享过一个去中心视频分享平台，查看：PeerTube安装教程，功能挺多的，今天再分享个界面很简洁的平台<code>ipfstube</code>，是一个存储在<code>IPFS</code>里的视频程序，原理是你上传视频到里面，视频不会存储到自己的服务器，而是会转化成一个哈希值，只要被一个人传播，那么资源节点也会越来越多，即使你上传的那个平台关闭，你也可以根据哈希值找到你上传的视频，而且该平台搭建教程也十分的简单，这里就说下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/ipfstube(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ipfstube(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/download13/ipfstube" target="_blank" rel="noopener">https://github.com/download13/ipfstube</a></p>
<p>本教程在<code>Ubuntu</code>上测试通过，首先你需要解析一个域名到你的<code>VPS</code>服务器。</p>
<p><strong>1、申请SSL证书</strong><br>这里就不使用一键脚本申请了，使用更快的<code>webroot</code>方式签发<code>Let&#39;s Encrypt</code>证书。</p>
<p>安装<code>Nginx</code>和<code>letsencrypt</code></p>
<pre><code>apt-get -y install nginx letsencrypt </code></pre><p>申请<code>SSL</code>证书</p>
<pre><code>#请替换成自己域名，申请后证书文件在/etc/letsencrypt/live
letsencrypt certonly --webroot -w /var/www/html --domain southcat.net</code></pre><p><strong>2、安装Docker和Docker Compose</strong></p>
<pre><code>#安装Docker
curl -sSL https://get.docker.com/ | sh
service docker start
#安装Docker Compose
curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>3、检查端口</strong><br>为防止<code>80</code>端口冲突，导致安装失败，先卸载掉之前的<code>Nginx</code>。</p>
<pre><code>apt-get -y remove nginx</code></pre><p>检查<code>80</code>端口，并杀掉残余进程。</p>
<pre><code>#找到80后的LISTEN xx/yy，xx就是进程号
netstat -lnp|grep 80
#杀掉xx进程
kill -9 xx</code></pre><p><strong>4、安装ipfstube</strong></p>
<pre><code>apt-get -y install git
git clone https://github.com/download13/ipfstube.git
cd ipfstube
#编辑nginx.conf文件
nano nginx.conf</code></pre><p>将域名<code>server_name</code>和<code>ssl</code>证书后面的域名改成你的。</p>
<p>运行容器</p>
<pre><code>docker-compose up -d</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个美观且支持对接多个存储的多用户网盘程序：BeDrive V2.0.9</title>
    <url>/2351/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>BeDrive</code>是一款支持多用户的商业版网盘程序，功能强大，支持对接<code>Amazon S3</code>、<code>DigitalOcean</code>、<code>Dropbox</code>、<code>FTP</code>等存储，界面很漂亮，安装也简单，不过这是一款收费的程序，目前官方更新到了<code>V2.0.9</code>，这里就分享下由顶点网破解的<code>BeDrive V2.0.9</code>程序，博主用了下，感觉还行，不过不是很适合个人使用，有兴趣的可以用下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/BeDrive(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BeDrive(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BeDrive(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BeDrive(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>基于<code>Ajax</code></li>
<li>分享功能</li>
<li>文件上传</li>
<li>共享链接</li>
<li>多语言</li>
<li>响应式设计</li>
<li>文件预览</li>
<li><code>Amazon S3</code>、<code>DigitalOcean</code>、<code>Dropbox</code>存储</li>
<li>认证管理</li>
<li>角色和权限</li>
<li>禁用注册</li>
<li>网格和列表视图</li>
<li>广告系统</li>
<li>专业设计</li>
<li>外观编辑</li>
<li><code>Analytics</code>(分析)</li>
<li>多个主页</li>
<li>付款系统</li>
<li>拖放上传</li>
<li>上下文菜单</li>
<li>回收站</li>
<li>收藏</li>
<li>搜索</li>
<li>文件细节</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>Nginx</code>/<code>Apache</code>、<code>PHP &gt;= 5.6</code>、<code>Mysql</code>、<code>PDO</code>和<code>Fileinfo</code>拓展。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP</code>、<code>Nginx</code>或<code>Apache</code>、<code>Mysql</code>。</p>
<p>再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>扩展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、脚本添加，脚本地址：https://www.southcat.net/archives/722/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p><strong>2、上传源码</strong><br>点击面板左侧-添加站点，数据库选择<code>Mysql</code>，设置好数据库名称、密码。</p>
<p>然后上传源码到根目录并解压出来(源码下载：BeDrive_V2.0.9)，也可以直接在<code>SSH</code>客户端使用命令：</p>
<pre><code>#将下面根目录地址改成自己的再运行
cd /www/wwwroot/www.southcat.net
wget https://www.southcat.net/usr/down/BeDrive_V2.0.9.zip
unzip BeDrive_V2.0.9.zip &amp;&amp; rm -rf BeDrive_V2.0.9.zip</code></pre><p><strong>3、配置网站</strong><br>进入到域名设置，点击网站目录，去除跨站攻击的<code>√</code>，并设置运行目录为<code>public</code>。</p>
<p>如果你是<code>Nginx</code>环境，还需要再点击伪静态设置，填入以下代码：</p>
<pre><code>location / {
    try_files $uri $uri/ /index.php?$query_string;
}</code></pre><p>最后打开域名进行安装即可。</p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>kiftd：一款面向个人，团队，小型组织的免费开源网盘程序</li>
<li>使用Docker安装Seafile云盘专业版，并配置域名及SSL证书</li>
<li>Cloudreve：一款支持对接多家云存储的多功能网盘系统</li>
<li>FileRun：一款强大的多功能网盘和文件管理器</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个简单，快速，漂亮的RSS阅读器：Feedbin安装教程</title>
    <url>/2246/</url>
    <content><![CDATA[<p><strong>说明：</strong>前几天应几位童鞋的要求，研究了下<code>Feedbin</code>，一个简单，快速，漂亮的<code>RSS</code>阅读器，功能挺强的，具体介绍可以看官网→传送门，由于网上几乎看不到这个的安装教程，官方安装文档也少，导致中间踩得坑也挺多的，所以这里就大概发个安装教程，有兴趣的可以试试。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Feedbin(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Feedbin(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/feedbin/feedbin" target="_blank" rel="noopener">https://github.com/feedbin/feedbin</a></p>
<p><strong>环境要求：</strong><code>Ruby 2.6.1</code>、<code>Postgres 10</code>、<code>Redis &gt; 2.8</code>、<code>Memcached</code>、<code>Elasticsearch 2.4.X</code></p>
<p>教程只适用于<code>CentOS 7</code>系统，内存建议<code>1G</code>；如果你是<code>KVM</code>，且内存不够的话，建议加点<code>Swap</code>，<code>Swap</code>添加脚本→传送门。</p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#更新系统
yum update -y
#安装EPEL
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#安装开发工具组包
yum -y groupinstall &quot;Development Tools&quot;
#安装依赖
yum install libcurl-devel libxml2-devel libxslt-devel rubygems ruby-devel rubygem-bundler ImageMagick-devel patch libidn-devel libidn2-devel libidn2 tmux postgresql-devel java-1.8.0-openjdk.x86_64 -y</code></pre><p><strong>2、安装ElasticSearch</strong></p>
<pre><code>rpm -Uvh https://www.southcat.net/usr/down/elasticsearch-2.4.4.rpm</code></pre><p><strong>3、安装Memcached</strong></p>
<pre><code>yum install memcached -y</code></pre><p><strong>4、安装Redis</strong></p>
<pre><code>yum install redis -y</code></pre><p><strong>5、安装PostgreSQL 10</strong></p>
<pre><code>#安装存储库RPM
yum install https://download.postgresql.org/pub/repos/yum/10/redhat/rhel-7-x86_64/pgdg-centos10-10-2.noarch.rpm -y
#安装数据库和一些服务包
yum install postgresql10 postgresql10-server postgresql10-contrib -y
#初始化数据库
/usr/pgsql-10/bin/postgresql-10-setup initdb</code></pre><p><strong>6、开始运行</strong></p>
<pre><code>#运行命令
systemctl start memcached redis elasticsearch postgresql-10
#查看状态，如果都显示active(running)即为运行成功
systemctl status memcached redis elasticsearch postgresql-10
#设置开机自启
systemctl enable memcached redis elasticsearch postgresql-10</code></pre><p><strong>7、安装Ruby</strong></p>
<pre><code>#安装RVM
curl -sSL https://get.rvm.io | bash -s stable
#如果安装RVM失败，运行以下一行命令后再重新安装
gpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
#使其生效
source /etc/profile.d/rvm.sh
#安装ruby 2.6.1
rvm install ruby 2.6.1
#设为默认值
rvm use 2.6.1 --default</code></pre><p><strong>8、配置数据库</strong><br>编辑文件：</p>
<pre><code>nano /var/lib/pgsql/10/data/pg_hba.conf</code></pre><p>将以下<code>2</code>行后面的<code>peer</code>改成<code>trust</code>，再使用<code>Ctrl+x</code>、<code>y</code>保存退出。<br><img src="https://www.southcat.net/usr/picture/Feedbin(3).png" alt="请输入图片描述" title="请输入图片描述"><br>再重启数据库：</p>
<pre><code>systemctl restart postgresql-10</code></pre><p><strong>9、打包程序</strong></p>
<pre><code>#拉取源码
git clone https://github.com/feedbin/feedbin.git
cd feedbin
mv .env.example .env
#安装依赖
gem install bundle curb nokogiri nio4r bcrypt ffi http_parser.rb idn-ruby unf_ext kgio sassc websocket-driver msgpack mini_racer puma raindrops rmagick
#运行命令
bundle</code></pre><p>如果过程中出现错误，根据提示安装所需依赖就行了，比如<code>gem install sassc</code>。安装好了后再执行<code>bundle</code>命令。直到安装完成。</p>
<p><strong>10、相关配置</strong><br>编辑<code>feedbin</code>目录里的<code>.env</code>文件，进行以下修改：</p>
<pre><code>#你也可以根据要求开启其它功能
export DATABASE_URL=postgres://postgres:password@127.0.0.1/database
export REDIS_URL=redis://127.0.0.1:6379
export ELASTICSEARCH_URL=http://127.0.0.1:9200
export SECRET_KEY_BASE=&lt;%= ENV[&quot;SECRET_KEY_BASE&quot;] %&gt;</code></pre><p>再去申请一个<code>Stripe.api_key</code>，申请地址→传送门，建立一个名为<code>trial</code>的测试密匙，再到<code>.env</code>文件里设置<code>STRIPE_API_KEY</code>和<code>STRIPE_PUBLIC_KEY</code>。<br><img src="https://www.southcat.net/usr/picture/Feedbin(4).png" alt="请输入图片描述" title="请输入图片描述"><br>如果不申请和设置<code>Stripe.api_key</code>的话，注册账号时会验证失败，不过这里博主想到了一个不用注册就可以使用的方法。就是编辑<code>app/models/user.rb</code>文件，进行如下编辑：</p>
<pre><code>#注销掉下面一行代码，大概位置70行左右
#before_create { create_customer }</code></pre><p>再编辑<code>config/database.yml</code>文件。</p>
<pre><code>#修改数据库用户名，不然会默认root
username: postgres</code></pre><p><strong>11、运行程序</strong><br>以下命令均在<code>feedbin</code>文件夹运行。</p>
<p>设置数据库：</p>
<pre><code>rake db:setup</code></pre><p>启动流程：</p>
<pre><code>#后台运行
screen -S start
bundle exec foreman start</code></pre><p>接下来按<code>Ctrl+A</code>，再按<code>D</code>键保存退出。</p>
<p>继续后台运行命令：</p>
<pre><code>screen -S rackup
rackup</code></pre><p>同样的安装上面方法保存退出。</p>
<p>最后可以关下防火墙，运行命令：</p>
<pre><code>systemctl stop firewalld.service    #停止firewall
systemctl disable firewalld.service #禁止firewall开机启动</code></pre><p><strong>12、域名反代</strong><br>这里请提前解析好域名，默认开启<code>SSL</code>。</p>
<p>安装<code>Caddy</code></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>编辑配置文件</p>
<pre><code>#以下全部内容是一个整体，修改域名后一起复制到SSH运行！
echo &quot;https://xx.com {
 tls admin@southcat.net
 proxy / localhost:9292 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
 log /var/log/caddy.log
 gzip
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code></p>
<pre><code>/etc/init.d/caddy start</code></pre><p>最后就可以通过域名<code>https</code>访问了。</p>
<p><strong>13、插件设置</strong><br>插件也不是必须安装的，不过这里就列举几个插件，照着<code>Github</code>安装后，在<code>.env</code>文件里进行配置后，再重新启动即可。</p>
<pre><code>刷新插件：https://github.com/feedbin/refresher
图像查找：https://github.com/feedbin/image
图像代理：https://github.com/atmos/camo</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个Aria2新的更好用的Web前端：AriaNg安装教程</title>
    <url>/1658/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>AriaNg</code>是一个很实用的<code>Aria2</code>前端，比起<code>Aria2 WebUI</code>来说，好用多了，关于<code>Aria2</code>服务端搭建方法可参考：BT种子/磁力链接下载工具：Aria2一键安装管理脚本，这里说下前端<code>AriaNg</code>搭建方法。</p>
<p>自己也搭建了个<code>AriaNg</code>，可以参考：<a href="https://www.southcat.net/Aria2/" target="_blank" rel="noopener">https://www.southcat.net/Aria2/</a></p>
<h2 id="相关说明"><a href="#相关说明" class="headerlink" title="相关说明"></a>相关说明</h2><p><code>AriaNg</code>功能覆盖了<code>Aria2 WebUI</code>和<code>YAAW</code>的功能。与之前的前端相比，主要优势在于：<br>1、完全响应式布局，电脑和手机等设备全部支持。<br>2、更友好的用户界面，使用起来更像常用的下载工具。<br>下载任务列表支持排序（文件名、大小、进度、剩余时间、下载速度等）和搜索，正在等待的任务列表支持拖拽安排下载顺序；任务详情页面支持健康度等参数的显示，文件和<code>BT</code>节点列表支持排序，文件列表支持按文件类型筛选选择，<code>BT</code>节点列表支持显示每个节点的任务完成状态等信息；新建任务页面支持直接手动下载等；提供完整的<code>aria2</code>设置支持，支持<code>aria2</code>所有设置的说明、修改等，设置界面全部中文。<br>3、支持下载完成通知（仅支持<code>Webscoket</code>协议及<code>Chrome</code>等现代浏览器）。<br>4、支持自定义使用的协议，<code>Http(s)</code>或<code>Websocket</code>可任选。（<code>Http(s)</code>协议支持压缩，减少带宽）<br>5、数据增量更新，减少带宽使用。<br>6、其他功能大家可以自行体验，之后还会增加更多的功能。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/AriaNg.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github项目地址：</strong><a href="https://github.com/mayswind/AriaNg" target="_blank" rel="noopener">https://github.com/mayswind/AriaNg</a></p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>Nginx</code>即可。</p>
<p><strong>2、上传AriaNg程序</strong><br>搭建好环境后，添加域名(没域名的直接添加<code>IP</code>)，再下载<code>AriaNg</code>程序压缩包(点击下载)，并上传解压到网站根目录。最后直接访问<code>IP</code>或者域名即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个轻量级的企业Wiki和团队知识分享平台：MM-Wiki搭建教程</title>
    <url>/2433/</url>
    <content><![CDATA[<p><strong>说明：</strong>很早前有小伙伴问了下有没有团队<code>wiki</code>程序，最近好像看到了个<code>MM-Wiki</code>，感觉还不错，一个轻量级的企业知识分享与团队协同软件，可用于快速构建企业<code>Wiki</code>和团队知识分享平台。部署方便，使用简单，帮助团队构建一个信息共享、文档管理的协作环境，安装也是很简单的，毕竟是基于<code>Golang</code>，这里就介绍下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/MM-Wiki(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/MM-Wiki(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/MM-Wiki(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/MM-Wiki(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>部署方便，基于<code>golang</code>编写，只需要下载对于平台下二进制文件执行即可。</li>
<li>快速安装程序, 提供方便的安装界面程序，无需任何手动操作。</li>
<li>独立的空间，空间是一组文档的集合，一般为公司部门或者团队，空间下的文档相互独立。空间可根据需求设置空间访问级别。</li>
<li>完善的系统权限管理，系统可以自定义角色，并为不同角色授予不同的权限。</li>
<li>集成统一登录，本系统支持通过外部系统认证用户, 比如与公司的<code>LDAP</code>登录融合。具体请看登录认证功能。</li>
<li>邮件通知功能，当开启邮件通知，文档更改会通知所有关注该文档的用户。</li>
<li>文档具有分享和下载功能，目前只支持下载<code>MarkDown</code>源文件。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/phachon/mm-wiki" target="_blank" rel="noopener">https://github.com/phachon/mm-wiki</a></p>
<p><strong>1、安装Mysql</strong><br>你有宝塔的，直接在宝塔上安装<code>Mysql</code>，安装过的可以跳过，直接进行下一步，没有安装的可以手动安装下。</p>
<pre><code>#CentOS 6系统
rpm -ivh http://repo.mysql.com/mysql57-community-release-el6.rpm
yum install mysql-community-server -y
service mysqld start
chkconfig mysqld on

#CentOS 7系统
rpm -ivh http://repo.mysql.com/mysql57-community-release-el7.rpm
yum install mysql-community-server -y
systemctl start mysqld
systemctl enable mysqld

#Debian/Ubuntu系统
apt update
apt install mysql-server -y</code></pre><p>如果<code>Debian</code>或<code>Ubuntu</code>在安装期间有弹出窗口要你输入密码就设置一个，没有的话密码就是空格。</p>
<p>对于<code>CentOS</code>安装<code>MySQL 5.7</code>的时候会生成一个随机密码，使用命令查看：</p>
<pre><code>grep &quot;password&quot; /var/log/mysqld.log
#大致信息，******为密码
[Note] A temporary password is generated for root@localhost: ******</code></pre><p>然后接下来<code>CentOS</code>和安装期间没要求输入密码的<code>Debian</code>或<code>Ubuntu</code>，就需要修改数据库密码：</p>
<pre><code>#CentOS系统，第一行passwd为你上面看到的密码，第四行moerats为要修改的密码，均自行修改
mysql -u root -ppasswd
mysql&gt; set global validate_password_policy=0;
mysql&gt; set global validate_password_length=4;
mysql&gt; set password=password(&quot;moerats&quot;);
mysql&gt; exit;

#Debian、Ubuntu系统，第一行登录数据库的时候直接Enter跳过，第二行moerats为要修改的密码，自行修改
mysql -u root -p
mysql&gt; UPDATE mysql.user SET authentication_string=PASSWORD(&apos;moerats&apos;), PLUGIN=&apos;mysql_native_password&apos; WHERE USER=&apos;root&apos;;
mysql&gt; exit;</code></pre><p>最后修改过密码的还需要重启数据库：</p>
<pre><code>#CentOS 6
service mysqld restart
#CentOS 7
systemctl restart mysqld
#Debian和Ubuntu
systemctl restart mysql</code></pre><p>此时<code>Mysql</code>算是安装完成了。</p>
<p><strong>2、安装mmwiki</strong><br>先找到最新版本的二进制，地址→传送门，这里使用<code>Linux VPS</code>搭建，所以找到<code>Linux</code>版本即可，<code>32</code>位的为<code>386</code>，<code>64</code>位的为<code>amd64</code>。</p>
<p>使用命令：</p>
<pre><code>#创建并进入wiki目录
mkdir /root/mmwiki
cd $_
#下载最新版二进制，这里为64位系统，32位自行替换二进制链接
wget https://github.com/phachon/mm-wiki/releases/download/v0.1.3/mm-wiki-linux-amd64.tar.gz
#解压并删除压缩包
tar -zxvf mm-wiki-linux-amd64.tar.gz &amp;&amp; rm -rf mm-wiki-linux-amd64.tar.gz
#安装程序，这里运行端口为9999，自行修改
install/install --port=9999</code></pre><p>接下来访问<code>ip:9999</code>进入安装配置，如果你使用<code>ip</code>访问，监听地址填<code>0.0.0.0</code>，用域名的话，填<code>127.0.0.1</code>即可，监听端口可以继续填<code>9999</code>。</p>
<p>对于<code>CentOS</code>系统，访问不了安装界面的话，还需要开启<code>9999</code>端口，开启如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 9999 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=9999/tcp --permanent
firewall-cmd --reload</code></pre><p>像阿里云等，还需要额外在安全组开放端口。</p>
<p>配置好了后，再使用<code>Ctrl+C</code>断开运行，此时程序还没启动，接下来我们还需要启动下。</p>
<p>先新建<code>Systemd</code>配置文件，只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>等。</p>
<pre><code>#修改下mmwiki源码路径即可，然后一起复制到SSH运行
cat &gt; /etc/systemd/system/mmwiki.service &lt;&lt;EOF
[Unit]
Description=mmwiki
After=network.target
Wants=network.target

[Service]
Type=simple
PIDFile=/var/run/mmwiki.pid
WorkingDirectory=/root/mmwiki
ExecStart=/root/mmwiki/mm-wiki --conf conf/mm-wiki.conf
RestartPreventExitStatus=23
Restart=always

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>启动并开机自启：</p>
<pre><code>systemctl start mmwiki
systemctl enable mmwiki</code></pre><p>其它系统直接使用命令启动：</p>
<pre><code>nohup /root/mmwiki/mm-wiki --conf conf/mm-wiki.conf &amp;</code></pre><p>此时访问地址就是<code>ip:9999</code>，即你安装的时候，填的监听端口<code>9999</code>或其它。如果你想设置域名，继续往下面看。</p>
<h2 id="域名访问"><a href="#域名访问" class="headerlink" title="域名访问"></a>域名访问</h2><p>反代可以用<code>Nginx</code>、<code>Apache</code>、<code>Caddy</code>，这里只说宝塔和<code>Caddy</code>。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<p><strong>1、宝塔面板</strong><br>点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:9999</code>，再启用反向代理，然后点击<code>SSL</code>，申请免费的<code>Let&#39;s Encrypt</code>证书，并强制<code>HTTPS</code>。</p>
<p><strong>2、使用Caddy</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名和反代端口后一起复制到SSH运行！
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:9999 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动Caddy：</p>
<pre><code>/etc/init.d/caddy start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个WordPress超酷炫网页背景效果canvas-nest</title>
    <url>/1649/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>一个基于<code>html5</code>画布绘制的网页背景效果，非常赞！如果需要<code>wordpress</code>插件，在插件库搜索<code>canvas-nest</code>或者看项目canvas-nest-for-wp。</p>
<p><strong>在线演示：</strong><code>http://www.atool.org/</code>。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><ul>
<li>不依赖于<code>jQuery</code>或其他<code>JavaScript</code>框架。</li>
<li>很轻，只有<code>1.6kb</code>。</li>
<li>所以很容易使用，即使你不是网页开发者。</li>
</ul>
<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>在<code>&lt;body&gt;</code>和<code>&lt;/body&gt;</code>中间插入这段<code>js</code>代码即可，注意不要放在<code>head</code>里面。</p>
<pre><code>&lt; script  src = “ //cdn.bootcss.com/canvas-nest.js/1.0.1/canvas-nest.min.js ” &gt; &lt;/ script &gt;</code></pre><p>如下所示：</p>
<pre><code>&lt; html &gt;
&lt; head &gt;
    ...
&lt;/ head &gt;
&lt; body &gt;
    ...
    ...
    ...
    &lt; script  src = “ //cdn.bootcss.com/canvas-nest.js/1.0.1/canvas-nest.min.js ” &gt; &lt; / script &gt;
&lt;/ body &gt;
&lt;/ html &gt;</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul>
<li><p>color：画布线颜色，默认值：’0,0,0’; 颜色为（R，G，B）。</p>
</li>
<li><p>opacity：线的不透明度（0〜1），默认值：0.5。</p>
</li>
<li><p>count：行数，默认值：150。</p>
</li>
<li><p>zIndex：z空间的索引，默认值：-1。</p>
<script type="text/javascript" color="0,0,255" opacity='0.7' zIndex="-2" count="99" src="//cdn.bootcss.com/canvas-nest.js/1.0.1/canvas-nest.min.js"></script>


</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一些主流的WordPress备份插件</title>
    <url>/1543/</url>
    <content><![CDATA[<p><strong>说明：</strong>WordPress作为目前最火的个人博客程序，其功能齐全最受大家喜欢了。这里收集了几款备份插件。</p>
<p><strong>1、WP DB Backup(免费)</strong></p>
<pre><code>https://wordpress.org/plugins/wp-db-backup/</code></pre><p><code>WP DB Backup</code>，相当流行的插件，而且免费。不过仅能备份数据库，不能备份附件、主题等。</p>
<p><strong>2、WP Time Capsule(免费)</strong></p>
<pre><code>https://wordpress.org/plugins/wp-time-capsule/</code></pre><p>可以备份整站，而且可以增量备份。</p>
<p><strong>3、BackWPup(免费和收费版)</strong></p>
<pre><code>https://wordpress.org/plugins/backwpup/</code></pre><p>可自动备份到<code>Dropbox</code>、<code>Amazon S3</code>、<code>FTP</code>等，收费版可以备份到<code>Amazon Glacier</code>、<code>Google Drive</code>。</p>
<p><strong>4、UpdraftPlus(免费和收费版)</strong></p>
<pre><code>https://wordpress.org/plugins/updraftplus/</code></pre><p>功能强大，可以备份到<code>Google Drive</code>、<code>Amazon S3</code>、<code>Dropbox</code>、<code>FTP</code>、<code>emailed</code>，而且可以设置定时备份。</p>
<p><strong>5、Duplicator(免费和收费版)</strong></p>
<pre><code>https://wordpress.org/plugins/duplicator/</code></pre><p>收费版功能强大。</p>
<p><strong>6、Backup WordPress(免费和收费版)</strong></p>
<pre><code>https://wordpress.org/plugins/backupwordpress/</code></pre><p>可以全站备份，但免费版只能备份到本地，收费版可以备份到其他应用。</p>
<p><strong>7、BlogVault(免费版和收费版)</strong></p>
<pre><code>https://wordpress.org/plugins/blogvault-real-time-backup/</code></pre><p>免费版仅能每周备份，收费版可以每日备份。</p>
<p><strong>8、myRepono(收费, 现在可以免费使用)</strong></p>
<pre><code>https://wordpress.org/plugins/myrepono-wordpress-backup-plugin/</code></pre><p>现在，捐赠5美金，就可以使用全部功能。可以备份数据库和附件，可以选择每日、每周、每月、每小时备份。</p>
<p><strong>9、VaultPress(收费)</strong></p>
<pre><code>https://vaultpress.com/</code></pre><p>提供无限的存储空间。</p>
<pre><code>https://ithemes.com/purchase/backupbuddy/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款不错的轻论坛程序：Xiuno BBS 4.0搭建教程</title>
    <url>/1887/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前已经介绍了几个轻论坛程序，参考：极精简论坛Flarum搭建教程，轻量级论坛Carbon Forum搭建教程。今天再介绍个轻论坛程序<code>Xiuno</code>，个人使用之后感觉很简洁。很实用，用的人蛮多的，也有很多插件、模板等，这里简单的说下搭建方法，有兴趣的可以试试。</p>
<h2 id="Xiuno-BBS是什么？"><a href="#Xiuno-BBS是什么？" class="headerlink" title="Xiuno BBS是什么？"></a>Xiuno BBS是什么？</h2><p><code>Xiuno BBS 4.0</code>是<code>2016</code>年诞生的，国产、小巧、精悍的<code>Web</code>产品，后端基于<code>PHP</code>+<code>MySQL</code>，前端基于<code>Bootstrap 4.0</code>+<code>JQuery 3.1</code>，是一套通用的轻论坛系统。</p>
<p>主程序架构采用函数风格的<code>MVC</code>，插件机制采用<code>AOP</code>机制，大大的简化了程序的复杂度，在同等复杂度的功能实现上比同类产品的代码简洁很多，核心只有<code>15</code>个表，非常利于二次开发。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Xiuno(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、搭建web环境</strong><br>我们可以用<code>lnmp</code>、<code>lamp</code>一键包或者宝塔之类的面板来搭建<code>web</code>环境。<br><code>lnmp</code>安装方法可参考：<a href="https://www.southcat.net/archives/61/" target="_blank" rel="noopener">https://www.southcat.net/archives/61/</a><br>宝塔安装方法可看：<a href="https://www.southcat.net/archives/254/" target="_blank" rel="noopener">https://www.southcat.net/archives/254/</a></p>
<p><strong>2、上传Xiuno BBS程序</strong><br>搭建好<code>web</code>环境后，添加网站并解析，再上传<code>Xiuno BBS</code>程序到网站目录即可。<br><strong>本地下载：</strong>xiunobbs_4.0.beta_006.tar.gz<br><strong>Git下载</strong>：<a href="https://gitee.com/xiuno/xiunobbs" target="_blank" rel="noopener">https://gitee.com/xiuno/xiunobbs</a></p>
<p>使用<code>git</code>命令下载：</p>
<pre><code>#以军哥lnmp为例，命令只作参考。
cd /home/wwwroot/www.yourdomain.com
git clone https://git.oschina.net/xiuno/xiunobbs.git
mv xiunobbs/* /home/wwwroot/www.yourdomain.com</code></pre><p>上传程序后，建立数据库，然后设置如下目录和文件为可写（目录权限为<code>0777</code>）。</p>
<pre><code>./upload
./tmp
./log
./conf</code></pre><p>再访问<code>http://www.domain.com/install/</code>, 根据提示安装。最后删除<code>install</code>目录。<br><img src="https://www.southcat.net/usr/picture/Xiuno(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Xiuno(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>相关操作：URL-Rewrite网址美化（伪静态），性能优化。</p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一些体验/评价不好的VPS商家或产品汇总</title>
    <url>/2026/</url>
    <content><![CDATA[<p><strong>说明：</strong>买<code>VPS</code>，总会碰到垃圾商家，要么服务态度差，要么产品烂还不退款，要么产品极差。导致很多小白被坑，然后在【主机百科】看到了关于一些体验不好和网上评价很差的商家汇总。就转了下，给一些想买这些商家的<code>VPS</code>做下参考吧，以防更多小白交学费。</p>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><pre><code>如果各位同学有被某商家坑过，可以留言反馈该商家的产品和服务，对于网上还能搜出很多不好的评价，博主会更新到文章。</code></pre><p><strong>1、Hosticated、x3host、TweNtion</strong></p>
<ul>
<li>这三个应该是一家，<code>VPS</code>宣称不限流量，但流量限制严重。</li>
<li>退款时各种推脱。</li>
<li><code>paypal</code>争议后，就忽悠你取消争议，给你退款，但一直墨迹不退款。</li>
<li>对这样的商家，<code>Paypal</code>争议，没有得到退款，坚决不能取消争议！！！</li>
</ul>
<p><strong>2、Hostodo的OpenVZ VPS</strong></p>
<ul>
<li><code>Hostodo</code>的<code>KVM VPS</code>还能用，<code>OpenVZ VPS</code>超售的一塌糊涂，安装个系统都会莫名其妙宕机。</li>
<li>服务还不错，<code>tk</code>回复快。</li>
</ul>
<p><strong>3、BudgetNode</strong></p>
<ul>
<li>官网写的<code>3</code>天退款保证，但各种理由推脱，去<code>paypal</code>争议，直接删除账号。</li>
</ul>
<p><strong>4、TragicServers的OpenVZ VPS</strong></p>
<ul>
<li><code>TragicServers</code>的<code>KVM VPS</code>很不错，稳定且国内速度好，我一直在用，但<code>OpenVZ VPS</code>超售太多。</li>
<li>服务挺不错，回复及时。</li>
</ul>
<p><strong>5、noez.de</strong></p>
<ul>
<li>需要德国电话验证，但需充值后购买，退款还需要<code>5</code>欧费用。谨慎购买！！</li>
</ul>
<p><strong>6、KrakenServers</strong></p>
<ul>
<li>买的达拉斯<code>1G KVM</code>，结果最少有半个月<code>VPS</code>后台账号被删。发退款不回。</li>
<li><code>paypal</code>争议后，才积极联系，说可以换到洛杉矶节点。</li>
<li>这种商家，建站的话需要慎重。</li>
</ul>
<p><strong>7、Ethernetserver</strong></p>
<ul>
<li>褒贬不一，使用虚拟主机优惠码买的，极容易出问题。</li>
<li>要正规使用，建议原价购买或者<code>vps</code>的优惠购买。</li>
</ul>
<p><strong>8、AlphaRacks</strong></p>
<ul>
<li><code>OVZ VPS</code>超售严重，<code>kvm</code>好像好些。</li>
<li>不建议买<code>OVZ</code>。</li>
</ul>
<p><strong>9、Golden-Hosts</strong></p>
<ul>
<li>擅自更改套餐，服务器极不稳定，带宽稍微占时间长点就停止服务。</li>
<li>不建议使用。</li>
</ul>
<p><strong>10、LetBox</strong></p>
<ul>
<li>负面评价较多，安心建站不建议使用！</li>
<li>年付的<code>VPS</code>，在第七个月被删了，差评！</li>
</ul>
<p><strong>11、HybridVM</strong></p>
<ul>
<li>服务器上架后和购买时配置不同，更换后就长时间不上架（超过<code>10</code>天），不建议使用。</li>
</ul>
<p><strong>13、My Server Planet Ltd</strong></p>
<ul>
<li>见过最硬的盘，国内速度差!</li>
</ul>
<p><strong>14、UniWeb Hosting</strong></p>
<ul>
<li>纯粹的骗子，各种忽悠不要用<code>Paypal</code>，或者忽悠取消<code>Paypal</code>争议。</li>
</ul>
<p><strong>15、LiteUnit</strong></p>
<ul>
<li>据群友反映，更换域名后不承认之前的产品是他们的，各种推脱。</li>
</ul>
<p><strong>16、hostslayer</strong></p>
<ul>
<li>超售严重，不遵守自己制定的<code>TOS</code>。</li>
</ul>
<p><strong>17、free-www</strong></p>
<ul>
<li>灵车！！！</li>
</ul>
<p><strong>19、Vastitude</strong></p>
<ul>
<li>无故删账号。无故停机。带宽稍微占用时间长，就停机。</li>
</ul>
<p><strong>20、Speedydot</strong></p>
<ul>
<li>极度无诚信商家！</li>
</ul>
<p><strong>21、Anonius</strong></p>
<ul>
<li><p>机器动不动就关机，客服TK不理人。</p>
</li>
<li><p>这家歧视国人，勿入！</p>
</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款不错的PHP目录列表程序：h5ai安装教程</title>
    <url>/1551/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>h5ai</code>是一款功能强大的<code>php</code>文件目录列表程序，它提供多种文件目录列表呈现方式，支持<code>Apache httpd</code>, <code>lighttpd</code>, <code>nginx</code>等多种<code>web</code>服务器，支持多国语言（如英语，简体中文等），你可以在线预览<code>txt</code>，图片，音频，视频等文件格式。</p>
<p><strong>h5ai官网：</strong><a href="https://larsjung.de/h5ai/" target="_blank" rel="noopener">https://larsjung.de/h5ai/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/h5ai.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>要求：</strong><code>PHP 5.5+</code></p>
<p><strong>1、搭建php网站环境</strong><br>可使用军哥的<code>lnmp</code>、<code>lamp</code>一键包或者<code>amh</code>、<code>vestacp</code>、宝塔等面板程序搭建。</p>
<p><strong>2、上传h5ai文件到网站根目录</strong><br><code>h5ai</code>本地下载地址：h5ai-0.29.0.zip，将文件解压后放在网站根目录。</p>
<p><strong>3、修改配置文件</strong><br>只需要在配置文件某个地方加上<code>/_h5ai/public/index.php</code>即可，比如：<br><strong>Apache httpd 2.2 / 2.4：</strong><code>httpd.conf</code></p>
<pre><code>DirectoryIndex  index.html  index.php  /_h5ai/public/index.php</code></pre><p><strong>lighttpd 1.4：</strong><code>lighttpd.conf</code></p>
<pre><code>index-file.names += (&quot;index.html&quot;, &quot;index.php&quot;, &quot;/_h5ai/public/index.php&quot;)</code></pre><p><strong>nginx 1.2：</strong><code>nginx.conf</code></p>
<pre><code>index  index.html  index.php  /_h5ai/public/index.php;</code></pre><p>最后重启服务器即可！并将要共享的文件均放到根目录（与<code>_h5ai</code>同一目录下）。</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>如果存在文件，但读不出来，可能原因就是<code>php</code>已禁用<code>scandir</code>函数了，请修改<code>php.ini</code>解决。</p>
<pre><code>disable_functions=passthru,exec,system,chroot,scandir,...</code></pre><p>删掉<code>scandir,</code>字样，再重启<code>php</code>即可：<code>/etc/init.d/php-fpm restart</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款全新且强大的SSH客户端：FinalShell</title>
    <url>/2175/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>FinalShell</code>是一体化的的服务器，网络管理软件，不仅是<code>ssh</code>客户端，还是功能强大的开发，运维工具，充分满足开发，运维需求。并且有很多特色功能，如：免费海外服务器远程桌面加速，<code>ssh</code>加速、双边<code>tcp</code>加速、内网穿透等。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/FinalShell_ssh.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="主要特性"><a href="#主要特性" class="headerlink" title="主要特性"></a>主要特性</h2><ul>
<li>多平台支持<code>Windows</code>，<code>Mac OS X</code>，<code>Linux</code>。</li>
<li>多标签，批量服务器管理。</li>
<li>支持登录<code>Ssh</code>和<code>Windows</code>远程桌面。</li>
<li>漂亮的平滑字体显示，内置<code>100</code>多个配色方案。</li>
<li>终端，<code>sftp</code>同屏显示，同步切换目录。</li>
<li>命令自动提示，智能匹配，输入更快捷，方便。</li>
<li><code>sftp</code>支持，通过各种优化技术，加载更快，切换，打开目录无需等待。</li>
<li>服务器网络，性能实时监控，无需安装服务器插件。</li>
<li>内置海外服务器加速，加速远程桌面和<code>ssh</code>连接，操作流畅无卡顿。</li>
<li>双边加速功能，大幅度提高访问服务器速度。</li>
<li>内存，<code>Cpu</code>性能监控，<code>Ping</code>延迟丢包，<code>Trace</code>路由监控(需要高级版支持)。</li>
<li>实时硬盘监控。</li>
<li>进程管理器。</li>
<li>快捷命令面板，可同时显示数十个命令。</li>
<li>内置文本编辑器，支持语法高亮，代码折叠，搜索，替换。</li>
<li><code>ssh</code>和远程桌面均支持代理服务器。</li>
<li>打包传输，自动压缩解压。</li>
<li>免费内网穿透，无需设置路由器，无需公网<code>ip</code>。</li>
<li>支持<code>rz</code>、<code>sz</code>(<code>zmodem</code>)。</li>
</ul>
<h2 id="下载使用"><a href="#下载使用" class="headerlink" title="下载使用"></a>下载使用</h2><pre><code>Windows版下载地址：http://www.hostbuf.com/downloads/finalshell_install.exe
Mac版、Linux版安装及教程：http://www.hostbuf.com/t/1059.html
更新日志：http://www.hostbuf.com/t/989.html</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款二次元的Web多人在线网络聊天系统：Fiora安装及使用</title>
    <url>/2437/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Fiora</code>是一款偏二次元的<code>Web</code>多人在线聊天应用，使用<code>Node.js</code>、<code>Mongodb</code>、<code>Socket.io</code>和<code>React</code>编写，使用起来还行，挺简洁的，这里水个搭建教程，有兴趣的可以玩玩。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Fiora(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Fiora(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>好友，群组，私聊，群聊</li>
<li>文本，图片，代码，<code>url</code>等多种类型消息</li>
<li>贴吧表情，滑稽表情，搜索表情包</li>
<li>桌面通知，声音提醒，语音播报</li>
<li>自定义桌面背景，主题颜色，文本颜色</li>
<li>查看在线用户，<code>@</code>功能</li>
<li>小黑屋禁言</li>
</ul>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>Github地址：</strong><a href="https://github.com/yinxin630/fiora" target="_blank" rel="noopener">https://github.com/yinxin630/fiora</a></p>
<p><strong>所需环境：</strong><code>Nodejs &gt;= 8.9.0</code>、<code>Mongodb</code>。</p>
<p><strong>说明：</strong><code>512M</code>内存<code>vps</code>可能还需要先加一点虚拟内存，不然构建过程会失败，可以使用<code>Swap</code>一键脚本→传送门。</p>
<p><strong>1、安装Nodejs</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y git nodejs 

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs git -y</code></pre><p><strong>2、安装Mongodb</strong></p>
<pre><code>#CentOS 6系统，将下面命令一起复制进SSH客户端运行
cat &lt;&lt;EOF &gt; /etc/yum.repos.d/mongodb.repo
[mongodb-org-4.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/6/mongodb-org/4.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc
EOF
yum -y install mongodb-org

#CentOS 7系统，将下面命令一起复制进SSH客户端运行
cat &lt;&lt;EOF &gt; /etc/yum.repos.d/mongodb.repo
[mongodb-org-4.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/7/mongodb-org/4.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc
EOF
yum -y install mongodb-org

#Debian 8系统
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo &quot;deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/4.0 main&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt update -y
apt install -y mongodb-org

#Debian 9系统
curl https://www.mongodb.org/static/pgp/server-4.0.asc | apt-key add -
echo &quot;deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt-get update -y
apt-get install -y mongodb-org

#Debian 10系统
curl https://www.mongodb.org/static/pgp/server-4.2.asc | apt-key add -
echo &quot;deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.2.list
apt update -y
apt install -y mongodb-org

#Ubuntu 16.04系统
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo &quot;deb https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt update -y
apt install -y mongodb-org

#Ubuntu 18.04、18.10、19.04系统
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo &quot;deb https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt update -y
apt install -y mongodb-org</code></pre><p>如果导入公匙时出现<code>gnupg, gnupg2 and gnupg1 do not seem to be installed</code>错误，使用<code>apt install -y gnupg2</code>，然后重新导入即可。</p>
<p>启动<code>Mongodb</code>并设置开机自启：</p>
<pre><code>#CentOS 6系统
service mongod start
chkconfig mongod on

#CentOS 7、Debian、Ubuntu系统
systemctl start mongod
systemctl enable mongod</code></pre><p><strong>3、安装fiora</strong></p>
<pre><code>#拉取源码并存放于/opt文件夹
git clone https://github.com/yinxin630/fiora.git -b master /opt/fiora
cd /opt/fiora
#安装依赖，这里不能用npm，需要用yarn来安装
npm i -g yarn
yarn
#构建
npm run build
#转移产物
npm run move-dist
#启动
npm start</code></pre><p>运行后打开<code>ip:9200</code>，注册一个账号，然后可以看<code>SSH</code>客户端运行日志，获取自己的<code>userId</code>。</p>
<pre><code>#这里注册或登录的时候返回的信息，后面的5d329dd354b9则为自己的userId
&lt;-- getLinkmansLastMessages  mYNheu93jds7 5d329dd354b9</code></pre><p>如果<code>ip:9200</code>打不开的，可以检查下防火墙，<code>CentOS</code>系统可以使用以下命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 9200 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=9200/tcp --permanent
firewall-cmd --reload</code></pre><p>像阿里云等，还需要额外在安全组开放端口。</p>
<p>接下来再将自己的账号设置成管理员，先使用<code>Ctrl+C</code>断开运行。</p>
<p>新建<code>Systemd</code>配置文件，只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>等。</p>
<pre><code>#先修改你的userId和运行端口后复制到SSH运行
Administrator=5d329dd354b9
Port=9200
#新建fiora用户并授权
useradd -M fiora &amp;&amp; usermod -L fiora
chown -R fiora:fiora /opt/fiora
#新建systemd配置文件，将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/fiora.service &lt;&lt;EOF
[Unit]
Description=fiora
After=network.target
Wants=network.target

[Service]
Type=simple
PIDFile=/var/run/fiora.pid
ExecStart=$(command -v npm) start
WorkingDirectory=/opt/fiora
Environment=Administrator=$Administrator Port=$Port
User=fiora
Restart=on-failure
RestartSec=42s

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>开始启动并设置开机自启：</p>
<pre><code>systemctl start fiora
systemctl enable fiora</code></pre><p>其它系统，比如<code>CentOS</code>、<code>Debian 7</code>等系统，可以直接使用以下方法启动：</p>
<pre><code>#管理员userId和运行端口自行修改
export Administrator=5d329dd354b9 Port=9200
nohup npm start &amp;</code></pre><p>此时就可以访问<code>ip:9200</code>，运行端口以你设置的为准，这时候你登陆的时候，会发现左侧多了个管理员图标。</p>
<p><strong>4、域名反代</strong><br>如果你想使用域名的话，这里依旧使用<code>Caddy</code>反代，操作如下：</p>
<p>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;www.southcat.net {
 gzip
 proxy / 127.0.0.1:9200 {
    websocket
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:9200 {
    websocket
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<p>如果你想修改默认的频道名称的话，可以编辑<code>config/server.js</code>文件，修改最下面的代码：</p>
<pre><code>defaultGroupName: &apos;fiora&apos;,</code></pre><p>然后重启应用即可。需要使用到七牛云<code>CDN</code>的，可以参考作者给的教程自行设置→传送门</p>
<h2 id="宝塔安装"><a href="#宝塔安装" class="headerlink" title="宝塔安装"></a>宝塔安装</h2><p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件商店，然后安装<code>PM2管理器</code>、<code>MongoDB</code>、<code>Nginx</code>(使用域名访问才需要安装，反之不用)。</p>
<p>注意：<code>Debian</code>安装<code>MongoDb</code>之前还需要使用命令<code>apt install sudo</code>，不然可能存在<code>MongoDb</code>启动不了的情况；如果你已经安装了<code>MongoDb</code>，那就先使用<code>apt install sudo</code>，再使用<code>/etc/init.d/mongodb start</code>启动即可。</p>
<p><strong>2、安装fiora</strong><br>该步骤参考上面的手动步骤<code>3</code>，区别在于新建<code>systemd</code>配置文件的时候，<code>Environment</code>参数还需要加一样，不然启动可能失败。</p>
<p>只需要把新建<code>systemd</code>配置文件步骤换成下面这个，其它一模一样。</p>
<pre><code>#先给node做个软连接，不然后面会启动失败
ln -sf $(which node) /usr/bin/node
#修改运行端口，可以默认
Port=9200
#以下命令一起复制进SSH客户端运行
cat &gt; /etc/systemd/system/fiora.service &lt;&lt;EOF
[Unit]
Description=fiora
After=network.target
Wants=network.target

[Service]
Type=simple
PIDFile=/var/run/fiora.pid
ExecStart=$(command -v npm) start
WorkingDirectory=/opt/fiora
Environment=NODE_ENV=production Administrator=$Administrator Port=$Port
User=fiora
Restart=on-failure
RestartSec=42s

[Install]
WantedBy=multi-user.target
EOF</code></pre><p><strong>3、域名反代</strong><br>先点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击配置文件，在中间添加以下代码：</p>
<pre><code>location / {
    proxy_pass http://127.0.0.1:9200;
    proxy_set_header Host             $host;
    proxy_set_header X-Real-IP        $remote_addr;
    proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection &quot;upgrade&quot;;
    proxy_set_header X-Forward-Proto http;
    proxy_set_header X-Nginx-Proxy true;
    proxy_http_version 1.1;

    proxy_redirect off;
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款功能强大的免费开源网站统计程序：百夫长统计</title>
    <url>/2067/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>百夫长统计(<code>Centcount Analytics</code>)是一款功能强大的免费开源网站统计程序。采用<code>PHP</code>+<code>MySQL</code>+<code>Redis</code>开发而成，可以方便地部署在自己的服务器上，<code>100%</code>独享数据。数据精准是该统计系统的最大特点，我们尽最大可能收集用户浏览轨迹，从而为网站管理者提供极为精确的统计数据，发掘潜在价值。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Analytics(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Analytics(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Analytics(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Analytics(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>性能：百夫长统计处理速度飞快！配置较低的<code>VPS</code>即可轻松处理每天<code>100</code>万<code>PV</code>。</li>
<li>项目：开放源码、自我部署、数据安全和隐私，<code>100%</code>独享数据。</li>
<li>报告：丰富的统计报告，百夫长统计提供多达<code>37</code>个固定的统计报告。</li>
<li>热力图：提供一种全新的，直接的方式展示访问者在您的网页上的浏览行为！</li>
<li>自定义报告：随心所欲的玩转数据。多维度、多条件、多指标，按分组和顺序查询并返回你想要的数据。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>CentOS 7</code>、<code>Debian 8 +</code>、<code>Ubuntu 16.04 +</code>，且为<code>64</code>位系统，内存建议<code>2G</code>以上。<br><strong>环境要求：</strong><code>Nginx</code>、<code>PHP</code>&gt; = <code>7.0</code>、<code>MySQL</code>&gt; = <code>5.7</code>、<code>Redis</code>&gt; = <code>3.0</code>。</p>
<p>这里说下宝塔面板和军哥<code>LNMP</code>两种安装方法，并且写到一起了，请注意区分开来。新手建议使用宝塔，喜欢折腾的用军哥的<code>LNMP</code>一键包。</p>
<p><strong>1、安装Web环境</strong></p>
<pre><code>#安装宝塔面板
#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh

#LNMP一键包
wget -c http://soft.vpser.net/lnmp/lnmp1.5beta.tar.gz &amp;&amp; tar zxf lnmp1.5beta.tar.gz &amp;&amp; cd lnmp1.5 &amp;&amp; ./install.sh lnmp</code></pre><p>宝塔面板安装成功后，登录面板，安装<code>Nginx</code>、<code>PHP</code>、<code>MySQL</code>，然后再添加域名。如果是<code>LNMP</code>，安装成功后，使用<code>lnmp vhost add</code>添加域名，并且自动签发<code>ssl</code>证书。</p>
<p><strong>2、安装Redis并配置PHP</strong></p>
<pre><code>#宝塔面板
找到左侧软件管理-PHP7.x-设置-安装拓展-安装Redis。然后在设置里找到禁用函数，删除popen函数。

#LNMP一键包
#安装Redis
cd /root/lnmp1.5 &amp;&amp; ./addons.sh install redis
#编辑PHP配置文件
编辑/usr/local/php/etc/php.ini文件，大概在314行，找到disable_functions，删除后面的popen,</code></pre><p><strong>3、编辑mysql配置文件</strong></p>
<pre><code>#宝塔面板
找到左侧软件管理-MySQL 5.x-设置-配置修改

#LNMP一键包
编辑/etc/my.cnf文件</code></pre><p>然后将以下参数添加到[<code>client</code>]区块和[<code>mysqld</code>]区块。</p>
<pre><code>[client]
default-character-set  = utf8

[mysqld]
default-storage-engine = INNODB
character-set-server   = utf8
collation-server       = utf8_general_ci
sql-mode = &quot;NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot;</code></pre><p>添加后记得重启<code>Mysql</code>数据库。宝塔直接在面板里重启，<code>LNMP</code>使用<code>lnmp mysql restart</code>命令重启。</p>
<p><strong>4、下载程序文件</strong></p>
<pre><code>#安装必要命令
#Debian/Ubuntu系统
apt-get -y install git unzip
#CentOS系统
yum -y install git unzip

#进入网站根目录
cd /www/wwwroot/domain.com  #宝塔面板，将domain.com修改成你的域名
cd /home/wwwroot/domain.com  #LNMP一键包
#下载文件
git clone https://github.com/WMJonssen/Centcount-Analytics.git CA
mv CA/.git .
rm -rf CA
git reset --hard</code></pre><p><strong>5、解压IP地址库压缩包</strong></p>
<pre><code>cd /www/wwwroot/domain.com/ipdb  #宝塔面板，将domain.com替换成你的域名
cd /home/wwwroot/domain.com/ipdb  #LNMP一键包
unzip ipdb.zip</code></pre><p>百夫长统计打包了<code>2</code>个免费的<code>IP</code>地址库（IP2Location和GeoIP），并提供<code>API</code>来访问它。您可以直接将免费版更换为提供<code>ISP</code>信息的，更精准的商业版。而且您不必更改任何代码。</p>
<p><strong>6、修改安全配置文件</strong></p>
<pre><code>#编辑网站根目录config/config_security.php文件
/************* 安全配置开始 *************/
//force ssl
define(&apos;FORCE_SSL&apos;, true);//如果你没有SSL证书，请将此常量设置为&quot;false&quot;。
//check ssl
define(&apos;IS_HTTPS&apos;, isset($_SERVER[&apos;HTTPS&apos;]) &amp;&amp; ($_SERVER[&apos;HTTPS&apos;] === 1 || $_SERVER[&apos;HTTPS&apos;] === &apos;on&apos;) ? true : false);
//define security transfer protocol
define(&apos;PROTOCOL&apos;, IS_HTTPS ? &apos;https://&apos; : &apos;http://&apos;);
//define API transfer protocol
define(&apos;CURL_PROTOCOL&apos;, &apos;https://&apos;);//如果你没有SSL证书，请将此常量设置为&quot;http://&quot;。
/************** 安全配置结束 **************/</code></pre><p>建议使用<code>ssl</code>证书。</p>
<p><strong>7、修改通用配置文件</strong></p>
<pre><code>#编辑网站根目录config/config_common.php文件
/*************** CA CONFIG START **************/
//encode factor
define(&apos;ENCODE_FACTOR&apos;, 123456789);//重设你的私有加密因子，这非常重要。
//mysql local root name
define(&apos;ROOT_USER_LOCAL&apos;, &apos;root&apos;);//设置你的mysql登录用户名（该用户必须有创建数据库权限）
//mysql local root password
define(&apos;ROOT_PASSWORD_LOCAL&apos;, &apos;password&apos;);//设置你的mysql登录密码
//administrator&apos;s timezone: PRC
define(&apos;ADMIN_TIMEZONE&apos;, &apos;PRC&apos;);//设置管理员时区
//default timezone: PRC
define(&apos;DEFAULT_TIME_ZONE&apos;, &apos;PRC&apos;);//设置默认时区
//error log host
define(&apos;ERROR_LOG_HOST&apos;, &apos;www.yourdomainname.com&apos;);//设置错误日志主机（此处替换为你的域名）
/**************** CA CONFIG END ***************/</code></pre><p><strong>8、修改邮件配置文件</strong><br>使用邮件<code>VPS</code>服务器必须开通<code>25</code>端口，这个主机商默认不给，发工单就行了，且需要安装<code>Postfix</code>，不过<code>LNMP</code>一键包和宝塔都自带，所以不用安装。如果不想使用邮件功能的可以跳过该步骤。</p>
<pre><code>#编辑网站根目录config/config_mail.php文件
/************* Config Mail Start ***********/
//administrator mail
defined(&apos;ADMIN_MAIL&apos;) || define(&apos;ADMIN_MAIL&apos;, &apos;admin@centcount.com&apos;);//设置管理员接收通知邮箱（请将下面三个通知邮箱放入管理员邮箱白名单列表）
//auto response mail
defined(&apos;AUTORESPONSE_MAIL&apos;) || define(&apos;AUTORESPONSE_MAIL&apos;, &apos;autoresponse@centcount.com&apos;);//设置自动回复邮件发送邮箱
//notification mail
defined(&apos;NOTIFICATION_MAIL&apos;) || define(&apos;NOTIFICATION_MAIL&apos;, &apos;notification@centcount.com&apos;);//设置通知邮件发送邮箱
//fatal error mail
defined(&apos;FATALERROR_MAIL&apos;) || define(&apos;FATALERROR_MAIL&apos;, &apos;fatalerror@centcount.com&apos;);//设置错误信息邮件发送邮箱
/************** Config Mail End ************/</code></pre><p><strong>9、安装百夫长统计</strong><br>以上完成后直接进入<code>https:/domain.com/install.php</code>进行安装。由于<code>LNMP</code>一键包安装<code>Redis</code>的时候，没安装命令行，导致检测会出现<code>Redis: Missed</code>这个无视就行。<br><img src="https://www.southcat.net/usr/picture/Analytics(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>依次填入数据库用户名，密码，邮箱，登录密码。<br><img src="https://www.southcat.net/usr/picture/Analytics(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>添加自己站点网站。<br><img src="https://www.southcat.net/usr/picture/Analytics(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>获取统计代码。<br><img src="https://www.southcat.net/usr/picture/Analytics(8).png" alt="请输入图片描述" title="请输入图片描述"><br>最后放到网站里就可以了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款功能强大的Linux主机面板：Kloxo-MR安装教程</title>
    <url>/1696/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Kloxo-Mr</code>是基于<code>Kloxo</code>改进的，拥有<code>kloxo</code>的所有功能，支持<code>Redhat</code>/<code>CentOS 5 and 6</code>(32bit/64bit) ，完美兼容 <code>AWBS</code>, <code>WHMCS</code>, <code>HostBill</code>, <code>TheHostingTool</code>, <code>AccountLab Plus</code>和<code>Blesta</code>等计费方式，支持：<code>Apache</code>，<code>Nginx</code>，<code>Lighttpd</code>，<code>Hiawatha</code>，<code>ATS</code>，<code>Varnish</code>。数据库支持<code>MySQL</code>或<code>MariaDB</code>。支持添加免费<code>ssl</code>证书<code>Let&#39;s Encrypt</code>。反正功能十分强大。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Redhat</code>/<code>CentOS</code>系统，建议<code>CentOS 7</code>。</p>
<p><strong>1、系统更新</strong></p>
<pre><code>yum update -y</code></pre><p><strong>2、安装必要组件</strong></p>
<pre><code>yum install yum-utils yum-priorities vim-minimal subversion curl zip unzip -y
yum install telnet wget -y</code></pre><p><strong>3、设置更新源</strong></p>
<pre><code>cd /tmp
rpm -ivh https://github.com/mustafaramadhan/rpms/raw/master/mratwork/release/neutral/noarch/mratwork-release-0.0.1-1.noarch.rpm</code></pre><p>清除缓存</p>
<pre><code>yum clean all</code></pre><p>更新<code>mratwork RPM</code></p>
<pre><code>yum update mratwork-* -y</code></pre><p><strong>4、安装Kloxo-MR</strong></p>
<pre><code>yum install kloxomr7 -y
sh /script/upcp</code></pre><p><strong>5、web访问</strong><br><code>HTTP</code>访问地址:<code>http://your-server-ip:7778</code>，<code>HTTPS</code>访问地址:<code>https://your-server-ip:7777</code>，默认用户名和密码均为<code>admin</code>。</p>
<p><strong>6、设置KLOXO-MR面板简体中文</strong></p>
<pre><code>cd /usr/local/lxlabs/kloxo/httpdocs/lang
wget https://www.southcat.net/usr/down/lxadmin_cn_pack.zip
unzip lxadmin_cn_pack.zip</code></pre><p>然后在菜单<code>Appearance</code>中选择<code>CHINESE</code>语言即可。<br>Kloxo-MR讨论区：<a href="https://forum.mratwork.com/" target="_blank" rel="noopener">https://forum.mratwork.com/</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款功能强大的视频录制工具：Bandicam v4免授权绿色便携版</title>
    <url>/1796/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Bandicam</code>，游戏录制工具、视频录制工具、高清视频录制专家，号称世界三大视频录制神器之一！<code>Bandicam</code>是一款由韩国开发的高清游戏及视频录制的电脑工具。它录制的视频文件不仅体积小，而且画质相当清晰，支持<code>H.264</code>预制高清，以较高的压缩率可录制超过分辨率高达<code>2560×1600</code>高画质视频（<code>1080p</code>全高清视频），录制的同时还能添加水印到视频中，录制后支持编辑视频，支持<code>bmp</code>、<code>png</code>、<code>jpeg</code>等格式截图。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Bandicam(1).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Bandicam(2).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="新版变化"><a href="#新版变化" class="headerlink" title="新版变化"></a>新版变化</h2><p><strong>查看地址：</strong><a href="http://bandicam.com/downloads/version_history" target="_blank" rel="noopener">http://bandicam.com/downloads/version_history</a></p>
<pre><code>v4.0.1(2017-09-20)
Added the Facebook upload function. (How to upload a video to Facebook.)
Fullscreen mode: Added the pin icon to show/hide the recording control bar.
Fullscreen mode: Added the opacity adjustment function.
Fullscreen mode: Bandicam now shows the display number in the recording information status line.
Added the Khmer(Cambodian) language file by touch sovannara.
Bugs fixed
The taskbar was not recorded when using the around mouse screen recording mode.
Other minor bugs fixed.</code></pre><h2 id="版本特点"><a href="#版本特点" class="headerlink" title="版本特点"></a>版本特点</h2><p><code>by KpoJIuK@REPACK.me、KloneB@DGuY(v2.4)</code></p>
<p>此绿色便携版，集成授权信息，自动屏蔽联网验证，启动即为已授权版！<br>无试用版任何限制，录制时间无限制，录制大于十分钟的视频没水印。</p>
<p><strong>注：</strong>便携版杀软可能会提示拦截，启动前加入信任避免屏蔽验证失效！</p>
<pre><code>下载链接: https://pan.baidu.com/s/1cAom54 密码: dz9s
#包含以下文件
Bandicam v4.0.1.1339/v3.4.4.1264官方版 + 免授权绿色便携版
Bandicam v2.4.2.905 官方版 + 免授权绿色便携版for WindowsXP
Bandicam 通用注册机，可以用于解密注册授权，支持 v2.x/3.x/4.x</code></pre><p><strong>提示：</strong><code>2.4</code>版本支持<code>WinXP</code>，<code>3.0</code>以上版本支持<code>Windows7</code>或更高版。</p>
<pre><code>#文件夹配置修改
Data\Bandicam\Config.ini
SplashScreen（启动图）=1(默认显示,改为0即关闭)
HostsBlock（屏蔽验证授权）=1(默认每次启动都屏蔽,改为0不屏蔽)</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款基于Frp的Web管理面板：FrpMgr安装及使用</title>
    <url>/2420/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>FrpMgr</code>是一个基于<code>Frp</code>的快速配置<code>Web</code>面板，可以一键配置生成客户端的<code>Frp</code>配置文件，远程安装<code>Frp</code>服务到任意一台服务器，让我们在使用配置<code>Frp</code>上方便很多。对于类似这种带<code>Web</code>面板的穿透工具，之前也发过不少，比如nps、lanproxy等，都挺不错的，有兴趣可以去了解下，这里就介绍下<code>FrpMgr</code>安装及使用。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/FrpMgr(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/FrpMgr(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019年11月21日】
新增远程桌面，ssh内网穿透，本地目录穿透。
【2019年6月27日】
新增状态查看功能，可查看流量、客户端连接数，连接状态等。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Zo3i/frpMgr" target="_blank" rel="noopener">https://github.com/Zo3i/frpMgr</a></p>
<p><strong>说明：</strong>由于该面板使用的<code>JAVA</code>、<code>Mysql 5.7</code>，所以<code>512M</code>的内存大部分是跑不起来的，如果内存太小，先加一点虚拟内存，可以使用<code>Swap</code>一键脚本→传送门。</p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Docker Compose</strong></p>
<pre><code>curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>3、安装git</strong></p>
<pre><code>#Debian/Ubuntu系统
apt -y install git

#CentOS系统
yum -y install git</code></pre><p><strong>4、安装FrpMgr</strong></p>
<pre><code>#拉取源码
git clone https://github.com/Zo3i/frpMgr.git
#构建Mysql镜像
cd frpMgr/web/src/main/docker/final/mysql
docker build -t jo/mysql .
#构建frp并启动镜像
cd ..
chmod +x w.sh
docker-compose up -d</code></pre><p>面板访问地址：<code>ip:8999/frp</code>，账号<code>admin</code>，密码<code>12345678</code>，登录成功后在面板修改密码即可。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre><code>提示：这里安装面板的服务器是没有给你安装Frp的，你可以在下面服务器配置的时候，填上ip，就可以安装frp了。</code></pre><p>1、首先去域名服务商解析一个泛域名(如<code>*.southcat.net</code>)到服务器<code>ip</code>。</p>
<p>2、点击左侧<code>FRP</code>服务器配置，域名只需要填主域名，这里默认的服务器端口为<code>22</code>。<br><img src="https://www.southcat.net/usr/picture/FrpMgr(3).png" alt="请输入图片描述" title="请输入图片描述"><br>填好后，点击远程安装，输入服务器密码即可，服务器端系统目前支持<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>，且注意防火墙需要打开<code>Web</code>端口。</p>
<p>3、点击左侧<code>FRP</code>客户端配置，填上二级域名(比如<code>rats</code>、后面就不要了)，本地端口就可以了。<br><img src="https://www.southcat.net/usr/picture/FrpMgr(4).png" alt="请输入图片描述" title="请输入图片描述"><br>最后点击右侧，下载<code>Win</code>或者<code>Mac</code>配置压缩包即可，<code>Win</code>的话解压出来打开<code>open.bat</code>即可，连接地址为<code>二级域名:Web端口</code>。</p>
<p>由于没有<code>Win</code>客户端开机自启，这里博主就额外说下<code>Windows</code>开机自启步骤。</p>
<pre><code>1、新建一个vbs后缀的脚本，比如rats.vbs，脚本代码如下：
set ws=WScript.CreateObject(&quot;WScript.Shell&quot;)
ws.Run &quot;C:\Users\Desktop\frp\frpc.exe -c C:\Users\Desktop\frp\frpc.ini&quot;,0
第二行为frp文件夹路径，不直接具体路径的，打开frp文件夹，左上角就是路径，复制即可

2、使用Win+R、输入shell:startup确认运行，将脚本放进弹出来的文件夹里面即可。</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款基于Web的免费在线矢量图(SVG)编辑工具：Method-Draw</title>
    <url>/2423/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Method Draw</code>是一款基于<code>Web</code>的在线<code>SVG</code>编辑器，是SVG Edit的一个分支。其目的是改进<code>SVG Edit</code>的可用性，并减少其一些功能来提供更好的操作和体验，使用方法也是很多的，本地打开或者部署在服务器端都可以，这里就分享下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Method-Draw.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/methodofaction/Method-Draw" target="_blank" rel="noopener">https://github.com/methodofaction/Method-Draw</a></p>
<p><strong>1、本地使用</strong><br>先下载<code>Method-Draw</code>压缩包，点击下载→传送门，然后解压出来，直接进入<code>method-draw</code>文件夹，打开<code>index</code>文件即可。</p>
<p><strong>2、服务器部署</strong><br>先下载<code>Method-Draw</code>压缩包，点击下载→传送门，然后解压出来，将<code>method-draw</code>文件夹丢进<code>Web</code>服务器网站根目录，再直接访问域名/<code>ip</code>即可。</p>
<p>没<code>Web</code>服务器的，这里提供个快速运行搭建方法，使用命令：</p>
<pre><code>git clone https://github.com/methodofaction/Method-Draw.git
cd Method-Draw/method-draw
#启动，运行端口自行修改
python -m SimpleHTTPServer 80 &amp;</code></pre><p>然后直接访问<code>ip</code>地址即可。</p>
<pre><code>#Debian/Ubuntu系统
apt -y install git

#CentOS系统
yum -y install git</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款多平台的免费增量备份工具：Duplicati安装教程</title>
    <url>/2261/</url>
    <content><![CDATA[<p><strong>说明：</strong>应某童鞋要求，看了下<code>Duplicati</code>，<code>Duplicati</code>是一个备份客户端，可以在本地存储，云存储服务和远程文件服务器上。备份的时候使用<code>AES-256</code>加密来保护您的备份，并自动压缩，支持<code>Zip</code>、<code>7z</code>、<code>LZMA2</code>压缩。而且当你备份一次后，后期只将你变化的数据添加到备份文件里，极大程度上节省了时间和空间。如果备份中途出现中断或损坏会尽可能帮你修复文件，自带<code>Web</code>界面，更好的进行管理，支持<code>Win</code>、<code>Linux</code>、<code>Mac</code>平台，更多介绍可以查看→传送门，这里就只说<code>Linux</code>下安装方法。</p>
<p>支持的远程服务器/云储存服务：</p>
<pre><code>FTP
FTP
OpenStack Object Storage / Swift
S3 Compatible
SFTP (SSH)
WebDAV
Amazon Cloud Drive
Amazon S3
Azure blob
B2 Cloud Storage
Box.com
Dropbox
Google Cloud Storage
Google Drive
HubiC
Jottacloud
Mega.nz
Microsoft Office 365 Groups
Microsoft OneDrive
Microsoft OneDrive for Business
Microsoft SharePoint
OpenStack Simple Storage
Rackspace CloudFiles
Rclone
Sia Decentralized Cloud</code></pre><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Duplicati(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Duplicati(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>官方网站：</strong><a href="https://www.duplicati.com" target="_blank" rel="noopener">https://www.duplicati.com</a><br><strong>Github地址：</strong><a href="https://github.com/duplicati/duplicati" target="_blank" rel="noopener">https://github.com/duplicati/duplicati</a></p>
<p><strong>1、安装</strong><br><code>Duplicati</code>最新版本下载→传送门，日后记得将安装里的<code>Duplicati</code>链接替换为最新版本。</p>
<pre><code>#CentOS 7系统
#安装依赖
yum install yum-utils -y
rpm --import &quot;http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF&quot;
yum-config-manager --add-repo http://download.mono-project.com/repo/centos7/
yum install mono-devel -y
#安装Duplicati
rpm -ivh https://updates.duplicati.com/beta/duplicati-2.0.3.3-2.0.3.3_beta_20180402.noarch.rpm --nodeps --force

#CentOS 6系统
#安装依赖
yum install yum-utils -y
rpm --import &quot;http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF&quot;
yum-config-manager --add-repo http://download.mono-project.com/repo/centos6/
yum install mono-devel -y
#安装Duplicati
rpm -ivh https://updates.duplicati.com/beta/duplicati-2.0.3.3-2.0.3.3_beta_20180402.noarch.rpm --nodeps --force

#Debian 7+、Ubuntu 14+系统
#安装Mono
apt-get update
apt-get install mono-devel -y
#安装Duplicati
wget https://updates.duplicati.com/beta/duplicati_2.0.3.3-1_all.deb
dpkg -i duplicati*.deb
#如果安装报错，使用该命令修复一下就自动安装成功了
apt-get -f install -y</code></pre><p><strong>2、启动</strong></p>
<pre><code>#无需密码访问
/usr/bin/mono /usr/lib/duplicati/Duplicati.Server.exe --webservice-interface=any
#访问需输入密码moerats，可自定义其它密码，修改最后面参数即可
/usr/bin/mono /usr/lib/duplicati/Duplicati.Server.exe --webservice-interface=any --webservice-password=moerats</code></pre><p>然后就可以通过<code>IP:8200</code>访问程序了，对于<code>CentOS</code>系统，还需要开启<code>8200</code>端口，开启如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8200 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8200/tcp --permanent
firewall-cmd --reload</code></pre><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>最后我们还可以设置下进程守护和开机自启来提高使用效率。这里保证所有系统都能设置到，就说<code>2</code>种方法，<code>Systemctl</code>和<code>Supervisor</code>。貌似<code>CentOS 6</code>、<code>Debian 7</code>、<code>Ubuntu 14</code>不支持<code>Systemctl</code>，建议使用<code>Supervisor</code>。</p>
<p><strong>1、使用Systemctl</strong><br>新增<code>systemd</code>配置文件，使用命令:</p>
<pre><code>#以下为一整条命令，先自定义ExecStart后面的密码moerats，再一起复制到SSH运行
echo &quot;[Unit]
Description=Duplicati Process Guardian
[Service]
ExecStart=/usr/bin/mono /usr/lib/duplicati/Duplicati.Server.exe --webservice-interface=any --webservice-password=moerats
Restart=on-failure
RestartSec=15
[Install]
WantedBy=multi-user.target&quot; &gt; /etc/systemd/system/duplicati.service</code></pre><p>设置开机自启：</p>
<pre><code>systemctl enable duplicati</code></pre><p>启动<code>Duplicati</code>：</p>
<pre><code>systemctl start duplicati</code></pre><p><strong>2、使用Supervisor</strong><br>为了方便，这里采用<code>pip</code>方式安装<code>supervisor</code>。</p>
<p>安装<code>pip</code>：</p>
<pre><code>#CentOS 6.x 32位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 6.x 64位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 7.x
yum install -y epel-release
yum install -y python-pip
#如果CentOS 7安装出现No package python-pip available，可以用以下命令进行安装
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py

#Debian/Ubuntu系统
apt-get -y update
apt-get -y install python-pip</code></pre><p>安装<code>Supervisor</code>：</p>
<pre><code>pip install supervisor
wget -N -P /etc/ --no-check-certificate  https://coding.net/u/cvc/p/supervisor/git/raw/master/supervisord.conf</code></pre><p>新增配置代码：</p>
<pre><code>#以下为一整条命令，先自定义command后面的密码moerats，再一起复制到SSH运行
echo &quot;[program:duplicati]
user=root
command=/usr/bin/mono /usr/lib/duplicati/Duplicati.Server.exe --webservice-interface=any --webservice-password=moerats
autorstart=true
autorestart=true
startsecs=15&quot; &gt;&gt; /etc/supervisord.conf</code></pre><p>加入开机自启：</p>
<pre><code>echo &quot;/usr/bin/supervisord -c /etc/supervisord.conf&quot; &gt;&gt; /etc/rc.local
chmod +x /etc/rc.local</code></pre><p>注意下该设置开机自启的方法对<code>CentOS 7</code>、<code>Debian 9</code>、<code>Ubuntu 17+</code>系统可能会没有作用，为啥就不说了，直接选<code>Systemctl</code>方案就行了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款小巧且功能强大的发卡系统：云尚发卡系统</title>
    <url>/2057/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本发卡系统由<code>hostloc</code>大佬<code>codeas</code>制作，完全免费。采用<code>Thinkphp5</code>框架和<code>amaze ui</code>开发，程序很小巧，不到<code>3M</code>，功能却很强大，支持邮件通知等。</p>
<p><strong>体验地址：</strong><a href="http://fk.phpke.cn/" target="_blank" rel="noopener">http://fk.phpke.cn/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/ysfaka(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ysfaka(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ysfaka(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul>
<li>自动发卡，手工订单双功能。</li>
<li>新增邮件发送，客户下单后收到卡密邮件，管理员也会收到订单通知。</li>
<li>新增查询密码，客户数据更安全。</li>
<li>使用一键安装，免去安装烦恼。</li>
<li>新增重复下单限制。</li>
<li>免授权，免费使用。</li>
<li>自动发卡和手工订单合并为一个下单界面，新增商品详情页。</li>
</ul>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul>
<li>接入码支付</li>
<li>新增库存告警设置</li>
<li>增加文本格式卡密导入</li>
<li>增加库存卡密导出为<code>txt</code>功能</li>
<li>改写卡密格式，兼容所有卡密格式</li>
<li>增强<code>xss</code>防御</li>
<li>增加已卖数量及列表选项</li>
</ul>
<p>目前版本支持的支付方式有：云尚云支付、码支付、<code>Paysapi</code>、支付宝即时到账、支付宝当面付。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/assimon/ysfaka" target="_blank" rel="noopener">https://github.com/assimon/ysfaka</a></p>
<p><strong>环境要求：</strong><code>Mysql</code>至少<code>5.2</code>、<code>Nginx</code>/<code>Apache</code>、<code>PHP</code>至少<code>5.4</code>。</p>
<p><strong>1、搭建web环境</strong><br>如果是<code>VPS</code>服务器，可以使用宝塔面板或<code>lnmp</code>一键包，也可以直接使用虚拟主机。<br>宝塔教程：<a href="https://www.southcat.net/archives/254/" target="_blank" rel="noopener">https://www.southcat.net/archives/254/</a><br><code>lnmp</code>教程：<a href="https://www.southcat.net/archives/61/" target="_blank" rel="noopener">https://www.southcat.net/archives/61/</a></p>
<p><strong>2、安装程序</strong><br>搭建好环境后，解析好域名，再将程序上传并解压到网站根目录，程序下载：点击下载。如果是<code>Nginx</code>环境，还需要添加伪静态。</p>
<pre><code>location / {
   if (!-e $request_filename) {
   rewrite  ^(.*)$  /index.php?$1  last;
   break;
    }
 }</code></pre><h2 id="更新计划"><a href="#更新计划" class="headerlink" title="更新计划"></a>更新计划</h2><ul>
<li>集成支付宝当面付，码支付，<code>payjs</code>微信个人收款等。后台自行切换支付接口。</li>
<li>优化前端页面、优化部分支付代码。</li>
<li>优化邮件发送功能。</li>
<li>增加模版切换功能。</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款好用、美观的OneDrive目录列表程序：OLAINDEX</title>
    <url>/2248/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前我们使用的最多的<code>OneDrive</code>目录列表程序就是Oneindex，博主已经写了很多使用教程了，最近有大佬受<code>Oneindex</code>启发，功能借鉴其思想，写出一个基于<code>laravel5</code>框架的<code>OneDrive</code>目录列表程序，看上去很不错，这里分享下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/OLAINDEX(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li><code>OneDrive</code>目录索引；</li>
<li>基于最新<code>PHP</code>框架<code>laravel5</code>搭建而成；</li>
<li>基于<code>bootswatch</code>响应式页面布局，适配<code>PC</code>、平板、手机；</li>
</ul>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li><code>OneDrive</code>目录查看索引，支持分页查看；</li>
<li>图床功能（国内不太稳低）；</li>
<li>支持文件路径一键复制、下载；</li>
<li>支持代码、图片、文本文件即时预览；</li>
<li>支持音视频播放（兼容大部分格式），视频播放采用<code>Dplayer</code>，音乐播放采用<code>Aplayer</code>；</li>
<li>支持文件夹加密（需管理员）；</li>
<li>支持文件上传（需管理员）；</li>
<li>支持<code>readme</code>/<code>head</code>说明文件添加/编辑/删除；</li>
<li>支持文件搜索（需管理员）；</li>
<li>支持自定义创建文件夹（需管理员）；</li>
<li>支持文件/文件夹删除（需管理员）；</li>
<li>后台基本管理，支持主题，预览设置等等（清理缓存后及时生效）（需管理员）。</li>
<li><code>v2.0</code>全新路径显示（<code>pathinfo</code>）</li>
<li>添加看图相册</li>
<li>配置文件化，不再依赖数据库</li>
</ul>
<h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul>
<li>共享目录支持</li>
<li>支持视频字幕，音频歌词</li>
<li>支持后台大文件上传，断点续传</li>
</ul>
<h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><pre><code>PHP &gt;= 7.1.3
OpenSSL PHP
PHP PDO 扩展
PHP Mbstring 扩展
PHP Tokenizer 扩展
PHP XML 扩展
PHP Ctype 扩展
PHP JSON 扩展
PHP Fileinfo 扩展(非必需，但最好安装)</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/WangNingkai/OLAINDEX" target="_blank" rel="noopener">https://github.com/WangNingkai/OLAINDEX</a></p>
<p>这里为了方便，可以直接使用宝塔搭建<code>lnmp</code>环境。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh

#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh

#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>然后进入后台再安装<code>PHP 7.2</code>、<code>Nginx</code>，这里基本上除了<code>Fileinfo</code>扩展，其余都默认安装好了。</p>
<p>接下来再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>扩展(非必需扩展，不过不安装的话，不保证安装程序能成功)。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、脚本添加，脚本地址：https://www.southcat.net/archives/722/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p>然后同样的在<code>PHP</code>设置里找到禁用函数，删除<code>proc_open</code>、<code>proc_get_status</code>和<code>putenv</code>函数，最后重启<code>PHP</code>。</p>
<p><strong>2、安装Composer</strong></p>
<pre><code>curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer</code></pre><p><strong>3、安装程序</strong><br>我们先点击左侧网站，添加域名，此时网站根目录就是<code>/www/wwwroot/xx.com</code>。</p>
<p>运行命令：</p>
<pre><code>#将域名修改成自己的再运行
cd /www/wwwroot/xx.com
git clone https://github.com/WangNingkai/OLAINDEX.git tmp 
mv tmp/.git . 
rm -rf tmp 
git reset --hard 
cp database/database.sample.sqlite database/database.sqlite  # 数据库文件
composer install -vvv # 这里确保已成功安装 composer ，如果报权限问题，建议给予用户完整权限。
chmod -R 777 storage 
chown -R www:www * # 此处 www 根据服务器具体用户组而定
php artisan od:install # 此处绑定域名需根据实际域名谨慎填写（包含http/https）</code></pre><p><strong>5、伪静态设置</strong><br>点击域名设置-网站目录，运行目录选择<code>public</code>，并把防跨站的勾去掉并重启<code>PHP</code>。然后点击伪静态，输入以下代码：</p>
<pre><code>location / {
    try_files $uri $uri/ /index.php?$query_string;
}</code></pre><p>最后就可以打开域名进行安装配置了。<br><img src="https://www.southcat.net/usr/picture/OLAINDEX(2).png" alt="请输入图片描述" title="请输入图片描述"><br>注意回调地址<code>redirect_uri</code>需要是<code>https</code>地址，可以直接在宝塔开启免费<code>SSL</code>证书。如果你使用上面的一键申请绑定账号失败了，可以试试手动申请<code>client_id</code>、<code>client_secret</code>，申请方法→传送门。</p>
<p>后台地址：<code>https://xx.com/admin</code>，密码：<code>12345678</code>。</p>
<h2 id="特殊文件功能"><a href="#特殊文件功能" class="headerlink" title="特殊文件功能"></a>特殊文件功能</h2><pre><code>#不建议创建和以下同名的文件夹和文件，否则会导致文件无法查看下载
README.md、HEAD.md 、.password 、.deny特殊文件使用

#在文件夹底部添加说明
在onedrive的文件夹中添加README.md文件，使用markdown语法。

#在文件夹头部添加说明
在onedrive的文件夹中添加HEAD.md 文件，使用markdown语法。

#加密文件夹
在onedrive的文件夹中添加.password文件，填入密码，密码不能为空。

#禁止访问文件夹
在onedrive的文件夹中添加.deny文件，该文件夹被禁止访问。</code></pre><h2 id="其它设置"><a href="#其它设置" class="headerlink" title="其它设置"></a>其它设置</h2><pre><code>#重置全部数据，删除数据库数据
php artisan od:reset

#重置OneDrive登陆账号
php artisan od:logout

#升级程序
git pull
composer install -vvv
php artisan od:update</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款带Web管理面板的内网穿透工具：lanproxy使用教程</title>
    <url>/2213/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主今天找<code>Frp</code>管理面板的时候，无意间发现了<code>lanproxy</code>内网穿透工具，自带<code>Web</code>管理面板，让我们在服务端配置方便了很多，而且一个服务端可以支持多个客户端连接，看起来还不错，这里就分享下。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>lanproxy</code>是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，目前仅支持<code>tcp</code>流量转发，可支持任何<code>tcp</code>上层协议，可用作访问内网网站、本地支付接口调试、<code>SSH</code>访问、远程桌面等等，而且带<code>Web</code>在线管理面板，添加端口配置十分简单。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/lanproxy(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/lanproxy(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><strong>主页地址：</strong><a href="https://nat.io2c.com/" target="_blank" rel="noopener">https://nat.io2c.com/</a><br><strong>Github地址：</strong><a href="https://github.com/ffay/lanproxy" target="_blank" rel="noopener">https://github.com/ffay/lanproxy</a><br><strong>发布包下载：</strong><a href="https://seafile.cdjxt.net/d/2e81550ebdbd416c933f/" target="_blank" rel="noopener">https://seafile.cdjxt.net/d/2e81550ebdbd416c933f/</a></p>
<h2 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h2><p>服务端需要安装在一个有公网<code>IP</code>的服务器上，系统为<code>Linux/Windows</code>均可。</p>
<p><strong>1、安装JAVA</strong><br><code>java</code>版本至少为<code>1.7</code>，查看命令为<code>java -version</code>，如果没安装可参考：Linux/Windows系统安装最新版JAVA教程。</p>
<p><strong>2、Linux系统安装</strong><br>首先下载发布包，服务端发布包下载地址：点击进入。</p>
<pre><code>#下载最新发布包
wget -O proxy-server-0.1.zip &apos;https://seafile.cdjxt.net/d/2e81550ebdbd416c933f/files/?p=/proxy-server-0.1.zip&amp;dl=1&apos;
#解压发布包
unzip proxy-server-0.1.zip
#进入到文件夹
cd proxy-server-0.1</code></pre><p>然后编辑配置文件<code>conf/config.properties</code>，参考如下：</p>
<pre><code>server.bind=0.0.0.0

#与代理客户端通信端口
server.port=4900

#ssl相关配置
server.ssl.enable=true
server.ssl.bind=0.0.0.0
server.ssl.port=4993
server.ssl.jksPath=test.jks
server.ssl.keyStorePassword=123456
server.ssl.keyManagerPassword=123456

#这个配置可以忽略
server.ssl.needsClientAuth=false

#WEB在线配置管理相关信息
config.server.bind=0.0.0.0
config.server.port=8090
config.admin.username=admin
config.admin.password=admin</code></pre><p>运行<code>lanproxy</code>：</p>
<pre><code>cd /root/proxy-server-0.1/bin
chmod +x startup.sh
./startup.sh</code></pre><p>然后打开地址<code>http://ip:8090</code>，使用上面配置中配置的用户名密码登录，进入<code>Web</code>管理面板，且配置数据存放在<code>~/.lanproxy/config.json</code>文件中。</p>
<pre><code>#如果打不开Web界面，就需要开启防火墙，一般CentOS系统出现情况最多
#Centos 6系统
iptables -I INPUT -p tcp --dport 8090 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7系统
firewall-cmd --zone=public --add-port=8090/tcp --permanent 
firewall-cmd --reload</code></pre><p><strong>3、Windows系统安装</strong><br>方法参考上面，只是启动的时候双击<code>bin</code>文件夹里的<code>startup.bat</code>即可运行。</p>
<h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><p>客户端一般安装在一个内网的<code>VPS</code>服务器或<code>Windows</code>电脑上使用。这里说下<code>JAVA</code>和非<code>JAVA</code>两个客户端的使用方法，客户端下载地址：点击进入。</p>
<p><strong>1、配置服务端</strong><br>首先我们通过<code>http://ip:8090</code>进入服务端<code>Web</code>管理界面，先添加客户端，名称随便填。<br><img src="https://www.southcat.net/usr/picture/lanproxy(3).png" alt="请输入图片描述" title="请输入图片描述"><br>然后点击刚刚添加的客户端名称，再添加配置，设置公网端口，后端<code>IP:端口</code>。<br><img src="https://www.southcat.net/usr/picture/lanproxy(4).png" alt="请输入图片描述" title="请输入图片描述"><br>截图的配置意思是将内网的<code>888</code>端口映射到服务器的<code>8080</code>端口，也就是访问<code>服务器ip:8080</code>等于访问<code>内网ip:888</code>。</p>
<p>这时候基本配置好了一个客户端节点，且该节点可以供多个客户端使用。</p>
<p><strong>2、JAVA客户端使用</strong><br>本版本需要安装<code>java</code>，且版本依然至少为<code>1.7</code>，查看命令为<code>java -version</code>，如果没安装可参考：Linux/Windows系统安装最新版JAVA教程。</p>
<p>然后进入客户端下载地址，下载proxy-java-client-0.1.zip，再将文件解压到服务器或者<code>Windows</code>电脑上，编辑<code>conf/config.properties</code>配置文件，修改如下：</p>
<pre><code>#与在proxy-server配置后台创建客户端时填写的秘钥保持一致；
client.key=
ssl.enable=true
ssl.jksPath=test.jks
ssl.keyStorePassword=123456

#这里填写实际的proxy-server地址；没有服务器默认即可，自己有服务器的更换为自己的proxy-server（IP）地址
server.host=lp.thingsglobal.org

#proxy-server ssl默认端口4993，默认普通端口4900
#ssl.enable=true时这里填写ssl端口，ssl.enable=false时这里填写普通端口
server.port=4993</code></pre><p>最后运行<code>lanproxy</code>：</p>
<pre><code>#运行方法可参考服务端运行步骤
linux（mac）系统：直接进入bin目录，然后运行startup.sh脚本
windows系统：直接双击bin目录下的startup.bat</code></pre><p><strong>3、非JAVA客户端使用</strong><br>该方法可以不用安装<code>java</code>即可在客户端运行<code>lanproxy</code>，首先下载对应版本的JAVA客户端，然后解压出来，再运行以下命令：</p>
<pre><code>#以下需要使用的参数是服务端IP，服务端端口，客户端密匙
1、普通端口连接
#mac 64位
nohup ./client_darwin_amd64 -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY &amp;
#linux 64位
nohup ./client_linux_amd64 -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY &amp;
#windows 64 位
./client_windows_amd64.exe -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY

2、SSL端口连接
#mac 64位
nohup ./client_darwin_amd64 -s SERVER_IP -p SERVER_SSL_PORT -k CLIENT_KEY -ssl true &amp;
#linux 64位
nohup ./client_linux_amd64 -s SERVER_IP -p SERVER_SSL_PORT -k CLIENT_KEY -ssl true &amp;
#windows 64 位
client_windows_amd64.exe -s SERVER_IP -p SERVER_SSL_PORT -k CLIENT_KEY -ssl true</code></pre><p>这里单独说下<code>Windows</code>电脑使用方法，首先按住<code>Win+R</code>，输入<code>cmd</code>进入命令窗口。</p>
<pre><code>#如果你将客户端exe文件解压到了D盘的RATS文件夹，则使用命令进入RATS文件夹
cd /d d:\RATS
#如果你是SSL端口连接，先替换自己的IP，端口，CLIENT_KEY后运行，普通端口命令参考上面
client_windows_amd64.exe -s SERVER_IP -p SERVER_SSL_PORT -k CLIENT_KEY -ssl true</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款带Web面板的轻量级、高性能内网穿透工具：nps使用教程</title>
    <url>/2357/</url>
    <content><![CDATA[<p><strong>说明：</strong>内网穿透工具之前已经介绍了不少了，比如<code>Frp</code>、<code>lanproxy</code>、<code>Holer</code>等，现在再介绍个带<code>Web</code>面板的穿透工具<code>nps</code>，之前叫<code>easyProxy</code>，只是改名了而已，该工具是一款使用<code>go</code>语言编写的轻量级、功能强大的内网穿透服务器。支持<code>tcp</code>、<code>udp</code>流量转发，支持内网<code>http</code>、<code>socks5</code>代理，同时支持<code>snappy</code>压缩(节省带宽和流量)、站点保护、加密传输、多路复用、<code>header</code>修改等。同时还支持<code>web</code>图形化管理。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/nps_ct(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/nps_ct(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/cnlh/nps" target="_blank" rel="noopener">https://github.com/cnlh/nps</a></p>
<p>通常内网穿透工具都有服务端和客户端，安装要求如下：</p>
<pre><code>服务端：需要安装在一个有公网IP的服务器上，系统为Linux/Windows/Mac均可。
客户端：一般安装在一个内网的VPS服务器或Windows/Mac电脑上使用。</code></pre><p><strong>1、编译安装</strong></p>
<pre><code>提示：编译安装主要讲的Linux系统，其它系统(Win/Mac，也包括Linux)建议直接使用作者编译好的文件即可。</code></pre><p>安装<code>Go</code>语言：</p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install golang
#创建目录并定义GOPATH环境变量指向该目录
mkdir ~/workspace
echo &apos;export GOPATH=&quot;$HOME/workspace&quot;&apos; &gt;&gt; ~/.bashrc
source ~/.bashrc

#CentOS/RHEL系统
yum -y install golang
#创建目录并定义GOPATH环境变量指向该目录。
mkdir ~/workspace
echo &apos;export GOPATH=&quot;$HOME/workspace&quot;&apos; &gt;&gt; ~/.bashrc
source ~/.bashrc</code></pre><p>安装<code>git</code>：</p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install git

#CentOS/RHEL系统
yum -y install git</code></pre><p>安装源码：</p>
<pre><code>go get github.com/cnlh/nps</code></pre><p>编译服务端和客户端：</p>
<pre><code>#进入指定目录
cd ~/workspace/src/github.com/cnlh/nps
#编译服务端
go build cmd/nps/nps.go
#编译客户端
go build cmd/npc/npc.go</code></pre><p>编译好了后，就会在当前目录生成<code>npc</code>或<code>nps</code>二进制文件了，就可以直接拿来用了。</p>
<p>编译的时候可能出现的问题解决方法：</p>
<pre><code>#只拿一种常见的错误做例子，有时候可能会出现很多种这样的提示
lib/kcp/crypt.go:14:2: cannot find package &quot;golang.org/x/crypto/pbkdf2&quot; in any of:
    /usr/lib/go-1.7/src/golang.org/x/crypto/pbkdf2 (from $GOROOT)
    /root/workspace/src/golang.org/x/crypto/pbkdf2 (from $GOPATH)

#意思是缺少这种包，然后记住提示的地址，比如上面的golang.org/x/crypto/pbkdf2，有时候也会提示的github地址。

然后再使用命令go get golang.org/x/crypto/pbkdf2命令安装一下就行了。</code></pre><p><strong>2、直接安装</strong><br>除了自己编译外，作者也直接提供了编译好的文件给你使用，文件下载地址：点击进去，然后再根据自己的系统架构下载对应的最新版服务端和客户端。</p>
<p>如果对于<code>Linux</code>服务器还是不知道怎么选择的，这里拿<code>Vultr</code>、搬瓦工大多数<code>VPS</code>为例。先使用命令<code>getconf LONG_BIT</code>获取系统版本，<code>32</code>位就选<code>386</code>，<code>64</code>就选<code>amd64</code>，具体还是以实际情况为准。</p>
<h2 id="服务端使用"><a href="#服务端使用" class="headerlink" title="服务端使用"></a>服务端使用</h2><p>这里博主使用的是<code>Vultr Linux x64</code>服务器，直接使用命令：</p>
<pre><code>#记得复制前先将下面链接替换成当前最新版地址
cd ~
#下载并解压服务端
wget https://github.com/cnlh/nps/releases/download/v0.0.14/linux_amd64_server.tar.gz &amp;&amp; tar zxvf linux_amd64_server.tar.gz
#编辑配置文件
cd nps
nano conf/nps.conf</code></pre><p>配置文件参数如下：</p>
<pre><code>#web管理端口
httpport
#web界面管理密码
password
#服务端客户端通信端口
bridePort
#ssl certFile绝对路径
pemPath
#ssl keyFile绝对路径
keyPath
#域名代理https代理监听端口
httpsProxyPort
#域名代理http代理监听端口
httpProxyPort
#web api免验证IP地址
authip
#客户端与服务端连接方式kcp或tcp
bridgeType</code></pre><p>然后启动服务端：</p>
<pre><code>./nps start

#重启/停止服务端
./nps stop|restart</code></pre><p>然后打开地址<code>http://ip:8080</code>访问管理界面，具体端口以自己修改的为准，再使用密码登录进去，默认为<code>123</code>。</p>
<pre><code>#如果打不开Web界面，就需要开启防火墙，一般CentOS系统出现情况最多
#Centos 6系统
iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7系统
firewall-cmd --zone=public --add-port=8080/tcp --permanent 
firewall-cmd --reload</code></pre><p>对于有些服务器，比如阿里云，谷歌云等，还需要在服务器管理面板上开放<code>Web</code>端口才行。</p>
<h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><p><strong>1、Linux系统</strong></p>
<pre><code>#比如下载的客户端文件在根目录，先进入根目录
cd ~
#启动客户端，比如服务端公网IP为1.1.1.1，服务端配置文件中tcpport为8284
./npc -server=1.1.1.1:8284 -vkey=客户端的密钥</code></pre><p><strong>2、Windows系统</strong><br>首先按住<code>Win+R</code>，输入<code>cmd</code>进入命令窗口，然后使用命令：</p>
<pre><code>#比如下载的客户端文件在D盘，先进入到D盘
cd /d d:
#启动客户端，比如服务端公网IP为1.1.1.1，服务端配置文件中tcpport为8284
npc.exe -server=1.1.1.1:8284 -vkey=客户端的密钥</code></pre><p>至于<code>Mac</code>系统启动参考上面就行。</p>
<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>关于使用场景，<code>Github</code>文档写的很清楚了，这里大概的说下。</p>
<p><strong>1、tcp隧道模式</strong></p>
<pre><code>适用：想在外网通过ssh连接内网的机器，做云服务器到内网服务器端口的映射，或者做微信公众号开发、小程序开发等。</code></pre><p>详细教程→点击查看。</p>
<p><strong>2、udp隧道模式</strong></p>
<pre><code>适用：在非内网环境下使用内网dns，或者需要通过udp访问内网机器等。</code></pre><p>详细教程→点击查看。</p>
<p><strong>3、http代理模式</strong></p>
<pre><code>适用：在外网使用HTTP代理访问内网站点。</code></pre><p>详细教程→点击查看。</p>
<p><strong>4、socks5代理模式</strong></p>
<pre><code>适用：搭建一个内网穿透55，在外网如同使用内网v皮n一样访问内网资源或者设备。</code></pre><p>详细教程→点击查看。</p>
<h2 id="相关功能"><a href="#相关功能" class="headerlink" title="相关功能"></a>相关功能</h2><p><strong>1、数据压缩支持</strong><br>由于是内网穿透，内网客户端与服务端之间的隧道存在大量的数据交换，为节省流量，加快传输速度，由此本程序支持<code>SNNAPY</code>形式的压缩。</p>
<ul>
<li>所有模式均支持数据压缩，可以与加密同时使用</li>
<li>开启此功能会增加<code>cpu</code>和内存消耗</li>
<li>在<code>server</code>端加上参数<code>-compress=snappy</code>(或在<code>web</code>管理中设置)</li>
</ul>
<p><strong>2、加密传输</strong><br>如果公司内网防火墙对外网访问进行了流量识别与屏蔽，例如禁止了<code>ssh</code>协议等，通过设置配置文件，将服务端与客户端之间的通信内容加密传输，将会有效防止流量被拦截。</p>
<ul>
<li>开启此功能会增加<code>cpu</code>和内存消耗</li>
<li>在<code>server</code>端加上参数<code>-crypt=true</code>(或在web管理中设置)</li>
</ul>
<p><strong>3、站点保护</strong><br>域名代理模式所有客户端共用一个<code>http</code>服务端口，在知道域名后任何人都可访问，一些开发或者测试环境需要保密，所以可以设置用户名和密码，<code>nps</code>将通过<code>Http Basic Auth</code>来保护，访问时需要输入正确的用户名和密码。</p>
<ul>
<li><code>web</code>管理中可配置</li>
</ul>
<p><strong>4、host修改</strong><br>由于内网站点需要的<code>host</code>可能与公网域名不一致，域名代理支持<code>host</code>修改功能，即修改<code>request</code>的<code>header</code>中的<code>host</code>字段。</p>
<ul>
<li>在<code>web</code>管理中设置</li>
</ul>
<p><strong>5、自定义header</strong><br>支持对<code>header</code>进行新增或者修改，以配合服务的需要。</p>
<p><strong>6、404页面配置</strong><br>支持域名解析模式的自定义<code>404</code>页面，修改<code>/web/static/page/error.html</code>中内容即可，暂不支持静态文件等内容。</p>
<p><strong>7、流量限制</strong><br>支持客户端级流量限制，当该客户端入口流量与出口流量达到设定的总量后会拒绝服务，域名代理会返回<code>404</code>页面，其他会拒绝连接。</p>
<p><strong>8、带宽限制</strong><br>支持客户端级带宽限制，带宽计算方式为入口和出口总和，权重均衡。</p>
<p><strong>9、负载均衡</strong><br>本代理支持域名解析模式的负载均衡，在<code>web</code>域名添加或者编辑中内网目标分行填写多个目标即可实现轮训级别的负载均衡。</p>
<p><strong>10、守护进程</strong><br>本代理支持守护进程，使用示例如下，服务端客户端所有模式通用，支持<code>linux</code>、<code>darwin</code>、<code>windows</code>。</p>
<pre><code>./(nps|npc) start|stop|restart|status 若有其他参数可加其他参数
(nps|npc).exe start|stop|restart|status 若有其他参数可加其他参数</code></pre><p><strong>11、KCP协议支持</strong><br><code>KCP</code>是一个快速可靠协议，能以比<code>TCP</code>浪费<code>10%-20%</code>的带宽的代价，换取平均延迟降低<code>30%-40%</code>，在弱网环境下对性能能有一定的提升。可在<code>app.conf</code>中修改<code>bridgeType</code>为<code>kcp</code>。</p>
<ul>
<li>当服务端为<code>kcp</code>时，客户端连接时也需要加上参数<code>-type=kcp</code>。</li>
</ul>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>Frps一键安装脚本，带Frpc Windows便捷启动脚本</li>
<li>一款带Web管理面板的内网穿透工具：lanproxy使用教程</li>
<li>使用Holer远程登录家里或公司内网的电脑</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款开源免费且基于Laravel开发的在线点播系统：MeEdu搭建教程</title>
    <url>/2355/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前看有童鞋需要个点播系统，恰好就看到个不错的<code>MeEdu</code>，一个开源免费的在线点播，电子书和会员收费三大模块为一的整合系统，该系统主要的目的是让每位身负技能的人都可以通过<code>MeEdu</code>来构建自己的知识付费应用，通过<code>MeEdu</code>将自己的知识进行变现，而且功能也很多，具体的下面会列举出来，这里就发个搭建教程。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/MeEdu(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/MeEdu(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/MeEdu(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/MeEdu(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>视频点播板块</li>
<li>手机号注册</li>
<li>视频收费</li>
<li>视频评论互动</li>
<li>课程收费</li>
<li>课程评论互动</li>
<li>会员收费</li>
<li>站内消息</li>
<li>邮件通知</li>
<li>有赞云支付系统</li>
<li>邮件订阅</li>
<li>后台系统</li>
<li>单元测试</li>
<li>系统公告</li>
<li>数据表格导出</li>
<li><code>SEO</code>优化</li>
<li>数据定时备份</li>
<li>电子书板块</li>
<li><code>API</code>接口</li>
<li>微信小程序</li>
<li>广告系统</li>
<li>友情链接</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Qsnh/meedu" target="_blank" rel="noopener">https://github.com/Qsnh/meedu</a></p>
<p><strong>环境要求：</strong><code>PHP &gt;= 7.2</code>、<code>MySql &gt;= 5.6</code>、<code>Composer</code>。</p>
<p><strong>PHP扩展：</strong><code>Zip</code>、<code>OpenSSL</code>、<code>PDO</code>、<code>Mbstring</code>、<code>Tokenizer</code>、<code>XML</code>、<code>Fileinfo</code>。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP 7.2+</code>(这里先建议使用<code>PHP 7.2</code>)、<code>Nginx</code>、<code>Mysql 5.6+</code>。</p>
<p>接下来再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>扩展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、脚本添加，脚本地址：https://www.southcat.net/archives/722/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p>然后同样的在<code>PHP</code>设置里找到禁用函数，删除<code>proc_open</code>和<code>symlink</code>函数，再重启<code>PHP</code>。</p>
<p><strong>2、安装Zip扩展</strong></p>
<pre><code>提示：安装PHP 7.2的可以跳过该步骤。</code></pre><p>一般安装宝塔的时候，<code>PHP</code>一些常用的扩展都会顺便给你装上，但目前<code>7.3</code>版本的貌似还没<code>zip</code>扩展，以后说不准，所以在安装之前可以使用<code>php -m</code>检查下扩展，然后再确定要不要安装。</p>
<p>这里就选择编译安装该扩展。编译之前需要先安装<code>libzip</code>，考虑到一些版本过低的问题，这里都采用编译安装或升级。</p>
<p>由于这里是编译最新版的<code>libzip</code>，需要<code>CMake 3.0.2+</code>，可以查看下版本，使用命令：</p>
<pre><code>cmake --version</code></pre><p>一般情况下是低于这个版本的，这里我们开始升级<code>CMake</code>版本，使用命令：</p>
<pre><code>#CMake下载地址：https://cmake.org/files
cd ~
wget https://cmake.org/files/v3.13/cmake-3.13.4.tar.gz
tar -zxvf cmake-3.13.4.tar.gz &amp;&amp; cd cmake-3.13.4
./configure
make &amp;&amp; make install</code></pre><p>开始安装<code>libzip</code>，使用命令：</p>
<pre><code>#libzip下载地址：https://libzip.org/download/
cd ~
wget https://libzip.org/download/libzip-1.5.1.tar.gz
tar -zxvf libzip-1.5.1.tar.gz &amp;&amp; cd libzip-1.5.1
mkdir build &amp;&amp; cd build &amp;&amp; cmake .. 
make &amp;&amp; make install</code></pre><p>再安装<code>zip</code>，使用命令：</p>
<pre><code>#zip下载地址：http://pecl.php.net/package/zip，这里以最新版1.15.4为准
cd ~
wget http://pecl.php.net/get/zip-1.15.4.tgz
tar -zxvf zip-1.15.4.tgz &amp;&amp; cd zip-1.15.4
phpize
./configure --with-php-config=/www/server/php/73/bin/php-config
make &amp;&amp; make install
echo &quot;extension=zip.so;&quot; &gt;&gt; /www/server/php/73/etc/php.ini</code></pre><p><strong>3、安装Composer</strong></p>
<pre><code>curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer</code></pre><p><strong>4、安装程序</strong><br>我们先点击左侧网站，添加域名；然后再点击左侧数据库-添加数据库。</p>
<p>运行命令：</p>
<pre><code>#进入网站根目录，将路径修改成自己的再运行
cd /www/wwwroot/www.southcat.net
#安装meedu
composer create-project qsnh/meedu=dev-master
#将源码移动到根目录
mv meedu/{,.}* ./
#编辑环境变量
nano .env</code></pre><p>修改相关信息：</p>
<pre><code>#数据库信息
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=moerats
DB_USERNAME=moerats
DB_PASSWORD=moerats

#其它信息
APP_NAME=MeEdu
APP_ENV=local(这里如果正式运行，请修改为：production)
APP_KEY=
APP_DEBUG=true(如果安装没问题，建议改为false)
APP_LOG_LEVEL=debug
APP_URL=http://localhost(这里修改你自己的域名地址)</code></pre><p>接着再使用命令：</p>
<pre><code>#创建上传目录软链接
php artisan storage:link
#设置storage目录权限为777
chmod -R  0777 storage
#安装数据表
php artisan migrate
#初始化系统权限
php artisan install role
#初始化管理员，安装提示输入管理员的账号和密码！
php artisan install administrator
#初始化后台菜单
php artisan install backend_menu
#生成安装锁
php artisan install:lock</code></pre><p><strong>5、设置伪静态</strong><br>点击域名设置-网站目录，运行目录选择<code>public</code>，并把防跨站的勾去掉并重启<code>PHP</code>。然后点击伪静态，输入以下代码：</p>
<pre><code>location / {  
    try_files $uri $uri/ /index.php$is_args$query_string;  
}</code></pre><p>然后就可以正常访问网站了，后台地址<code>/backend/login</code>。</p>
<p><strong>6、设置定时任务</strong><br>点击宝塔面板左侧计划任务，设置为每<code>1</code>分钟执行一次，执行内容为：</p>
<pre><code>#修改为自己的域名再设置
php /www/wwwroot/www.southcat.net/artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1</code></pre><p><strong>7、配置队列监听器</strong><br>安装<code>Supervisor</code>：</p>
<pre><code>pip install supervisor
wget -N -P /etc/ --no-check-certificate  https://coding.net/u/cvc/p/supervisor/git/raw/master/supervisord.conf</code></pre><p>新增配置代码：</p>
<pre><code>#以下为一整条命令，先修改为自己的域名，再一起复制到SSH运行
echo &quot;[program:meedu]
process_name=%(program_name)s_%(process_num)02d
command=php /www/wwwroot/www.southcat.net/artisan queue:work --sleep=3 --tries=3
autostart=true
autorestart=true
user=root
numprocs=4
redirect_stderr=true
stdout_logfile=/www/wwwroot/www.southcat.net/storage/logs/supervisor.log&quot; &gt;&gt; /etc/supervisord.conf</code></pre><p>启动服务：</p>
<pre><code>/usr/bin/supervisord -c /etc/supervisord.conf</code></pre><p>如果配置正确，你会看到<code>supervisor</code>的输出日志，日志路径就是上面配置的<code>stdout_logfile</code>的值。</p>
<p>再设置<code>supervisor</code>开机自启，如果你是<code>Debian 9</code>、<code>Ubuntu 17+</code>，需要先使用命令：</p>
<pre><code>1、添加rc-local.service，以下为一整条命令，一起复制运行
cat &gt; /etc/systemd/system/rc-local.service &lt;&lt;EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF

2、新建rc-local文件，以下为一整条命令，一起复制运行
cat &gt; /etc/rc.local &lt;&lt;EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will &quot;exit 0&quot; on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.    
EOF

3、添加权限并设置开机自启
chmod +x /etc/rc.local
systemctl start rc-local
systemctl enable rc-local</code></pre><p>再将启动命令加入<code>rc.local</code>文件，使用命令：</p>
<pre><code>#CentOS 7系统
echo &quot;/usr/bin/supervisord -c /etc/supervisord.conf&quot; &gt;&gt; /etc/rc.d/rc.local
chmod +x /etc/rc.d/rc.local

#CentOS 6、Debian、Ubuntu系统
echo &quot;/usr/bin/supervisord -c /etc/supervisord.conf&quot; &gt;&gt; /etc/rc.local
chmod +x /etc/rc.local</code></pre><p>如果需要开启微信小程序，需要执行命令：</p>
<pre><code>php artisan passport:install</code></pre><p>该命令是生成<code>RSA</code>加密密钥和小程序端的<code>ID</code>和<code>Secret</code>。注意将输出的<code>id</code>和<code>secret</code>填写到小程序配置文件中。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款开源、轻巧且功能齐全的跨平台网盘程序：蓝眼云盘</title>
    <url>/2353/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近发现了一个不错的网盘程序<code>蓝眼云盘</code>，该程序后端使用<code>golang</code>开发，前端使用<code>vue</code>套件开发，而且开源免费，基本上目前除了离线下载外，其它功能都有，同时也支持多用户，超级管理员可以对用户进行权限，文件管理等，外观也蛮好看，安装包仅<code>10M</code>左右，可以同时在<code>Windows</code>、<code>Linux</code>、<code>Mac OS</code>操作系统中运行。作者更新也很频繁，功能也会越来越多，这里就大概说下安装方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/eyeblue-tank(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/eyeblue-tank(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/eyeblue-tank(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>软件体积小，跨平台，运行简单，自带<code>UI</code>引导安装。</li>
<li>蓝眼云盘主要支持<code>PC Web</code>端，同时手机<code>Web</code>也具有不错的响应性支持。</li>
<li>蓝眼云盘实现了一些云盘的核心功能：文件夹管理，文件管理，上传文件，下载文件，文件分享等。</li>
<li>蓝眼云盘提供能账号管理系统，超级管理员可以管理用户，查看用户文件，普通用户只能查看自己的文件，修改自己的资料。上面提供的体验账号就是一个普通用户的账号。</li>
<li>云盘自带监控大盘，一个页面查看云盘访问情况，每日访问情况，每日<code>PV</code>，<code>UV</code>一目了然。日环比，周环比数据清晰呈现。还可以追踪到每个<code>ip</code>的访问，下载情况</li>
<li>支持常用文件(<code>doc</code>、<code>ppt</code>、<code>xls</code>、<code>pdf</code>、<code>mp3</code>、<code>mp4</code>、<code>jpg</code>、<code>png</code>等格式)一键预览，方便快捷。且最多支持<code>1000</code>个文件同时进行上传。</li>
<li>蓝眼云盘提供了编程接口，实现了云存储(如七牛云，阿里云<code>OSS</code>)的核心功能，可以使用编程接口上传文件，作为其他网站、系统、<code>app</code>的资源存储器。可以在下载图片时对图片做缩放裁剪处理，可以有效地节省客户端流量。同时对于缩略图有缓存策略，全面提升资源访问速度。</li>
<li>前后端分离，文档丰富项目后端使用<code>golang</code>开发，前端使用<code>vue</code>套件开发。有详细的后台api文档，对于学习前端的童鞋而言可以快速部署一个正式而又具有丰富接口的后端供学习使用。</li>
</ul>
<h2 id="常规安装"><a href="#常规安装" class="headerlink" title="常规安装"></a>常规安装</h2><p><strong>Github地址：</strong><a href="https://github.com/eyebluecn/tank" target="_blank" rel="noopener">https://github.com/eyebluecn/tank</a></p>
<p><strong>系统支持：</strong><code>Windows</code>、<code>Linux</code>、<code>Mac OS</code>，这里只说<code>Linux</code>系统安装。</p>
<p>由于该网盘需要用到<code>Mysql</code>数据库，所以这里使用比较简单的宝塔面板安装，当然你也可以使用其它方法安装<code>Mysql</code>，比如：OneinStack和LNMP，都支持单独安装<code>Mysql</code>。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，只需要安装<code>Mysql</code>就可以了，如果你想给网盘设置域名访问，那就再装一个<code>Nginx</code>。</p>
<p><strong>2、运行云盘</strong></p>
<pre><code>#直接下载编译好的最新版文件，下载地址：https://github.com/eyebluecn/tank/releases
wget https://tank.eyeblue.cn/api/alien/download/04a81a27-b842-4ae0-5431-aeb4b9b5e718/tank-2.0.0.linux-amd64.tar.gz
#解压文件
tar zxvf tank-2.0.0.linux-amd64.tar.gz &amp;&amp; rm -rf tank-2.0.0.linux-amd64.tar.gz
#后台运行程序
screen -dmS tank tank*/tank</code></pre><p>然后使用<code>http://ip:6010</code>就可以访问并安装网盘了，如果访问不了可能还需要访问宝塔的安全，打开端口即可。对于阿里云，<code>GCP</code>还需要去服务器面板开启端口。<br><img src="https://www.southcat.net/usr/picture/eyeblue-tank(1).png" alt="请输入图片描述" title="请输入图片描述"><br>如果你要修改访问端口，可以去解压后的<code>tank</code>目录，修改<code>conf/tank.json</code>文件就可以了。</p>
<p><strong>3、开机自启</strong><br>这里使用<code>Systemctl</code>守护进程，只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p>
<pre><code>#以下是一整条命令，一起复制到SSH客户端运行
cat &gt; /etc/systemd/system/tank.service &lt;&lt;EOF
[Unit]
Description=tank
After=network.target
Wants=network.target

[Service]
Type=simple
PIDFile=/var/run/tank.pid
ExecStart=/root/tank-2.0.0/tank
RestartPreventExitStatus=23
Restart=always

[Install]
WantedBy=default.target
EOF</code></pre><p>开始启动：</p>
<pre><code>systemctl start tank</code></pre><p>查看状态：</p>
<pre><code>systemctl status tank</code></pre><p>设置开机自启：</p>
<pre><code>systemctl enable tank</code></pre><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong></p>
<pre><code>#拉取云盘镜像
docker run -d --name tank \
-v ~/tank/dir:/go/bin/matter \
-p 6010:6010 \
eyeblue/tank:2.0.0

#拉取Mysql镜像，记得修改数据库信息
docker run --name mysqltank -d \
-p 3306:3306 \
-e MYSQL_ROOT_PASSWORD=123456 \
-e MYSQL_DATABASE=tank \
-e MYSQL_USER=tank \
-e MYSQL_PASSWORD=tank123 \
-v ~/tank/mysql:/var/lib/mysql \
mysql:5.7</code></pre><p>其中<code>~/tank/dir</code>为上传文件夹存放目录，<code>mysql</code>为数据库信息，然后使用<code>http://ip:6010</code>就可以访问网盘了。然后这里需要注意的是<code>MySQL Host</code>需要填上你的<code>ip</code>地址，而且数据库端口，比如<code>3306</code>需要防火墙放行，不然会连接不上。</p>
<h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>反代可以用<code>Nginx</code>、<code>Caddy</code>，如果使用宝塔手动安装的可以直接安装<code>Nginx</code>进行反代设置，如果使用<code>Docker</code>或者网站无<code>Nginx</code>等环境的建议使用<code>Caddy</code>。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:6010</code>，再启用反向代理即可。至于启用<code>SSL</code>的话，直接在站点配置就可以启用。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;southcat.net {
 gzip
 proxy / 127.0.0.1:6010 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:6010 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款开源免费且快速，高效和安全的跨平台备份程序：Restic使用教程</title>
    <url>/2361/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Restic</code>是使用<code>Golang</code>写的一款开源免费且快速，高效和安全的跨平台备份程序，貌似和以前发的Duplicati差不多，可以存储在本地，云存储服务或远程文件服务器上，并且使用加密技术来你的数据安全性和完整性，同样支持增量备份，可随时备份和恢复备份。并支持<code>3</code>种主要的操作系统<code>Linux</code>，<code>macOS</code>，<code>Windows</code>及一些较小的操作系统<code>FreeBSD</code>，<code>OpenBSD</code>等。</p>
<p>支持的存储：</p>
<pre><code>本地存储
SFTP
REST Server
Amazon S3
Minio Server
OpenStack Swift
Backblaze B2
Microsoft Azure Blob Storage
Google Cloud Storage
通过rclone挂载的存储(比如Google Drive、OneDrive等)</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/restic/restic" target="_blank" rel="noopener">https://github.com/restic/restic</a></p>
<p><code>Restic</code>可以直接通过系统软件包安装，不过版本好像都有点旧，这里就选择最新的二进制方式安装。</p>
<p>二进制下载地址→传送门，先根据自己的架构选择对应的最新版本，这里只说<code>Linux</code>系统，<code>Windows</code>系统直接下载解压就行了。</p>
<p>使用命令：</p>
<pre><code>#32位下载
wget https://github.com/restic/restic/releases/download/v0.9.4/restic_0.9.4_linux_386.bz2
#64位下载
wget https://github.com/restic/restic/releases/download/v0.9.4/restic_0.9.4_linux_amd64.bz2

#解压并删除压缩包
bzip2 -d restic*.bz2 &amp;&amp; rm -rf restic*.bz2
#授权
chmod +x restic*
#移动二进制文件
mv restic* /usr/local/bin/restic
#查看版本
restic version</code></pre><p>之后可以直接使用<code>restic self-update</code>命令升级二进制文件。</p>
<h2 id="配置存储库"><a href="#配置存储库" class="headerlink" title="配置存储库"></a>配置存储库</h2><p>安装好了<code>Restic</code>后，还需要配置下存储方式，也就是你想备份到服务器本地，还是其它远程服务上。以下配置过程中都会要你输入密码，别忘了，不然就找不回来了。</p>
<p>这里只说常用的本地、<code>sftp</code>、<code>rclone</code>备份方式，其它的远程库配置可以看下官方文档→传送门。</p>
<p><strong>1、备份到本地</strong></p>
<pre><code>#备份到本地/moerats文件夹
restic init --repo /moerats</code></pre><p><strong>2、SFTP方式</strong><br>该方法适合将文件备份到另一台<code>VPS</code>服务器。首先我们需要在要备份的服务器上生成个公钥再复制给另一台远程服务器，这样就可以实现免密码登录了。</p>
<pre><code>提示：以下将需要备份的服务器称为A，备份到远程文件服务器B。</code></pre><p>先使用<code>SSH</code>客户端登录服务器<code>A</code>，使用命令：</p>
<pre><code>cd ~
ssh-keygen -t rsa</code></pre><p>这里会要你命名密匙名称(这里建议使用默认名称)，然后连续按几次<code>Enter</code>，这时候会在<code>/root/.ssh</code>文件夹生成<code>2</code>个<code>ssh</code>密钥，然后我们查看公钥<code>id_rsa.pub</code>。</p>
<pre><code>cat ~/.ssh/id_rsa.pub</code></pre><p>复制好公钥。</p>
<p>再使用<code>SSH</code>登录服务器<code>B</code>，使用命令：</p>
<pre><code>#复制服务器A中的id_rsa.pub值
echo &apos;xxxxxxx&apos; &gt;&gt; ~/.ssh/authorized_keys</code></pre><p>如果提示<code>No such file or directory</code>错误信息，先使用<code>mkdir ~/.ssh</code>命令，再重新使用上面的命令。然后免密登录就配置完成了。</p>
<p>然后在服务器<code>A</code>上使用命令：</p>
<pre><code>#root为服务器B的用户名，1.1.1.1为服务器ip，端口默认为22，/moerats为服务器B上的存储文件夹，如果不存在则会自动创建
restic -r sftp:root@1.1.1.1:/moerats init</code></pre><p>如果服务器<code>B</code>端口非<code>22</code>，就需要配置下了，在服务器<code>A</code>中<code>~/.ssh</code>目录创建<code>config</code>文件，使用命令：</p>
<pre><code>nano ~/.ssh/config</code></pre><p>新增以下参数：</p>
<pre><code>Host 1.1.1.1
    User root
    Port 2222</code></pre><p>从上至下的参数为服务器<code>B</code>的<code>ip</code>、用户名和端口。然后重启<code>ssh</code>。</p>
<pre><code>/etc/init.d/sshd restart #centos系统
/etc/init.d/ssh restart #debian、ubuntu系统</code></pre><p>此时可以直接在服务器<code>A</code>上使用新的命令：</p>
<pre><code>#参数详解可以参考上面
restic -r sftp:1.1.1.1:/moerats init</code></pre><p>此时输入<code>2</code>次密码就完成了。</p>
<p><strong>3、Rclone方式</strong><br>先在服务器上安装<code>Rclone</code>，并配置<code>Rclone</code>，方法参考：</p>
<pre><code>#使用rclone挂载OneDrive网盘
https://www.southcat.net/archives/491/
#使用rclone挂载Google Drive网盘
https://www.southcat.net/archives/481/</code></pre><p>只需要完成配置环节，启动的话，就交给<code>Restic</code>了。</p>
<p>再使用命令：</p>
<pre><code>#比如rclone配置名为RATS，本地文件夹为/moerats，如果该文件夹不存在则会自动创建
restic -r rclone:RATS:/moerats init</code></pre><h2 id="开始备份"><a href="#开始备份" class="headerlink" title="开始备份"></a>开始备份</h2><pre><code>提示：以下均将/rats文件夹的文件备份到/moerats存储文件夹，也就是上面设置的。</code></pre><p>使用命令：</p>
<pre><code>#该命令是备份/rats整个文件夹，如果备份单个文件，比如/rats.zip，那后面就改成/rats.zip

#本地备份
restic -r /moerats --verbose backup /rats
#sftp备份
restic -r sftp:1.1.1.1:/moerats --verbose backup /rats
#rclone备份
restic -r rclone:RATS:/moerats --verbose backup /rats

#对于rclone，还可以加一些rclone参数优化下，比如使用--bwlimit限制传输带宽
restic -o rclone.program=&quot;/usr/bin/rclone&quot; \
  -o rclone.args=&quot;serve restic --stdio --bwlimit 1M --verbose&quot; \
  -r rclone:RATS:/moerats backup /rats</code></pre><p>运行命令后会要求你输入密码，然后备份后会在存储文件夹的<code>snapshots</code>目录生成一个十六进制的文件。如果备份数据出现重复，则会自动跳过。如果文件夹有文件出现修改(包括修改时间)才会进行下一次备份。</p>
<p>这里如果使用<code>rclone</code>挂载<code>Gdrive</code>的，建议自己申请一个<code>api</code>，博主测试了下，会出现一堆 <code>Error 403: Rate Limit Exceeded, rateLimitExceeded</code>错误。申请教程→传送门。</p>
<p>你还可以用参数排除不想备份的文件夹或者文件，命令示例：</p>
<pre><code>--exclude 指定一次或多次以排除一个或多个项目
--exclude-caches 指定一次以排除包含特殊文件的文件夹
--exclude-file 指定一次或多次以排除给定文件中列出的项目
--exclude-if-present 如果文件夹内容包含给定文件，则指定一次或多次排除文件夹内容</code></pre><p>具体用法可以参考下官方文档→传送门。</p>
<p><code>restic</code>还支持命令传输，比如备份数据库文件夹，这里以<code>sftp</code>为例，其它方式自行修改<code>-r</code>后面参数，使用命令：</p>
<pre><code>#比如将Typecho数据库备份到远程sftp，并命名typecho.sql，其它远程库就自己模仿
mysqldump -uroot -ppasswd typecho | restic -r sftp:1.1.1.1:/moerats backup --stdin --stdin-filename typecho.sql</code></pre><p>备份好了后，可以使用命令查看备份文件，使用命令：</p>
<pre><code>#查看所有备份文件
restic -r sftp:1.1.1.1:/moerats snapshots
#大概会输出以下信息
ID        Time                 Host        Tags              Paths
---------------------------------------------------------------------
ef5ff5fe  2019-02-25 17:03:57  Rats                          /moerats
40724b53  2019-02-25 17:10:06  Rat                          /rats
---------------------------------------------------------------------

#只查看/moerats文件夹的备份文件
restic -r sftp:1.1.1.1:/moerats snapshots --path=&quot;/moerats&quot;
#大概会输出以下信息
ID        Time                 Host        Tags              Paths
---------------------------------------------------------------------
ef5ff5fe  2019-02-25 17:03:57  Rats                          /moerats
---------------------------------------------------------------------

#只查看主机名为Rat的备份文件
restic -r sftp:1.1.1.1:/moerats snapshots --host Rat
#大概会输出以下信息
ID        Time                 Host        Tags              Paths
---------------------------------------------------------------------
40724b53  2019-02-25 17:10:06  Rat                          /rats
---------------------------------------------------------------------</code></pre><p>这里没有使用标签参数，所以<code>tags</code>那里是空的，不过我们可以在备份的时候加入标签参数<code>--tag</code>，使用命令：</p>
<pre><code>#如果想给备份文件加入site标签
restic -r sftp:1.1.1.1:/moerats --verbose backup /rats --tag site

#如果你想加入更多标签来更详细的区分备份，那就在后面多加几个--tag参数，这样查看备份的时候就可以看到tags了</code></pre><p>最后还可以直接使用命令删除备份文件，使用命令：</p>
<pre><code>#比如删除bcde备份文件
restic -r sftp:1.1.1.1:/moerats forget bcde</code></pre><h2 id="恢复备份"><a href="#恢复备份" class="headerlink" title="恢复备份"></a>恢复备份</h2><p>如果我们需要将远程存储文件夹的<code>abcd</code>备份文件恢复到本地<code>/rats</code>文件夹，这里以<code>sftp</code>为例，其它方式自行修改<code>-r</code>后面参数。</p>
<p>使用命令：</p>
<pre><code>restic -r sftp:1.1.1.1:/moerats restore abcd --target /rats

#你也可以直接使用latest来恢复最后一次的备份文件
restic -r sftp:1.1.1.1:/moerats restore latest --target /rats

#如果你只想备份其中的一个文件夹/文件，使用--include参数，后面接文件/文件夹；如果不想备份其中的文件，那就使用--exclude参数即可，记得使用备份时文件的绝对路径。</code></pre><h2 id="脚本备份"><a href="#脚本备份" class="headerlink" title="脚本备份"></a>脚本备份</h2><p>上面备份的时候，都需要输入密码，肯定不适合脚本自动备份，所以我们还需要使用<code>--password-file</code>参数来达到自动读取密码的步骤。</p>
<p>使用命令：</p>
<pre><code>#先将密码，比如moerats保存在/root/resticpasswd文本中
echo &apos;moerats&apos; &gt; /root/resticpasswd
#然后在备份命令中加--password-file参数来读取文本中的密码，这里以sftp为例
restic -r rclone:RATS:/moerats --verbose backup /rats --password-file /root/resticpasswd</code></pre><p>然后此时就不需要你再输入密码了，这时候就方便自己写脚本自动备份文件了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款开源免费且类似Emby的个人媒体服务器：Jellyfin安装教程</title>
    <url>/2341/</url>
    <content><![CDATA[<p><strong>说明：</strong>目前比较火的个人媒体服务器差不多是<code>Plex</code>和<code>Emby</code>，<code>Plex</code>很久前介绍过安装教程：点击查看，<code>2</code>款都挺强大的，现在再说个最近才出来的一个媒体服务器<code>Jellyfin</code>，功能上是和<code>Emby</code>差不多的。按照官方的说法是，由于<code>Emby 3.6</code>开始闭源后，引起了一些核心开发人员的不满，所以最近在<code>Emby</code>的基础上单独开发了<code>Jellyfin</code>媒体服务器，致力于让所有用户都能访问最好的媒体系统。并且可以将<code>Emby</code>版本<code>3.5.2</code>及之前的数据无缝迁移过来。前景是很不错的，这里就发下搭建教程。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Jellyfin</code>是一个自由软件媒体系统，可让您控制媒体的管理和流媒体。它是专有的<code>Emby</code>和<code>Plex</code>的替代品，可通过多个应用程序从专用服务器向终端用户设备提供媒体。<code>Jellyfin</code>是<code>Emby 3.5.2</code>版本的后代，移植到<code>.NET Core</code>框架以支持完整的跨平台支持。没有任何附加条件，只是一个团队想要更好地构建更好的东西并共同努力实现它，致力于让所有用户都能访问最好的媒体系统。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Jellyfin(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Jellyfin(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Jellyfin(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Jellyfin(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.2.19】
官方新增多系统软件包，更新安装方法</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/jellyfin/jellyfin" target="_blank" rel="noopener">https://github.com/jellyfin/jellyfin</a></p>
<p><strong>Jellyfin客户端：</strong><a href="https://jellyfin.readthedocs.io/en/latest/clients/" target="_blank" rel="noopener">https://jellyfin.readthedocs.io/en/latest/clients/</a></p>
<p>这里主要说<code>Linux</code>系统的安装方法；<code>Windows</code>系统直接下载文件就行了，下载地址→传送门。</p>
<p><code>Linux</code>系统的安装方法有<code>3</code>种，使用软件库、软件包、<code>Docker</code>安装。</p>
<p><strong>1、使用软件库安装</strong><br>该方法适用于<code>Debian 8+</code>和<code>Ubuntu 14.04+</code>。</p>
<p>导入<code>GPG</code>签名密钥：</p>
<pre><code>#Debian系统
wget -O - https://repo.jellyfin.org/debian/jellyfin_team.gpg.key | apt-key add -
#Ubuntu系统
wget -O - https://repo.jellyfin.org/ubuntu/jellyfin_team.gpg.key | sudo apt-key add -</code></pre><p>配置存储库：</p>
<pre><code>#先看下面的说明，然后修改为相应的版本号，再运行下面的命令
#Debian系统
echo &quot;deb https://repo.jellyfin.org/debian &lt;release&gt; main&quot; | tee /etc/apt/sources.list.d/jellyfin.list
#Ubuntu系统
echo &quot;deb https://repo.jellyfin.org/ubuntu &lt;release&gt; main&quot; | sudo tee /etc/apt/sources.list.d/jellyfin.list

#这里的&lt;release&gt;为系统版本号，相对应的如下：
Debian 8为jessie
Debian 9为stretch
Debian 10为buster
Ubuntu 14为trusty
Ubuntu 16为xenial
Ubuntu 18.04为bionic
Ubuntu 18.10为cosmic</code></pre><p>最后安装<code>Jellyfin</code>:</p>
<pre><code>#更新存储库
apt update
#安装依赖
apt install apt-transport-https -y
#安装jellyfin
apt install jellyfin -y
#启动jellyfin
service jellyfin start</code></pre><p>然后就可以通过<code>ip:8096</code>访问该媒体库了。端口可以在面板里自行修改。</p>
<pre><code>#相关使用命令
重启程序：service jellyfin restart
查看状态：service jellyfin status
开机自启：systemctl enable jellyfin</code></pre><p><strong>2、使用软件包安装</strong><br>首先下载软件包，下载地址→传送门，目前支持系统有<code>Win</code>、<code>Mac</code>、<code>Arch</code>等<code>Linux</code>，然后根据自己的系统进行选择，下面以最新版<code>10.4.3</code>为例，如果软件包地址<code>404</code>，可以向博主反馈更新。</p>
<p><code>CentOS</code>系统：</p>
<pre><code>#安装依赖
yum install libicu fontconfig -y
#安装软件包
rpm -Uvh --nodeps https://repo.jellyfin.org/releases/server/centos/jellyfin-10.4.3-1.el7.x86_64.rpm
#启动jellyfin
service jellyfin start
#查看状态
service jellyfin status

#CentOS 6开机自启
chkconfig jellyfin on
#CentOS 7开机自启
systemctl enable jellyfin</code></pre><p><code>Debian 8+</code>和<code>Ubuntu 14.04+</code>系统：</p>
<pre><code>#Debian下载软件包
wget https://repo.jellyfin.org/releases/server/debian/jellyfin_10.4.3-1_amd64.deb
#Ubuntu下载软件包
wget https://repo.jellyfin.org/releases/server/ubuntu/jellyfin_10.4.3-1_amd64.deb

#更新系统
apt update
#安装依赖
apt install at libsqlite3-0 libfontconfig1 libfreetype6 libssl1 -y
#安装软件包
dpkg -i jellyfin_*.deb
#如果报错，再自动修复并安装下依赖和软件
apt -f install -y
#查看状态
service jellyfin status
#开机自启
systemctl enable jellyfin</code></pre><p>然后就可以通过<code>ip:8096</code>访问该媒体库了。程序管理命令参考上面的就行了。</p>
<p>一般<code>CentOS</code>和<code>Ubuntu</code>是没安装<code>ffmpeg</code>的，先使用命令<code>ffmpeg -version</code>检查下<code>ffmpeg</code>是否存在，不存在的使用命令：</p>
<pre><code>#下载ffmpeg二进制
wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz
#解压文件
tar xvf ffmpeg-git-*-static.tar.xz
#移动ffmpeg可执行文件
mv ffmpeg-git-*/ffmpeg ffmpeg-git-*/ffprobe /usr/bin/
#删除文件
rm -rf ffmpeg-git-*</code></pre><p><strong>3、使用Docker安装</strong><br>安装<code>Docker</code>：</p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p>再拉取镜像：</p>
<pre><code>docker run -d -p 8096:8096 -v /jellyfin/config:/config -v /jellyfin/media:/media jellyfin/jellyfin</code></pre><p>以上命令默认的程序访问地址为<code>ip:8096</code>，配置文件夹为<code>/jellyfin/config</code>，媒体库文件夹为<code>/jellyfin/media</code>。</p>
<p>如果你想修改上面的端口和路径的话，直接修改<code>-p</code>和<code>-v</code>所指的前面的参数即可，照葫芦画瓢就行了。</p>
<p>如果你是<code>CentOS</code>系统，打不开媒体界面的话，还需要开启防火墙端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8096 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8096/tcp --permanent
firewall-cmd --reload</code></pre><p>如果你开了端口还不能打开，可能还需要去服务商后台开启对应的端口。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款开源免费的办公套件系统：DzzOffice安装教程</title>
    <url>/2043/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>DzzOffice</code>是一套开源办公套件，适用于企业、团队搭建自己的 类似“<code>Google</code>企业应用套件”、“微软<code>Office365</code>”的企业协同办公平台。<code>DzzOffice</code>由多款开源办公应用组成，包括网盘、文档、相册、联系人等，安装<code>DzzOffice</code>框架后，可根据需要从内部的应用市场进行选择和安装。应用能够单独使用，也能与其他多款应用组合使用，十分强大。</p>
<p><strong>官方网站：</strong><a href="http://dzzoffice.com" target="_blank" rel="noopener">http://dzzoffice.com</a><br><strong>演示地址：</strong><a href="http://demo.dzzoffice.com/" target="_blank" rel="noopener">http://demo.dzzoffice.com/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/DzzOffice(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/DzzOffice(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/DzzOffice(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>网盘：企业、团队文件集中管理。主要体现的功能是支持企业部门的组织架构建立共享目录，也支持组的方式灵活建立共享目录。支持文件标签，多版本，评论，详细的目录权限等协作功能。</li>
<li>文档：在线<code>Word</code>文档协作工具。前端做了一套模板管理，用于企业添加自己的常用文档模板，如空白合同。后端支持<code>office online server</code>，<code>onlyoffice</code>，<code>collaboraoffice</code>来实现文档预览与协同编辑。</li>
<li>表格：在线<code>Excel</code>协作工具，其余同上。</li>
<li>演示文稿：在线 PPT 文档浏览、编辑工具，其余同上。</li>
<li>记录：多人参与协作的记录本，主要体现协作记录内容。</li>
<li>新闻：文章系统，可用于企业新闻，通知等用途。</li>
<li>通讯录：企业人员联系方式查询。</li>
<li>文集：通过树形目录有序管理文档。支持<code>Markdown</code>编辑，支持导入导出<code>txt</code>、<code>epub</code>、<code>mobi</code>、<code>azw3</code>。</li>
<li>相册：企业，团队图片管理。</li>
<li>任务板：任务管理、团队协作。</li>
<li>讨论板：内部论坛设置。</li>
<li>表单：表单，问卷工具。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、搭建web环境</strong><br>我们可以用<code>lnmp</code>、<code>lamp</code>一键包或者宝塔之类的面板来搭建<code>web</code>环境即<code>Nginx</code>、<code>PHP</code>、<code>Mysql</code>。<br><code>lnmp</code>安装方法可参考：<a href="https://www.southcat.net/archives/61/" target="_blank" rel="noopener">https://www.southcat.net/archives/61/</a><br>宝塔安装方法可看：<a href="https://www.southcat.net/archives/254/" target="_blank" rel="noopener">https://www.southcat.net/archives/254/</a></p>
<p><strong>2、上传程序</strong><br>搭建好<code>web</code>环境后，添加网站并解析，再上传<code>DzzOffice</code>程序到网站目录，程序最新下载地址：点击查看。</p>
<p>宝塔面板可直接上传，<code>lnmp</code>可以使用以下命令：</p>
<pre><code>#记得替换域名参数
cd /home/wwwroot/www.yourdomain.com
wget --no-check-certificate https://github.com/zyx0814/dzzoffice/archive/2.0beta.tar.gz
tar zxvf 2.0beta.tar.gz
mv dzzoffice-2.0beta/{.,}* /home/wwwroot/www.yourdomain.com
chown www:www -R ./</code></pre><p>然后打开域名，设置数据库，管理员账号即可。<br><img src="https://www.southcat.net/usr/picture/DzzOffice(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/DzzOffice(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款开源，简单的轻量级RSS阅读器：selfoss安装教程</title>
    <url>/2412/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>RSS</code>订阅器，之前发过不少了，比如Feedbin、FreshRSS等，功能都挺强大的，这里就再介绍个轻量级的<code>RSS</code>订阅器<code>selfoss</code>，使用起来是非常简单的，界面颜值也还不错，支持很多种订阅和网站，比如<code>Twitter</code>、<code>Github</code>、<code>Tumblr</code>等。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/selfoss(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/selfoss(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/selfoss(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/SSilence/selfoss" target="_blank" rel="noopener">https://github.com/SSilence/selfoss</a></p>
<p><strong>环境要求：</strong><code>PHP 5.4+</code>，<code>MySQL 5.5+</code>、<code>PostgreSQL</code>或<code>Sqlite</code>，<code>Apache</code>、<code>Nginx</code>或<code>Lighttpd</code></p>
<p>这里就大概说<code>3</code>种安装方法，宝塔安装、手动安装和<code>Docker</code>安装，数据库均使用<code>Sqlite</code>，建议直接使用<code>Docker</code>安装。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP 5.6+</code>、<code>Nginx</code>或<code>Apache</code>。</p>
<p><strong>2、安装程序</strong><br>再点击左侧网站，添加域名，然后在<code>SSH</code>客户端运行命令：</p>
<pre><code>#进入网站根目录，将路径修改成自己的再运行
cd /www/wwwroot/www.southcat.net
#下载selfoss
wget https://github.com/SSilence/selfoss/releases/download/2.18/selfoss-2.18.zip
#解压并重命名配置文件
unzip selfoss-2.18.zip &amp;&amp; rm -rf selfoss-2.18.zip
cp defaults.ini config.ini
#给予文件夹权限
chown -R www:www ./
chmod 775 data/cache data/favicons data/logs data/thumbnails data/sqlite public/</code></pre><p><code>Nginx</code>还需要点击站点设置，设置伪静态，代码如下：</p>
<pre><code>location ~ ^/favicons/.*$ {
    try_files $uri /data/$uri;
}    
location ~ ^/thumbnails/.*$ {
    try_files $uri /data/$uri;
}    
location ~* ^/(data\/logs|data\/sqlite|config\.ini|\.ht) {
    deny all;
}    
location / {
    index index.php index.html index.htm;
    try_files $uri /public/$uri /index.php$is_args$args;
}</code></pre><p>然后点击配置文件，删除以下几行，代码为：</p>
<pre><code>location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
{
    expires      30d;
    error_log off;
    access_log off;
}

location ~ .*\.(js|css)?$
{
    expires      12h;
    error_log off;
    access_log off; 
}</code></pre><p>然后就可以打开站点了，最开始是没登录界面的，也就是每个人都可以直接使用，然后我们可以编辑<code>config.ini</code>配置文件来添加登录界面，修改以下参数：</p>
<pre><code>#分别为站点地址，登录用户名和哈希密码
base_url=https://www.southcat.net
username=moerats
password=kjl1289$swpaf4JPllpKJQp94h/LF1</code></pre><p>密码可以访问<code>http://www.southcat.net/password</code>生成，将域名修改成自己的<code>selfoss</code>站点域名，更多的配置文件设置可以查看官方说明→传送门。</p>
<p><strong>3、设置RSS刷新</strong><br>点击宝塔左侧-计划任务，类型访问<code>URL</code>，地址填上<code>http://www.southcat.net/update</code>，将域名修改成自己的，时间的话，建议每<code>30</code>分钟。</p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p>这里只适用于<code>Debian8</code>、<code>9</code>系统，建议直接<code>Debian 9</code>。</p>
<p><strong>1、安装环境</strong></p>
<pre><code>#Debian 8系统
echo &quot;deb http://packages.dotdeb.org jessie all&quot; | tee --append /etc/apt/sources.list
echo &quot;deb-src http://packages.dotdeb.org jessie all&quot; | tee --append /etc/apt/sources.list
wget --no-check-certificate https://www.dotdeb.org/dotdeb.gpg
apt-key add dotdeb.gpg
apt update
apt install nginx cron unzip php7.0-cgi php7.0-fpm php7.0-curl php7.0-gd php7.0-mbstring php7.0-xml php7.0-sqlite sqlite -y

#Debian 9系统
apt update
apt install nginx unzip cron php7.0-pdo php7.0-fpm php7.0-tidy php7.0-gd php7.0-mbstring php7.0-xml php7.0-sqlite sqlite -y</code></pre><p><strong>2、安装程序</strong></p>
<pre><code>#新建网站根目录
mkdir -p /www/wwwroot/selfoss
#进入网站根目录
cd /www/wwwroot/selfoss
#下载selfoss
wget https://github.com/SSilence/selfoss/releases/download/2.18/selfoss-2.18.zip
#解压并重命名配置文件
unzip selfoss-2.18.zip &amp;&amp; rm -rf selfoss-2.18.zip
cp defaults.ini config.ini
#给予文件夹权限
chown -R www-data:www-data ./
chmod 775 data/cache data/favicons data/logs data/thumbnails data/sqlite public/</code></pre><p><strong>3、新建站点配置文件</strong></p>
<pre><code>#将域名修改为自己的，然后一起复制进SSH运行即可
cat &gt; /etc/nginx/conf.d/selfoss.conf &lt;&lt; &quot;EOF&quot;
server {
    listen 80;
    server_name www.southcat.net;
    root /www/wwwroot/selfoss;
    index index.html index.php;
    location ~* \ (gif|jpg|png) {
        expires 30d;
    }
    location ~ ^/favicons/.*$ {
        try_files $uri /data/$uri;
    }
    location ~ ^/thumbnails/.*$ {
        try_files $uri /data/$uri;
    }
    location ~* ^/(data\/logs|data\/sqlite|config\.ini|\.ht) {
        deny all;
    }
    location / {
        index index.php index.html index.htm;
        try_files $uri /public/$uri /index.php$is_args$args;
    }        
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
    }
}
EOF</code></pre><p>再使用<code>systemctl restart nginx</code>命令重启<code>Nginx</code>生效。如果想给<code>RSS</code>站点加用户名密码登录的可参考上面的宝塔安装方法。</p>
<p><strong>4、设置RSS刷新</strong></p>
<pre><code>#设置为每30分钟执行一次，将域名修改为自己的
echo &quot;*/30 * * * * /usr/bin/curl -Ls &apos;http://www.southcat.net/update&apos; &gt;/dev/null&quot; &gt; bt.cron
crontab bt.cron
rm -rf bt.cron</code></pre><p>使用求最后<code>crontab -l</code>命令查看添加成功没。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong></p>
<pre><code>docker run --name selfoss -d -p 8000:8888 -e CRON_PERIOD=30m -v /root/selfoss:/selfoss/data hardware/selfoss</code></pre><p>配置文件和数据都存放在<code>/root/selfoss</code>目录，<code>rss</code>刷新间隔为<code>30</code>分钟，都可自行修改。</p>
<p>此时站点访问地址为<code>ip:8000</code>，如果想加登录用户和密码的，访问<code>ip:8000/password</code>生成<code>hash</code>密码，再编辑<code>/root/selfoss/config.ini</code>文件，修改如下：</p>
<pre><code>#分别为登录用户名和哈希密码
username=moerats
password=kjl1289$swpaf4JPllpKJQp94h/LF1</code></pre><p>然后使用<code>docker restart selfoss</code>命令重启生效。</p>
<p>最后如果你要是想看到订阅文章里的全部内容的话，那就需要其它站点支持全文<code>RSS</code>，而不是摘要，对于摘要<code>RSS</code>的，可以通过工具转换成全文<code>RSS</code>，这里提供<code>2</code>个转换的站点。</p>
<pre><code>https://feedex.net/
https://fivefilters.org/content-only/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款开源，美观，带后台管理的网址导航工具：WebStack-Laravel</title>
    <url>/2429/</url>
    <content><![CDATA[<p><strong>说明：</strong>网址导航之前发过几个，不过大多都没有后台管理，都是通过修改代码来添加相应的网站，用起来不是很方便，这里就介绍个开源的网址导航网站项目<code>WebStack-Laravel</code>，具备完整的前后台，管理方便，很适合拿来制作自己的网址导航。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/WebStack-Laravel(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/WebStack-Laravel(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/hui-ho/WebStack-Laravel" target="_blank" rel="noopener">https://github.com/hui-ho/WebStack-Laravel</a></p>
<p><strong>所需环境：</strong><code>PHP 7.1+</code>、<code>Mysql</code>、<code>Nginx</code></p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件商店，然后安装<code>PHP 7.1+</code>、<code>Mysql</code>、<code>Nginx</code>。</p>
<p>接下来再找到左侧软件商店-<code>PHP</code>管理-设置-删除禁用的<code>proc_open</code>和<code>passthru</code>函数，并安装<code>Fileinfo</code>扩展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、脚本添加，脚本地址：https://www.southcat.net/archives/722/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p>再点击左侧数据库，新建一个数据库。</p>
<p><strong>2、更改composer源</strong><br>这里避免安装时候出现认证信息，先换个华为源。</p>
<pre><code>composer config -g repo.packagist composer https://mirrors.huaweicloud.com/repository/php</code></pre><p><strong>3、安装WebStack-Laravel</strong></p>
<pre><code>#拉取代码
git clone https://github.com/hui-ho/WebStack-Laravel.git
#安装依赖
cd WebStack-Laravel
rm -rf composer.lock
composer install
#编辑环变量
cp .env.example .env
nano .env</code></pre><p>修改相关信息：</p>
<pre><code>APP_NAME=WebStack
APP_ENV=local(这里如果正式运行，请修改为：production)
APP_KEY=
APP_DEBUG=true(如果安装没问题，建议改为false)
APP_LOG_LEVEL=debug
APP_URL=http://localhost(这里修改你自己的域名地址)

#数据库信息
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=moerats
DB_USERNAME=moerats
DB_PASSWORD=moerats</code></pre><p>其它的参数自行改吧，或者直接默认，再使用命令：</p>
<pre><code>#生成KEY
php artisan key:generate  
#迁移数据，对于有提示的，输入yes即可
php artisan migrate:refresh --seed</code></pre><p>然后新建<code>Systemd</code>配置文件，只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>等。</p>
<pre><code>#修改下WebStack-Laravel源码路径即可，然后一起复制到SSH运行
cat &gt; /etc/systemd/system/wl.service &lt;&lt;EOF
[Unit]
Description=WebStack-Laravel
After=network.target
Wants=network.target

[Service]
Type=simple
PIDFile=/var/run/wl.pid
WorkingDirectory=/root/WebStack-Laravel
ExecStart=$(command -v php) artisan serve
RestartPreventExitStatus=23
Restart=always

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>启动并开机自启：</p>
<pre><code>systemctl start wl
systemctl enable wl</code></pre><p>其它系统直接使用命令启动：</p>
<pre><code>nohup php artisan serve &amp;</code></pre><p>然后访问地址为<code>http://127.0.0.1:8000</code>，接下来再使用反向代理。</p>
<p>如果你要修改监听地址和端口，进行以下修改：</p>
<pre><code>#以上默认的启动命令为php artisan serve，监听地址为http://127.0.0.1:8000

#监听8888端口，访问地址http://127.0.0.1:8888
php artisan serve --port=8888

#如果你想直接使用ip:8888访问
php artisan serve --host=0.0.0.0 --port=8888</code></pre><p>如果要修改的话，记得修改下上面的<code>Systemd</code>配置文件<code>ExecStart</code>参数，或者启动参数。</p>
<p><strong>4、反向代理</strong><br>点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:8000</code>，再启用反向代理，然后点击<code>SSL</code>，申请免费的<code>Let&#39;s Encrypt</code>证书，并强制<code>HTTPS</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款开源免费的多功能聊天室：Riot.im安装教程</title>
    <url>/2065/</url>
    <content><![CDATA[<p><strong>说明：</strong>前些日子分享过一款类似的团队/私人聊天室，查看：Rocket.Chat安装教程，和本文介绍的<code>Riot.im</code>差不多，不过个人感觉<code>Riot.im</code>更强大些，而且经常在更新，也有自己的安卓、苹果、<code>WEB</code>客户端，这里就说下<code>Web</code>客户端搭建教程。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Riot</code>（原<code>Vector</code>）是使用Matrix React SDK构建的<code>Matrix</code>网络聊天客户端，开源免费，功能丰富，支持私人对话，团队对话，语言视频对话，上传文件，社区互动。支持在聊天界面添加各种有趣的插件，比如<code>RSS</code>等各种机器人、虚拟币实时监控等。并且所有通过<code>Riot</code>传输的文件和数据都可以进行端对端加密，这意味着没有人可以窃听包括服务提供商在内的对话。</p>
<p><strong>Github地址：</strong><a href="https://github.com/vector-im/riot-web" target="_blank" rel="noopener">https://github.com/vector-im/riot-web</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Riot.im(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Riot.im(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Riot.im(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Riot.im(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p><strong>团队群聊</strong></p>
<ul>
<li>与您的团队沟通，脱离更多人的网络：使用专用的房间，永久保存来自他们创作的信息。</li>
<li>忘记团队电子邮件：按照每个主题，每个团队，每个事件加入或创建会议室…确定您希望在整个组织或项目中提供的透明度级别。</li>
<li>通过创建您和您自定义的通知来消除噪音。</li>
<li>通过呼叫他们的名字来吸引同事的注意力，并且不要错过任何带有关键字提示的事情。</li>
<li>通过我们的集成商店部署漫游器，以获得有趣或实用的用途。</li>
</ul>
<p><strong>共享文件</strong></p>
<ul>
<li>与对话内联发送，接收和查看文件。</li>
<li>快速拖放功能可实现快速分享。</li>
<li>下载之前预览或在<code>Riot</code>上查看。</li>
<li>文件被存档，如消息：在房间的文件列表面板中找到它们，或通过文件名搜索。</li>
</ul>
<p><strong>语音和视频会议</strong></p>
<ul>
<li>一键式语音和视频会议。</li>
<li>举行一对一的对话或一组用户，实际上没有限制。</li>
<li>在一个房间内加入或放弃正在进行的群组通话，而无需邀请或打扰它。</li>
</ul>
<p><strong>智能通知</strong></p>
<ul>
<li>通过使用易于访问的通知设置来自定义通知以适应您的优先级，从而提高您的工作效率。</li>
<li>设置关键字以提示特定的通知以保持在项目之上。</li>
</ul>
<p><strong>集成工具</strong></p>
<ul>
<li>如果没有工具，一个团队很难变得有效：从我们随时可以使用的机器人列表中挑选你需要的东西，并与<code>Github</code>等人一起整合。</li>
<li>或者创建自己的集成以帮助您的团队更高效地工作！其他人也会这样做，每个人都能从开放的生态系统中获益。</li>
</ul>
<p><strong>缩小差距</strong></p>
<ul>
<li>使用<code>Riot</code>不仅可以与使用<code>Riot</code>的同事或团队沟通，还可以与使用其他沟通应用程序的贡献者沟通。</li>
<li>在使用您喜欢的应用程序时，弥合开放系统（包括<code>Slack</code>，<code>Gitter</code>，<code>IRC</code>，推特，<code>SMS</code>等）之间的差距。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装方法有很多，由于本程序不需要<code>PHP</code>、<code>Mysql</code>等数据，只需要<code>web</code>服务器就可以了，而且<code>Chrome</code>浏览器不允许<code>http</code>网站访问麦克风或网络摄像头，所以这里我们使用最简单<code>Caddy</code>安装，支持自动签发<code>SSL</code>证书。请提前解析好域名到<code>VPS</code>服务器。</p>
<p><strong>1、安装Caddy</strong><br>使用命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p><strong>2、下载Riot程序</strong><br>程序下载地址：<a href="https://github.com/vector-im/riot-web/releases" target="_blank" rel="noopener">https://github.com/vector-im/riot-web/releases</a></p>
<pre><code>#找到最新版程序，目前是v0.14.1，下载并解压
wget https://github.com/vector-im/riot-web/releases/download/v0.14.1/riot-v0.14.1.tar.gz
tar zxvf riot-v0.14.1.tar.gz</code></pre><p><strong>3、配置Caddy</strong><br>先找到<code>Riot</code>解压后的目录，本教程为<code>/root/riot-v0.14.1</code>。</p>
<pre><code>#以下全部内容是一个整体，修改域名、邮箱后一起复制到SSH运行！
echo &quot;https://xx.com {
 tls admin@southcat.net
 root /root/riot-v0.14.1
 gzip
 browse
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code></p>
<pre><code>/etc/init.d/caddy start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款强大好用的图床程序：chevereto安装教程</title>
    <url>/1813/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>chevereto</code>是目前最好的图床之一了。功能也非常强大。其免费版和收费版的区别，在于收费版多了硬盘扩展，社交分享功能和技术支持。硬盘扩展指的是你可以通过<code>sftp</code>等方式把上传的文件储存在其他服务器上。所以个人觉得，这个免费版已经足够使用了。而且<code>chevereto</code>的安装也非常简单，并且支持中文。网上很多教程都写得不是很清楚，这里就发个详细安装教程吧。<br><strong>官网：</strong><a href="https://chevereto.com/" target="_blank" rel="noopener">https://chevereto.com/</a><br><strong>DEMO：</strong><a href="https://demo.chevereto.com/" target="_blank" rel="noopener">https://demo.chevereto.com/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/chevereto.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>Apache</code>/<code>Nginx</code>、<code>PHP 5.5+</code>、<code>MySQL 5.0+</code></p>
<p><strong>1、搭建web环境</strong><br>我们可以用<code>lnmp</code>、<code>lamp</code>一键包或者宝塔之类的面板来搭建<code>web</code>环境。<br><code>lnmp</code>安装方法可参考：lnmp1.4安装教程。<br>宝塔安装方法可看：宝塔面板安装教程。</p>
<p><strong>2、上传chevereto程序</strong><br>搭建好<code>web</code>环境后，添加网站并解析，再上传<code>chevereto</code>程序到网站目录，<code>chevereto</code>下载地址：<a href="https://github.com/Chevereto/Chevereto-Free。" target="_blank" rel="noopener">https://github.com/Chevereto/Chevereto-Free。</a><br>这里以<code>lnmp</code>为例，执行命令：</p>
<pre><code>cd /home/wwwroot/www.yourdomain.com
wget https://www.southcat.net/usr/down/Chevereto_v1.0.8.tar.gz
tar zfvx Chevereto_v1.0.8.tar.gz
chmod -R 775 ./*</code></pre><p>修改网站配置文件<code>/usr/local/nginx/conf/vhost/xx.com.conf</code>，在<code>server</code>中添加以下代码。</p>
<pre><code>location / {
try_files $uri $uri/ /index.php?$query_string;
}</code></pre><p>然后重启<code>Nginx</code>，使用命令：</p>
<pre><code>/etc/init.d/nginx restart
#或者
lnmp restart</code></pre><p>最后就可以打开你的网站按要求填入数据库信息进行安装了。</p>
<p><strong>注意：</strong>经测试，使用<code>v1.0.7</code>程序的打开网站后可能会出现<code>Chevereto can’t create the app/settings.php file. You must manually create this file</code>该错误，这时在<code>app</code>目录新建<code>settings.php</code>文件并给予可写入权限即可，也可使用命令，以<code>lnmp</code>为例：</p>
<pre><code>cd /home/wwwroot/xx.com/app
touch settings.php
chmod -R 777 settings.php</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款强大的多功能网盘和文件管理器：FileRun安装教程</title>
    <url>/1877/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>FileRun</code>多用户网盘之前已经介绍过了，参考：File Run-多功能的VPS文件管理器，对于安装方法，只是简单的说了下，估计还有很多人不会安装，这里就详细的说下安装方法，不得不说这个网盘安装过程有点坑爹，特别是在<code>PHP</code>配置方面，博主花了很久才配置完全。本教程使用<code>2</code>种方法安装，使用宝塔面板和手动编译安装，对于新手建议直接用宝塔，爱折腾的可以用编译的方法，后者要快些，不过相对前者更容易出问题。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/File%20Run(1).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/File%20Run(2).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p><strong>1、安装宝塔面板</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh

#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh

#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成会给面板地址，用户名和密码你。</p>
<p><strong>2、安装环境并上传FileRun</strong><br>进入面板后，根据提示安装<code>nginx</code>，<code>php 7.0</code>，<code>mysql 5.6</code>环境，再添加域名，解析域名，然后将<code>FileRun</code>程序下载并上传解压到网站根目录，并建好数据库。<code>FileRun</code>程序下载地址：<a href="https://www.filerun.com/download。" target="_blank" rel="noopener">https://www.filerun.com/download。</a></p>
<p><strong>3、安装PHP拓展</strong><br><code>Filerun</code>需要安装<code>ionCube</code>、<code>imagemagick</code>和<code>Exif</code>拓展。可进入<code>PHP</code>管理进行安装。<br><img src="https://www.southcat.net/usr/picture/Filerun(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>4、修改PHP配置文件</strong><br>和步骤<code>3</code>一样，同样的在<code>PHP</code>管理里找到配置文件，进行如下修改：</p>
<pre><code>#找到open_basedir，大概在293行，记得替换成你的域名
open_basedir = /www/wwwroot/yourdomain.com/:/tmp/:/proc/

#找到disable_functions，大概在298行
删掉exec,代码即可。</code></pre><p>编辑好了后，重启<code>PHP</code>。<br><strong>5、安装FileRun程序</strong><br>打开域名，根据提示检查配置信息后，再输入数据库名称、用户名、密码安装<code>FileRun</code>程序。<br><img src="https://www.southcat.net/usr/picture/Filerun(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Filerun(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Filerun(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>安装成功显示如下信息。<br><img src="https://www.southcat.net/usr/picture/Filerun(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>最后就可以直接登录，第一次会要你修改密码等信息。<br><img src="https://www.southcat.net/usr/picture/Filerun(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>本教程在<code>CentOS 7</code>下测试成功。编译的环境为<code>Apache</code>，<code>Mysql 5.6</code>和<code>PHP 7.0</code>。</p>
<p><strong>1、安装Apache</strong></p>
<pre><code>#安装并启动Apache Web服务器
yum install httpd -y
systemctl start httpd.service </code></pre><p>此时我们进入<code>http://ip</code>地址可以看到<code>Apache</code>欢迎页面。</p>
<p><strong>2、安装Mysql 5.6</strong></p>
<pre><code>#下载并安装Mysql
wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
rpm -ivh mysql-community-release-el7-5.noarch.rpm
yum install mysql-server

#设置权限
chown -R root:root /var/lib/mysql
service mysqld restart

#重置Mysql密码
mysql -u root
use mysql;
update user set password=password(&apos;moerats&apos;) where user=&apos;root&apos;;
exit;

#重启数据库
service mysqld restart

#创建数据库
mysql -uroot -p
create database filerun;
exit;</code></pre><p><strong>3、安装PHP 7.0</strong></p>
<pre><code>#更新yum源
rpm -Uvh http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm

#安装PHP并启动
yum install php70w-fpm 
systemctl enable php-fpm.service  
systemctl start php-fpm.service</code></pre><p>为了在<code>Apache</code>上使用<code>PHP-FPM</code>，我们需要编辑<code>Apache</code>配置文件。</p>
<pre><code>vi /etc/httpd/conf/httpd.conf</code></pre><p>在最后即<code>IncludeOptional conf.d/*.conf</code>之前添加以下代码：</p>
<pre><code>&lt;IfModule proxy_module&gt;  
  ProxyPassMatch ^/(.*\.php(/.*)?)$ fcgi://127.0.0.1:9000/var/www/html/$1
&lt;/IfModule&gt; </code></pre><p>并在<code>DirectoryIndex</code>指令后面添加<code>index.php</code>即：</p>
<pre><code>DirectoryIndex index.html index.php #大约在164行</code></pre><p>再重新启动<code>Apache</code>。</p>
<pre><code>systemctl restart httpd.service</code></pre><p><strong>4、配置PHP 7.0</strong><br>安装<code>FileRun</code>所需的<code>PHP</code>模块</p>
<pre><code>yum install php70w-mbstring php70w-mcrypt php70w-opcache php70w-pdo php70w-mysql php70w-gd php70w-xml</code></pre><p>安装<code>ionCube</code>模块</p>
<pre><code>cd /usr/lib64/php/modules
yum install wget -y
wget http://downloads3.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz  
tar xvfz ioncube_loaders_lin_x86-64.tar.gz </code></pre><p>在<code>/etc/php.d</code>文件夹创建并编辑<code>filerun.ini</code>文件，可以使用<code>FTP</code>工具完成，也可以直接使用以下命令：</p>
<pre><code>#以下是一整个命令，一起复制运行即可。
echo &quot;expose_php              = Off  
error_reporting         = E_ALL &amp; ~E_NOTICE  
display_errors          = On  
display_startup_errors  = Off  
log_errors              = On  
ignore_repeated_errors  = Off  
allow_url_fopen         = On  
allow_url_include       = Off  
variables_order         = &quot;GPCS&quot;  
allow_webdav_methods    = On  
memory_limit            = 128M  
max_execution_time      = 300  
output_buffering        = Off  
output_handler          = &quot;&quot;  
zlib.output_compression = Off  
zlib.output_handler     = &quot;&quot;  
safe_mode               = Off  
register_globals        = Off  
magic_quotes_gpc        = Off  
upload_max_filesize     = 20M  
post_max_size           = 20M  
enable_dl               = Off  
disable_functions       = &quot;&quot;  
disable_classes         = &quot;&quot;  
session.save_handler     = files  
session.use_cookies      = 1  
session.use_only_cookies = 1  
session.auto_start       = 0  
session.cookie_lifetime  = 0  
session.cookie_httponly  = 1  
date.timezone            = &quot;UTC&quot;

zend_extension = /usr/lib64/php/modules/ioncube/ioncube_loader_lin_7.0.so&quot; &gt; /etc/php.d/filerun.ini</code></pre><p>重启<code>PHP</code></p>
<pre><code>systemctl restart php-fpm.service</code></pre><p><strong>5、安装FileRun</strong></p>
<pre><code>#下载最新版本FileRun
cd /var/www/html/  
wget -O FileRun.zip http://www.filerun.com/download-latest 
#解压
yum install unzip
unzip FileRun.zip
#授权目录
chown -R apache:apache /var/www/html/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款强大的网站在线客服聊天系统：whisper搭建教程</title>
    <url>/2221/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>whisper</code>是一个在线客服系统源码，采用<code>thinkphp5</code>+<code>Gatewayworker</code>编写，性能强悍。自己搭建，控制在自己，也无需为您的数据安全担心，您可以应用在任何的正规的网站，只需要添加一段简单的<code>js</code>代码，就可以使您的网站拥有在线客服功能。</p>
<p><strong>官方网站：</strong><a href="http://whisper.baiyf.com/" target="_blank" rel="noopener">http://whisper.baiyf.com/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/whisper(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/whisper(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/whisper(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>支持客服分组，多客服服务，让您的服务更有条理。</li>
<li>支持客服转接，让会员接受最专业的服务。</li>
<li>智能分配客户流量，让服务更加高效。</li>
<li>问候语设置，服务更加亲切。</li>
<li>历史聊天记录查看，方便监管和总结。</li>
<li>支持数据趋势统计，随时掌握服务情况，做出最优的调整。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>PHP &gt;= 5.6</code></p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP</code>、<code>Mysql</code>、<code>Nginx</code>、<code>phpmyadmin</code>。</p>
<p><strong>2、拉取源码</strong><br>点击左侧网站，添加站点，使用命令：</p>
<pre><code>cd www/wwwroot/xx.com
git clone https://gitee.com/nickbai/whisper_tp5.git
#如果移动的时候有mv提示，直接Enter即可
mv whisper_tp5/{,.}* ./
chmod 775 ./* ./runtime/temp/*</code></pre><p><strong>3、网站设置</strong><br>进入到域名设置，点击网站目录，去除跨站攻击的<code>√</code>，并设置运行目录为<code>public</code>。</p>
<p>然后点击伪静态设置，填入以下代码：</p>
<pre><code>location / {
  if (!-e $request_filename) {
  rewrite  ^(.*)$  /index.php?s=/$1  last;
  break;
   }
}</code></pre><p><strong>4、新建数据库</strong><br>点击面板左侧数据库，点击<code>phpmyadmin</code>进入数据库管理界面，新建<code>whisper</code>数据库。再将根目录的<code>whisper.sql</code>文件导入到数据库，然后修改根目录<code>application/database.php</code>配置信息。</p>
<pre><code>#修改如下
// 服务器地址
&apos;hostname&apos;        =&gt; &apos;127.0.0.1&apos;,
// 数据库名
&apos;database&apos;        =&gt; &apos;whisper&apos;,
// 用户名
&apos;username&apos;        =&gt; &apos;root&apos;,
// 密码
&apos;password&apos;        =&gt; &apos;root&apos;,
// 端口
&apos;hostport&apos;        =&gt; &apos;3306&apos;,</code></pre><p><strong>5、安装拓展</strong><br>环境一般只要安装两个扩展即可，一个是<code>pcntl</code>，一个是<code>libevent</code>（<code>event</code>）。<code>pcntl</code>为必须的，<code>libevent</code>为非必须的，但是起到高性能作用的恰恰是<code>libevent</code>（<code>event</code>）。如果你您的并发并不是很高，咨询量也不是很大，您可以不安装这个扩展，<code>Gatewayworker</code>会采用系统的<code>select</code>同样性能可观。</p>
<p>查看已安装的<code>PHP</code>拓展：</p>
<pre><code>php -m</code></pre><p>这时候发现必需的<code>pcntl</code>拓展已被安装，接下来就安装另外一个拓展了(一般情况下可以不用安装)，即<code>PHP5.x</code>安装<code>libevent</code>扩展，<code>PHP7.x</code>安装<code>event</code>拓展。</p>
<p><code>PHP7.x</code>安装<code>event</code>拓展，博主以<code>PHP7.0</code>测试环境，如果你是<code>7.1</code>将下面目录<code>70</code>改成<code>71</code>即可：</p>
<pre><code>#event包下载地址http://pecl.php.net/package/event，这里以最新版2.4.1为准
cd /www/server/php
wget http://pecl.php.net/get/event-2.4.1.tgz
tar -zxvf event-2.4.1.tgz &amp;&amp; cd event-2.4.1
/www/server/php/70/bin/phpize
./configure --with-php-config=/www/server/php/70/bin/php-config --with-event-libevent-dir=/www/server/php/event-2.4.1/
make &amp;&amp; make install
echo &quot;extension=event.so&quot; &gt;&gt; /www/server/php/70/etc/php.ini</code></pre><p><code>PHP5.x</code>安装<code>libevent</code>扩展，这里以<code>PHP5.6</code>测试环境，使用命令：</p>
<pre><code>cd /www/server/php
wget https://github.com/libevent/libevent/releases/download/release-2.1.8-stable/libevent-2.1.8-stable.tar.gz
tar -zxvf libevent-2.1.8-stable.tar.gz &amp;&amp; cd libevent-2.1.8-stable
/www/server/php/56/bin/phpize
./configure --with-php-config=/usr/local/php/bin/php-config --with-libevent=/www/server/php/libevent-2.1.8-stable/
make &amp;&amp; make install

echo &quot;extension=libevent.so&quot; &gt;&gt; /www/server/php/56/etc/php.ini</code></pre><p>其实要求不高的，这步可以省略。</p>
<p><strong>6、启动程序</strong><br>这时候需要先下载服务端文件，下载地址：whisper_server.zip，然后解压上传到网站根目录<code>vendor</code>目录里，再编辑以下文件。</p>
<pre><code>#编辑vendor/GatewayWorker/Applications/whisper/Events.php文件
#修改数据库名和密码
self::$db = new \Workerman\MySQL\Connection(&apos;127.0.0.1&apos;, &apos;3306&apos;, &apos;root&apos;, &apos;pass&apos;, &apos;whisper&apos;);</code></pre><p>然后启动程序：</p>
<pre><code>#进入服务端文件夹
cd /www/wwwroot/xx.com/vendor/GatewayWorker
#后台运行
php start.php start -d</code></pre><p>然后再到宝塔的安全里开启<code>8282</code>端口。</p>
<p>然后再配置<code>application/config.php</code>，进行如下修改：</p>
<pre><code>&apos;socket&apos; =&gt; &apos;192.168.1.104:8282&apos;,</code></pre><p><code>ip</code>填写你服务器的<code>ip</code>。</p>
<p>搭建成功后程序系统为<code>xx.com</code>，后台后<code>xx.com/admin</code>，管理员用户名密码均为<code>admin</code>，客服的工作台<code>xx.com/service</code>。</p>
<p>接下来我们进入程序系统首页，点击右下角的客服按钮，如果出现以下提示，则为安装成功，不然请检查你的步骤。<br><img src="https://www.southcat.net/usr/picture/whisper(1).png" alt="请输入图片描述" title="请输入图片描述"><br>最后我们就将在线客服集成到自己网站。</p>
<h2 id="网站使用"><a href="#网站使用" class="headerlink" title="网站使用"></a>网站使用</h2><p><strong>1、首先在您的网站上引入两段js</strong></p>
<pre><code>&lt;script src=&quot;http://xxx.com/static/customer/js/layer/layer.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;http://xxx.com/static/customer/js/whisper-tool.js&quot;&gt;&lt;/script&gt;</code></pre><p>对应的地方，换成你刚才部署<code>whisper</code>事时采用的域名。其实你也可以放本地，只要这个资源能访问到即可。</p>
<p><strong>2、配置参数</strong></p>
<pre><code>var ws = new whisper();
$(dom).click(function(){
    var group = $(this).attr(&apos;data-group&apos;);
    ws.init({
        id: uid,
        url: &apos;http://xxx.xxx.com/index/index/chat&apos;,
        name: uname,
        avatar: uavatar,
        group: group
    });
});</code></pre><p><strong>3、参数解释</strong><br>1）<code>dom</code>是什么？<br>这里的<code>dom</code>就是您的客服咨询悬浮框，以<code>whisper</code>官网的为例子：<br><img src="https://www.southcat.net/usr/picture/whisper(2).png" alt="请输入图片描述" title="请输入图片描述"><br>即这两部分的<code>dom</code>的<code>id</code>，<code>#cs-pre-sales</code>和<code>#cs-after-sales</code>：</p>
<pre><code>&lt;div id=&quot;cs-groups&quot;&gt;
    &lt;div class=&quot;cs-groups__item&quot; id=&quot;cs-pre-sales&quot; data-group=&quot;1&quot;&gt;
        &lt;span class=&quot;widget__icon&quot;&gt;&lt;/span&gt;售前客服
    &lt;/div&gt;
    &lt;div class=&quot;widget__divider&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;cs-groups__item&quot; id=&quot;cs-after-sales&quot; data-group=&quot;2&quot;&gt;
        &lt;span class=&quot;widget__icon&quot;&gt;&lt;/span&gt;售后客服
    &lt;/div&gt;
&lt;/div&gt;</code></pre><p>其实就是这两个地方的点击事件，此处在这个<code>dom</code>的地方，放置一个<code>data-group</code>来设置 这些客服分组的信息。这个<code>id</code>需要与管理端设置的 异一一对应，否则该分组的客服无法正常的工作。例如<code>whisper</code>站点上，这个点击事件这么配置的：</p>
<pre><code>$(&quot;#cs-pre-sales,#cs-after-sales&quot;).click(function(){
        // 其他业务代码
})</code></pre><p>2）<code>init</code>中的参数是什么意思？</p>
<pre><code>{
        id: uid,
        name: uname,
        avatar: uavatar,
        whisper_domain: &apos;http://xxx.xxx.com&apos;,
        group: group
}</code></pre><p>对应的信息为：</p>
<pre><code>id    当前登录户用户的唯一id
name    当前登录用户的昵称
avatar    当前登录用户的头像
whisper_domain    您搭建whisper系统的域名
group    用户咨询的客服分组</code></pre><p>好了，到此为止，您的<code>whisper</code>系统算是搭建 和整合完毕了。你可以为你的访客提供咨询服务了。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款强大的Linux管理面板：AppNode全面免费了</title>
    <url>/1816/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>AppNode</code>是一款强大美观的<code>Linux</code>建站面板，使用的人还是很多的，之前收费的功能现已全部免费，很给力，值得一试，类似的面板还有宝塔、<code>Vestacp</code>。</p>
<p><strong>公告地址：</strong><a href="https://bbs.appnode.com/thread-657-1-1.html" target="_blank" rel="noopener">https://bbs.appnode.com/thread-657-1-1.html</a></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>AppNode</code>是一款用于管理<code>Linux</code>服务器的软件，它基于<code>Web</code>页面进行可视化操作，不但可以帮助不熟悉<code>Linux</code>命令的用户无障碍地管理他们的<code>Linux</code>服务器，也可以帮助<code>Linux</code>运维人员提升运维效率。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/AppNode(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AppNode(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AppNode(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>一个控制中心控制多台服务器</li>
<li>全新网站管理，超强的的建站功能</li>
<li>支持一键安装常用网站程序</li>
<li>最全面的 <code>PHP</code> 扩展模块，100+个</li>
<li>支持 <code>MariaDB</code>、<code>MySQL</code>、<code>AliSQL</code></li>
<li>支持断点上传不限大小的文件管理</li>
<li>强大的可视化分区管理</li>
<li>支持备份到 <code>FTP/SSH</code> 和各种常见云存储</li>
<li>支持同步到云存储</li>
<li>支持 <code>Node.js</code> 运行环境</li>
<li>支持按端口或域名统计流量</li>
<li>强大的系统监控和报警功能</li>
<li>支持 <code>Redis/Memcache</code> 内存缓存</li>
<li>支持 <code>Supervisord</code> 进程托管</li>
<li>支持 <code>frp</code> 内网穿透</li>
<li>支持 <code>rsync</code> 同步</li>
<li>支持 <code>Lsyncd</code> 实时同步</li>
<li>支持 <code>Git</code> 服务器搭建</li>
<li>支持 <code>Samba</code> 服务器搭建</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>操作系统：</strong><code>CentOS 6.x 32/64</code>位、<code>CentOS 7.x 64</code>位（暂不支持 <code>Ubuntu</code>、<code>Debian</code>）。<br><strong>内存要求：</strong>建议可用内存在 <code>512MB</code> 以上。</p>
<p>运行命令：</p>
<pre><code>bash -c &quot;$(curl -sS http://dl.appnode.com/install.sh)&quot;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款强大的私有云盘和在线文件管理器：可道云KodExplorer安装教程</title>
    <url>/1749/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>可道云<code>KodExplorer</code>是一款拥有完备的文件管理功能，浏览器端享受本地化的体验，强大的在线文件编辑器，像使用操作系统一样使用体验，右键操作，拖拽，快捷键等；完美取代<code>FTP</code>管理，可用于服务器文件管理，支持图片、音乐、视频预览，在线解压缩，文件夹拖拽上传；全面采用<code>Ajax</code>+<code>Json</code>进行数据通信，毫秒级的响应速度，十分强大！</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/KodExplorer(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/KodExplorer(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、搭建web环境</strong><br>我们可以用<code>lnmp</code>、<code>lamp</code>一键包或者宝塔之类的面板来搭建<code>web</code>环境。<br><code>lnmp</code>安装方法可参考：lnmp1.4安装教程。<br>宝塔安装方法可看：宝塔面板安装教程。</p>
<p><strong>2、上传KodExplorer程序</strong><br>搭建好<code>web</code>环境后，添加网站并解析，再上传<code>KodExplorer</code>程序到网站目录，<code>KodExplorer</code>官网下载地址：<a href="https://kodcloud.com/download.html。" target="_blank" rel="noopener">https://kodcloud.com/download.html。</a><br>这里以<code>lnmp</code>为例，执行命令：</p>
<pre><code>cd /home/wwwroot/www.yourdomain.com
wget http://static.kodcloud.com/update/download/kodexplorer4.22.zip
unzip kodexplorer4.22.zip
chmod -Rf 777 ./*</code></pre><p>如果<code>unzip</code>解压文件时出现问题，这说明没安装<code>unzip</code>，所以解压前需要先执行命令：<code>apt-get install unzip</code>或者<code>yum install unzip</code>即可。当然这里也可以用<code>WinSCP</code>等<code>ftp</code>工具完成程序上传步骤！</p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>一款不错的个人私有云：NextCloud安装教程</li>
<li>Linux VPS一键安装Seafile搭建私有云盘存储</li>
<li>一个轻量级文件管理系统：FileManager安装教程</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款强大的Linux免费web管理面板：VestaCP安装教程</title>
    <url>/1605/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>VestaCP</code>是一款强大的<code>Linux web</code>控制面板，是由俄罗斯的人编写，支持中文，支持<code>Apache</code>、<code>Nginx</code>、<code>Bind</code>、<code>Exim</code>、<code>Dovecot</code>、<code>vsftpd</code>、<code>MySQL</code>等，提供可视化的网站管理面板，非常适合多用户使用。<code>VestaCP</code>还自带了免费邮局功能和<code>VPS</code>性能监控，还能通过<code>web</code>面板修改防火墙规则！</p>
<p><strong>系统要求：</strong>支持<code>Centos</code>,<code>Ubuntu</code>,<code>Debian</code>,<code>RHEL</code>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装VestaCP</strong><br>执行以下命令：</p>
<pre><code>curl -O http://vestacp.com/pub/vst-install.sh
bash vst-install.sh</code></pre><p>会让你输入<code>email</code>地址，域名，备份地址等，然后很快就装好了！最后会显示登录地址和用户名密码。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款支持上传/删除等操作的PHP目录列表程序：Evoluted Directory Listing</title>
    <url>/2017/</url>
    <content><![CDATA[<p><strong>说明：</strong>今天博主去国外一些博客看了下，偶然间发现个好东西，是一个大家都很少知道的目录索引程序，<code>Evoluted Directory Listing Script</code>，与之前说的<code>H5ai</code>、<code>Directory Lister</code>不同的是，该程序支持各种操作，比如删除/上传/创建文件夹等等。可以当私人网盘使用，而且程序就一个<code>index.php</code>文件，很简洁。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Evoluted_Directory.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>全面的支持移动浏览器。</li>
<li>能够上传多个文件并限制允许的文件类型。</li>
<li>支持通过密码或<code>IP</code>地址白名单来限制对脚本的访问（理想的情况是只需要您自己和客户端的访问权限！）。</li>
<li>支持创建新的目录和子目录。</li>
<li>上传压缩文件并自动提取压缩文件，并提供压缩文件解压后的选项。</li>
<li>可选地隐藏某些文件类型，名称或扩展名以及目录。</li>
<li>按名称，大小或上次修改日期排序文件列表。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>PHP 5.3</code>或更高版本、安装<code>fileinfo</code>拓展。如果你想启用解压缩支持，你还需要安装<code>ZipArchive php</code>扩展。</p>
<p>想方便的，直接安装宝塔面板，教程：宝塔面板安装教程，然后进入后台再安装<code>PHP</code>和<code>Nginx</code>环境，再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>拓展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、手动添加，方法查看：https://www.southcat.net/archives/19/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p>之后添加域名，上传文件即可。<code>Evoluted</code>下载：evoluted-directory-4.0.5.zip。</p>
<p>关于功能设置，直接在<code>index.php</code>文件里修改即可，这里列举几个功能。</p>
<pre><code>#上传压缩文件并自动提取压缩文件
// 设置为true，解压缩，上传任何ZIP文件（注意：会覆盖同名的！文件）
public $enableUnzipping = true;
// 如果您已经启用解压，您可以选择上传后设置为TRUE，删除原来的压缩文件。
public $deleteZipAfterUploading = false;

#网盘增加密码访问
// 设置为true，以便在使用脚本之前输入密码。
public $passwordProtect = true;
// 需要使用这个脚本的密码（如果只使用$passwordprotect设置为true）
public $password = &apos;填写密码&apos;;

#允许访问的IP地址
// 可选。允许限制只能访问白名单的IP地址
public $enableIpWhitelist = true;
//允许脚本IP列表（如果只使用$enableIpWhitelist是true）
public $ipWhitelist = array(
   &apos;填写ip&apos;
   &apos;填写ip&apos;
 );

#隐藏文件以及扩展名文件
// 从目录列表中显示的块扩展文件扩展名
public $ignoredFileExtensions = array(
   &apos;扩展名&apos;,
   &apos;扩展名&apos;,
 );
// 从目录列表中显示的块文件名
public $ignoredFileNames = array(
   &apos;需要隐藏的文件&apos;,
   &apos;需要隐藏的文件&apos;,
   &apos;需要隐藏的文件&apos;,
 );
// 以点开头的文件通常是隐藏文件。设置为false如果你想显示这些隐藏文件。
public $ignoreDotFiles = true;

#隐藏的目录
// 在目录列表中显示的要阻止的目录
public $ignoredDirectories = array(
   &apos;需要隐藏的目录&apos;,
 );</code></pre><h2 id="相关程序"><a href="#相关程序" class="headerlink" title="相关程序"></a>相关程序</h2><ul>
<li>一款不错的PHP目录列表程序：h5ai安装教程</li>
<li>Directory Lister：又一款不错的PHP目录索引工具</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款快速，跨平台，多向的文件实时同步工具：Mutagen</title>
    <url>/2442/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Mutagen</code>是一个开源、跨平台的文件同步和网络转发工具，目前支持本地文件系统，远程服务器和<code>Docker</code>容器文件系统之间的同步，感觉同步和<code>lsyncd</code>很类似，但安装和配置更简单。同时也支持转发本地<code>TCP</code>端口(<code>IPv4</code>和<code>IPv6</code>）和<code>Unix</code>域套接字，并可以将本地<code>Unix</code>域套接字映射到远程<code>TCP</code>侦听器。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/mutagen-io/mutagen" target="_blank" rel="noopener">https://github.com/mutagen-io/mutagen</a></p>
<p><strong>支持系统：</strong><code>Windows</code>，<code>MacOS</code>和<code>Linux</code></p>
<p>先访问下载地址→传送门，根据自己的系统架构选择对应的最新版二进制文件，这里以常见的<code>Linux VPS</code>为例，<code>32</code>位就选<code>386</code>，<code>64</code>就选<code>amd64</code>，具体还是以实际情况为准，目前最新版为<code>v0.10.0-beta2</code>，如果版本有更新，记得替换下面的下载链接即可。</p>
<p>安装命令：</p>
<pre><code>#32位系统下载二进制文件
wget https://github.com/mutagen-io/mutagen/releases/download/v0.10.0-beta2/mutagen_linux_386_v0.10.0-beta2.tar.gz
#64位系统下载二进制文件
wget https://github.com/mutagen-io/mutagen/releases/download/v0.10.0-beta2/mutagen_linux_amd64_v0.10.0-beta2.tar.gz

#解压文件
tar zxvf mutagen_linux_*.tar.gz -C /usr/local/bin
#启动
mutagen daemon start</code></pre><p>使用命令：</p>
<pre><code>#后期随着更新，命令参数可能会有变化，到时候使用mutagen -h查看最新参数即可
Usage:
  mutagen [flags]
  mutagen [command]

Available Commands:
  sync        Create and manage synchronization sessions
  forward     Create and manage forwarding sessions [Experimental]
  project     Orchestrate sessions for a project [Experimental]
  daemon      Control the lifecycle of the Mutagen daemon
  version     Show version information
  legal       Show legal information
  help        Help about any command

Flags:
  -h, --help   Show help information

Use &quot;mutagen [command] --help&quot; for more information about a command.</code></pre><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>这里主要说同步功能，转发的话，貌似大多数人用不到，如果想了解转发可以查看→传送门。</p>
<p>首先同步前，需要先创建一个同步会话，默认为双向同步，命令示例：</p>
<pre><code>#创建一个名为rats1的同步本地/moerat和远程服务器/rats文件夹的会话
mutagen sync create --name=rats1 /moerats user@远程服务器ip:port:/rats

比如远程服务器ip为1.2.3.4，端口为9999，用户名root，则user@远程服务器ip:port可以写成为root@1.2.3.4:9999</code></pre><p>创建期间可能会要你多次输入远程服务器的密码，创建会话后，本地文件夹和远程文件夹可以双向同步了，意味着本地和远程的文件夹有任何一个文件夹出现变动，均会在另一方出现变动。</p>
<p>如果要单向同步，则命令示例：</p>
<pre><code>#创建一个名为rats1的同步本地/moerat和远程服务器/rats文件夹的会话
mutagen sync create --name=rats1 -m one-way-safe /moerats user@远程服务器ip:port:/rats</code></pre><p>创建会话后，只会单向同步本地<code>/moerat</code>文件夹到远程服务器<code>/rats</code>文件夹，意味着<code>/moerat</code>文件夹出现变动会影响<code>/rats</code>文件夹，而<code>/rats</code>文件夹出现变动不会影响<code>/moerat</code>文件夹。</p>
<p>除了远程同步外，还可以实现本地服务器文件夹之间双向同步，也可以和<code>Docker</code>容器里面的文件夹同步，命令示例：</p>
<pre><code>#创建一个名为rats1的同步本地/moerat和本地/rats文件夹的会话
mutagen sync create --name=rats1 /moerats /rats

#创建一个名为rats1的同步本地/moerat和本地服务器指定Docker容器内/rats文件夹的会话
mutagen sync create --name=rats1 /moerats docker://root@容器ID/rats</code></pre><p><code>Docker</code>容器<code>ID</code>可以使用<code>docker ps</code>命令查看，<code>CONTAINER ID</code>为容器<code>ID</code>，创建本地会话后，相应的文件会双向同步。</p>
<p>其它命令：</p>
<pre><code>#查看所有的会话
mutagen sync list
#监控名为rats1的会话
mutagen sync monitor rats1
#停止名为rats1的会话
mutagen sync pause rats1
#恢复名为rats1的会话
mutagen sync resume rats1
#刷新名为rats1的会话
mutagen sync flush rats1
#永久删除名为rats1的会话
mutagen sync terminate rats1</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款支持多账户的Web管理面板：CyberPanel安装教程</title>
    <url>/1656/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>CyberPanel</code>，一款基于<code>OpenLiteSpeed</code>的<code>web</code>管理面板，支持自动添加<code>SSL</code>、<code>DNS</code>、<code>FTP</code>、<code>PHPMYAdmin</code>等，<code>PHP</code>版本支持从<code>PHP5.3</code>—<code>PHP7.2</code>，很全面，还可以开子账户，供多人一起使用，很不错。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>最新版本为<code>V1.6</code>，支持<code>PHP 7.2</code>，支持中文。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/CyberPanel(1).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/CyberPanel(2).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Centos 7.x</code>系统。</p>
<pre><code>sh &lt;(curl https://cyberpanel.net/install.sh || wget -O - https://cyberpanel.net/install.sh)</code></pre><p>安装完成后进入地址: <code>https://IP:8090</code>，使用用户名: <code>admin</code>，密码: <code>1234567</code>登录即可。</p>
<p>如果面板安装后出现<code>503</code>错误，运行命令<code>systemctl start gunicorn.socket</code>即可。</p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>1、虚拟主机</p>
<pre><code>/usr/local/lsws/conf/vhosts/&lt;域名&gt;</code></pre><p>2、<code>FTP</code></p>
<pre><code>/etc/pure-ftpd
/etc/pure-ftpd/pure-ftpd.conf</code></pre><p>3、<code>Litespeed</code></p>
<pre><code>/usr/local/lsws/conf/httpd_config.conf
/usr/local/lsws/conf/phpconfigs/php53.conf
/usr/local/lsws/conf/phpconfigs/php54.conf
/usr/local/lsws/conf/phpconfigs/php55.conf
/usr/local/lsws/conf/phpconfigs/php56.conf
/usr/local/lsws/conf/phpconfigs/php70.conf</code></pre><p>4、<code>DNS</code>目录</p>
<pre><code>/etc/nsd
/etc/nsd/nsd.conf
/usr/local/lsws/conf/zones/&lt;域名&gt;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款支持对接多家云存储的多功能网盘系统：Cloudreve搭建教程</title>
    <url>/1965/</url>
    <content><![CDATA[<p><strong>说明：</strong>目前用的比较多的网盘有<code>Nextcloud</code>、<code>Seafile</code>等，都还不错，而刚刚在<code>loc</code>看到树洞外链的作者开发出了个功能更强大的<code>Cloudreve</code>网盘，博主就想试下，顺便发个搭建教程。</p>
<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>之前写过一个叫树洞外链的程序，其主要定位是小文件分享、图床。但许多人把他理解为网盘，提出的建议也都向网盘靠拢。既然如此，那就结合树洞外链的特点，写一个真正意义上的网盘系统吧。<code>Cloudreve</code>的定位为小型公有云和私有云，即公私兼备。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Cloudreve(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Cloudreve(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Cloudreve(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Cloudreve(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>最新的版本为<code>1.1.0</code>，新增以下内容。</p>
<ul>
<li>新增<code>OneDrive</code>存储策略，理论支持<code>Bussiness</code>和个人账号</li>
<li>新增基于<code>Aria2</code>的离线下载（只支持本地和<code>OneDrive</code>策略使用）</li>
<li>全新的目录分享页样式</li>
<li><code>Web</code>端安装向导</li>
</ul>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>快速对接多家云存储，支持七牛、又拍云、阿里云<code>OSS</code>、<code>AWS</code> <code>S3</code>、<code>Onedrive</code>、自定远程服务端，当然，还有本地存储。</li>
<li>可限制单文件最大大小、<code>MIMEType</code>、文件后缀、用户可用容量。</li>
<li>图片、音频、视频、文本、<code>Markdown</code>、<code>Ofiice</code>文档 在线预览。</li>
<li>移动端全站响应式布局。</li>
<li>文件、目录分享系统，可创建私有分享或公开分享链接。</li>
<li>用户个人主页，可查看用户所有分享。</li>
<li>多用户系统、用户组支持。</li>
<li>初步完善的后台，方便管理。</li>
<li>拖拽上传、分片上传、断点续传、下载限速（实验性功能）。</li>
<li>多上传策略，可为不同用户组分配不同策略。</li>
<li>用户组基础权限设置。</li>
<li><code>WebDAV</code>协议支持。</li>
</ul>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li>重写目录分享和单文件分享页面样式</li>
<li>增加保存其他用户的分享到自己账户（限<code>Pro</code>版）</li>
<li>推出辅助程序，并借此实现：压缩包解压缩、文件压缩；对接<code>Google Drive</code>，上传模式为先上到自己服务器，然后中转。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh

#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh

#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，请安装<code>PHP 5.6</code>及以上的版本，<code>Nginx</code>，<code>mysql</code>。安装完成后再去左侧软件管理，找到<code>PHP</code>版本，点击设置，安装拓展，安装<code>fileinfo</code>，然后点击禁用函数，删掉<code>proc_open</code>和<code>proc_get_status</code>。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、手动添加，方法查看：https://www.southcat.net/archives/19/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p><strong>2、安装Composer</strong></p>
<pre><code>curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer</code></pre><p><strong>3、使用Composer安装Cloudreve</strong><br>解析域名到服务器，添加网站，根目录文件夹为<code>xx.com</code>。<br>使用命令：</p>
<pre><code>cd /www/wwwroot/xx.com
git clone https://github.com/HFO4/Cloudreve.git
mv Cloudreve/* /www/wwwroot/xx.com
composer install</code></pre><p>如果使用<code>Composer</code>安装有问题的话，可以不使用<code>Composer</code>安装。到<code>http://cloudreve.org/download.php</code>下载最新的安装包，解压到网站根目录，并授权文件夹<code>755</code>权限。其他步骤都一样。</p>
<p><strong>4、配置MySQL</strong><br>将根目录下的<code>mysql.sql</code>导入到你的数据库，编辑<code>application/database_sample.php</code>文件，填写数据库信息，并重命名为<code>database.php</code>。</p>
<p><strong>5、伪静态</strong><br>对于<code>Apache</code>服务器，请确保：</p>
<pre><code>httpd.conf配置文件中加载了mod_rewrite.so模块。
AllowOverride None将None改为All。
#项目目录下的.htaccess已经配置好重写规则，如有需求酌情修改。</code></pre><p>对于<code>Nginx</code>服务器，在配置文件添加以下代码：</p>
<pre><code>#程序在根目录
location / {
   if (!-e $request_filename) {
   rewrite  ^(.*)$  /index.php?s=/$1  last;
   break;
    }
 }

#程序在二级目录，xx为你的二级目录名
location /xx/ {
    if (!-e $request_filename){
        rewrite  ^/xx/(.*)$  /xx/index.php?s=/$1  last;
    }
}</code></pre><p><strong>6、后续操作</strong><br>到此步时，系统已基本可以正常运行，但还需要进行一些后续操作。<br>1、登录后台（初始用户名：<code>admin@cloudreve.org</code>，初始密码：<code>admin</code>，后台<code>URl</code>：<code>http://你的域名/Admin</code>，登录后到设置-基本设置中检查站点<code>URL</code>是否正确）。<br>2、到用户管理页修改初始用户密码。<br>3、如果你需要使用二步验证功能，请使用命令：</p>
<pre><code>cd /www/wwwroot/xx.com
composer require phpgangsta/googleauthenticator:dev-master
composer require endroid/qrcode


* * * * * curl http://你的域名/Cron
* 如果你打算使用本地上传策略并且不准备开启外链功能，请将public/uploads目录设置为禁止外部访问、禁止脚本。</code></pre><h2 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h2><pre><code>1、Composer安装Cloudreve时提示The requested PHP extension ext-XXX * is missing from your system
这是PHP扩展未达到要求所致，Cloudreve需要curl、fileinfo、gd扩展支持，请先安装并启用这些扩展。

2、安装成功后页面404/No input file specified
URL重写规则未配置好，请检查。

3、安装后首页提示“遇到错误”
请依次检查：
application/database.php是否存在，如果不存在请手动创建写入数据库信息。
runtime及其子目录是否有写入权限。
其他原因，编辑application/config.php打开debug模式，查看详细报错。

4、头像无法显示/文件无法上传
检查fileinfo扩展是否被安装并启用。

5、本地存储策略文件上传到4mb时卡住
public/uploads/chunks目录没有写入权限，请分配写入权限。

6、使用云存储策略时回调失败/获取的文件外链URL不对
依次检查：
后台-设置-基本设置中的站点URL是否正确。
服务器时间是否正确。
有些服务器可能会将Authorization头自行解析掉，比如apache2，因此需要设置成不解析这个头部。以apache2为例，具体设置方法请参考 https://help.aliyun.com/document_detail/31927.html?spm=a2c4g.11186623.6.637.wPbiue。
Cloudreve应用是否能被外网访问

7、开启二步验证时的二维码无法显示
执行：
composer require phpgangsta/googleauthenticator:dev-master
composer require endroid/qrcode</code></pre><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul>
<li>演示站：<a href="https://pan.aoaoao.me" target="_blank" rel="noopener">https://pan.aoaoao.me</a></li>
<li>GitHub：<a href="https://github.com/HFO4/Cloudreve" target="_blank" rel="noopener">https://github.com/HFO4/Cloudreve</a></li>
<li>安装说明：<a href="https://github.com/HFO4/Cloudreve/wiki" target="_blank" rel="noopener">https://github.com/HFO4/Cloudreve/wiki</a></li>
<li>Telegram群组： <a href="https://cloudreve.org/joingroup" target="_blank" rel="noopener">https://cloudreve.org/joingroup</a></li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款支持Linux/Windows/Mac的百度网盘客户端：BaiduPCS-Web</title>
    <url>/2256/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前介绍过一个仿<code>Linux shell</code>文件处理命令的百度网盘命令行客户端<code>BaiduPCS-Go</code>→点击查看，该工具很大程度上解决了我们在<code>VPS</code>上下载百度云文件速度过慢的问题，不过是用纯命令的形式操作，有些小白也不是很会，有大佬根据该客户端写了个带<code>Web</code>管理界面的<code>BaiduPCS</code>，适用于<code>Linux</code>、<code>Windows</code>、<code>Mac</code>等系统，使用起来很方便，这里分享下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/BaiduPCS-Web(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BaiduPCS-Web(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/liuzhuoling2011/baidupcs-web" target="_blank" rel="noopener">https://github.com/liuzhuoling2011/baidupcs-web</a></p>
<p>该程序作者已经打包好了，下载地址：点击查看。</p>
<p><strong>1、Windows系统</strong><br><code>Windows</code>系统直接下载对应的版本的程序后解压出来，再双击就可以使用了。</p>
<p><strong>2、Linux系统</strong><br>首先进入下载地址，找到对应架构的最新版本的程序，目前为<code>3.5.8</code>版本，然后进入<code>SSH</code>使用命令：</p>
<pre><code>#下载文件
wget http://qiniu.zoranjojo.top/BaiduPCS-Go-3.5.8-linux-amd64.zip
#解压文件
unzip BaiduPCS-Go-3.5.8-linux-amd64.zip
#进入文件夹
cd BaiduPCS-Go-3.5.8-linux-amd64
#授权文件
chmod a+x BaiduPCS-Go
#运行，默认5299，可自行修改为其它端口
./BaiduPCS-Go web --port 5299</code></pre><p>然后使用浏览器访问<code>http://ip:5299</code>即可。</p>
<p>如果<code>Web</code>界面打不开，可能需要开启防火墙端口。</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 5299 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=5299/tcp --permanent
firewall-cmd --reload</code></pre><p>如果需要程序常驻后台的话，可以使用<code>screen</code>命令，使用查看→传送门。</p>
<p><strong>3、Mac系统</strong><br>方法参考步骤<code>2</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款支持Markdown语法的Wiki知识管理系统：Wikitten搭建教程</title>
    <url>/2014/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Wikitten</code>是一款开源<code>Wiki</code>知识管理系统，使用<code>PHP</code>开发，支持<code>Markdown</code>语法，无需数据库，自动生成树形目录，适合用来做个人<code>Wiki</code>知识库。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Wikitten_in.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>PHP &gt;= 5.3</code>，需要<code>Fileinfo</code>组建支持。</p>
<p>搭建好<code>Web</code>环境，建议使用宝塔面板，教程：宝塔面板安装教程，然后进入后台再安装<code>PHP</code>和<code>Nginx</code>环境，再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>拓展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、手动添加，方法查看：https://www.southcat.net/archives/19/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p>接下来解析并添加域名，然后下载源码：Wikitten.zip，再放到站点根目录并解压。将<code>config.php.example</code>重命名为<code>config.php</code>，根据实际情况修改或注释里面内容，配置文件说明如下：</p>
<pre><code>#设置站点标题
define(&apos;APP_NAME&apos;, &apos;My Wiki&apos;);
#选择首页文件，必须位于library文件夹下（一般不需要修改）
define(&apos;DEFAULT_FILE&apos;, &apos;index.md&apos;);
#设置文档目录（一般不需要修改）
define(&apos;LIBRARY&apos;, &apos;/path/to/wiki/library&apos;);
#启用任何文件的页内编辑（不知道用来干嘛的，保持默认就行）
define(&apos;ENABLE_EDITING&apos;, true);
#启用JSON Front Matter(元数据)，可对文档设置title/keywords等
define(&apos;USE_PAGE_METADATA&apos;, true); 
#使用黑色主题
define(&apos;USE_DARK_THEME&apos;, true);
#是否显示左下角LOGO
define(&apos;USE_WIKITTEN_LOGO&apos;, false);</code></pre><p><code>Wikitten</code>需要伪静态支持，如果是<code>Apache</code>一般不需要修改，站点根目录已经内置<code>.htaccess</code>伪静态规则。如果是<code>Nginx</code>，请添加下面的配置到<code>server</code>段内，并重启<code>Nginx</code>。</p>
<pre><code>#宝塔面板找到左侧网站点击域名，直接在伪静态添入以下代码
location ~* ^/static/(css|js|img|fonts)/.+.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt|swf|pdf|txt|bmp|eot|svg|ttf|woff|woff2)$ {
    access_log off;
    expires max;
}
location / {
    rewrite ^(.*)$ /index.php last;
}</code></pre><p>最后访问你的域名即可。</p>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p><code>Wikitten</code>支持<code>Markdown</code>语法，直接将写好的<code>Markdown</code>文件存放到网站根目录<code>library</code>文件夹会自动生成树形结构。</p>
<p><code>Wikitten</code>模板文件位于<code>views</code>目录，你可以适当修改，添加网站统计代码以及评论和一些个性化设置。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款易搭建，运行快的Git服务器：Gitea安装教程</title>
    <url>/2045/</url>
    <content><![CDATA[<p><strong>说明：</strong>前段时间介绍过一个<code>Git</code>服务器，查看：Gogs安装教程，体验还不错。现在再说个<code>Gitea</code>，是从<code>Gogs</code>发展而来，同样的拥有极易安装，运行快速的特点，而且更新比<code>Gogs</code>频繁很多，维护的人也多，个人认为<code>Gitea</code>还是更好一些的，这里就说下安装方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Gitea(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Gitea(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Gitea</code>是一个极易安装，运行非常快速，安装和使用体验良好的自建<code>Git</code>服务。采用<code>Go</code>作为后端语言，这使得只要生成一个可执行程序即可。并且他还支持跨平台，支持<code>Linux</code>、<code>macOS</code>和<code>Windows</code>以及各种架构，除了<code>x86</code>，<code>amd64</code>，还包括<code>ARM</code>和 <code>PowerPC</code>。</p>
<p><strong>Github地址：</strong><a href="https://github.com/go-gitea/gitea" target="_blank" rel="noopener">https://github.com/go-gitea/gitea</a></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>支持活动时间线</li>
<li>支持<code>SSH</code>以及<code>HTTP</code>/<code>HTTPS</code>协议</li>
<li>支持<code>SMTP</code>、<code>LDAP</code>和反向代理的用户认证</li>
<li>支持反向代理子路径</li>
<li>支持用户、组织和仓库管理系统</li>
<li>支持添加和删除仓库协作者</li>
<li>支持仓库和组织级别<code>Web</code>钩子（包括<code>Slack</code>集成）</li>
<li>支持仓库<code>Git</code>钩子和部署密钥</li>
<li>支持仓库工单（<code>Issue</code>）、合并请求（<code>Pull Request</code>）以及<code>Wiki</code></li>
<li>支持迁移和镜像仓库以及它的<code>Wiki</code></li>
<li>支持在线编辑仓库文件和<code>Wiki</code></li>
<li>支持自定义源的<code>Gravatar</code>和<code>Federated Avatar</code></li>
<li>支持邮件服务</li>
<li>支持后台管理面板</li>
<li>支持<code>MySQL</code>、<code>PostgreSQL</code>、<code>SQLite3</code>、<code>MSSQL</code>和<code>TiDB</code>（实验性支持）数据库</li>
<li>支持多语言本地化（<code>21</code>种语言）</li>
</ul>
<h2 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h2><p>安装方法和<code>Gogs</code>差不多，这里再说一遍。</p>
<p><strong>1、安装MySQL数据库</strong><br>建议使用<code>CentOS</code>系统，查看：CentOS下Mysql 5.6安装教程及创建数据库，其他系统不会手动安装的直接使用宝塔面板。</p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh

#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh

#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，安装<code>MySQL</code>，至少<code>5.5.3</code>版本。</p>
<p><strong>2、安装Git</strong></p>
<pre><code>#Debian和Ubuntu系统
apt-get -y install git

#CentOS系统
yum -y install git</code></pre><p><strong>3、安装Gitea</strong><br>最新版本下载地址：<a href="https://dl.gitea.io/gitea。" target="_blank" rel="noopener">https://dl.gitea.io/gitea。</a></p>
<pre><code>wget -O gitea https://dl.gitea.io/gitea/1.4.0/gitea-1.4.0-linux-amd64
chmod +x gitea
./gitea web</code></pre><p>接下来打开<code>http://ip:3000</code>即可。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>如果只是想体验下的，可以试试<code>Docker</code>安装方法。</p>
<p><strong>1、安装Docker和Docker Compose</strong></p>
<pre><code>#安装并启动Docker
curl -sSL https://get.docker.com/ | sh
service docker start
#安装Docker Compose
curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>2、安装Gitea</strong></p>
<pre><code>#创建并进入gitea目录
mkdir gitea &amp;&amp; cd gitea

#创建并编辑docker-compose.yml文件
nano docker-compose.yml</code></pre><p>复制以下代码进去，数据库信息默认或者修改都可。</p>
<pre><code>version: &quot;2&quot;

networks:
 gitea:
   external: false

services:
 server:
   image: gitea/gitea:latest
   environment:
    - USER_UID=1000
    - USER_GID=1000
   restart: always
   networks:
    - gitea
   volumes:
    - ./gitea:/data
   ports:
    - &quot;3000:3000&quot;
    - &quot;222:22&quot;
   depends_on:
    - db

 db:
   image: mysql:5.7
   restart: always
   environment:
    - MYSQL_ROOT_PASSWORD=gitea
    - MYSQL_USER=gitea
    - MYSQL_PASSWORD=gitea
    - MYSQL_DATABASE=gitea
   networks:
    - gitea
   volumes:
    - ./mysql:/var/lib/mysql</code></pre><p>运行<code>docker-compose.yml</code>文件</p>
<pre><code>docker-compose up -d</code></pre><p>最后打开<code>http://ip:3000</code>即可。</p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>1、进入ip:3000打不开网站</strong><br>打不开需要关闭防火墙，或者打开对应的<code>3000</code>端口。</p>
<pre><code>#CentOS 7
systemctl stop firewalld.service
systemctl disable firewalld.service

#其它系统
iptables -I INPUT -p tcp --dport 3000 -j ACCEPT
service iptables save                              
service iptables restart</code></pre><p><strong>2、保持程序一直运行</strong><br>请配合<code>screen</code>使用，使用方法：使用screen来实现多任务不断线操作命令。</p>
<pre><code>#在配置文件里添加
location / {
     proxy_pass http://localhost:3000
     proxy_redirect off;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款极易搭建的自助Git服务器：Gogs安装教程</title>
    <url>/2027/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Gogs</code>的目标是打造一个最简单、最快速和最轻松的方式搭建自助<code>Git</code>服务。使用<code>Go</code>语言开发使得<code>Gogs</code>能够通过独立的二进制分发，并且支持<code>Go</code>语言支持的所有平台，包括<code>Linux</code>、<code>Mac OS X</code>、<code>Windows</code>以及<code>ARM</code>平台。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Gogs(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Gogs(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>支持活动时间线</li>
<li>支持<code>SSH</code>以及<code>HTTP</code>/<code>HTTPS</code>协议</li>
<li>支持<code>SMTP</code>、<code>LDAP</code>和反向代理的用户认证</li>
<li>支持反向代理子路径</li>
<li>支持用户、组织和仓库管理系统</li>
<li>支持添加和删除仓库协作者</li>
<li>支持仓库和组织级别<code>Web</code>钩子（包括<code>Slack</code>和<code>Discord</code>集成）</li>
<li>支持仓库<code>Git</code>钩子和部署密钥</li>
<li>支持仓库工单（<code>Issue</code>）、合并请求（<code>Pull Request</code>）、<code>Wiki</code>和保护分支</li>
<li>支持迁移和镜像仓库以及它的<code>Wiki</code></li>
<li>支持在线编辑仓库文件和<code>Wiki</code></li>
<li>支持自定义源的<code>Gravatar</code>和<code>Federated Avatar</code></li>
<li>支持<code>Jupyter Notebook</code></li>
<li>支持两步验证登录</li>
<li>支持邮件服务</li>
<li>支持后台管理面板</li>
<li>支持<code>MySQL</code>、<code>PostgreSQL</code>、<code>SQLite3</code>、<code>MSSQL</code>和<code>TiDB</code>（通过<code>MySQL</code>协议）数据库</li>
<li>支持多语言本地化（<code>28</code>种语言）</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/gogits/gogs" target="_blank" rel="noopener">https://github.com/gogits/gogs</a></p>
<p><strong>1、安装MySQL数据库</strong><br>建议使用<code>CentOS</code>系统，查看：CentOS下Mysql 5.6安装教程及创建数据库，其他系统不会手动安装的直接使用宝塔面板。</p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh

#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh

#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，安装<code>MySQL</code>，至少<code>5.5.3</code>版本。</p>
<p><strong>2、安装Git</strong></p>
<pre><code>#Debian和Ubuntu系统
apt-get -y install git

#CentOS系统
yum -y install git</code></pre><p><strong>3、安装Gogs</strong><br>这里说<code>2</code>种方法，二进制安装或者<code>Docker</code>安装，建议使用二进制，<code>Docker</code>了解下就行了。</p>
<pre><code>#二进制安装
wget http://7d9nal.com2.z0.glb.qiniucdn.com/0.11.4/linux_amd64.tar.gz
tar -zxvf linux_amd64.tar.gz
cd gogs
./gogs web

#Docker安装
curl -sSL https://get.docker.com/ | sh
service docker start
docker pull gogs/gogs
mkdir -p /var/gogs
docker run --name=gogs -p 10022:22 -p 10080:3000 -v /var/gogs:/data gogs/gogs
docker start gogs  #关闭后运行gogs</code></pre><p>如果使用二进制安装的打开<code>http://ip:3000</code>，如果是<code>Docker</code>安装的打开<code>http://ip:10080</code>进行安装。且使用<code>Docker</code>安装的数据映射在<code>/var/gogs</code>文件夹。</p>
<p><img src="https://www.southcat.net/usr/picture/Gogs(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>如果网站打不开，则是防火墙问题，运行命令：</p>
<pre><code>#CentOS 7
systemctl stop firewalld.service
systemctl disable firewalld.service

#其它系统
iptables -I INPUT -p tcp --dport 3000 -j ACCEPT  #端口自行修改
service iptables save                              
service iptables restart</code></pre><p>程序运行建议配合<code>screen</code>使用，查看：使用screen来实现多任务不断线操作命令。</p>
<h2 id="Nginx反代"><a href="#Nginx反代" class="headerlink" title="Nginx反代"></a>Nginx反代</h2><pre><code>#在配置文件里添加
location / {
     proxy_pass http://localhost:3000/10080;  #端口自行修改
     proxy_redirect off;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款简单好用的文档管理系统：MinDoc安装教程</title>
    <url>/2001/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>MinDoc</code>是一款针对<code>IT</code>团队开发的简单好用的文档管理系统。</p>
<p><code>MinDoc</code>的前身是<code>SmartWiki</code>文档系统。<code>SmartWiki</code>是基于<code>PHP</code>框架<code>laravel</code>开发的一款文档管理系统。因<code>PHP</code>的部署对普通用户来说太复杂，所以改用<code>Golang</code>开发。可以方便用户部署和实用。</p>
<p>开发缘起是公司<code>IT</code>部门需要一款简单实用的项目接口文档管理和分享的系统。其功能和界面源于<code>kancloud</code>。</p>
<p>可以用来储存日常接口文档，数据库字典，手册说明等文档。内置项目管理，用户管理，权限管理等功能，能够满足大部分中小团队的文档管理需求。</p>
<p><strong>演示站点：</strong><a href="http://doc.iminho.me" target="_blank" rel="noopener">http://doc.iminho.me</a><br><strong>Github地址：</strong><a href="https://github.com/lifei6671/mindoc" target="_blank" rel="noopener">https://github.com/lifei6671/mindoc</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/MinDoc(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/MinDoc(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/MinDoc(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>项目管理，可以对项目进行编辑更改，成员添加等。</li>
<li>文档管理，添加和删除文档等。</li>
<li>评论管理，可以管理文档评论和自己发布的评论。</li>
<li>用户管理，添加和禁用用户，个人资料更改等。</li>
<li>用户权限管理 ， 实现用户角色的变更。</li>
<li>项目加密，可以设置项目公开状态，私有项目需要通过<code>Token</code>访问。</li>
<li>站点配置，可开启匿名访问、验证码等。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本教程只适用于CentOS 7，其它系统教程参考：Github地址。</p>
<p><strong>1、下载MinDoc并解压</strong><br>访问<code>https://github.com/lifei6671/mindoc/releases</code>下载最新版本并解压，以下命令供参考,请根据实际情况调整。</p>
<pre><code>#创建一个目录
mkdir mindoc &amp;&amp; cd mindoc
#下载二进制包
yum install -y wget
wget https://github.com/lifei6671/mindoc/releases/download/v0.9/mindoc_linux_amd64.zip
#解压
yum install -y unzip
unzip mindoc_linux_amd64.zip</code></pre><p><strong>2、配置数据库</strong><br><code>MinDoc</code>支持<code>Mysql</code>或<code>Sqlite3</code>数据库，一般需求不大的可以选<code>Sqlite3</code>，如果是团队使用可以考虑使用<code>Mysql</code>。修改<code>conf/app.conf</code>配置文件。</p>
<pre><code>#这里使用nano编辑，也可以使用vi编辑或者ftp软件自行修改
yum install -y nano
nano /root/mindoc/conf/app.conf</code></pre><p>修改如下：</p>
<pre><code>#将以下Mysql信息注释。
#db_adapter=mysql
#db_host=127.0.0.1
#db_port=3306
#db_database=mindoc_db
#db_username=root
#db_password=123456

#并取消Sqlite3的注释
adb_adapter=sqlite3
db_database=./database/mindoc.db</code></pre><p><strong>3、安装MinDoc</strong><br>输入命令<code>./mindoc_linux_amd64 install</code>初始化数据库，当看到“<code>Install Successfully!</code>”说明安装成功，如果报错，请根据报错提示进行排查。<br><img src="https://www.southcat.net/usr/picture/MinDoc(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>4、运行与访问</strong><br>继续输入命令<code>./mindoc_linux_amd64</code>来启动<code>MinDoc</code>，看到下面的提示说明启动成功，输入<code>http://IP:8181</code>进行访问。<br><img src="https://www.southcat.net/usr/picture/MinDoc(5).png" alt="请输入图片描述" title="请输入图片描述"><br>如果访问不了，注意防火墙/安全组等放行<code>8181</code>端口，<code>Firewalld</code>放行命令如下：</p>
<pre><code>firewall-cmd --zone=public --add-port=8181/tcp --permanent
firewall-cmd --reload</code></pre><p>访问<code>http://IP:8181</code>可以打开了，默认用户名为<code>admin</code>，密码<code>123456</code>，请登录后修改。</p>
<p>一般关掉<code>Xshell</code>等<code>SSH</code>客户端后，程序会自动关闭，请配合<code>screen</code>进行使用，参考：使用screen来实现多任务不断线操作命令。</p>
<h2 id="设置域名访问"><a href="#设置域名访问" class="headerlink" title="设置域名访问"></a>设置域名访问</h2><p>通过<code>http://IP:8181</code>这样的方式访问显然不太友好也不便于记忆，可以使用<code>Nginx</code>反向代理绑定域名访问，以下<code>Nginx</code>配置供参考：</p>
<pre><code>server {
  listen 80;
  server_name doc.southcat.net;
  access_log /data/wwwlogs/doc.southcat.net_nginx.log combined;
  charset utf-8;

location / {
        try_files /_not_exists_ @backend;
    }

location @backend {
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host            $http_host;
        proxy_set_header   X-Forwarded-Proto $scheme;

        #此处配置 MinDoc 程序的地址和端口号
        proxy_pass http://127.0.0.1:8181;
    }

}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款简单，快速，轻便且易于安装的RSS订阅器：Miniflux 2安装教程</title>
    <url>/2055/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Miniflux</code>是一个极简、快速、轻便且易于安装的<code>Feed</code>订阅器，支持<code>Atom</code>、<code>RSS 1.0</code>/<code>2.0</code>、<code>JSON</code>格式，支持<code>OPML</code>导入/导出等，可多人使用，很久前说过<code>Miniflux</code>安装教程，查看：Miniflux：自建私有RSS订阅工具，可多用户使用，不过方法仅适用于<code>V1.x</code>，现在升级到了<code>V2</code>，使用<code>Golang</code>编写，仅支持<code>Postgresql</code>数据库，官方安装教程挺坑的，这里就说下<code>Docker</code>安装方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Miniflux_v2(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本教程不适用<code>OpenVZ</code>架构的<code>VPS</code>服务器。</p>
<p><strong>1、安装环境</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install git make nano curl

#CentOS/RHEL系统
yum -y install git make nano curl</code></pre><p><strong>2、安装Docker和Docker Compose</strong></p>
<pre><code>#安装Docker
curl -sSL https://get.docker.com/ | sh
service docker start
#安装Docker Compose
curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>3、安装Miniflux 2</strong><br>新建<code>docker-compose.yml</code>文件，使用命令：</p>
<pre><code>nano docker-compose.yml</code></pre><p>复制并粘贴以下代码：</p>
<pre><code>version: &apos;3&apos;
services:
    miniflux:
        image: miniflux/miniflux
        ports:
            - &quot;8080:8080&quot;
        depends_on:
            - db
        environment:
            - DATABASE_URL=postgres://miniflux:secret@db/miniflux?sslmode=disable
    db:
        image: postgres
        environment:
            - POSTGRES_USER=miniflux
            - POSTGRES_PASSWORD=secret
        volumes:
            - miniflux-db:/var/lib/postgresql/data
volumes:
    miniflux-db:</code></pre><p>使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>开始运行镜像</p>
<pre><code>docker-compose up -d</code></pre><p><strong>4、设置管理员账号密码</strong></p>
<pre><code>#找到Miniflu容器，并记住container-id。
docker ps
#将container-name换成container-id后运行
docker exec -ti &lt;container-name&gt; /usr/bin/miniflux -migrate
docker exec -ti &lt;container-name&gt; /usr/bin/miniflux -create-admin</code></pre><p>输入账户和密码<br><img src="https://www.southcat.net/usr/picture/Miniflux_v2(2).png" alt="请输入图片描述" title="请输入图片描述"><br>然后就可以通过<code>IP:8080</code>进入界面了，如果想使用域名并添加<code>SSL</code>证书，请继续看。</p>
<h2 id="添加SSL"><a href="#添加SSL" class="headerlink" title="添加SSL"></a>添加SSL</h2><p>首先解析一个域名到服务器上。</p>
<p>安装<code>Caddy</code></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>编辑配置文件</p>
<pre><code>#以下全部内容是一个整体，修改域名、IP、邮箱后一起复制到SSH运行！
echo &quot;https://xx.com {
 tls admin@southcat.net
 proxy / 111.111.111.111:9090 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
 log /var/log/caddy.log
 gzip
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>启动<code>Caddy</code></p>
<pre><code>/etc/init.d/caddy restart</code></pre><p>最后就可以通过域名<code>https</code>访问了。</p>
<p>本订阅器可以配合<code>RSSHub</code>一起使用，查看：RSSHub：一个轻量、易于扩展的RSS生成器。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款精美小巧的开源社区论坛系统：Homeland安装教程</title>
    <url>/2371/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近看到个论坛<code>Homeland</code>，一款基于<code>Rails</code>的开源、免费、不限制商业使用的社区/论坛系统，很轻巧，整体布局页不错，功能也很强大的，支持将文件存储在本地、<code>UpYun</code>、<code>Aliyun OSS</code>，用户可以在自己的文章中上传微信/支付宝收款码，官方也给出了<code>Docker</code>安装方法，搭建起来自然就变的很简单了，这里就发下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><pre><code>提示：这里为了展示效果直接用了官方首页截图。</code></pre><p><img src="https://www.southcat.net/usr/picture/Homeland(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Homeland(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Homeland(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Homeland(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><pre><code>#简单，却又丰富
你可以使用简单的文本来进行发帖或回帖，但在复杂的时候，你可以可以选择优雅的Markdown语法来编写正文。同时Homeland已经默认提供了一套排版整洁的阅读页面风格。

#@提及功能
你可以在发帖或回帖的时候，用类似Twitter或微博的方式@一个你需要提及的人，系统将会发送通知提醒对方。

#丰富的表情系统
在讨论的时候如果附带一些表情，你的意思将能表达的更清楚，Homeland支持Twemoji和系统内置表情。

#SSO单点登录
你可以将Homeland和任何现有系统结合实现单点登录功能，你还可以将Homeland作为SSO的提供址，给其他系统同步账号与登录。

#公共API
Homeland已经内置了一套AP`系统，在你需要的时候你可以基于它开发你的移动应用程序。

#支付宝、微信打赏
支持用户上传个人收款二维码，打赏按钮将会在话题页面显示。

#拖拽上传附件
你可以直接将一个图片拖动到发帖／回帖输入框中来实现快速的上传。此外还可以复制、粘贴来上传哦！

#对SEO友善
Homeland的各方面设计是对SEO友善的，请Google搜索Ruby China查看案例的实际收录效果。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="http://github.com/ruby-china/homeland" target="_blank" rel="noopener">http://github.com/ruby-china/homeland</a><br><strong>官方论坛：</strong><a href="https://www.ruby-china.org/" target="_blank" rel="noopener">https://www.ruby-china.org/</a></p>
<p><strong>提示：</strong>官方推荐服务器内存为<code>4G</code>，不过博主用<code>512M</code>内存倒是可以，前提加点虚拟内存，内存不够的可以用下<code>Swap</code>一键脚本→传送门。</p>
<p><strong>1、安装Docker</strong><br>使用以下命令：</p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Docker Compose</strong><br>使用以下命令：</p>
<pre><code>curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
#验证是否安装成功
docker-compose --version
#返回以下信息即安装成功
docker-compose version 1.23.2, build 1110ad01</code></pre><p><strong>3、安装依赖</strong></p>
<pre><code>#CenOS系统
yum install make git -y

#Debian/Ubuntu系统
apt install git make -y</code></pre><p><strong>4、安装Homeland</strong></p>
<pre><code>#下载源码
git clone https://github.com/ruby-china/homeland-docker.git
cd homeland-docker
#新建配置文件
cp app.local.env.example app.local.env
#编辑配置文件
nano app.local.env</code></pre><p>配置文件参数如下：</p>
<pre><code>#必要参数
app_name：网站名称
domain：网站的域名
admin_emails：管理员Email，多个管理员Email，用英文逗号分隔

#可选参数，这些参数也可以自己搭建好了后，在后台进行配置
modules：可拔插组件配置，详见: https://gethomeland.com/docs/configuration/modules/
https：开启Homeland的SSL功能
asset_host：自定义网站静态资源文件的Host，保持为空将不启用    
google_analytics_key：Google Analytics统计的key    
mailer_provider：邮件发送方式: [smtp, postmark]
mailer_sender：邮件通知发件人
mailer_options：邮件服务详细配置，根据mailer_provider参数有可能不同，详见：https://gethomeland.com/docs/configuration/mailer/
github_token：GitHub三方登录Application Token
github_secret：GitHub三方登录Application Secret
default_locale：应用程序语言，默认&quot;zh-CN&quot;，可选[&apos;zh-CN&apos;, &apos;zh-TW&apos;, &apos;en&apos;]
auto_locale：是否自动根据用户浏览器设置，切换到相应的语言，true</code></pre><p>配置选项官方说的很详细了，还有很多高级设置，比如文件上传配置等可以查看官方文档→传送门。</p>
<p>以下在原有配置参数下设置的基本参数，如下：</p>
<pre><code>app_name=MOERATS
domain=bbs.southcat.net
admin_emails=moerats@live.com</code></pre><p>编译环境：</p>
<pre><code>make install</code></pre><p>如果出现<code>Index does not exist(Elasticsearch::Transport::Transport::Errors::NotFound)</code>提示，为正常情况。</p>
<p>启动程序：</p>
<pre><code>make start</code></pre><p>然后就可以使用域名访问了，但前提是服务器<code>80</code>和<code>443</code>端口不被占用，如果你想用其它端口访问，就需要在编译环境前改下<code>docker-compose.yml</code>文件，大致修改最下面的<code>port</code>端口，比如用<code>8080</code>访问，修改如下：</p>
<pre><code>ports:
  - &quot;8080:80&quot;</code></pre><h2 id="配置SSL证书"><a href="#配置SSL证书" class="headerlink" title="配置SSL证书"></a>配置SSL证书</h2><p>编辑<code>app.local.env</code>文件，新增参数：</p>
<pre><code>https=ture
cert_domain=bbs.southcat.net</code></pre><p>然后开始配置<code>SSL</code>：</p>
<pre><code>make install_ssl</code></pre><p>重启：</p>
<pre><code>make restart</code></pre><p>然后就可以直接打开了。</p>
<p>不过这里博主安装<code>ssl</code>的时候，出现点问题，<code>https</code>站点也会打不开，不知道是使用姿势问题还是最新的<code>Dokcer</code>配置有点小问题，然后使用之前的老版本安装倒是没这个<code>ssl</code>问题，出于强迫症，博主肯定想用下最新的，所以这里就想了个解决办法，就说一下。</p>
<p>这里是接着上面出错后才开始继续，如果以后申请/配置<code>ssl</code>没问题了是最好的，那么该步可以省掉了。</p>
<pre><code>#关闭程序的容器
make stop-all
#清空镜像
docker rm $(docker ps -aq)
docker rmi $(docker images -q)
docker volume rm $(docker volume ls -q)
#进入源码文件夹
cd homeland-docker
#然后编辑docker-compose.yml
nano docker-compose.yml</code></pre><p>大致修改如下：</p>
<pre><code>#在指定的地方volumes下面新增2行代码
app: &amp;app_base
  container_name: &apos;homeland_app&apos;
  .
  volumes:
    - ./etc/homeland.conf:/etc/nginx/homeland.conf
    - ./etc/nginx.conf:/etc/nginx/nginx.conf

#在最下面修改下nginx启动参数
web:
  &lt;&lt;: *app_base
  .
  command: nginx -c /etc/nginx/nginx.conf</code></pre><p>然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>接下来下载<code>2</code>个配置文件到<code>etc</code>文件夹，使用命令:</p>
<pre><code>#进入源码文件夹的ect目录
cd etc
wget https://www.southcat.net/usr/down/homeland-docker-conf.zip
#解压并删除
unzip homeland-docker-conf.zip &amp;&amp; rm -rf homeland-docker-conf.zip
#开始安装容器环境
cd ..
make install
#最后启动
make start</code></pre><p>不出意外的话，这里<code>SSL</code>就配置好了，也可以访问了。</p>
<p>然后进入后，使用你设置好的管理员邮箱进行注册，那该邮箱立即变成管理员。</p>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>#更新应用程序，当homeland/homeland这个Docker Image版本变化的时候，需要执行，合并数据库、编译Assets
make update
#启动所有服务，将会自动启动所有的服务    
make start
#停止所有服务    
make stop
#硬重启服务    
make restart
#查看服务状态    
make status
进入Rails控制台    
make console    
#停止所有服务，包括数据库
make stop-all    
重建搜索索引
make reindex    </code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款跨平台的快速，简单，干净的视频下载器：Annie，支持Bilibili/Youtube等多个网站</title>
    <url>/2393/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近发现了个很强的下载神器<code>Annie</code>，一款用<code>Go</code>构建的快速，简单，干净的视频下载器，支持的平台很多，包括<code>MacOS</code>、<code>Windows</code>、<code>Linux</code>等，安装和使用是非常简单的，很适合新手，支持的网站也多，目前支持以下网站：</p>
<pre><code>抖音、哔哩哔哩、半次元、pixivision、优酷、YouTube、爱奇艺、芒果TV、Tumblr、Vimeo、Facebook、斗鱼视频、秒拍、新浪微博、Instagram、Twitter、腾讯视频、网易云音乐、音悦台</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/iawia002/annie" target="_blank" rel="noopener">https://github.com/iawia002/annie</a></p>
<p>这里就只说下<code>Windows</code>和<code>Linux</code>大致用法，其它的直接看<code>Github</code>地址，说的很详细了。</p>
<p><strong>1、Linux安装</strong><br>首先下载作者提供的编译好的二进制文件→传送门，根据自己的系统架构下载对应的最新版压缩包，目前最新版本为<code>0.9.3</code>。</p>
<p>使用命令：</p>
<pre><code>wget https://github.com/iawia002/annie/releases/download/0.9.3/annie_0.9.3_Linux_$(getconf LONG_BIT)-bit.tar.gz
tar zxvf annie_*.tar.gz
mv annie /usr/local/bin/
rm -rf annie_*.tar.gz</code></pre><p>再安装<code>ffmpeg</code>，使用命令：</p>
<pre><code>#下载ffmpeg二进制
wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz
#解压文件
tar xvf ffmpeg-git-*-static.tar.xz
#移动ffmpeg可执行文件
mv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/local/bin/
#删除文件
rm -rf ffmpeg-git-*</code></pre><p>不过你要是只下载视频的话，可以不用安装<code>ffmpeg</code>。</p>
<p><strong>2、Windows安装</strong><br>这里为了方便操作就不使用<code>CMD</code>了，直接使用<code>PowerShell</code>，需要的条件<code>PowerShell 5+</code>和<code>.NET Framework 4.5+</code>。</p>
<p>先在电脑左下角程序搜索框输入<code>PowerShell</code>，然后双击<code>Windows PowerShell</code>工具，再输入以下命令查看版本：</p>
<pre><code>$PSVersionTable.PSVersion</code></pre><p><code>Major</code>为版本号，一般目前常用电脑<code>Windows 10</code>符合条件，<code>Windiows 7</code>还需要升级，大致步骤如下：</p>
<pre><code>1、安装.Net 4.5.2全量包
下载地址：https://www.southcat.net/usr/down/powershell/NDP452-KB2901907-x86-x64-AllOS-ENU.exe

2、升级PowerShell的补丁包
32位下载地址：https://www.southcat.net/usr/down/powershell/Win7-KB3191566-x86.zip
64位下载地址：https://www.southcat.net/usr/down/powershell/Win7-KB3191566-x64.zip</code></pre><p>接下来安装一个命令行安装工具<code>Scoop</code>，使用命令：</p>
<pre><code>iex (new-object net.webclient).downloadstring(&apos;https://get.scoop.sh&apos;)</code></pre><p>再安装<code>annie</code>：</p>
<pre><code>scoop install annie</code></pre><p>该命令会给你把<code>ffmpeg</code>也一起安装好。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用命令：</p>
<pre><code>annie [OPTIONS] URL [URL...]    
#可选参数如下
Options
  -i    Information only
  -F string
        URLs file path
  -d    Debug mode
  -j    Print extracted data
  -v    Show version

Download:
  -f string
        Select specific stream to download
  -p    Download playlist
  -n int
        The number of download thread (only works for multiple-parts video) (default 10)
  -c string
        Cookie
  -r string
        Use specified Referrer
  -cs int
        HTTP chunk size for downloading (in MB) (default 0)

Network:
  -s string
        SOCKS5 proxy
  -x string
        HTTP proxy
  -retry int
        How many times to retry when the download failed (default 10)

Playlist:
  -start int
        Playlist video to start at (default 1)
  -end int
        Playlist video to end at
  -items string
        Playlist video items to download. Separated by commas like: 1,5,6

Filesystem:
  -o string
        Specify the output path
  -O string
        Specify the output file name

Subtitle:
  -C    Download captions

Youku:
  -ccode string
        Youku ccode (default &quot;0590&quot;)
  -ckey string
        Youku ckey (default &quot;7B19C0AB12633B22E7FE81271162026020570708D6CC189E4924503C49D243A0DE6CD84A766832C2C99898FC5ED31F3709BB3CDD82C96492E721BDD381735026&quot;)
  -password string
        Youku password

YouTube
  -ytb-stream2
        Use data in url_encoded_fmt_stream_map

Aria2:
  -aria2
        Use Aria2 RPC to download
  -aria2addr string
        Aria2 Address (default &quot;localhost:6800&quot;)
  -aria2method string
        Aria2 Method (default &quot;http&quot;)
  -aria2token string
        Aria2 RPC Token</code></pre><p>这里拿<code>bilibili</code>视频为例，基本上用法都一样，不过下载<code>B</code>站的时候，后面可以不用链接，直接使用<code>av</code>或<code>ep</code>号也行。</p>
<p>直接下载一个视频：</p>
<pre><code>#如果你想下载多个链接视频，那么就在后面加上多个链接
annie https://www.bilibili.com/video/av45654043</code></pre><p><img src="https://www.southcat.net/usr/picture/Annie(1).png" alt="请输入图片描述" title="请输入图片描述"><br>列举视频所有清晰度，但不下载：</p>
<pre><code>annie -i https://www.bilibili.com/video/av45654043</code></pre><p><img src="https://www.southcat.net/usr/picture/Annie(2).png" alt="请输入图片描述" title="请输入图片描述"><br>根据列举出来的清晰度，下载指定清晰度的视频：</p>
<pre><code>#比如列表显示的1080P视频
annie -f 80 https://www.bilibili.com/video/av45654043</code></pre><p><img src="https://www.southcat.net/usr/picture/Annie(3).png" alt="请输入图片描述" title="请输入图片描述"><br>一般视频都默认下载到当前目录，如果你想下载到其它目录，需要在下载时候，加一个<code>-o</code>参数，后面带上文件夹路径即可。</p>
<pre><code>#比如下载到桌面C:\Users\Rats\Desktop文件夹，Linux路径写法为/root/Rats
annie -o C:\Users\Rats\Desktop -f 80 https://www.bilibili.com/video/av45654043</code></pre><p>如果是下载<code>bilibili</code>电视剧，可以在后面加一个<code>-p</code>参数，然后可以将所有集数一起下载。</p>
<pre><code>#列出该集数的电视剧所有集数清晰度等信息
annie -i -p https://www.bilibili.com/bangumi/play/ep133269
#下载1到20集1080P视频
annie -f 80 -p -start 1 -end 20 https://www.bilibili.com/bangumi/play/ep133269</code></pre><p>目前播放列表暂时只支持<code>B</code>站和<code>youtube</code>。</p>
<p>你也可以将你需要下载的链接存放到<code>bz.txt</code>文件里，然后使用命令一起下载：</p>
<pre><code>#列出所有链接信息
annie -F /root/bz.txt -i
#下载1080p视频
annie -f 80 -F /root/bz.txt</code></pre><p>如果你下载的视频，比如需要会员啥的，就需要<code>Cookies</code>了，这里补充下优酷会员下载视频方法。</p>
<p>首先登录优酷账号，然后获取<code>Cookies</code>，只需要<code>P_pck_rm</code>参数即可，再新建一个文本<code>cookie.txt</code>，格式如下：</p>
<pre><code>#后面为该值参数
P_pck_rm=moerats</code></pre><p>接下来在命令中加上<code>-c cookie.txt</code>参数解析地址并下载视频：</p>
<pre><code>#获取视频格式列表
annie -i -c cookie.txt https://v.youku.com/v_show/id_*.html
#根据自己需求下载指定清晰度视频
annie -f mp4hd3v2-guoyu -c cookie.txt https://v.youku.com/v_show/id_*.html</code></pre><p>如果你不会看<code>Cookie</code>，可以直接使用浏览器插件<code>editthiscookie</code>，具体使用方法如下：</p>
<pre><code>首先百度下载安装该浏览器插件，再打开EditThisCookie插件选项，导出格式改成Semicolon separated name=value pairs，接下来登录B站或其它账号，再点击浏览器右上角插件选项并将Cookie导出剪贴板。复制粘贴到cookie.txt里，只要最后一行有用的代码参数，//几行开头的不要。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款非常好用的Web端SSH工具：GateOne安装教程</title>
    <url>/2048/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>GateOne</code>是一个能在浏览器上运行的<code>Terminal SSH</code>客户端，无论你在哪里，只要有网，你就可以用浏览器操控你的<code>VPS</code>服务器，还支持右键复制/粘贴等客户端常用功能，包括多窗口等，使用起来非常方便，而且其它人也可以使用，之前也说过一种类似的工具<code>WebSSH2</code>，查看：WebSSH2安装教程，都挺好用的，这里就说下使用<code>Docker</code>快速安装<code>GateOne</code>，并添加<code>SSL</code>证书。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/GateOne_SSH.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>curl -sSL https://get.docker.com/ | sh
service docker start</code></pre><p><strong>2、拉取镜像</strong></p>
<pre><code>docker pull liftoff/gateone</code></pre><p><strong>3、启动镜像</strong></p>
<pre><code>#命令
docker run [-d/-t] -p [443]:8000 -h [hostname] --name gateone liftoff/gateone gateone
#示例，如果服务器上443被占用，请使用其它未被占用的端口
docker run -t -p 443:8000 -h Rats --name gateone liftoff/gateone gateone</code></pre><p>参数说明：</p>
<pre><code>-d/-t：决定镜像是使用Deamon（后台）模式启动，或者显示启动过程 
-p 443:8000：绑定端口，注意：GateOne强制使用SSL，8000端口为Docker容器内的固定映射端口，请只改动冒号前面的端口，不要动后面的端口号！ 
-h hostname：设置Docker容器的主机名（这个将会显示在你的浏览器标题中） 
--name gateone：设置Docker容器的名称（不是主机名），用来docker ps时识别用 
liftoff/gateone：镜像名称 
gateone：启动命令行，勿动（默认命令行会发生Python io_loop报错，故使用此命令行来避免错误）</code></pre><p>安装完成后，进入<code>https://xx.com:端口</code>，如果端口是<code>443</code>，可直接进入<code>https://xx.com</code>，<code>xx.com</code>可以为<code>IP</code>也可以为域名，地址前面的<code>https</code>别漏掉了，访问时浏览器可能会报不安全，无视即可，如果你想添加<code>SSL</code>证书，请将域名解析到服务器，然后继续往下看。</p>
<h2 id="添加SSL"><a href="#添加SSL" class="headerlink" title="添加SSL"></a>添加SSL</h2><p>想添加<code>SSL</code>证书的，继续看，不想的就跳过。</p>
<p><strong>1、停掉容器</strong></p>
<pre><code>docker kill gateone</code></pre><p><strong>2、导入SSL证书</strong><br>在<code>root</code>目录创建<code>Dockerfile</code>。</p>
<pre><code>#将以下整体复制到命令行
echo &quot;FROM liftoff/gateone
ADD gateone-ssl/ssl.crt /etc/gateone/ssl/certificate.pem
ADD gateone-ssl/ssl.key /etc/gateone/ssl/keyfile.pem
CMD [ &quot;gateone&quot; ]&quot; &gt; /root/Dockerfile</code></pre><p>同目录创建<code>gateone-ssl</code>文件夹，并上传<code>SSL</code>证书。</p>
<pre><code>mkdir gateone-ssl</code></pre><p>然后通过<code>FTP</code>客户端上传<code>SSL</code>证书到<code>gateone-ssl</code>文件夹。没有<code>SSL</code>证书的，请在本博客搜索关键词，很多申请方法。</p>
<p><strong>3、重建镜像</strong><br>上传<code>SSL</code>成功后，重建镜像，执行命令：</p>
<pre><code>docker build -t=&quot;gateone-ssl&quot; .  #英文.别漏掉了</code></pre><p>当出现<code>Successfully Built</code>即重建成功。</p>
<p><strong>4、启动镜像</strong><br>执行命令：</p>
<pre><code>#命令
docker run [-d/-t] -p [443]:8000 -h [hostname] --name gateone gateone-ssl gateone 
#示例，具体参数参考上面
docker run -t -p 443:8000 -h Rats --name gateone gateone-ssl gateone</code></pre><p>再去访问<code>https://xx.com:端口/</code>查看<code>SSL</code>证书是否生效。</p>
<p>如果最后一步出现 <code>&quot;/gateone&quot; is already in use by container</code>错误，请先使用命令：</p>
<pre><code>docker rm gateone</code></pre><p>搭建完成后，打开地址，输入<code>IP</code>、端口、用户名、密码就可以登录操作<code>VPS</code>服务器了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款面向个人，团队，小型组织的免费开源网盘程序：kiftd搭建教程</title>
    <url>/2307/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前博主介绍过很多网盘程序，比如：Nextcloud、FileRun、Cloudreve、Seafile、Filebrowser等，都挺强大的，不过博主最近一直想要一款简洁又强大的网盘程序，然后就发现了<code>Kiftd</code>网盘，一款全方位面向个人，团队，小型组织的文件传输系统的免费开源网盘，无上传限制，视频音乐在线播放，图片浏览等等，功能非常的强大。无论是<code>Windows</code>、<code>Linux</code>还是<code>Unix</code>(包括<code>Mac OS X</code>)，均可运行使用。这里就发下搭建教程。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/kiftd(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/kiftd(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h2><ul>
<li>无上传限制：<code>1MB</code>的文档和超过<code>4GB</code>的高清电影资源？均能够随意上传和下载。</li>
<li>主流商业网盘特有的高级功能甚至需要收费的功能——文件夹访问权限控制、<code>MP4</code>视频在线影院、<code>MP3</code>音乐在线欣赏、图片文件在线预览、<code>PDF</code>文档在线阅读，<code>kiftd</code>均一一具备，每一份<code>kiftd</code>均是“完全版”。</li>
<li>操作系统全兼容：无论是<code>Windows</code>、<code>Linux</code>还是<code>Unix</code>(包括<code>Mac OS X</code>)，均可运行使用。</li>
<li>同时满足日常或专业需求：<code>kiftd</code>同时具备了图形界面模式和纯命令模式的双操作模式，无论您是喜欢点击鼠标的电脑小白还是需要使用命令在远程<code>Linux</code>上部署的运维人员，均能完美操作。</li>
<li>无任何使用成本：<code>kiftd</code>完全开源免费，因此唯一的使用成本就是需要安装它。至于之后您想将其用于什么领域，哪怕是商业领域——均无任何限制。</li>
<li>无内置代码的隐患：<code>kiftd</code>完全开源，您可以随意下载其源代码，并用它自己编译一份<code>kiftd</code>；同时，它删除即走，绝不和你撒娇卖萌。保护用户硬件环境，从开源做起。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/KOHGYLW/kiftd" target="_blank" rel="noopener">https://github.com/KOHGYLW/kiftd</a></p>
<p>由于<code>Linux</code>系统运行过程对小白很不友好，所以这里只说<code>Linux</code>系统，<code>Windows</code>和<code>Mac</code>可以看说明，很简单。</p>
<p><strong>1、安装java</strong><br>首先使用命令<code>java -version</code>查看服务器上有没有<code>java</code>环境，如果没有就需要安装了。</p>
<p>先去下载<code>jdk</code>文件→下载地址，由于这个不能直接复制超链接下载，必须先<code>Accept</code>条款后，才能下载，有点麻烦，所以这里博主就直接将最新版的<code>jdk</code>文件包放服务器供使用了。</p>
<pre><code>#64位系统下载jdk文件
wget -O jdk.tar.gz https://www.southcat.net/usr/down/JDK/jdk-8u192-linux-x64.tar.gz
#32位系统下载jdk文件
wget -O jdk.tar.gz https://www.southcat.net/usr/down/JDK/jdk-8u192-linux-i586.tar.gz

#解压并删除压缩文件
tar -zxvf jdk.tar.gz &amp;&amp; rm -rf jdk.tar.gz</code></pre><p>编辑<code>/etc/profile</code>文件：</p>
<pre><code>nano /etc/profile</code></pre><p>在后面添加以下代码：</p>
<pre><code>JAVA_HOME=/root/jdk1.8.0_192
export JRE_HOME=/root/jdk1.8.0_192/jre 
export CLASSPATH=$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH 
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</code></pre><p>然后使用<code>Ctrl+x</code>，<code>y</code>保存退出。</p>
<p>使配置生效：</p>
<pre><code>source /etc/profile</code></pre><p>查看<code>java</code>版本：</p>
<pre><code>#有以下输出就安装成功
root@Rats:~# java -version
java version &quot;1.8.0_192&quot;
Java(TM) SE Runtime Environment (build 1.8.0_192-b12)
Java HotSpot(TM) 64-Bit Server VM (build 25.192-b12, mixed mode)</code></pre><p><strong>2、安装git</strong></p>
<pre><code>#CentOS 7系统
yum install git -y

#Debian、Ubuntu系统
apt install git -y</code></pre><p><strong>3、安装kiftd</strong></p>
<pre><code>git clone https://github.com/KOHGYLW/kiftd.git
cd kiftd
#运行程序，目前最新为kiftd-1.0.18
java -jar kiftd-*-RELEASE.jar -start

#后台运行
nohup java -jar kiftd-*-RELEASE.jar -start &gt;&gt; /root/output.log 2&gt;&amp;1 &amp;</code></pre><p>然后访问<code>ip:8080</code>，默认管理员账户和密码为<code>admin</code>、<code>000000</code>。</p>
<p>如果界面打不开，可能还需要开启<code>8080</code>端口，开启如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8080/tcp --permanent
firewall-cmd --reload</code></pre><p>最后如果你要修改网盘界面的一些信息的话，直接编辑源码文件夹里的<code>webContext/home.html</code>即可；修改端口密码的话，可以看看<code>conf</code>文件夹。</p>
<h2 id="域名访问"><a href="#域名访问" class="headerlink" title="域名访问"></a>域名访问</h2><p>可能有些人不习惯使用<code>IP</code>访问网盘，这里可以使用<code>Nginx</code>、<code>Apache</code>、<code>Caddy</code>反代端口，这里只说宝塔<code>Nginx</code>和<code>Caddy</code>。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:8080</code>，再启用反向代理即可。至于启用<code>SSL</code>就不说了，直接在站点配置就可以启用。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;xx.com {
 gzip
 proxy / 127.0.0.1:8080 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;xx.com {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:8080 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<pre><code>#在配置文件里添加
location / {
     proxy_pass http://127.0.0.1:8080;
     proxy_redirect off;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一款PHP媒体CMS分享系统：King Media v4.1破解版</title>
    <url>/2326/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>King MEDIA</code>是一款<code>PHP</code>媒体分享系统，可以本地上传图片、远程上传图片、分享<code>Youtube</code>、<code>Vimeo</code>、<code>Vine</code>、<code>Instagram</code>、<code>Metacafe</code>、<code>DailyMotion</code>等网站的视频，<code>Facebook</code>评论系统。程序具有响应式布局、完善的用户系统、积分系统、标签以及分类等系统。程序安装简单，后台控制面板比较完善，社交分享<code>SEO</code>友好等众多功能。通过修改可以实现添加优酷等视频、中文本地化。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/King_Media(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/King_Media(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>PHP</code>、<code>Mysql</code>、<code>Nginx</code>/<code>Apache</code>、<code>Fileinfo</code>扩展、<code>Fopen</code>函数。且破解源码由顶点网提供。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP</code>、<code>Nginx</code>或<code>Apache</code>、<code>Mysql</code>，这里<code>PHP</code>版本好像没要求，博主测试都可以用。</p>
<p>再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>扩展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、脚本添加，脚本地址：https://www.southcat.net/archives/722/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p><strong>2、上传源码</strong><br>点击面板左侧-添加站点，数据库选择<code>Mysql</code>，设置好数据库名称、密码。</p>
<p>然后上传源码到根目录并解压出来(源码下载：King_Media.zip)，也可以直接在<code>SSH</code>客户端使用命令：</p>
<pre><code>#将下面根目录地址改成自己的再运行
cd /www/wwwroot/www.southcat.net
wget https://www.southcat.net/usr/down/King_Media.zip
unzip King_Media.zip &amp;&amp; rm -rf King_Media.zip</code></pre><p><strong>3、开始安装</strong><br>先编辑根目录下的<code>king-config.php</code>文件，填入之前创建的数据库用户名、密码等。</p>
<pre><code>define(&apos;QA_MYSQL_HOSTNAME&apos;, &apos;127.0.0.1&apos;);
define(&apos;QA_MYSQL_USERNAME&apos;, &apos;用户名&apos;);
define(&apos;QA_MYSQL_PASSWORD&apos;, &apos;密码&apos;);
define(&apos;QA_MYSQL_DATABASE&apos;, &apos;数据库名&apos;);</code></pre><p>再打开网站，进行安装即可，授权码为<code>www.topide.com</code>。<br><img src="https://www.southcat.net/usr/picture/King_Media(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>两枚jetbrain账号  已经激活一年学生套餐</title>
    <url>/701/</url>
    <content><![CDATA[<p>今天有幸抢到了loc大佬的jetbrains教育套餐 于是把之前白嫖的和买的一个分享到了公众号，都是一年期的哦。 快扫码领取吧</p>
<p><img src="https://southcat.net/wp-content/uploads/2020/03/qrcode_for_gh_de0cdf63520b_258.jpg" alt=""></p>
<p>微信公众号回复：jetbrains</p>
]]></content>
      <categories>
        <category>值得一试</category>
      </categories>
      <tags>
        <tag>jetbrains免费</tag>
        <tag>jetbrains教育套餐</tag>
        <tag>jetbrains激活</tag>
        <tag>jetbrains激活码</tag>
        <tag>jetbrains账号</tag>
      </tags>
  </entry>
  <entry>
    <title>一款高速下载百度云文件的神器：SpeedKoalaBD v7.1破解版</title>
    <url>/1957/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前已经分享了很多下载百度云文件的方法了，这里再分享一个软件<code>SpeedKoalaBD</code>，好像是使用<code>Aria2</code>下载，亲测可以满速，目前已更新到<code>V7.1</code>。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>SpeedKoala BD</code>云加速(即早期的极速百度云软件)是一款专门针对百度网盘的高速下载加速器。加速功能基于<code>P2SP</code>技术和<code>CDN</code>(内容分发网络)技术。<code>P2SP</code>技术有效地把原本孤立的服务器和其镜像资源以及<code>P2P</code>资源整合到了一起，在下载的稳定性和下载的速度上，都比传统的<code>P2P</code>或<code>P2S</code>有了非常大的提高，迅雷的加速原理就是采用了<code>P2SP</code>技术，而我们的加速服务也使用了这项技术，同时通过<code>CDN</code>内容分发网络进一步为用户带来酣畅淋漓的下载体验。这款超级快的百度网盘下载工具能真正不限速满速下载，大家公认的目前最好用、最有效的第三方百度网盘下载加速器客户端。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/SpeedKoala_(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/SpeedKoala_(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>下载地址：</strong>Speedkoala BD v7.1破解版</p>
<p>下载后打开软件，登录百度云账号，找到要下载的文件，右键超级加速下载即可。</p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>Proxyee-down：HTTP下载神器，可高速下载百度云文件</li>
<li>利用IDM工具高速下载百度云大文件教程</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>为Linux VPS配置SSH-KEY登录并禁用root密码</title>
    <url>/1626/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人可能喜欢剁手，买了很多<code>VPS</code>，密码也记不住，也容易被大量的扫描器扫描爆破（检测扫描方法参考：通过Auth.log来查看SSH是否被扫）。这时候我们可以利用<code>SSH-KEY</code>方式登录服务器可以很好的解决被爆破和忘记密码的问题！</p>
<p><strong>1、登录Linux主机生成并配置SSH-KEY</strong></p>
<pre><code>ssh-keygen -t rsa


Enter file in which to save the key (/root/.ssh/id_rsa): 建议直接回车使用默认路径
Enter passphrase (empty for no passphrase): 输入密码短语（留空则直接回车）
Enter same passphrase again: 重复密码短语</code></pre><p>此时在<code>/root/.ssh/</code>目录下生成了2个文件，<code>id_rsa</code>为私钥，<code>id_rsa.pub</code>为公钥。私钥自己下载到本地电脑妥善保存（丢了服务器可就没法再登陆了），为安全，建议删除服务器端的私钥。公钥则可以任意公开。</p>
<p><strong>2、导入KEY文件</strong></p>
<pre><code>cat /root/.ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys</code></pre><p><strong>3、修改SSH的配置文件/etc/ssh/sshd_config</strong><br>可以借助<code>WinSCP</code>工具登录<code>VPS</code>进行编辑修改！</p>
<pre><code>RSAAuthentication yes
PubkeyAuthentication yes
AuthorizedKeysFile .ssh/authorized_keys
PasswordAuthentication no</code></pre><p>进行上述修改后我们就完成了关闭<code>root</code>并启用<code>SSH-KEY</code>登录方式。</p>
<p>重启<code>SSH</code>服务</p>
<pre><code>#CentOS系统
service sshd restart
#Debian/Ubuntu系统
service ssh restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>佛系更新</title>
    <url>/480/</url>
    <content><![CDATA[<h3 id="佛系更新一切随缘-看到好玩的有用的我就更新-没有就算了"><a href="#佛系更新一切随缘-看到好玩的有用的我就更新-没有就算了" class="headerlink" title="佛系更新一切随缘 看到好玩的有用的我就更新 没有就算了"></a>佛系更新一切随缘 看到好玩的有用的我就更新 没有就算了</h3>]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>京东抢购？？？？</title>
    <url>/494/</url>
    <content><![CDATA[<p>Chrome控制台执行代码即可 需要抢购的商品需要一直保持在前台</p>
<pre><code>var nIntervId;
var count = 1;
var goDate;
function go() {
    console.log(&quot;小桃子 ^_^ 正在帮你抢购＊＊＊＊＊＊＊＊＊＊＊＊＊ 刷新&quot; + count + &quot;次&quot;);
    //console.log(&quot;host:&quot; + window.location.hostname);
    count++;
    // iPhone X go set time
    if (Date.now() &gt;= new Date(&quot;2017-11-03 15:59:59&quot;)) {
        console.log(&quot;开始抢购&quot; + Date.now());
        // iphoneX 抢购
        if ($(parent.frames[0].document).find(&quot;#choose-btn-ko&quot;).length == 1) {
            console.log(&quot;(++++++++++++iphoneX 抢购&quot;);
            var sku = window.location.pathname.replace(/[^0-9]/ig, &quot;&quot;);
            var ref = &quot;//cart.jd.com/gate.action?pid=&quot; + sku + &quot;&amp;pcount=1&amp;ptype=1&quot;;
            console.log(&quot;https:&quot; + ref);
            //5089237
            $(parent.frames[0].document).find(&quot;#choose-btn-ko&quot;).attr(&quot;href&quot;, ref);//                 
            parent.frames[0].document.getElementById(&quot;choose-btn-ko&quot;).click();
            return;
        }
        //预约抢购
        if ($(parent.frames[0].document).find(&quot;#btn-reservation&quot;).length == 1) {
            console.log(&quot;(++++++++++++正在预约抢购&quot;);
            parent.frames[0].document.getElementById(&quot;btn-reservation&quot;).click();
            return;
        }
        //秒杀   
        if ($(parent.frames[0].document).find(&quot;#InitCartUrl&quot;).length == 1) {
            console.log(&quot;(++++++++++++正在秒杀&quot;);
            parent.frames[0].document.getElementById(&quot;InitCartUrl&quot;).click();
            return;
        }
        //去购物车结算
        if ($(parent.frames[0].document).find(&quot;#GotoShoppingCart&quot;).length == 1) {
            console.log(&quot;(++++++++++++正在去购物车结算&quot;);
            parent.frames[0].document.getElementById(&quot;GotoShoppingCart&quot;).click();
        }
        //去结算        
        if ($(parent.frames[0].document).find(&quot;.submit-btn&quot;).length == 1) {
            console.log(&quot;(++++++++++++正在去结算&quot;);
            //只提交我抢购的商品
            //var sku = window.location.pathname.replace(/[^0-9]/ig, &quot;&quot;);                 
            //$(&quot;#toggle-checkboxes_up&quot;).trigger(&quot;click&quot;);
            //全不选择
            //parent.frames[0].document.getElementById(&quot;toggle-checkboxes_up&quot;).click();
            //$(parent.frames[0].document).find(&apos;input:checkbox&apos;).attr(&quot;checked&quot;,false);
            //$(parent.frames[0].document).find(&quot;input:checkbox[value^=&apos;&quot;+sku+&quot;&apos;]&quot;).trigger(&quot;click&quot;);
            //$(parent.frames[0].document).find(&quot;input:checkbox[value^=&apos;&quot;+sku+&quot;&apos;]&quot;).attr(&quot;checked&quot;,true);
            parent.frames[0].document.getElementsByClassName(&quot;submit-btn&quot;)[0].click();
        }
        //提交订单order-submit
        if ($(parent.frames[0].document).find(&quot;#order-submit&quot;).length == 1) {
            console.log(&quot;(++++++++++++正在提交订单&quot;);
            //$(parent.frames[0].document).find(&quot;.payment-item item-selected online-payment&quot;)
            //在线支付
            parent.frames[0].document.getElementById(&quot;order-submit&quot;).click();
        }
    }
}
function rewrite(current) {
    fr4me = &apos;&lt;frameset cols=\&apos;*\&apos;&gt;\n&lt;frame src=\&apos;&apos; + current + &apos;\&apos;/&gt;&apos;;
    fr4me += &apos;&lt;/frameset&gt;&apos;;
    with (document) { write(fr4me); void (close()) };
}
//注入sql
rewrite(window.location.href);
//这里需要注意的是，prompt有两个参数，前面是提示的话，后面是当对话框出来后，在对话框里的默认值
var d = prompt(&quot;请输入抢购开始时间&quot;, &quot;2017-11-03 15:59:59&quot;);
//如果返回的有内容
if (d) {
    try {
        goDate = new Date(d);
        console.log(&quot;设定时间成功:&quot; + goDate);

        alert(&quot;监控期间,请保持标签页在最前面&quot;);
        //go(); 0.25秒执行一次
        nIntervId = setInterval(&quot;go()&quot;, 250);
    }
    catch (e) {
        alert(&quot;时间格式不正确,请使用yyyy-MM-dd hh:mm:ss格式,精确到秒, 请重试&quot;);
    }
}
else {
    alert(&quot;请抢购时间, 请重重试&quot;);
}
/*
    clearInterval(nIntervId);//停止监控
    */</code></pre>]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>云转码切片express-ffmpeg+CMS一体化系统安装教程</title>
    <url>/2219/</url>
    <content><![CDATA[<p><strong>说明：</strong>云转码系统估计很多人知道，博主体验过七彩云、<code>FFMpeg WebUI</code>等云转码，感觉都不是很适合自己，而且好像都不更新了，特别是<code>FFMpeg WebUI</code>，貌似很久前就一直停留在<code>0.9.6</code>版本，恰好最近看到了个基于<code>nodejs</code>制作的开源免费的云转码切片系统，功能上基本可以满足个人日常需求了，而且博主感觉<code>nodejs</code>的转码切片速度比现有的很多<code>php</code>转码程序都快些，不知道是姿势问题还是啥，这里就分享下，给有需求的人用。</p>
<pre><code>提示：本文主要介绍的是开源免费版的功能及其源码的安装方法，仅供学习交流使用。且不能用于非法用途，否则后果自负！</code></pre><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><p>该云转码不再是简单的云转码系统，而是<code>CMS</code>系统+云转码系统一体化，自带整个完备的并且对移动端友好的，而且非常利于<code>SEO</code>优化的自适应<code>CMS</code>系统，根据后台的分类系统和门户<code>CMS</code>管理系统，直接在首页达成完备的在线视频播放系统，适用于在线教育、企业内部培训视频、在线视频自媒体门户等多种运用方向。</p>
<p>如果你不想使用<code>CMS</code>，也可以单独当它是一个可以在线视频转码的工具，对视频进行在线格式转换，很适合用来做一个视频转码的网站。</p>
<ul>
<li>实现大文件分块上传，批量上传。</li>
<li>实现服务器端自动动态码率转码并且切片，完成后会自动删除原视频文件。</li>
<li>实现批量添加水印和字幕，和同时处理。</li>
<li>实现截图，默认自动生成四张截图。</li>
<li>一键获取分享链接，设置防盗链，<code>token</code>防盗链或者仅允许指定域名<code>iframe</code>调用。</li>
<li><code>ts</code>切片文件域名分发，负载均衡，支持无限多服务器同步分发。</li>
</ul>
<p><strong>官方网站：</strong><a href="https://www.moemv.com/" target="_blank" rel="noopener">https://www.moemv.com/</a><br><strong>开源版官网：</strong><a href="https://ffmpeg.moejj.com/" target="_blank" rel="noopener">https://ffmpeg.moejj.com/</a><br><strong>开源版演示：</strong><a href="https://www.moejj.com" target="_blank" rel="noopener">https://www.moejj.com</a></p>
<h2 id="特别提示"><a href="#特别提示" class="headerlink" title="特别提示"></a>特别提示</h2><p>目前高级版和纯净版云转码程序都已开发，包括即将开发完成的在线视频<code>APP</code>安卓/<code>IOS APP</code>软件，真正的做到<code>CMS</code>+转码切片+<code>APP</code>全方位一体化，上手更简单，并且转码和切片上比开源版强很多，切片质量也是非常的好，不管是在切片加载情况，播放切片时的流畅度及系统负载等方面，都有不错的表现，用过的人都知道，且高级版结合了最新的<code>CPU+GPU</code>混合转码，在转码速度大幅度提高下，质量和压缩率都十分完美，同时纯净版和高级版都会长期频繁更新。</p>
<pre><code>注意：对高级版或者纯净版有兴趣的看文章后面的介绍，有购买需求的可以加微信rats54。</code></pre><p>这里感谢下购买过并支持该程序的人，有您的支持，以后该程序会越来越强大，更新会更频繁，功能越来越多，同时保证永远不会加后门，可放心使用。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/express-ffmpeg(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/express-ffmpeg(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/express-ffmpeg(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/express-ffmpeg(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/express-ffmpeg(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/express-ffmpeg(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.1.17】
更新部分安装步骤，使出错率更小。</code></pre><h2 id="为什么要使用云转码"><a href="#为什么要使用云转码" class="headerlink" title="为什么要使用云转码"></a>为什么要使用云转码</h2><p>传统视频如果没有正确的压缩，一般来说尺寸非常大，动则<code>3Gb</code>、<code>4Gb</code>的大小，再者因为视频需要在网站中进行播放，传统中如果放置常规的<code>flv</code>或者<code>mp4</code>格式，那么浏览器会一直进行缓存，并且在缓存在一定播放长度之后才会进行播放，这样会消耗更多的带宽和让用户等待更长的时间，所以转码之后再进行切片是非常必须的，一来无损的压缩视频文件使其占用磁盘尺寸更小，并且基于<code>hls</code>格式，也是<code>M3u8</code>格式中储存了所有<code>ts</code>切片列表，这种模式加载，只需要加载第一个<code>ts</code>切片视频就可以开始播放，这样就使用户等待的时间更少，减少服务器带宽使用，并且画质的损失很小。这也就是为什么现在大部分视频网站都是使用<code>hls</code>格式来播放的。</p>
<h2 id="具体功能"><a href="#具体功能" class="headerlink" title="具体功能"></a>具体功能</h2><ul>
<li>后台云转码加切片，运用最精简的代码，做成最快的转码+切片功能。</li>
<li>秒切功能，切片速度领先所有市面收费云转码系统。</li>
<li>视频分类、视频筛选、视频搜索，后台一应俱全。</li>
<li>防盗链、<code>token</code>防盗链，多重防盗链，避免流量损失，可以设置指定域名只能<code>iframe</code>调用。</li>
<li>字幕烧录，水印烧录，超级简单的操作，即可将字幕烧录进视频或者添加水印到视频中。</li>
<li>支持<code>vtt</code>字幕，后台可以根据不同的视频上传不同的<code>vtt</code>字幕，前台播放自动加载字幕。</li>
<li>视频截图，后台配置截图数，云转码切片的时候自动截图。</li>
<li><code>ts</code>分发，多服务器同步内容，<code>ts</code>文件自动循环加域名前缀，负载均衡。</li>
<li><code>cms</code>系统配置，站点名称设置、<code>seo</code>标题设置、<code>seokeywords</code>设置，<code>seodescription</code>设置，前台显示截图设置，前台自动生成<code>cms</code>系统，自适应布局，针对移动端优化，<code>seo</code>效果极佳。</li>
</ul>
<h2 id="新增功能"><a href="#新增功能" class="headerlink" title="新增功能"></a>新增功能</h2><pre><code>#增加会员系统
增加会员系统，可以不开启CMS，独立开启会员系统，双向验证，安全可靠，后台可以配合卡劵生成，前台用户使用卡劵进行升级。

#真正意义上的权限系统
路由层面的权限系统，非网上的播放器假权限，根据权限不同，相同的M3U8播放文件返回不同的内容，比如普通会员只能播放3分钟，就只会返回3分钟的切片内容，升级之后才会返回完整的切片内容。

#卡劵系统
后台设定卡劵生成，可以设置开通会员时间，用户前台使用即可升级到对应的会员，到期之后权限失效，需要重新开通，如果连续使用则是累加会员时间。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>如果你觉得安装很困难，想很快安装好，可以使用博主写的<code>Docker</code>镜像，安装教程：点击访问。</p>
<p>安装教程官网其实有，不过仅有<code>Ubuntu</code>的手动教程，其它系统都没有，博主发现该程序所需的大部分环境宝塔面板均可以直接安装，鉴于为小白着想，这里就用宝塔面板安装该程序，支持的系统也多。</p>
<p><strong>所需环境：</strong><code>nodejs</code>、<code>expressjs</code>、<code>mongoDb</code>、<code>ffmpeg</code>、<code>Redis</code>等</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>MongoDb</code>、<code>Redis</code>、<code>Nginx</code>(使用域名访问才需要安装，反之不用)。注意<code>Debian</code>安装<code>MongoDb</code>之前还需要使用命令<code>apt install sudo</code>，不然可能存在<code>MongoDb</code>启动不了的情况。</p>
<p><strong>2、安装ffmpeg</strong></p>
<pre><code>wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz
tar xvf ffmpeg-git-*-static.tar.xz
mv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/bin/
rm -rf ffmpeg-git-*</code></pre><p><strong>3、安装Nodejs</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_8.x | bash -
apt install -y nodejs git

#Centos系统
curl -sL https://rpm.nodesource.com/setup_8.x | bash -
yum install nodejs git -y</code></pre><p>安装<code>PM2</code>和<code>express</code>：</p>
<pre><code>npm install -g pm2 express</code></pre><p><strong>4、创建数据库</strong><br>创建之前建议去面板软件管理那里找到<code>MongoDb</code>数据库重启一下。</p>
<pre><code>#这里数据库名，用户和密码都是ffmpeg
mongo
use ffmpeg
db.createUser({user:&quot;ffmpeg&quot;,pwd:&quot;ffmpeg&quot;,roles:[{role:&quot;readWrite&quot;,db:&quot;ffmpeg&quot;}]})
db.auth(&quot;ffmpeg&quot;,&quot;ffmpeg&quot;)</code></pre><p>如果显示<code>1</code>则增加用户正确，再使用<code>Ctrl+D</code>退出。这里如果有<code>No such file or directory</code>报错，请检查下数据库运行状态。</p>
<p><strong>5、配置云转码</strong></p>
<pre><code>git clone https://gitee.com/quazero/express-ffmpeg.git
cd express-ffmpeg
#创建config文件夹
mkdir config
cd config</code></pre><p>创建并编辑<code>auth.js</code>配置文件：</p>
<pre><code>nano auth.js</code></pre><p>将以下代码复制进去：</p>
<pre><code>#该配置比很早的版本多了三个设置项，很多人出错就在这里，secret是session需要的秘钥，login是后台登陆地址，loginmsg 是后台未登录显示的内容，默认是404。
module.exports = {
    user: &quot;admin&quot;,
    password: &quot;admin&quot;,
    db: &quot;ffmpeg&quot;,
    dbuser: &quot;ffmpeg&quot;,
    dbpassword: &quot;ffmpeg&quot;,
    secret: &quot;yoursecret&quot;,
    login: &quot;/adminlogin&quot;,
    loginmsg: &quot;404 Not Found&quot;
};</code></pre><p>再使用<code>Ctrl+X</code>，<code>Y</code>确认退出编辑模式，参数从上往下依次是登陆云转码平台的账号，密码，数据库，数据库用户名，数据库密码。本教程安装的<code>mongodb</code>数据库为<code>ffmpeg</code>，用户名和密码都是<code>ffmpeg</code>，可以自行进行修改。</p>
<p><strong>6、安装并运行云转码</strong></p>
<pre><code>cd /root/express-ffmpeg
npm install
#如果服务器重启，则必须在express-ffmpeg源码文件里重新运行命令启动
pm2 start bin/www -i 0</code></pre><p><strong>7、反向代理</strong><br>点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:3000</code>，再启用反向代理即可。</p>
<p><strong>8、站点配置</strong><br>最后打开<code>xx.com/adminlogin</code>，输入设定的账号密码，本教程设置的是<code>admin</code>，<code>admin</code>，进入之后点击设置，转码设置需要绑定域名，截图数需大于<code>0</code>，然后域名分发可以不设置，但需要提交下、<code>CMS</code>设置也需要绑定域名，播放器设置需要关闭强制<code>QQ</code>浏览器播放，当然其它设置需要自行修改，不然视频很可能因为某个设置的问题放不了。</p>
<p>最后这里要说下的就是，如果你使用后，心理有个疑问，为什么转码速度这么慢，或者很慢？那么就意味着你需要换一个强一点的<code>CPU</code>独立服务器，切勿用<code>VPS</code>，<code>VPS</code>的<code>CPU</code>限制很多，如果你拿来转码，很有可能你的<code>VPS</code>会被暂停，<code>CPU</code>选择可参考跑分榜→传送门。</p>
<p>当然你要是只用秒切功能的话，对<code>CPU</code>要求就不是那么大了，不是很耗资源。</p>
<h2 id="云转码高级版"><a href="#云转码高级版" class="headerlink" title="云转码高级版"></a>云转码高级版</h2><p><strong>高级版官网：</strong><a href="https://express-ffmpeg-vip.moejj.com" target="_blank" rel="noopener">https://express-ffmpeg-vip.moejj.com</a><br><strong>演示站：</strong><a href="https://www.leimulamu.com/" target="_blank" rel="noopener">https://www.leimulamu.com/</a></p>
<p>主要功能：</p>
<pre><code>1、支持多码率，同时转码到多个分辨率视频，且所有码率可自行设置，可保持原视频码率，并自定义视频同时转码数量，充分利用CPU效能。
2、支持CPU转码和GPU+CPU混合转码2种模式，且GPU混合转码拥有超级快的速度，画面无损失，压缩率与纯CPU转码一致。
3、默认生成自适应M3U8，根据转码的多分辨率，自动生成一个自适应M3U8地址，根据用户的带宽情况自动播放其中一个合适的分辨率。
4、自定义跑马灯文字广告、多码率自动适应，字体自定义，颜色自定义，间隔自定义，速度自定义，描边自定义，背景自定义。
5、跑马灯模板功能，可提前设置好多种不同的跑马灯，转码的时候批量设置指定的跑马灯模板，到时候自行烧录。
6、自定义水印、可设置4个不同的水印到4个位置，且会根据视频分辨率自行调整其大小。
7、支持转码切片、秒切，史上最快的秒切速度，且切片时长可自行设置，可做到720P、800码率情况下，单个切片体积仅100KB。
8、支持去除水印、去除跑马灯功能，可对多位置、多时间段进行去除设置，可对同类视频进行批量设置，最大程度的还原视频原画面。
9、智能动态码率转码，根据视频自身的情况，智能分配每一帧的码率，相同码率下，压缩率更高，画面更清晰。
10、默认使用最佳转码参数，最大程度保证了切片兼容性，IOS、Android、PC、APP等均可以完美播放，可以在任何平台调用。
11、完全自定义切片储存路径，所有用户都可以根据自己的需要自定义自己的储存目录，详见：自定义目录说明。
12、完全自定义切片后缀，默认切片后缀ts，你可以设置成jpg、png、gif等，其中不管你设置的是什么后缀，m3u8均可以完美播放。
13、可替换型片头广告系统，多片头随机播放，多片头随时替换，且设置立即生效，所有视频自动加片头或片中广告，同时任何地方调用的m3u8也生效。
14、支持切片后，可自行保留原片和转码后的mp4文件，且可保留多个分辨率mp4文件，并生成对应的转码后的mp4链接，方便外部调用。
15、支持自动生成截图和gif动态图，gif宽度，截取时长和截图数量均可自定义相关参数，系统默认会智能截取视频中间最精彩位置进行截取。
16、自动生成预览视频，系统会抽取视频中数个片段并且转码合成一个预览视频，去除音频，效果非常好，经测试350*180分辨率的5秒钟预览视频，只有170KB大小，比GIF动态图更小，配合前端插件做鼠标移动到图片上自动播放预览视频功能，可大幅提高用户点击率和留存率，极大提高用户体验。前端使用预览视频案例：预览视频
17、支持海报上传，支持单视频两个海报，第二个海报不会处理尺寸大小，保持上传时尺寸，并生成对应的海报链接地址。
18、可根据时长自行剪切片头，并同时保存后转码，批量剪切片头功能可作为视频剪切工具使用。
19、一键可自动入库所有的视频、封面等，且入库后视频自动分类，自动创建分类，srt、ass字幕自动烧录进视频。
20、分发设置，可多服务器或cdn同时提供m3u8播放服务，负载均衡，可改善单个服务器的负载、带宽不足的情况，提高用户播放体验。
21、云储存同步全家桶，目前对接了亚马逊S3，minio，七牛云，阿里oss，又拍云，任你选择，转码之后自动同步，并且通过分发设置，可直接对接到云储存使用云储存中的切片。
22、防下载合并功能，禁止浏览器插件或者软件下载m3u8合并成mp4，智能托管ts文件。
23、m3u8/mp4下载功能，输入m3u8地址或者mp4直链，直接批量下载，再配合去水印、跑马灯功能，世间一切资源由你掌控。
24、自带全自动发布系统，支持发布苹果cms等，只需填入数据库，即可快速将视频相关描述信息、m3u8、截图等入库到指定的cms。
25、自带火车头采集页面，简单配置，即可使用火车头将m3u8、截图等链接地址入库到所有第三方cms或程序方便调用。
26、拥有最全的api，包括上传、转码、即时返回相关m3u8等链接信息，可自行开发第三方调用相关api，并完美适用任何APP等程序。</code></pre><p>更多功能，继续开发中，每月更新。</p>
<p>其他更多功能可以看更新日志：</p>
<pre><code>【2019年3月3日】
新增了多服务器多域名分发配置。
新增了大量对接网盘系统的API配置。
根据所填写分发配置，m3u8中的ts会随机的添加分发域名。
通过多服务器同步切片或者直接反代，就可以实现多服务器负载均衡的效果。或者直接分发CDN域名，也可以解决带宽和负载问题。

【2019年3月12日】
增加一个新的分辨率640P的选项。
增加保留mp4的新选项640P。
修复一些BUG，比如点击推荐然后删除出错的问题。
增加自定义每个分辨率的码率功能，可以设置自己需要的码率。

【2019年3月20日】
增加单独图片水印单独位置的水印烧录功能，这个算是一个比较大的重构功能。
删除原有的配置中的水印配置，并且重新了设计了水印功能，可以设置每一个位置设置不同的图片水印。
很智能的自动匹配视频的大小，也就是所有视频转码之后，图片水印的大小都是自适应的，都是一样的大小。
后台水印管理中，可以添加四个位置四个图片水印，可以完全不同，也可以相同，不添加则不会添加图片水印。
后台预留了文字水印的位置，估计以后会再加上文字水印功能。

【2019年4月5日】
m3u8地址整体优化，更利于切片的管理和储存。
电视剧模块增加生成海报功能，因为m3u8地址的改变，所以如果升级新版本需要在电视剧模块中点击一下生成海报的按钮。
增加对ass字幕烧录的支持，很多视频的字幕就是ass特效字幕，原来srt字幕，现在增加了对ass字幕的支持，在movies文件夹中与视频同名的ass字幕会优先烧录进视频中，也就是如果同时存在srt字幕和ass字幕，则会直接烧录ass字幕。
增加了视频定制化转码的配置。在现在这个每一个视频都不一样的变化的时代，当然要对视频有定制化转码的选项，所以现在可以选择部分或者仅仅一部视频，进行定制化转码的配置。
增加了跑马灯广告中文本颜色，描边颜色，描边大小的设置。非常的炫酷。再配合字体文件，可以完美自定义跑马灯的样式。

【2019年4月24日】
增加多码率的试看功能，重写了全部的获取m3u8和处理m3u8的逻辑，使其完美支持了分发设置下的试看功能。
真正意义上的试看功能，并非播放器上边的模拟试看，相同的m3u8根据用户的状态返回完全不同的内容。
完美支持了高级版多码率版本的试看功能，如果在后台开启试看功能，则未登录的用户所有分辨率只能试看一分钟，注册之后用户组对应的分辨率可以观看全片，但是对应分辨率如果用户组权限不够还是只能试看一分钟。
有一个很有趣的场景：开始开放m3u8给第三方采集，突然有一天后台一键开启试看功能，所有外面引用的m3u8就全部变成了一分钟试看，是不是非常有趣。
试看功能完美支持分发设置，也就是说使用cdn的用户也可以使用试看功能，试看功能的原理是捕获用户的m3u8静态文件请求，将请求完全交给源代码处理，不走静态静态目录，所以相同的m3u8根据用户的状态直接返回完全不同的内容。
试看功能一旦开启，就拥有了类似优酷、爱奇艺相同级别的防盗链功能，但是仅限于使用本源码配套的cms，试看功能意味着永久的杜绝防盗链。
对接了支付宝的官方接口，可以直接使用支付宝充值积分。往后可能会陆续增加大量的支付接口，方便用户选用。
增加了订单管理功能，通过支付宝充值的订单将在订单管理中进行管理。
更新了前端的提示功能，在移动端上非常友好，增加了试看的提醒等。
修复了电影和电视剧上传海报的问题。
修复了少数bug。

【2019年5月29日】
增加了大量的对接APP的API接口。
增加了一键生成视频海报的功能。
修复和优化了大量已知问题，前端重写了很多逻辑。
获取m3u8增加详尽，增加动态图，截图，mp4地址。
增加了多视频转码功能，后台可设置同时转码多少个视频，全方位利用CPU效能。
APP对接完成，演示APP地址：https://www.iqi360.com/topic/5ce4277cac599a7c35b49eb8

【2019年6月8日】
超现代的响应式模板。
绝佳设计，绝佳的用户体验。
最新的BOOTSTARP4框架新模板。
更新了超大量的代码和优化了大量的程序代码，首页完全内存缓存

【2019年6月22日】
增加了高级版CMS的评论功能，后台审核功能。
增加了用户编辑功能，可以编辑用户名，邮箱，重设密码，vip用户组，VIP到期日期。
完全改进了发布流程，视频转码完成之后，有一个中间状态，点击正式发布，视频才会发布到前端。
改进了网页上传机制等。

【2019年6月30日】
新增用户上传功能，用户可以在自己的专用上传页面，上传视频，后台CMS管理中可以设置用户上传视频审核通过之后可以增加的积分。用户上传之后获得积分，可以使用积分升级用户组，包月或者包年，解锁观看权限。
增加了所有视频状态的捕获和展示机制，分别有四种状态：审核中，剧集，电影，转码中或者等待发布。
美化了用户上传视频页面，和已经上传视频列表。

【2019年8月03日】
增加了云储存功能，向云更近一步，用户可自建minio集群对象储存或者使用亚马逊s3，可将源片，转码后各分辨率mp4，m3u8和切片文件，截图，动态图等全部自动转存至云储存，用户可直接调用云储存的资源进行播放。
增加了自适应m3u8功能，根据视频转码出来的多个分辨率，根据用户自身的带宽情况自动加载其中一个分辨率的m3u8，非常智能。以后只需要放出一个自适应m3u8就够了。
新增导出表格功能，用户需要分工功能怎么办，一个人管理视频转码，一个人管理CMS运营，这个时候导出表格功能就有用了，一键导出所选视频的所有m3u8信息成表格。
新增了保留源片的选项，新增了保留源片的选项，建议配合云储存使用。

【2019年8月6日】
新增了GPU转码的支持，在翻阅了国内外大量的文档之后，重新规划设计的GPU转码功能，完全遵守最新的NVIDIA规范，使用CPU+GPU混合转码模式，同时利用CPU和GPU的效能，保证无论低码率还是高码率的质量和速度，同时做到了和CPU转码同样的压缩率和画质，堪称最完美的GPU转码功能。
##转码测试
测试文件：1.81G，时长2个小时10分钟。
转码设置：同时转码480P，720P，1080P，码率设置为500，1000，2000，并且同时添加图片水印和跑马灯。使用GPU转码。
结果：用时7分钟，整个多码率全部完成转码，如果不要1080P，则最多需要3分钟即可完成转码，纯CPU转码i9需要25分钟左右。保持了和纯CPU同样的压缩率，同样画面效果也和CPU转码一致。
GPU性价比之选：配合德国机器94欧元，也就是744人民币即可搭建出GPU转码服务器。

【2019年8月11日】
由于牵扯到商用代码，所以部分核心代码加密，增加授权机制，增加了可替换型TS广告系统，可随意多个视频广告，可选择片头还是片中，多个视频广告同时存在的情况下，随意选择其中之一进行插入，片中广告会根据视频的时长，智能在其中间位置插入视频广告。不会做视频广告？没关系，新增智能一键生成视频广告的功能，简单几步操作，智能生成自带BMG背景音乐的视频广告。
新增TS可替换型广告，可自行上传任意多个视频广告，可选择片头片尾插入。随意替换，即时生效。
新增视频广告生成系统，可自行在后台自动生成视频广告，任意时长，任意广告内容，任意图片，十分智能。
新增停止队列功能，停止队列之后可操作剪切片头等操作。

【2019年8月28日】
新增CMS管理中，是否开启积分购买点播功能，增加了默认视频积分价格，必须同时开启试看功能。
试看功能和VIP用户组、积分点播三个功能共同配合，完善了这个积分点播功能：
1、用户未登录时，提醒只能观看一分钟试看，登录之后才能观看完整视频。
2、用户登录时，如果用户组权限不够或者是VIP用户组权限不够，就会提示：您用户组权限不够，只能观看一分钟试看，请升级用户组或者积分购买此视频完整版。
3、如果此视频用户使用积分购买过，那么会直接返回完整视频。
4、如果用户的用户组权限够了，也会直接返回完整视频内容。
5、无论用户如何盗链M3U8，所有非本站CMS都会只显示1分钟试看内容。
6、可自定义每一部视频的单独的积分价格，如果未设置，则会直接使用CMS管理中设置的默认积分价格，免去重复设置之苦。
后台增加视频简易编辑功能，简易编辑可以设置视频的简单的标题和简介，还有此视频的积分价格，简单的分类标签，除了标题，其他都是选项填，再也不用去编辑中详细编辑视频信息。

【2019年9月9日】
更新了一个超级功能，就是批量多位置、多时间段，智能去除跑马灯和水印的功能，详见：https://express-ffmpeg-vip.moejj.com/blog/5d76121b9773bd51d721a00e
新增了视频库中，转码前的全格式视频实时预览功能，可以应用在用户上传中，转码前就可预览视频内容，更方便审核视频。
新增了前端CMS签到功能，用户每天登陆可签到一次，后台可设置签到所获得的积分数。
新增了前端VTT外挂字幕加载和后台VTT字幕上传功能。
新增了前端时间轴实时预览和后台可选生成时间轴预览图功能。鼠标移动到时间轴即可预览时间轴上的视频内容。

【2019年9月13日】
在高级版源码中内置了推流服务器和相关的直播功能。用户可根据需求按需开启或者关闭推流服务器功能。
新增推流服务器设置，用户可选择性开启推流服务器，开启之后无需任何其他操作，直接一键开启推流服务器。
开启推流服务器之后，可在后台为指定用户开启直播权限，开启之后，用户可在自己的个人页面看见直播链接和直播秘钥。
用户通过OBS软件或者其他方式将直播推流到推流服务器，则前台会自动展示直播间。
网站用户可通过前台直播板块中的直播间进入观看直播。
CMS设置中新增前台相关直播参数，例如是否开启直播板块等。
案例视频可见：https://express-ffmpeg-vip.moejj.com/blog/5d7a597b9773bd51d721a010

【2019年9月18日】
新增了多人实时聊天室功能，在直播室中使用更佳，详情可见：https://express-ffmpeg-vip.moejj.com/blog/5d8209ac9773bd51d721a011

【2019年9月24日】
新增了额外系统全自动发布系统，可自动将高级智能云转码中的视频发布至上千个CMS，转码完成的瞬间即发布出去。
介绍：https://express-ffmpeg-vip.moejj.com/blog/5d8af6d49773bd51d721a013

【19年10月5日】
自动发布平台新增了对msvod，也就是魅思系统的自动发布适配，全自动发布视频到msvod系统，转码完成一瞬间即自动发布，无延时全自动。
修复了大量的历史遗留问题，修复了大量bug，新增了前端标签删除等功能。

【2019年10月14日】
新增入库时自动分类入库、封面入库。
修复部分已知问题，新增更多app接口，方便开发app。

【2019年11月20日】
完全重写后台UI，现在的UI大概是商用软件中最漂亮的后台了。
新增秒切功能，也许是史上最快的秒切。
优化了大量的操作流程，比如视频编辑，剧集编辑等。
修复了一些BUG，比如导出excel的问题

【2019年12月5日】
新增并已完美对接跨世代CMS，使用最新技术开发，使用Apollo server和Apollo client，利用keystonejs、mongoose、graphql、vuejs加nuxtjs服务端渲染驱动，全面使用graphql前后端通信，无刷新服务端渲染技术，做到低延迟情况下所有页面秒开，超越静态页面的速度。
高级版自动发布电影和电视剧到CMS中，电影电视剧信息编辑，添加分集等皆自动发布或更新至CMS中，新增了最完备的云转码分工协作架构体系。把电影信息或者电视剧信息编辑好可以一键发布到CMS上，可以无数台高级版对应一个跨世代CMS。
新增了设置选项，自定义海报宽高，自动生成的海报会根据设置项智能裁剪取画面中间位置裁剪，上传的电影海报和电视剧海报都会进行智能裁剪。
新增电视剧分类功能。
完美修复了手机浏览器试看问题，目前积分点播，VIP用户组和试看功能兼容了所有手机浏览器。
优化了最新的mongodb连接，更快更稳定。
转码逻辑大量优化和重写，修复了转码重复的问题。
云转码分工协作架构体系详情查看：https://express-ffmpeg-vip.moejj.com/blog/5decc9ac9773bd51d721a019

【2019年12月25日】
新增m3u8/mp4下载功能，输入m3u8地址或者mp4直链，直接批量下载，同时并发10个进程同时下载，完全自动化，下载完成自动出现在视频库中，再配合去水印、跑马灯功能，世间一切资源由你掌控。
新增跑马灯模板功能，由于很多视频需要个性自定义跑马灯内容，所以我精心开发了跑马灯模板功能，设置好跑马灯之后，可在视频库中批量选择视频之后选择对应的跑马灯模板，之后烧录跑马灯的时候就会自动处理了。
新增了高级版的智能切片功能，并且优化了试看功能，智能切片配合切片时长功能，可做到720P 800帧率下单个TS 100KB。
新增了云储存同步的全家桶，经过我的重新设计，做了队列同步功能，非常稳定，目前对接了亚马逊S3，minio，七牛云，阿里oss，又拍云，任你选择，转码之后自动同步，同步之后可删除本地切片，并且通过分发设置，可直接对接到云储存使用云储存中的切片。
新增了防下载合并功能，全面使用源码托管TS文件，抛弃nginx对ts文件的托管，全面控制浏览器插件或者软件下载m3u8合并。
再次优化了转码逻辑。

【2020年01月08日】
支持用户注册账号，在前端自主上传视频，并且管理员可在视频转码前就实时预览视频内容，来判断是否审核通过，避免资源浪费。
支持了多功能联合筛选管理视频，状态筛选，数量筛选，分类筛选。
新增了海报上传第二个接口，支持单视频两个海报，第二个海报不会处理尺寸大小，保持上传时尺寸。
修复和优化了队列转码和停止队列的功能，方便阶段性编辑转码参数或者去水印等参数。
修复少许已知BUG。

【2020年01月10日】
新增了自动生成预览视频的高级功能，可在后台设置中设置生成预览视频的秒数，系统会自动处理，抽取视频中数个片段并且转码合成一个预览视频，去除音频，效果非常好，经测试350*180分辨率的5秒钟预览视频，只有170KB大小，比GIF动态图更小，配合前端插件做鼠标移动到图片上自动播放预览视频功能，可大幅提高用户点击率和留存率，极大提高用户体验。
新增了切片文件任意自定义后缀功能，默认为TS，可设置为jpg，png，gif或者任意后缀。

【2020年2月06日】
新增了支持数十个视频网站的视频离线下载功能，无缝对接到转码系统中，采用开源项目youtube-dl开发。
新增了下载中心API，可利用API直接创建下载任务，可自行创建前端使用离线视频下载功能。
支持视频列表：
https://ytdl-org.github.io/youtube-dl/supportedsites.html

【2020年2月28日】
音乐库中心，音乐库用户可上传音频，并且编辑音乐的标题，艺术家，专辑，音乐封面等信息。
cms中增加了音乐节目功能，在音乐节目中可创建歌单、音频课程等节目，再导入音乐库编辑好的音频，形成列表，cms前端自动展示音乐频道，使用最先进的音乐播放器，给人完全不同的体验。
资讯新增背景图上传功能，可选，上传之后前端会展示背景图，未上传则展示默认背景图。
修复一些已知bug，优化部分代码，尽可能提高程序稳定性。</code></pre><p>目前高级版<code>1488</code>，包一年更新，并永久使用，程序完美兼容<code>Linux</code>和<code>Windows</code>系统，并提供各种新手教程/一键安装脚本，安装不再困难，一个命令即可装好，有需求的可以加微信<code>rats54</code>。</p>
<h2 id="云转码纯净版"><a href="#云转码纯净版" class="headerlink" title="云转码纯净版"></a>云转码纯净版</h2><p>该系统利用阿里巴巴开源的最强大的<code>nodejs</code>框架<code>egg.js</code>将整个转码切片系统抽离出来，最后制作完成了这款最好用、也最容易上手、安装也最简单的视频转码系统，称之为<code>theone ffmpeg</code>转码切片系统，也是用企业级标准制作的一款高性能极致视频转码切片系统。</p>
<p><strong>定位：</strong>极致的方便，极致的使用体验，极致的用户自定义，极致的转码切片效率，为极致转码切片而生，企业级设计和编码。</p>
<p>主要功能如下：</p>
<pre><code>1、支持转码到240P、360P、480P、720P、1080P，且所有码率可自行设置，并自定义视频同时转码数量，充分利用CPU效能。
2、可自定义跑马灯文字广告、跑马灯广告间隔，速度，跑马灯文字。
3、可自定义水印、水印同时多位置的固定水印和动态的移动水印，且会根据视频分辨率自行调整其大小。
4、支持转码切片、秒切，史上最快的秒切速度，且切片时长可自行设置，可做到720P、800码率情况下，单个切片体积仅100KB。
5、智能动态码率转码，根据视频自身的情况，智能分配每一帧的码率，相同码率下，压缩率更高，画面更清晰。
6、默认使用最佳转码参数，最大程度保证了切片兼容性，IOS、Android、PC、APP等均可以完美播放，可以在任何平台调用。
7、支持切片后，可自行保留转码后的mp4文件，并生成对应的mp4链接，方便外部调用。
8、支持截图gif动态图，宽度，截取时长，系统会智能截取视频中间最精彩位置进行截取。
9、支持自定义截图数量，默认生成第一帧截图，且截图速度超快，生成10个截图只需要1秒钟。
10、支持去除水印、去除跑马灯功能，可对同类视频进行批量设置，最大程度的还原视频原画面。
11、可替换型片头广告系统，多片头随机播放，多片头随时替换，且设置立即生效，所有视频自动加片头广告，同时任何地方调用的m3u8也生效。
12、自定义储存视频和入库路径，一键可自动入库所有的视频、封面等，且入库自动分类，自动创建分类，srt、ass字幕自动烧录进视频。
13、分发设置，可多服务器或cdn同时提供m3u8播放服务，负载均衡，可改善单个服务器的负载、带宽不足的情况，提高用户播放体验。
14、一键批量获取m3u8，一键获取视频所有截图，mp4和m3u8等全部信息，且按照第三方cms格式一键复制视频m3u8，非常方便。
15、可根据时长自行剪切片头，并同时保存后转码，批量剪切片头功能可作为视频剪切工具使用。
16、跨域放行防护配置项，如果开启则域名调用会有跨域判断，如果不开启，则可以将m3u8给所有网站调用。
17、支持m3u8、mp4下载功能，输入m3u8地址或者mp4直链，直接批量下载，再配合去水印、跑马灯功能，世间一切资源由你掌控。
18、支持切片自动缓存进内存，用户播放直接从内存读取，突破硬盘io，默认缓存1000个ts切片，可自行根据服务器内存进行调整。
19、自带火车头采集页面，简单配置，即可使用火车头将m3u8、截图等链接地址入库到所有第三方cms或程序方便调用。</code></pre><p>更多新增功能可以查看更新日志：</p>
<pre><code>【2019年3月24日】
增加是否前台展示采集页面配置项。
增加前台专用采集页面，简单配置火车头可以发布到任何CMS中去

【2019年4月27日】
增加了分发设置，重写了某些逻辑。
后台增加分发设置页面，可以自行设置。
必须将public文件夹整个同步到储存服务器，比如移动到/website，目录结构就是/website/public，然后绑定域名到/website，之后将域名填写到分发设置中即可，可以无限添加分发域名。

【2019年5月19日】
增加了ts加密的功能。
修复了使用秒切，无法截图的问题。
优化了大量转码切片逻辑，更加稳定持久，出现错误会自动跳过。
增加后台分类管理功能。
前台采集页面增加了分类筛选的功能。
增加了视频选择分类的功能。

【2019年5月27日】
增加了前台采集页面的分类筛选功能。
后台增加了状态展示，全部视频，正在转码，转码完成等数量。
后台增加了编辑片名和上传海报的功能。
前台和后台都优化了获取m3u8的展示效果。
增加了同时转码视频数量设置，可以设置同时转码多个视频，充分利用cpu效能。

【2019年7月8日】
增加了批量剪切片头的功能，可以选择一批正在等待的视频，设置剪切时间轴，然后一键批量剪切视频片头。
增加了停止转码队列的功能，点击停止转码队列，会停止自动下一个转码进程，之后方便使用批量剪切片头功能剪切片头。
增加了智能切片功能，在保持最大兼容性的情况下，根据用户自己设置的切片时长进行智能切片，可以做到720P在800码率的情况下，单个TS切片文件100KB左右，加载速度极快。
比如设置切片时长为1秒，则在智能切片情况下，ts的时长大部分为1秒钟，少部分为0.5秒到2秒之间，保证了动态码率和视觉上，甚至播放器上的超高兼容性。
增加了授权机制，保证本人和用户双方权益。

【2019年7月12日】
增加了片头广告的开关，设置开启片头广告，则所有转码完成的视频广告会添加到所有的视频片头中去。
新增了可替换片头广告管理中心，在这里可以上传片头视频广告，进行片头视频广告的转码切片处理，最后强行植入到所有视频的片头中。
实现了片头广告的超强兼容，片头广告超快加载，片头广告可替换、可更改、可任意多个片头广告的功能。
片头广告的原理：利用源码智能更改m3u8文件，每次请求的时候，将片头广告智能嵌入至原来的m3u8文件中，形成新的m3u8文件直接返回到用户播放器中。而且本源码针对所有视频广告全部做了兼容性的转码切片工作，使其变成多个很小的TS切片，用户加载极快，并且可以多个片头广告随机加载其中一个，在用户进行下载合并分发中，就可以做到同一个视频，但是多个片头广告。
片头广告还可以用作将一个特定视频添加到所有的视频开头，来做到一些原来意想不到的作用，比如如果将纯净版商用提供服务，则可以在每一个视频开头都加上自己的企业的宣传视频，例如爱剪辑。

【2019年8月3日】
完善了批量剪切片头的功能。增加了多个选项，可选择保存剪切的前端或者后端，现在剪切片头广告可直接作为视频剪切的工具使用。
增加了格式化的批量复制功能，格式满足大部分第三方CMS编辑的格式。
增加了对ASS字幕的烧录支持。

【2019年8月25日】
新增了截图的时候默认截一张视频的第一帧的截图，方便很多CMS调用的时候封面使用，真正的第一帧截图，点击播放直接从第一帧开始播放，效果和抖音、微视、快手效果一样。
新增了后台地址自定义的功能，而且在修改了大量源码，如果未登录则后台管理统一返回404，只用通过真正的后台地址登陆之后，后台URL才能正常进入。
原来如果未登录会直接返回登录页面，现在重写了源码，后台所有路径如果未登录则全部直接返回404，而且通过自定义后台登录路径，只有通过登录路径正确登录之后才能正常进入后台管理界面。
修改了一键安装脚本，自动随机后台路径和账号密码，安全性大增。

【2019年9月5日】
新增了去除跑马灯，去除水印的功能，想要在网页上实现此功能还比较困难，用户可以批量多选很多部视频同时设置同一个去水印的配置，然后就交给程序自动处理了。
去除水印和跑马灯的功能介绍：用户自己框选视频区域，则此区域会使用差值去水印的功能去掉水印，不同于马赛克，画面损失很小，不影响用户体验。
修复了前端采集页面的视频未转码完成也出现在采集页面的BUG。

【2019年9月19日】
上次更新了去水印和跑马灯的功能，所以用户担心自己添加的水印被我的程序去掉，这次我直接做了动态移动图片水印功能，矛与盾的战争，但是是我自己跟我自己两个大战。
后台设置中一键开启动态水印功能，开启之后就默认在视频左下方移动到右下方，并且在移动到右下方最右边的会停住，每隔100秒都会重新又从左边移动到右边。

【2019年12月27日】
新增入库自动分类，入库自动添加封面的功能，一级文件夹自动创建分类，同名图片自动添加为封面。
新增m3u8下载中心，通过m3u8或者mp4直链下载，并发下载，自动入库，配合去跑马灯、去水印功能有奇效。
修复已知BUG。

【2020年01月08日】
修复和优化了队列转码和停止队列的功能，方便阶段性编辑转码参数或者去水印等参数。
修复少许已知BUG。</code></pre><p>目前纯净版<code>488</code>元，包一年更新，并永久使用，程序完美兼容<code>Linux</code>和<code>Windows</code>系统，并提供各种新手教程/一键安装脚本，安装不再困难，一个命令即可装好，有需求的可根据自身经济条件进行选择，欢迎加微信<code>rats54</code>前来咨询。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用宝塔面板安装Rocket.Chat多功能团队聊天室</title>
    <url>/2425/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Rocket.Chat</code>一年前就介绍过→传送门，一款多功能团队聊天室，支持群组聊天，直接通信，私聊群，桌面通知，媒体嵌入，链接预览，文件上传，语音/视频，聊天，截图，实时翻译等等，安装方法比较简单的有<code>Snap</code>、<code>Docker</code>，此前也只说过<code>Snap</code>安装方法，由于一直有小伙伴需要宝塔面板安装教程，所以这里就水一篇宝塔教程。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>官方文档：</strong><a href="https://rocket.chat/docs/" target="_blank" rel="noopener">https://rocket.chat/docs/</a></p>
<p><strong>环境要求：</strong><code>NodeJS 8.11.4</code>、<code>Mongodb 4.0.9</code>、<code>Nginx</code>(非必需)。</p>
<p><strong>提示：</strong>由于官方建议的最低内存<code>1G</code>，所以<code>512M</code>或更小的建议加点虚拟内存，可以使用<code>Swap</code>一键脚本→传送门。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件商店，然后安装<code>PM2管理器</code>、<code>MongoDB</code>、<code>Nginx</code>(使用域名访问才需要安装，反之不用)。</p>
<p>注意：<code>Debian</code>安装<code>MongoDb</code>之前还需要使用命令<code>apt install sudo</code>，不然可能存在<code>MongoDb</code>启动不了的情况；如果你已经安装了<code>MongoDb</code>，那就先使用<code>apt install sudo</code>，再使用<code>/etc/init.d/mongodb start</code>启动即可。</p>
<p><strong>2、环境配置</strong><br>先点击左侧软件商店，找到<code>PM2</code>管理器设置选项，选择<code>Node</code>版本，切换到<code>8.11.4</code>版本，不然太高可能会导致<code>Rocket.Chat</code>运行出错。</p>
<p>然后再找到<code>MongoDb</code>设置选项，点击配置文件，新增/修改以下代码：</p>
<pre><code>#设置storage引擎，新增engine参数，并修改下dbPath路径，不然会启动不了
storage:
  dbPath: /www/server/mongodb/Rocket.Chat
  directoryPerDB: true
  engine: mmapv1
  journal:
    enabled: true
#配置replica set，新增以下参数
replication:
  replSetName: rs01 </code></pre><p>保存后，<code>MongoDb</code>会自动关闭，这时候使用命令：</p>
<pre><code>#新建数据存储路径，即上面配置文件修改的dbPath参数
mkdir /www/server/mongodb/Rocket.Chat
#授权
chown mongo:mongo /www/server/mongodb/Rocket.Chat
#重新启动数据库
/etc/init.d/mongodb start
#启动replica set
mongo --eval &quot;printjson(rs.initiate())&quot;</code></pre><p><strong>3、安装依赖</strong></p>
<pre><code>#Debian/Ubuntu系统
apt install -y graphicsmagick
#CentOS系统
yum install -y GraphicsMagick</code></pre><p><strong>4、安装Rocket.Chat</strong></p>
<pre><code>#下载rocket.chat
wget -O rocket.chat.tgz https://releases.rocket.chat/latest/download 
#解压并删除
tar -xzf rocket.chat.tgz &amp;&amp; rm -rf rocket.chat.tgz
#移动到/opt并重命名
mv bundle /opt/Rocket.Chat
#安装依赖
cd /opt/Rocket.Chat
npm install -g inherits
cd programs/server
npm install</code></pre><p><strong>5、启动Rocket.Chat</strong></p>
<pre><code>#新建rocketchat用户并授权
useradd -M rocketchat &amp;&amp; usermod -L rocketchat
chown -R rocketchat:rocketchat /opt/Rocket.Chat
#新建systemd配置文件，将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/rocketchat.service &lt;&lt;EOF
[Unit]
Description=Rocket.Chat
After=network.target
Wants=network.target

[Service]
ExecStart=$(command -v node) main.js
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=rocketchat
User=rocketchat
WorkingDirectory=/opt/Rocket.Chat
Environment=MONGO_URL=mongodb://127.0.0.1:27017/rocketchat?replicaSet=rs01 MONGO_OPLOG_URL=mongodb://127.0.0.1:27017/local?replicaSet=rs01 ROOT_URL=http://127.0.0.1:3000/ PORT=3000
Type=simple
Restart=on-failure
RestartSec=42s

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>开始启动：</p>
<pre><code>#启动的时候，可能需要点时间加载，等待即可
systemctl start rocketchat</code></pre><p>查看状态:</p>
<pre><code>systemctl status rocketchat</code></pre><p>开机自启：</p>
<pre><code>systemctl enable rocketchat</code></pre><p>此时访问地址为<code>ip:3000</code>，如果你想用<code>ip</code>访问，点击左侧安全，开放<code>3000</code>端口即可，如果想用域名访问，不需要开启，继续往下面看。</p>
<p><strong>6、域名访问</strong><br>要使用域名的话就需要进行反代了，这里就不用宝塔自带的反向代理配置了，默认配置不适合<code>Rocket.Chat</code>。</p>
<p>先点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击配置文件，在中间添加以下代码：</p>
<pre><code>location ~ ^/.* {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host             $host;
    proxy_set_header X-Real-IP        $remote_addr;
    proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection &quot;upgrade&quot;;
    proxy_set_header X-Forward-Proto http;
    proxy_set_header X-Nginx-Proxy true;
    proxy_http_version 1.1;

    proxy_redirect off;
}</code></pre><p>点击保存后，再点击<code>SSL</code>，申请免费的<code>Let&#39;s Encrypt</code>证书，并强制<code>HTTPS</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>低配置主机运行Wordpress的优化建议</title>
    <url>/718/</url>
    <content><![CDATA[<p>如果你和我一样 只能苦苦的用着1h2G的学生机 又想提高你的网站访问速度那么你可以看下这片文章，相信你会有所收获的。</p>
<h2 id="静态资源加速"><a href="#静态资源加速" class="headerlink" title="静态资源加速"></a>静态资源加速</h2><p>所有的静态资源如css，js，图片资源建议放在对象存储空间或是调用公共库</p>
<p>如果你的主题设置配有设置开关，这样你直接将文件上传到如七牛云，又拍云等服务提供商处 然后绑定域名使用即可。如果没有的话请向下看</p>
<h2 id="巧用缓存插件"><a href="#巧用缓存插件" class="headerlink" title="巧用缓存插件"></a>巧用缓存插件</h2><p>这里主要推荐使用WP-super-cache 本站使用的也是这个插件 先贴几个基本设置图</p>
<p><img src="https://img.southcat.net/wp-content/uploads//2020/03/image-1024x595.png" alt=""></p>
<p>设置页面你可以参考我的高级页面进行设置 后台安装插件之后点击通用启用插件即可。</p>
<h3 id="CDN的配置"><a href="#CDN的配置" class="headerlink" title="CDN的配置"></a>CDN的配置</h3><p>主题没有对象存储服务设置开关的可以看这一步啦</p>
<p>wp-super-cache设置页面点击cdn选项来进行站点cdn加速的配置</p>
<p>这里以七牛云为例 首先我们进入七牛后台创建一个对象存储空间 空间名随意，访问控制设置为公有</p>
<p><img src="https://img.southcat.net/wp-content/uploads//2020/03/image-1.png" alt=""></p>
<p>创建完成之后我们进入空间配置页面 选择镜像存储 然后将镜像源配置为你的域名即可</p>
<p><img src="https://southcat.net/wp-content/uploads/2020/03/image-5-1024x178.png" alt=""></p>
<p>打开软件之后会提示你添加你的七牛空间 密钥在网页端控制台点击右上角头像选择密钥管理创建就可以了 千万不要泄漏的哦 。</p>
<p>之后我们将网站的wp-content,wp-includes两个目录打包下来 ，在软件上传到七牛云注意上传的时候一定要注意上传时是将这两个文件夹直接拖进去。 这就不删除了 记录下我到底干了多么蠢的事情</p>
<p>光上传是没用的我们还需要在七牛再绑定一个域名 七牛给的测试域名会在期限到期之后自动删除的</p>
<p>七牛控制台点击CDN点击添加域名</p>
<p><img src="https://img.southcat.net/wp-content/uploads//2020/03/image-3.png" alt=""></p>
<p>这里的源站需要指向你刚才所创建的存储空间。</p>
<p>全部设置好之后来到wp后台进入wp-super-cache设置的CDN设置界面填写信息</p>
<p><img src="https://img.southcat.net/wp-content/uploads//2020/03/image-4-1024x632.png" alt=""></p>
<p>只需要修改of-siteURL选项即可 然后开启CDN支持勾选即可 其他选项如果不了解就不要动 off-site URl设置为你刚才添加的七牛云cdn域名接口 到这里就结束 了。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>使用静态Aria2二进制文件快速安装Aria2，及使用方法</title>
    <url>/2290/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Aria2</code>是一个很强的<code>BT</code>下载神器，用的人也多。不过也有很多人手动编译安装的时候，会遇到很多错误，这里博主就分享个静态文件安装方法，出错率很低。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/q3aql/aria2-static-builds" target="_blank" rel="noopener">https://github.com/q3aql/aria2-static-builds</a></p>
<p>这里只说下<code>Linux</code>系统安装方法，首先找到适合自己系统的最新版的<code>Aria2</code>静态文件→点击查看，再使用命令：</p>
<pre><code>#下载静态文件
wget https://github.com/q3aql/aria2-static-builds/releases/download/v1.34.0/aria2-1.34.0-linux-gnu-64bit-build1.tar.bz2
#解压文件并进入文件夹
tar jxvf aria2-*.tar.bz2 &amp;&amp; rm -rf aria2-*.tar.bz2 &amp;&amp; cd aria2-*
#开始安装
make install

##如果安装的时候提示-bash: make: command not found错误，需要先运行命令：
Debian/Ubuntu系统：apt install make -y
CentOS系统：yum install make -y</code></pre><p>这时候就安装好了，可使用<code>aria2c -v</code>查看版本信息。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用的话很简单，先新建<code>aria2.conf</code>配置文件(存放路径随意)，配置如下：</p>
<pre><code># 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置
dir=/data/aria2/download
# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M
#disk-cache=32M
# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc
# 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc
# falloc和trunc则需要文件系统和内核支持
# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项
file-allocation=trunc
# 断点续传
continue=true

## 下载连接相关 ##

# 最大同时下载任务数, 运行时可修改, 默认:5
max-concurrent-downloads=5
# 同一服务器连接数, 添加时可指定, 默认:1
max-connection-per-server=8
# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M
# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载
min-split-size=10M
# 单个任务最大线程数, 添加时可指定, 默认:5
split=16
# 整体下载速度限制, 运行时可修改, 默认:0
#max-overall-download-limit=0
# 单个任务下载速度限制, 默认:0
#max-download-limit=0
# 整体上传速度限制, 运行时可修改, 默认:0
#max-overall-upload-limit=0
# 单个任务上传速度限制, 默认:0
#max-upload-limit=0
# 禁用IPv6, 默认:false
disable-ipv6=true

## 进度保存相关 ##

# 从会话文件中读取下载任务
input-file=/data/aria2/aria2.session
# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件
save-session=/data/aria2/aria2.session
# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
#save-session-interval=60

## RPC相关设置 ##

# 启用RPC, 默认:false
enable-rpc=true
# 允许所有来源, 默认:false
rpc-allow-origin-all=true
# 允许非外部访问, 默认:false
rpc-listen-all=true
# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同
#event-poll=select
# RPC监听端口, 端口被占用时可以修改, 默认:6800
#rpc-listen-port=6800
# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项
rpc-secret=moerats
# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-user=
# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项
#rpc-passwd=

## BT/PT下载相关 ##

# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true
#follow-torrent=true
# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999
listen-port=51413
# 单个种子最大连接数, 默认:55
#bt-max-peers=55
# 打开DHT功能, PT需要禁用, 默认:true
enable-dht=false
# 打开IPv6 DHT功能, PT需要禁用
#enable-dht6=false
# DHT网络监听端口, 默认:6881-6999
#dht-listen-port=6881-6999
# 本地节点查找, PT需要禁用, 默认:false
#bt-enable-lpd=false
# 种子交换, PT需要禁用, 默认:true
enable-peer-exchange=false
# 每个种子限速, 对少种的PT很有用, 默认:50K
#bt-request-peer-speed-limit=50K
# 客户端伪装, PT需要
peer-id-prefix=-TR2770-
user-agent=Transmission/2.77
# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0
seed-ratio=0
# 强制保存会话, 即使任务已经完成, 默认:false
# 较新的版本开启后会在任务完成后依然保留.aria2文件
#force-save=false
# BT校验相关, 默认:true
#bt-hash-check-seed=true
# 继续之前的BT任务时, 无需再次校验, 默认:false
bt-seed-unverified=true
# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false
bt-save-metadata=true
#停止做种
seed-time=0</code></pre><p>根据情况，修改下载路径，连接密匙(<code>rpc-secret</code>为密匙参数)，然后新建配置文件里的相关文件夹/文件。</p>
<pre><code>#新建下载路径，session会话文件，顺便加个Aria2日志文件，路径和配置文件里一致
mkdir -p /data/aria2/download
touch /data/aria2/aria2.session /data/aria2/aria2.log</code></pre><p>最后启动<code>Aria2</code>：</p>
<pre><code>#aria2.conf文件所在路径填对，这里放在了/data/aria2文件夹
aria2c --conf-path=/data/aria2/aria2.conf
#后台运行(建议直接使用这个命令)
nohup aria2c --conf-path=/data/aria2/aria2.conf &gt; /data/aria2/aria2.log 2&gt;&amp;1 &amp;</code></pre><p><code>CentOS</code>系统可能还需要开放几个端口，运行命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 6800 -j ACCEPT
iptables -I INPUT -p tcp --dport 6998 -j ACCEPT
iptables -I INPUT -p tcp --dport 51413 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=6800/tcp --permanent
firewall-cmd --zone=public --add-port=6998/tcp --permanent
firewall-cmd --zone=public --add-port=51413/tcp --permanent
firewall-cmd --reload</code></pre><p>这时候<code>Aria2</code>安装及配置都好了，接下来就是使用了；使用的话，我们可以借助<code>Aria2</code>前端<code>Web</code>面板一起使用，常见的有<code>Aria2 WebUI</code>、<code>YAAW</code>和<code>AriaNg</code>；博主推荐<code>AriaNg</code>，差不多包含了前面<code>2</code>个的功能，界面也很美观，你可以选择自己搭建，也可以直接用别人提供的；搭建方法参考：方法一、方法二，不想搭建的可以使用博主提供的→传送门。</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>据某热心童鞋反应，有大神静态编译的<code>aria2c</code>文件，覆盖原文件后可以修改线程数，下载百度云文件可以突破<code>16</code>线程限制，这里就贴个使用方法。</p>
<p>首先下载<code>aria2c</code>文件→点击下载，然后解压并移动到<code>/usr/bin</code>目录，再给予可执行权，不会搞的直接在<code>SSH</code>客户端使用命令：</p>
<pre><code>wget https://www.southcat.net/usr/down/aria2c.tar.gz
tar zxvf aria2c.tar.gz &amp;&amp; rm -rf aria2c.tar.gz
mv -f aria2c /usr/bin/
chmod +x /usr/bin/aria2c</code></pre><p>然后修改<code>aria2.conf</code>配置文件，修改参数如下：</p>
<pre><code>#修改3个参数即可
设置最大的JSON-RPC/XML-RPC请求大小，默认2M
rpc-max-request-size=100M
同一服务器连接数, 添加时可指定, 默认:1
max-connection-per-server=64
单个任务最大线程数, 添加时可指定, 默认:5
split=64</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Aria2+Aria2Ng+OneIndex+OneDrive建立不限流量/离线BT下载/在线观看网盘</title>
    <url>/2187/</url>
    <content><![CDATA[<p><strong>说明：</strong>这个教程之前发过一个脚本：Aria2+Aria2Ng+OneIndex一键安装脚本，下载后自动上传至OneDrive，不过由于系统支持较少，加上很多人想手动安装，这里就单独拿来水一篇文章。</p>
<h2 id="获取OneDrive"><a href="#获取OneDrive" class="headerlink" title="获取OneDrive"></a>获取OneDrive</h2><p>现在<code>OneIndex</code>是可以使用个人的<code>OneDrive</code>网盘，不过容量太小，很难满足一些人的需求，这里提一下之前说过的<code>2</code>个申请<code>OneDrive 5T</code>的方法。</p>
<p>1、申请微软的<code>Office 365</code>开发者计划，地址：免费获得一年的21TB OneDrive和Microsoft Office 365企业<br>2、使用热心大佬提供的临时邮箱申请一个，方法如下：</p>
<pre><code>1)、进入注册地址https://products.office.com/en-us/student?tab=students
2)、输入如有乐享提供的临时邮箱，地址：https://51.ruyo.net/8263.html
3)、填入密码，和从临时邮箱获取的验证码</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板安装<code>PHP 5.6+</code>、<code>Nginx</code>。</p>
<p><strong>2、安装OneIndex</strong><br>先添加域名，然后上传程序文件到网站根目录<code>/www/wwwroot/xx.com</code>，将文件解压出来，并设置<code>config/</code>、<code>cache/</code>可读写权限，程序下载：OneIndex.zip。</p>
<p>也可以使用命令上传到根目录：</p>
<pre><code>#Debian/Ubuntu系统
apt-get install git -y
#CentOS系统
yum install git -y

#修改为自己域名根目录后再运行
cd /www/wwwroot/xx.com
git clone https://github.com/donwa/oneindex.git
mv oneindex/* ./
chmod -R 777 config/ cache/</code></pre><p>再点击域名设置，添加<code>Nginx</code>伪静态：</p>
<pre><code>location / {
if (!-f $request_filename){
set $rule_0 1$rule_0;
}
if (!-d $request_filename){
set $rule_0 2$rule_0;
}
if ($rule_0 = &quot;21&quot;){
rewrite ^/(.*)$ /index.php?/$1 last;
}
}</code></pre><p>最后打开域名进行安装和绑定<code>OneDrive</code>了，后台地址：<code>https://xx.com/?/admin</code>，默认密码：<code>oneindex</code>。如果你想给域名加上<code>https</code>安全访问，可以通过域名设置配置一下<code>SSL</code>证书。</p>
<p><strong>3、安装Aria2</strong><br>这里用的逗比的脚本，使用命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Aria2/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</code></pre><p>安装完成后，如果我们想修改密码、下载文件位置、端口的话，可以使用命令<code>bash aria2.sh</code>，再选择修改配置即可，这里建议使用该脚本配置自动更新<code>BT-Tracker</code>服务器，对下载<code>BT</code>有加成。</p>
<p><strong>4、安装AriaNg</strong><br>这一步和安装<code>OneIndex</code>差不多，先添加一个域名，不想用域名的可以在添加域名那里填上<code>IP</code>或者<code>IP:端口</code>，然后将<code>AriaNg</code>程序上传到对应的根目录，可以使用命令：</p>
<pre><code>#这里以添加IP为例
#Debian/Ubuntu系统
apt-get install unzip -y
#CentOS系统
yum install unzip -y

cd /www/wwwroot/11.22.33.44
wget https://www.southcat.net/usr/down/aria-ng-0.2.0.zip &amp;&amp; unzip aria-ng-0.2.0.zip</code></pre><p>这时候我们就可以使用<code>IP</code>访问<code>AriaNg</code>界面了，或者<code>IP:端口</code>，这取决于你添加域名的时候填的什么了。</p>
<h2 id="配置Aria2上传"><a href="#配置Aria2上传" class="headerlink" title="配置Aria2上传"></a>配置Aria2上传</h2><p>这里说下<code>3</code>种自动上传的方法，第<code>1</code>种使用<code>OneIndex</code>程序自带的上传，第<code>2</code>种使用<code>Rclone</code>挂载后自动上传，第<code>3</code>种使用上传脚本，由于前<code>2</code>种上传有<code>BUG</code>，建议使用第<code>3</code>种脚本上传，对于不想折腾的人来说，也可以直接使用第<code>1</code>种方法。</p>
<p><strong>1、OneIndex上传</strong><br>先在<code>/root/.aria2</code>文件夹新建一个上传脚本，命名<code>oneindexup.sh</code>。</p>
<pre><code>#这里也可以使用vi命令，自己看着办
nano /root/.aria2/oneindexup.sh</code></pre><p>将以下代码修改后，复制进脚本：</p>
<pre><code>#!/bin/bash
path=$3 #取原始路径，我的环境下如果是单文件则为/data/demo.png,如果是文件夹则该值为文件夹内某个文件比如/data/a/b/c/d.jpg
downloadpath=&apos;/usr/local/caddy/www/aria2/Download&apos;  #修改成Aria2下载文件夹
domain=&apos;southcat.net&apos;  #修改成自己域名

if [ $2 -eq 0 ]
        then
                exit 0
fi
while true; do  #提取下载文件根路径，如把/data/a/b/c/d.jpg变成/data/a
filepath=$path
path=${path%/*}; 
if [ &quot;$path&quot; = &quot;$downloadpath&quot; ] &amp;&amp; [ $2 -eq 1 ]  #如果下载的是单个文件
    then
    php /www/wwwroot/$domain/one.php upload:file $filepath /$folder/
    rm -rf $filepath
    php /www/wwwroot/$domain/one.php cache:refresh
    exit 0
elif [ &quot;$path&quot; = &quot;$downloadpath&quot; ]
    then
    php /www/wwwroot/$domain/one.php upload:folder $filepath /$folder/
    rm -rf &quot;$filepath/&quot;
    php /www/wwwroot/$domain/one.php cache:refresh
    exit 0
fi
done</code></pre><p>然后再授权：</p>
<pre><code>chmod +x /root/.aria2/oneindexup.sh</code></pre><p>最后在配置文件<code>aria2.conf</code>里加上一行<code>on-download-complete=/root/.aria2/oneindexup.sh</code>，可以直接使用命令：</p>
<pre><code>echo &quot;on-download-complete=/root/.aria2/oneindexup.sh&quot; &gt;&gt;/root/.aria2/aria2.conf
#重启Aria2
service aria2 restart</code></pre><p><strong>2、Rclone挂载上传</strong><br>我们先使用挂载<code>Rclone</code>挂载<code>OneDrive</code>，挂载方法查看：在Debian/Ubuntu上使用rclone挂载OneDrive网盘，然后步骤就和上面的<code>OneIndex</code>上传方法一样了，就是上传脚本不一样，上传脚本如下：</p>
<pre><code>#!/bin/bash
path=$3 #取原始路径，我的环境下如果是单文件则为/data/demo.png,如果是文件夹则该值为文件夹内某个文件比如/data/a/b/c/d.jpg
downloadpath=&apos;/root/Download&apos;  #Aria2下载文件目录
name=&apos;RATS&apos;  #配置Rclone时的name
folder=&apos;VPS&apos;  #网盘里的文件夹

if [ $2 -eq 0 ]
        then
                exit 0
fi
while true; do  #提取下载文件根路径，如把/data/a/b/c/d.jpg变成/data/a
filepath=$path
path=${path%/*}; 
if [ &quot;$path&quot; = &quot;$downloadpath&quot; ] &amp;&amp; [ $2 -eq 1 ]  #如果下载的是单个文件
    then
    rclone move &quot;$filepath&quot; ${name}:${folder}/     
    exit 0
elif [ &quot;$path&quot; = &quot;$downloadpath&quot; ]   #文件夹
    then
    while [[ &quot;`ls -A &quot;$filepath/&quot;`&quot; != &quot;&quot; ]]; do
    rclone move &quot;$filepath&quot;/ ${name}:${folder}/&quot;${filepath##*/}&quot;/ --delete-empty-src-dirs
    done
    rm -rf &quot;$filepath/&quot;
    exit 0
fi
done</code></pre><p><strong>3、使用上传脚本</strong><br>方法参考：VPS上传文件到OneDrive网盘脚本，可配合Aria2实现自动上传。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用静态ffmpeg二进制文件秒安装ffmpeg</title>
    <url>/2207/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们安装很多视频程序的时候都需要用到<code>ffmpeg</code>，差不多都喜欢用编译安装，过程很慢，而且有的系统会因为一些依赖出现很多问题，导致安装失败。有时候就算<code>ffmpeg</code>编译安装成功了，也会因为一些因素导致某些视频程序自动转码失败，比如博主之前发的<code>AVS</code>和<code>PlayTube</code>，不过还好的是被这个静态<code>ffmpeg</code>给拯救了，这里就说下<code>ffmpeg</code>最简单安装方法，就是直接使用编译好的静态<code>ffmpeg</code>二进制文件，无需安装即可使用，间接的可以说是秒安装了。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>安装文档：</strong><a href="https://www.johnvansickle.com/ffmpeg/faq" target="_blank" rel="noopener">https://www.johnvansickle.com/ffmpeg/faq</a></p>
<p><strong>系统要求：</strong><code>CentOS</code>、<code>Debian</code>、<code>Ubuntu</code>等内核至少为<code>2.6.32</code>的<code>Linux</code>系统(内核查看命令<code>uname -r</code>)。</p>
<p>首先我们找到适合自己<code>VPS</code>服务器架构的<code>ffmpeg</code>二进制文件，文件地址：点击查看，建议优先使用<code>git</code>版本，毕竟更新快，如果<code>git</code>没有对应的版本就使用<code>release</code>版本。</p>
<p>安装命令：</p>
<pre><code>#x86下载二进制文件
wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-32bit-static.tar.xz
#x86_64下载二进制文件
wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-64bit-static.tar.xz

#解压文件
tar xvf ffmpeg-git-*-static.tar.xz &amp;&amp; rm -rf ffmpeg-git-*-static.tar.xz

#将ffmpeg和ffprobe可执行文件移至/usr/bin方便系统直接调用
mv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/bin/

#查看版本
ffmpeg
ffprobe</code></pre><p>最后基本上算安装完成了。</p>
<h2 id="相关程序"><a href="#相关程序" class="headerlink" title="相关程序"></a>相关程序</h2><ul>
<li>使用AVS搭建我们的视频/照片/游戏分享平台</li>
<li>使用PlayTube搭建私人的视频网站</li>
<li>免费开源的云转码切片系统express-ffmpeg安装教程</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Aira2下载文件后自动上传到Google Drive网盘</title>
    <url>/2265/</url>
    <content><![CDATA[<p><strong>说明：</strong>网盘挂载方法参考：在Debian/Ubuntu上使用rclone挂载Google Drive网盘，<code>Aira2</code>安装参考：BT种子/磁力链接下载工具：Aria2一键安装管理脚本，以上工作都准备好了后，就可以使用<code>Aria2</code>将文件电影等资源下载到网盘了，鉴于<code>hostloc</code>有大佬说因为某些原因，不能将下载路径默认为<code>Google Drive</code>网盘指定的本地文件夹，就发现了这个方法，能直接在挂载后使用。通过配置项<code>on-download-complete</code>来完成下载文件自动移到<code>Google Drive</code>网盘里。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2018.10.30】
这里分享下萌咖大佬的Aira2上传脚本，不过是精简版，全能版暂不分享，精简版包含以下功能：
1、脚本适用于Rclone挂载的网盘，比如Onedrive/Google Drive等。
2、判断上传文件的文件大小区间。
限制最低上传大小：可防止产生的.aria2后缀文件一起上传到网盘。
限制最高文件大小：适用于Onedrive等，官方限制上传不能超过15G，其它可自行更改其数值。
3、支持文件名中包含空格等特殊字符。</code></pre><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>原理是当下载完后<code>aria2</code>会给脚本传<code>3</code>个参数<code>$1</code>、<code>$2</code>、<code>$3</code>分别为<code>gid</code>、文件数量、文件路径。我们对文件路径这个字符串处理一番就可以达到目的了。</p>
<p>新建脚本文件<code>rcloneupload.sh</code>，并复制下面代码：</p>
<pre><code>#!/bin/bash

GID=&quot;$1&quot;;
FileNum=&quot;$2&quot;;
File=&quot;$3&quot;;
MinSize=&quot;5&quot;  #限制最低上传大小，默认5k
MaxSize=&quot;157286400&quot;  #限制最高文件大小(单位k)，默认15G
RemoteDIR=&quot;/RATS/&quot;;  #rclone挂载的本地文件夹，最后面保留/
LocalDIR=&quot;/download/&quot;;  #Aria2下载目录，最后面保留/

if [[ -z $(echo &quot;$FileNum&quot; |grep -o &apos;[0-9]*&apos; |head -n1) ]]; then FileNum=&apos;0&apos;; fi
if [[ &quot;$FileNum&quot; -le &apos;0&apos; ]]; then exit 0; fi
if [[ &quot;$#&quot; != &apos;3&apos; ]]; then exit 0; fi

function LoadFile(){
  IFS_BAK=$IFS
  IFS=$&apos;\n&apos;
  if [[ ! -d &quot;$LocalDIR&quot; ]]; then return; fi
  if [[ -e &quot;$File&quot; ]]; then
    FileLoad=&quot;${File/#$LocalDIR}&quot;
    while true
      do
        if [[ &quot;$FileLoad&quot; == &apos;/&apos; ]]; then return; fi
        echo &quot;$FileLoad&quot; |grep -q &apos;/&apos;;
        if [[ &quot;$?&quot; == &quot;0&quot; ]]; then
          FileLoad=$(dirname &quot;$FileLoad&quot;);
        else
          break;
        fi;
      done;
    if [[ &quot;$FileLoad&quot; == &quot;$LocalDIR&quot; ]]; then return; fi
    EXEC=&quot;$(command -v mv)&quot;
    if [[ -z &quot;$EXEC&quot; ]]; then return; fi
    Option=&quot; -f&quot;;
    cd &quot;$LocalDIR&quot;;
    if [[ -e &quot;$FileLoad&quot; ]]; then
      ItemSize=$(du -s &quot;$FileLoad&quot; |cut -f1 |grep -o &apos;[0-9]*&apos; |head -n1)
      if [[ -z &quot;$ItemSize&quot; ]]; then return; fi
      if [[ &quot;$ItemSize&quot; -le &quot;$MinSize&quot; ]]; then
        echo -ne &quot;\033[33m$FileLoad \033[0mtoo small to spik.\n&quot;;
        return;
      fi
      if [[ &quot;$ItemSize&quot; -ge &quot;$MaxSize&quot; ]]; then
        echo -ne &quot;\033[33m$FileLoad \033[0mtoo large to spik.\n&quot;;
        return;
      fi
      eval &quot;${EXEC}${Option}&quot; \&apos;&quot;${FileLoad}&quot;\&apos; &quot;${RemoteDIR}&quot;;
    fi
  fi
  IFS=$IFS_BAK
}
LoadFile;</code></pre><p>授权<code>chmod +x rcloneupload.sh</code>，然后再到<code>Aria2</code>配置文件中加上一行<code>on-download-complete=/root/rcloneupload.sh</code>即可，后面为脚本的路径。最后重启<code>Aria2</code>生效。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Aria2下载BT磁力的时候，速度慢或者没速度的解决方法</title>
    <url>/1890/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人使用<code>Aria2</code>下载<code>BT</code>的时候，都会遇到某些种子没有速度，或者速度很慢的问题。其实对于这个问题，之前在博客就已经提到过了，只需要添加<code>BT Tracker</code>服务器就可以解决了，只是没说具体方法，这里就说详细点。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><code>BT Tracker</code>服务器地址获取方法参考：分享一些BT Tracker服务器地址。进入<code>BT Tracker</code>服务器<code>Github</code>获取最新地址，十几个就可以了，然后修改<code>Aria2</code>配置文件<code>aria2.conf</code>，文件地址一般安装教程都有说明，然后添加如下代码：</p>
<pre><code>bt-tracker=BT服务器（多个服务器之间用,分开）
#例如
bt-tracker=udp://tracker.leechers-paradise.org:6969/announce,udp://tracker.pirateparty.gr:6969/announce,udp://tracker.cuntflaps.me:6969/announce</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Aria2+AriaNG+FileManager来进行离线BT下载及在线播放</title>
    <url>/1825/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Aria2</code>之前介绍过很多了，是一款离线下载<code>BT</code>、磁力等的神器，这里手动发一个通过<code>Aria2</code>+<code>AriaNG</code>+<code>FileManager</code>来进行离线<code>BT</code>下载及在线播放的教程，用起来很方便，对于这样的教程之前发了好多了，有兴趣的也还可以试试：使用docker安装Aria2+AriaNg+filerun/Nextcloud，在线下载BT磁链/在线观看/全功能文件管理/云盘应用，本教程所使用的脚本均来自于逗比根据地。</p>
<p><strong>系统要求：</strong><code>CentOS</code>/<code>Debian</code>/<code>Ubuntu</code>，本教程在<code>Debian 7 x64</code>下完美通过。</p>
<h2 id="安装Aria2"><a href="#安装Aria2" class="headerlink" title="安装Aria2"></a>安装Aria2</h2><p>运行以下命令：</p>
<pre><code>wget -N --no-check-certificate https://www.southcat.net/usr/shell/Aria2/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</code></pre><p>记住默认密匙：<code>doub.io</code>，默认下载地址：<code>/usr/local/caddy/www/file</code>，更多参考：<a href="https://www.southcat.net/archives/251/" target="_blank" rel="noopener">https://www.southcat.net/archives/251/</a></p>
<h2 id="安装FileManager"><a href="#安装FileManager" class="headerlink" title="安装FileManager"></a>安装FileManager</h2><p>运行以下命令：</p>
<pre><code>#安装FileManager
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh install http.filebrowser
#建立文件夹
mkdir /usr/local/caddy/www &amp;&amp; mkdir /usr/local/caddy/www/file
#配置ip访问，以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行！
echo &quot;:80 {
 root /usr/local/caddy/www/file
 timeouts none
 gzip
 filebrowser / /usr/local/caddy/www/file {
  database /usr/local/caddy/filebrowser.db
 }
}&quot; &gt; /usr/local/caddy/Caddyfile
#运行
/etc/init.d/caddy start</code></pre><p>安装完成后可以通过<code>ip</code>访问<code>filemanager</code>网盘了，用户名和密码均为<code>admin</code>。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>服务端<code>Aria2</code>和<code>FileManager</code>配置好了后，就可以通过<code>Aria2</code>前端来下载了，网上一堆现成的前端，随便都可以找到，这里推荐<code>AriaNG</code>，使用本博客搭建好的即可！地址：<a href="https://www.southcat.net/Aria2。" target="_blank" rel="noopener">https://www.southcat.net/Aria2。</a></p>
<p>首先我们打开前端地址，填入<code>ip</code>和密匙进行连接。<br><img src="https://www.southcat.net/usr/picture/Aria2__(1).png" alt="请输入图片描述" title="请输入图片描述"><br>再点击新建进行直链或者种子<code>BT</code>下载。<br><img src="https://www.southcat.net/usr/picture/Aria2__(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>下载完成后就可以通过网盘预览观看了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Caddy申请免费的Let’s Encrypt泛域名SSL证书</title>
    <url>/2367/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前看到有人问了下<code>Caddy</code>怎么申请<code>Let’s Encrypt</code>泛域名<code>SSL</code>证书，就翻了下官方文档了解下，发现比用<code>Nginx</code>申请的过程简单很多，这里就发下方法。如果有人需要<code>Nginx</code>申请的方法，可以看下博主很久前发过的<code>Nginx</code>申请教程→传送门。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><code>Caddy</code>支持以下<code>DNS</code>服务商，所以需要提前将你的域名<code>DNS</code>服务器转移到指定服务商。</p>
<pre><code>cloudflare、cloudxns、dnspod、gandi/gandiv5、godaddy、namecheap、vultr、googlecloud、auroradns、azure、    digitalocean、dnsimple、dnsmadeeasy、dyn、lightsail、linode、ns1、namedotcom、ovh、otc、pdns、rackspace、rfc2136、route53</code></pre><h2 id="申请"><a href="#申请" class="headerlink" title="申请"></a>申请</h2><p>由于博主的域名<code>DNS</code>都在<code>CloudFlare</code>，所以下面以<code>CF</code>为例。</p>
<p><strong>1、安装Caddy</strong></p>
<pre><code>curl https://getcaddy.com | bash -s personal tls.dns.cloudflare</code></pre><p>后面的<code>tls.dns.cloudflare</code>为<code>cloudflare</code>的插件，如果你是其它<code>DNS</code>服务商就需要替换下插件参数，比如：</p>
<pre><code>tls.dns.auroradns
tls.dns.azure
tls.dns.cloudflare
tls.dns.cloudxns
tls.dns.digitalocean
tls.dns.dnsimple
tls.dns.dnsmadeeasy
tls.dns.dnspod
tls.dns.dyn
tls.dns.exoscale
tls.dns.gandi
tls.dns.gandiv5
tls.dns.godaddy
tls.dns.googlecloud
tls.dns.lightsail
tls.dns.linode
tls.dns.namecheap
tls.dns.ns1
tls.dns.otc
tls.dns.ovh
tls.dns.powerdns
tls.dns.rackspace
tls.dns.rfc2136
tls.dns.route53i
tls.dns.vultr</code></pre><p><strong>2、设置环境变量</strong><br>以下为<code>Caddy</code>申请通配符时所需要的<code>DNS</code>服务商的环境变量。</p>
<pre><code>#Aurora DNS by PCExtreme
AURORA_USER_ID
AURORA_KEY
AURORA_ENDPOINT(optional)

#Azure DNS
AZURE_CLIENT_ID
AZURE_CLIENT_SECRET
AZURE_SUBSCRIPTION_ID
AZURE_TENANT_ID

#Cloudflare
CLOUDFLARE_EMAIL
CLOUDFLARE_API_KEY

#CloudXNS
CLOUDXNS_API_KEY
CLOUDXNS_SECRET_KEY

#DigitalOcean
DO_AUTH_TOKEN

#DNSimple
DNSIMPLE_EMAIL
DNSIMPLE_OAUTH_TOKEN

#DNS Made Easy
DNSMADEEASY_API_KEY
DNSMADEEASY_API_SECRET
DNSMADEEASY_SANDBOX(true/false)

#DNSPod
DNSPOD_API_KEY

#DynDNS
DYN_CUSTOMER_NAME
DYN_USER_NAME
DYN_PASSWORD

#Gandi/Gandiv5
GANDI_API_KEY/GANDIV5_API_KEY

#GoDaddy
GODADDY_API_KEY
GODADDY_API_SECRET

#Google Cloud DNS    
GCE_PROJECT
GCE_DOMAIN
GOOGLE_APPLICATION_CREDENTIALS

#Lightsail by AWS
AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY
AWS_SESSION_TOKEN(optional)
DNS_ZONE(optional)

#Linode
LINODE_API_KEY

#Namecheap
NAMECHEAP_API_USER
NAMECHEAP_API_KEY

#NS1
NS1_API_KEY

#Open Telekom Cloud Managed DNS
OTC_DOMAIN_NAME
OTC_USER_NAME
OTC_PASSWORD
OTC_PROJECT_NAME
OTC_IDENTITY_ENDPOINT(optional)

#OVH
OVH_ENDPOINT
OVH_APPLICATION_KEY
OVH_APPLICATION_SECRET
OVH_CONSUMER_KEY

#PowerDNS
PDNS_API_URL
PDNS_API_KEY

#Rackspace
RACKSPACE_USER
RACKSPACE_API_KEY

#RFC2136
RFC2136_NAMESERVER
RFC2136_TSIG_ALGORITHM
RFC2136_TSIG_KEY
RFC2136_TSIG_SECRET

#Route53 by AWS    
AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY

#Vultr
VULTR_API_KEY</code></pre><p>这些变量值可以在<code>DNS</code>服务商账户中查找，一般在设置什么的地方。然后这里以<code>CloudFlare</code>为例，先登录账号，然后再去获取<code>API</code>，<code>API</code>获取地址：<code>https://www.cloudflare.com/a/profile</code>。<br><img src="https://www.southcat.net/usr/picture/CaddysqSSL(1).png" alt="请输入图片描述" title="请输入图片描述"><br>再使用命令设置环境变量：</p>
<pre><code>export CLOUDFLARE_API_KEY=&quot;4993d7315d4c72770242357da&quot;  #CloudFlare账户API
export CLOUDFLARE_EMAIL=&quot;moerats@live.com&quot;  #CloudFlare账户邮箱</code></pre><p><strong>3、获取通配符</strong><br>先新建配置文件，使用命令：</p>
<pre><code>#将域名修改为自己的，然后将下面全部一起复制到SSH客户端运行
echo &quot;*.southcat.net {
tls {
    dns cloudflare
}
}&quot; &gt; Caddyfile</code></pre><p>这里如果你是其它<code>DNS</code>服务商就需要修改<code>dns</code>后面的参数，也就是服务商名称，均用小写字母，可以参考步骤<code>1</code>安装<code>caddy</code>的插件参数，比如插件为<code>tls.dns.auroradns</code>，那就用<code>dns auroradns</code>参数。</p>
<p>然后启动<code>Caddy</code>：</p>
<pre><code>caddy -conf Caddyfile</code></pre><p>接下来几秒钟后，会自动给你生成一个通配符<code>SSL</code>证书，证书存放路径为：</p>
<pre><code>~/.caddy/acme/acme-v02.api.letsencrypt.org/sites/wildcard_.southcat.net</code></pre><p>此时你就可以使用<code>crt</code>和<code>key</code>文件为你的所有子域名配置<code>SSL</code>了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用cdn-manager自建CDN服务器，支持处理图片/缓存视频等资源</title>
    <url>/2260/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>cdn-manager</code>是云转码express-ffmpeg的作者<code>quazero</code>根据@dadi/cdn制作的脚手架，该原理貌似是一个<code>API</code>服务，搭建好的<code>CDN</code>服务器第一次访问你设定的网站后，会将原站一些资源缓存到服务器，而且不仅仅可以缓存<code>jpg</code>、<code>css</code>、<code>js</code>等，就连<code>ts</code>、<code>m3u8</code>、<code>mp4</code>也可以缓存，默认是缓存一个小时，但可以设置永久缓存。并且当你的并发很高，硬盘<code>IO</code>跟不上的时候，就把图片转换成二进制存内存里边。更强的就是还可以给图片加参数，如高宽、格式、滤镜、比例、旋转等，然后拉取图片后按要求处理，再实时返回你需要的图片并缓存到服务器。有需求的可以使用延迟比较低的服务器搭建下，可以减轻我们源站压力，特别是并发比较高的网站。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>cdn-manager：</strong><a href="https://gitee.com/quazero/cdn-manager" target="_blank" rel="noopener">https://gitee.com/quazero/cdn-manager</a><br><strong>dadi/cdn：</strong><a href="https://github.com/dadi/cdn" target="_blank" rel="noopener">https://github.com/dadi/cdn</a></p>
<p>本教程适用于<code>CentOS</code>，建议使用<code>CentOS 7</code>系统。</p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#升级系统
yum update -y
#安装开发者工具包
yum -y groupinstall &quot;Development Tools&quot;
#安装nodejs
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs -y
#安装pm2
npm install pm2 -g</code></pre><p><strong>2、安装程序</strong></p>
<pre><code>#拉取源码
git clone https://gitee.com/quazero/cdn-manager.git
cd cdn-manager
#安装
npm install
#设置环境
export NODE_ENV=production</code></pre><p><strong>3、配置参数</strong></p>
<pre><code>注意：本步骤讲的默认配置只缓存图片，所以我们要了解下基本配置，然后再去参考文章最后面的更多设置，再使用4步骤运行程序。</code></pre><p>本程序主要涉及到<code>2</code>个配置文件<code>poster.json</code>和<code>config.production.json</code>，前者是图片处理的配置文件，后者是运行环境配置文件。</p>
<p>图片配置路径<code>workspace/recipes/poster.json</code>，默认参数如下：</p>
<pre><code>{
  &quot;recipe&quot;: &quot;poster&quot;,
  &quot;settings&quot;: {
    &quot;format&quot;: &quot;jpg&quot;,
    &quot;quality&quot;: &quot;90&quot;,
    &quot;height&quot;: &quot;240&quot;,
    &quot;ratio&quot;: &quot;16-9&quot;,
    &quot;resizeStyle&quot;: &quot;entropy&quot;
  }
}</code></pre><p>意思是将图片处理成<code>16：9</code>的比例，高度<code>240PX</code>，并且格式为<code>jpg</code>，质量为<code>90%</code>的格式。</p>
<p>运行环境配置路径<code>config/config.production.json</code>，默认参数如下：</p>
<pre><code>{
  &quot;server&quot;: {
    &quot;host&quot;: &quot;127.0.0.1&quot;,
    &quot;port&quot;: 8001
  },
  &quot;images&quot;: {
    &quot;remote&quot;: {
      &quot;enabled&quot;: true,
      &quot;path&quot;: &quot;#&quot;
    }
  }
}</code></pre><p>意思是运行端口为<code>8001</code>，设置远程连接<code>path</code>，比如我的域名是<code>https://www.southcat.net</code>，就在参数后面填该域名。</p>
<p><strong>4、运行程序</strong></p>
<pre><code>#进入源码的文件夹
cd /root/cdn-manager
#这里避免出错，建议安装一些模块
npm install sharp farmhash
#运行
pm2 start index.js</code></pre><h2 id="运行环境配置"><a href="#运行环境配置" class="headerlink" title="运行环境配置"></a>运行环境配置</h2><p><strong>1、缓存设置</strong></p>
<pre><code>&quot;caching&quot;: {
  &quot;ttl&quot;: 3600,
  &quot;expireAt&quot;: &quot;0 5 0 * * *&quot;
}</code></pre><p><code>expireAt</code>配置解释：</p>
<pre><code>&quot;0 5 0 * * _&quot; 每天凌晨12点5分刷新缓存
&quot;0 30 11 _ _ 1-5&quot; 每周星期一到星期五 早上11点30刷新缓存
&quot;0 15 14 1 _ _&quot; 每个月一号下午2点15刷新缓存
&quot;0 22 _ _ 1-5&quot; 周一到周五晚上10点刷新缓存
&quot;_ 5 4 * * 0&quot; 每周日凌晨4点5分刷新缓存</code></pre><p><code>ttl</code>配置解释：</p>
<pre><code>单位秒，默认3600秒，一个小时缓存失效，可以自行设置时长。
/api/flush可以通过这个API手动刷新缓存文件。</code></pre><p><strong>2、image配置</strong></p>
<pre><code>&quot;images&quot;: {
  &quot;directory&quot;: {
    &quot;enabled&quot;: true,
    &quot;path&quot;: &quot;relative/path/to/your/images&quot;
  },
  &quot;remote&quot;: {
    &quot;enabled&quot;: true,
    &quot;path&quot;: &quot;https://www.southcat.net/images&quot;
  },
  &quot;s3&quot;: {
    &quot;enabled&quot;: true,
    &quot;accessKey&quot;: &quot;your-access-key&quot;,
    &quot;secretKey&quot;: &quot;your-secret&quot;,
    &quot;bucketName&quot;: &quot;your-bucket&quot;,
    &quot;region&quot;: &quot;your-region&quot;,
    &quot;endpoint&quot;: &quot;ams3.digitaloceanspaces.com&quot;
  }
}</code></pre><p><code>images</code>配置项 一共有三种用法，一种是直接服务同主机图片，服务本地图片，一种是服务远程图片，最后一种是亚马逊和<code>Digital Ocean Space</code>云储存。</p>
<p><code>directory</code>服务本地文件，直接指定<code>path</code>为文件夹地址即可直接处理本地图片。例如<code>/www/southcat.net/picture</code>，然后将图片地址<code>host</code>更改为<code>CDN</code>地址即可。</p>
<p><code>remote</code>服务远程文件，直接设置<code>path</code>为远程<code>url</code>，例如<code>https://www.southcat.net</code>，最后把地址替换成 <code>cdn</code>地址即可。</p>
<p><code>s3</code>云储存可扩展的云储存，可以直接缓存各种云储存上边的图片。</p>
<p><strong>3、assets配置</strong></p>
<pre><code>&quot;assets&quot;: {
  &quot;directory&quot;: {
    &quot;enabled&quot;: true,
    &quot;path&quot;: &quot;/Users/absolute/path/to/your/assets&quot;
  }
}</code></pre><p>该配置方法参考<code>image</code>配置，除了把<code>images</code>换成<code>assets</code>，其他用法一样，设置之后会缓存除了<code>jpg</code>的各种文件，包括视频文件。</p>
<h2 id="图片处理配置"><a href="#图片处理配置" class="headerlink" title="图片处理配置"></a>图片处理配置</h2><pre><code>{
  &quot;recipe&quot;: &quot;poster&quot;,
  &quot;settings&quot;: {
    &quot;format&quot;: &quot;jpg&quot;,
    &quot;quality&quot;: &quot;90&quot;,
    &quot;height&quot;: &quot;240&quot;,
    &quot;ratio&quot;: &quot;16-9&quot;,
    &quot;resizeStyle&quot;: &quot;entropy&quot;
  }
}</code></pre><p><code>recipe</code>文件是预配置格式处理文件，在<code>workspace/recipes</code>文件夹中建立。</p>
<p><code>&quot;recipe&quot;</code>参数设置必须和文件名一致。<code>settings</code>中可以设置的选项：</p>
<pre><code>blur 模糊
filter 设置裁剪处理算法
flip 翻动
format 格式
gravity 设置裁剪区域
ratio 比例
rotate 旋转
width 宽度
height 高度</code></pre><p><code>resizeStyle</code>裁剪模式 推荐<code>entropy</code>等，详见dadi/cdn文档。</p>
<p>设置完成之后，比如<code>recipe</code>为<code>poster</code>，则访问链接为<code>cdnhost/poster/yourpath/1.jpg</code>。</p>
<h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>要想正常访问就需要使用域名反代，这里说下宝塔反代和<code>Caddy</code>反代。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:8001</code>，再启用反向代理即可。至于启用<code>SSL</code>就不说了，直接在站点配置就可以看到。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;xx.com {
 gzip
 proxy / http://127.0.0.1:8001
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;xx.com {
 gzip
 tls admin@southcat.net
 proxy / http://127.0.0.1:8001
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start


原图片地址为：https://www.southcat.net/rats.jpg
CDN中地址为：https://cdn.southcat.net/poster/rats.jpg，该链接会自动处理图片

#如果你不想对图片进行处理，直接代替原域名就可以了，如：
https://cdn.southcat.net/rats.jpg

#其他资源就直接替换域名为CDN地址即可</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用CoolQ Telegram Bot X转发/合并QQ群和Telegram群之间的消息</title>
    <url>/2295/</url>
    <content><![CDATA[<p><strong>说明：</strong>近些年<code>Telegram</code>聊天软件受到了许多人喜爱，甚至使用时间上超过了<code>QQ</code>，但是有着那些离不开<code>QQ</code>的人，两边经常切换貌似有点不方便，这里就分享个整合系统<code>CoolQ Telegram Bot X</code>，可以在<code>Telegram</code>群收发<code>QQ</code>群消息！这样我们就可以在电报上收到<code>QQ</code>群消息以及发送。支持图片、发送表情等功能。</p>
<pre><code>#通过该系统，我们可以实现：
TG群和QQ群相互转发，
TG群单向转发到QQ群，
QQ群单向转发到TG群，
TG A群单向转发到TG B群，
QQ A群单向转发到QQ B群。</code></pre><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>CoolQ Telegram Bot X</code>是一个消息转发机器人。它能够实现<code>QQ</code>/<code>Telegram</code>群组之间的消息转发。仅需简单的配置，就能方便的定制属于自己的转发逻辑。想要连接<code>QQ</code>群和<code>Telegram</code>群组，或者合并多个群组的消息？一个<code>CoolQ Telegram Bot X</code>就能满足你。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/CoolQ_TG(1).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><pre><code>#深度集成
CoolQ Telegram Bot X集成了QQ机器人和Telegram机器人。酷Q Message SDK保证了每一条QQ消息都能稳定和可靠的接收和发送。基于官方Telegram Bot API的Telegram C++ SDK ，强力驱动收发Telegram的多种消息。消息转发逻辑处理单元会根据转发配置，将QQ机器人或Telegram机器人接收到的消息转发到相应的群组。

两个消息处理SDK和消息转发逻辑处理单元均被打包进一个酷Q插件。启动酷Q，启用CoolQ Telegram Bot X插件，一切就是这么简单)

#多向转发
CoolQ Telegram Bot X支持多种转发类型。不管是QQ转发到Telegram，还是Telegram转发到QQ，都能正确的解析和转发消息。当然了， QQ转发到QQ以及Telegram转发到Telegram同样支持，帮助你管理和合并不同群组的消息。

在一些情况下，你可能需要单向消息转发，而不是双向转发。不用担心，CoolQ Telegram Bot X贴心的考虑到了这一点，轻松胜任单向消息转发。

#智能转换
你可能已经发现，QQ表情是一种特殊的文字。这难不倒CoolQ Telegram Bot X，在转发到Telegram群组时，它会自动将QQ表情转换为对应的emoji。在未来的计划中，我们将提供更多特殊消息内容的解析和智能转换。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装酷Q机器人</strong><br><code>Windows</code>系统请直接从<code>酷Q</code>官方网站下载软件：点击访问，然后安装<code>酷Q</code>。<br><code>Linux</code>系统查看教程：使用Docker安装Wine-CoolQ，并运行酷Q 。</p>
<pre><code>#酷Q有两个版本
Air版可以免费使用，但只支持发送文字消息。
Pro版是收费软件，需要支付授权费用后才能进行使用。Pro版支持更多的功能。

#目前Air版足够使用。以后可能会调用Pro版提供的功能，实现更智能的消息解析和转发。</code></pre><p><strong>2、下载CTBX插件</strong><br>首先下载最新版的<code>CoolQ Telegram Bot X</code>插件→下载地址，解压出来后，我们会获取到一个<code>cpk</code>格式插件和配置文件，分别放入<code>酷Q根目录/app/</code>和<code>酷Q根目录/app/top.jogle.ctbx/config/</code>里，并重新命名配置文件<code>config.json</code>。</p>
<p>这里以博主提供的<code>Docker</code>安装酷<code>Q</code>为例，酷<code>Q</code>根目录被映射到了外部的<code>/coolq</code>文件夹，可以直接使用命令：</p>
<pre><code>#下载CTBX插件，如果插件有更新记得替换下载链接
wget https://github.com/JogleLew/coolq-telegram-bot-x/releases/download/10.2.1/top.jogle.ctbx.zip
#解压插件
unzip top.jogle.ctbx.zip
#新建配置文件存放文件夹
mkdir -p /coolq/app/top.jogle.ctbx/config/
#移动插件
mv top.jogle.ctbx.cpk /coolq/app/
#移动配置文件并重新命名
mv config/config_example.json /coolq/app/top.jogle.ctbx/config/config.json
#清理垃圾
rm -rf top.jogle.ctbx.zip config
#给文件夹权限
chmod 777 /coolq/app/top.jogle.ctbx</code></pre><p>解压文件的时候，如果出现<code>-bash: unzip: command not found</code>，需要运行命令：</p>
<pre><code>#CentOS系统
yum -y install unzip

#Debian/Ubuntu系统
apt install unzip -y</code></pre><p><strong>3、配置插件</strong></p>
<pre><code>提示：这里配置文件有个地方的格式有点小错误，在第3个和第4个规则之间缺个逗号“,”，记得在后面编辑的时候补齐，不然运行会报错。</code></pre><p>接下来我们还需要编辑<code>config.json</code>配置文件，需要用到的参数有：</p>
<pre><code>Bot_Token(Telegram机器人的Token)，Bot_QQ(酷Q登录的机器人QQ)，QQ群号码和Telegram群ID。</code></pre><p><code>Telegram</code>的<code>Token</code>获取方法如下：</p>
<pre><code>1、在Telegram关注@BotFather
2、再到对话框依次输入：/start=&gt;/newbot，然后会要你给机器人命名(如：MoeratsBot)，命名完成会给你一个Token。
3、为了顺利使用，还需要输入/mybots，然后依次选择Bot Settings=&gt;Group Privacy=&gt;Turn off。</code></pre><p><code>Telegram</code>群<code>ID</code>获取方法如下：</p>
<pre><code>1、新建一个Telegram群，然后把你的机器人拉进群
2、发送一条消息并@下机器人，比如：/my_id @MoeratsBot
3、在浏览器输入https://api.telegram.org/botxx:xx/getUpdates(其中xx:xx为Token)，然后会返回类似信息：&quot;chat&quot;:{&quot;id&quot;:-2265968,&quot;title&quot;:&quot;MOERATS&quot;。此时的-2265968就为群ID。</code></pre><p>这时候参数都有了，然后开始编辑配置文件：</p>
<pre><code>#不习惯用命令编辑的，可以直接通过FTP登录VPS，再找到文件进行编辑
nano /coolq/app/top.jogle.ctbx/config/config.json</code></pre><p>依次填入相应的参数信息，参考图如下：<br><img src="https://www.southcat.net/usr/picture/CoolQ_TG(2).png" alt="请输入图片描述" title="请输入图片描述"><br>部分参数解释：</p>
<pre><code>#From_Group和To_Group
转发的来源群组和目标群组，这里对于Tg群需要输入chat_id，QQ群需要输入群号。

#Type
转发方式，目前支持所有的转发方式，即：T&lt;-&gt;Q、T-&gt;Q、Q-&gt;T、Q-&gt;Q、T-&gt;T，其中默认左边的为From_Group右边的是To_Group，也就是说Q&lt;-&gt;T和T&lt;-&gt;Q是不等价的，如果是T&lt;-&gt;Q的话TG群的id应该写在From_Group，而如果是Q&lt;-&gt;T的话QQ群号应该写在From_Group。

完全重复的转发规则后者会取代前者，同一个群组可以被应用于不同的转发规则上，说简单点就是一张有向图。

举例：
T&lt;-&gt;Q：QQ群1和TG群2相互转发
Q&lt;-&gt;T：TG群3和QQ群4相互转发
T-&gt;Q：TG群5单向转发到QQ群6
Q-&gt;T：QQ群7单向转发到TG群8
Q-&gt;Q：QQ群9单向转发到QQ群10
T-&gt;T：TG群11单向转发到TG群12</code></pre><p>编辑好了后，使用<code>Ctrl+x</code>，<code>y</code>保存退出。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用CommentToMail插件给博客配置邮件通知评论功能，附带美化版样式</title>
    <url>/2229/</url>
    <content><![CDATA[<p><strong>说明：</strong>由于很多人希望博主给配置个邮件提醒功能，拖了很久才配置好了，网上找了很多插件都不行，这里就分享个由致远博主修改的<code>CommentToMail V4.1.2</code>插件，顺便将邮件界面样式给替换成了美化版样式，然后水篇使用教程，且只适用于<code>Typecho</code>博客。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/CommentToMail(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/CommentToMail(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先下载插件：CommentToMail.zip，解压上传到<code>/usr/plugins</code>目录，再编辑主题模板<code>comments.php</code>文件，在评论框的<code>input</code>下方插入以下代码：</p>
<pre><code>&lt;input type=&quot;hidden&quot; name=&quot;receiveMail&quot; id=&quot;receiveMail&quot; value=&quot;yes&quot; /&gt;</code></pre><p><img src="https://www.southcat.net/usr/picture/CommentToMail(3).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>注意：</strong>本博客使用的<code>Handsome</code>主题自<code>4.1.x</code>版本开始可以不用修改该文件。</p>
<p>接下来就在后台开启插件，然后设置插件，填写<code>smtp</code>服务器地址、邮箱地址、密码等信息。</p>
<pre><code>#博主使用的是QQ邮箱，可以通过设置-账户-开启smtp。插件设置请将ssl加密打勾。
smtp服务器地址：smtp.qq.com
SMTP端口：465
SMTP用户：邮箱账户
SMTP密码：开启smtp时获取的授权码


#如果你不想用监控，可以使用某大佬修改的评论邮箱插件，该版本不需要监控
下载地址：https://www.southcat.net/usr/down/CommentToMail-2.1.0.zip
插件来源：https://gxggxl.cn/24.html</code></pre><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><pre><code>插件修改：https://blog.uniartisan.com/archives/CommentToMail.html
美化版来源：https://www.liuguogy.com/archives/typecho-commenttomail-mail-style.html</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用crt和ca-bundle文件给网站配置ssl证书教程</title>
    <url>/1571/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前看到<code>namecheap</code>搞的免费换一年<code>Comodo ssl</code>证书活动，就去搞了一年，申请下来的证书文件就<code>ca-bundle</code>和<code>crt</code>文件，习惯用<code>crt</code>和<code>key</code>文件来配置<code>ssl</code>证书的我，就直接无视了<code>ca-bundle</code>文件，估计很多人也会和我一样，于是用<code>crt</code>文件和之前生成的<code>key</code>文件配置<code>ssl</code>后，会发现有的浏览器提示不安全，查了下问题后，发现证书链不完整导致的，感觉不能忽视<code>ca-bundle</code>文件，就胡乱折腾，最后给整好了。这里把方法分享下。</p>
<p>首先需要将颁发的<code>crt</code>和<code>ca-bundle</code>文件合并成一个新<code>crt</code>文件，登录<code>vps</code>运行命令：</p>
<pre><code>cat xxx.crt xxx.ca-bundle &gt; new.crt  #crt和ca-bundle文件位置填对</code></pre><p>然后用新的<code>crt</code>做证书文件，<code>key</code>还是用之前生成的！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker安装Aria2+AriaNg+Filebrowser+Plex，离线BT下载/建立私人影院</title>
    <url>/2277/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主逛了下<code>Github</code>，发现许久以前的老司机优化项目这几天又新增了<code>Plex</code>视频服务器，对于<code>Plex</code>不熟悉的，可以看下博主很久前发的文章：建立你的私人在线影库：Plex搭建教程。作者在<code>Plex</code>的基础上也加了<code>Filebrowser</code>，大概是方便我们直接下载资源，这里就分享下。</p>
<pre><code>#通过本Docker组合可以实现
下载视频-&gt;文件管理-&gt;视频播放-&gt;分享/远程投屏集一体的解决方案。 分别对应的组件为:
aria2-&gt;FileBrowser-&gt;FileBrowser/plex-&gt;plex app/DLNA/Chrome cast/Apple airdrop等等。</code></pre><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Docker_Plex(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Docker_Plex(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Docker_Plex(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/wahyd4/aria2-ariang-x-docker-compose" target="_blank" rel="noopener">https://github.com/wahyd4/aria2-ariang-x-docker-compose</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Docker Compose</strong></p>
<pre><code>curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
#验证是否安装成功
docker-compose --version
#返回以下类似信息即安装成功
docker-compose version 1.x</code></pre><p><strong>3、安装Plex</strong></p>
<pre><code>#新建文件夹存放yml和资源文件夹
mkdir Plex &amp;&amp; cd Plex
#下载docker-compose.yml
wget https://raw.githubusercontent.com/wahyd4/aria2-ariang-x-docker-compose/master/plex-filebrowser/docker-compose.yml</code></pre><p>再访问<a href="https://www.plex.tv/claim" target="_blank" rel="noopener">https://www.plex.tv/claim</a> 获取<code>TOKEN</code>，编辑<code>docker-compose.yml</code>文件，将<code>PLEX_CLAIM</code>参数后面的改成你获取的<code>TOKEN</code>。</p>
<p>然后安装镜像：</p>
<pre><code>docker-compose up -d</code></pre><h2 id="相关信息"><a href="#相关信息" class="headerlink" title="相关信息"></a>相关信息</h2><pre><code>Plex地址：http://ip:32400
FileBrowser地址：http://ip:8000
Ariang地址：http://ip:8000/Aria2/  #会自动连上Aria2，无需密码

下载后的文件会存放在/root/Plex文件夹</code></pre><p>如果我们<code>Web</code>界面进不去，可以使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8000 -j ACCEPT
iptables -I INPUT -p tcp --dport 6800 -j ACCEPT
iptables -I INPUT -p tcp --dport 32400 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8000/tcp --permanent
firewall-cmd --zone=public --add-port=6800/tcp --permanent
firewall-cmd --zone=public --add-port=32400/tcp --permanent
firewall-cmd --reload</code></pre><h2 id="相关Docker镜像"><a href="#相关Docker镜像" class="headerlink" title="相关Docker镜像"></a>相关Docker镜像</h2><ul>
<li>使用Docker安装Aria2+AriaNg+Filebrowser</li>
<li>使用Docker安装Aria2+AriaNg+h5ai</li>
<li>使用Docker安装Aria2+AriaNg+Filerun/Nextcloud</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker安装Aria2+AriaNg+Filebrowser，可离线BT下载/在线播放</title>
    <url>/2238/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主好像水了很多离线<code>BT</code>下载的<code>Docker</code>镜像，刚好还有<code>Filebrowser</code>文件管理没水，<code>Filebrowser</code>估计很多人没听过但用过，之前就叫<code>FileManager</code>，只是改名了而已，该文件管理器很强大，有在线<code>PDF</code>、图片、视频浏览、上传下载、打包下载等功能。博主就自己用<code>alpine</code>系统给制作了个<code>Docker</code>镜像，这里就分享下，顺便把一键脚本和手动安装也水下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Aria2_File(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Aria2_File(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong><br>使用以下命令：</p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Aria2+AriaNg+Filebrowser</strong></p>
<pre><code>#由于我们可以直接在Filebrowser里进行删减文件，所以这里就暂时不把下载目录映射出来了
docker run --name ccaa -d -p 6800:6800 -p 6080:6080 moerats/ccaa:latest</code></pre><p>然后就安装好了。</p>
<pre><code>#大致信息如下
AriaNg界面：http://ip:6080
访问界面用户名密码分别为：admin、moerats
Aria2密匙：moerats
Filebrowser访问地址：http://ip:6080/admin，也可以通过AriaNg界面上方的文件管理按钮进入</code></pre><p>如果我们<code>Web</code>界面进不去，就需要开启防火墙，一般出现在<code>CentOS 6/7</code>。</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 6080 -j ACCEPT
iptables -I INPUT -p tcp --dport 6800 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=6080/tcp --permanent
firewall-cmd --zone=public --add-port=6800/tcp --permanent
firewall-cmd --reload</code></pre><h2 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h2><p>如果你是<code>OpenVZ</code>架构的服务器是自然不能用<code>Docker</code>的，所以这里就提供小<code>Z</code>大佬的一键脚本。</p>
<p>运行命令：</p>
<pre><code>#只支持CentOS系统
yum -y install wget unzip curl
wget https://github.com/helloxz/ccaa/archive/master.zip
unzip master.zip &amp;&amp; cd ccaa-master &amp;&amp; sh ccaa.sh</code></pre><p>然后就自己输入访问界面用户名和密码，<code>Aria2</code>密匙，等等。</p>
<pre><code>#访问信息如下
AriaNg界面：http://ip:6080
Filebrowser访问地址：http://ip:6080/admin，也可以通过AriaNg界面上方的文件管理按钮进入</code></pre><p>如果你运行脚本途中出现错误，请去小<code>Z</code>大佬博主留言→传送门。</p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p>如果你是非<code>CentOS</code>系统，也不想/不能用<code>Docker</code>的话，可以查看博主很久以前水的一篇手动安装教程→传送门。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker安装OneDrive网盘管理工具PyOne</title>
    <url>/2287/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>PyOne</code>程序在之前的文章就介绍过了→点击查看，作者更新挺频繁的，最近增加了多网盘后，用的人也变多了。目前新增加一个离线下载功能，使用的是<code>Aria2</code>，挺给力的。这里博主就提供个<code>Docker</code>镜像，不会手动安装的，可以试试。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.3.13】
更新至4.0
【2018.11.30】
替换Aria2为某大佬编译的多线程版本，其特点可以将下载速度最大化优化。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/iiiiiii1/Docker-PyOne" target="_blank" rel="noopener">https://github.com/iiiiiii1/Docker-PyOne</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装PyOne</strong></p>
<pre><code>#拉取Dockerfile相关文件
git clone https://github.com/iiiiiii1/Docker-PyOne.git
#进入文件夹下载Pyone源码
cd Docker-PyOne
git clone https://github.com/abbeyokgo/PyOne.git</code></pre><p>如果你要修改<code>PyOne</code>后台密码和增加更多的网盘，可以提前编辑<code>self_config.py.sample</code>，不修改就默认。也可以修改下<code>Aria2</code>配置文件，与路径有关的参数别改，密匙什么的都可以改，不改的话默认<code>moerats</code>。</p>
<pre><code>#构建镜像
docker build -t moerats/pyone .
#启动镜像
docker run -d -p 34567:34567 --name pyone moerats/pyone:latest</code></pre><p>最后访问<code>ip:34567</code>即可，后台路径<code>/admin</code>，密码<code>PyOne</code>，具体使用方法查看→点击查看；如果你要使用域名访问，可以查看该教程→传送门，直接参考后面的域名访问即可。</p>
<pre><code>#这里也可以通过重启镜像来重启PyOne程序
#启动镜像
docker start pyone
#重启镜像
docker restart pyone</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker安装OpenTracker，自建BT Tracker服务器</title>
    <url>/2218/</url>
    <content><![CDATA[<p><strong>说明：</strong>刚刚在<code>LALA</code>大佬博客闲逛了下，看到了个使用<code>OpenTracker</code>搭建<code>Tracker</code>服务器教程，据说该工具性能很强，就连全球最大的<code>BT</code>服务器海盗湾也在使用，这里虽然博主用不到，但考虑到有人会用到，就专门制作了一个<code>OpenTracker</code>的<code>Docker</code>镜像，毕竟博主对<code>BT</code>之类的更偏向于<code>Docker</code>，基本不到<code>1</code>分钟就可以搭建好一个<code>BT Tracker</code>服务器，有兴趣的也可以玩玩。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Docker</strong><br>使用以下命令：</p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装OpenTracker</strong><br>运行命令：</p>
<pre><code>docker run --name tracker-server -d -p 6666:6666 -p 6666:6666/udp moerats/tracker-server:latest</code></pre><p>如果你服务器上的<code>6666</code>端口正在被使用，而<code>7777</code>没被使用，那就改成<code>7777:6666</code>参数后再运行。</p>
<p>对于某些系统可能还需要开启防火墙端口，比如<code>CentOS 7</code>，开启命令：</p>
<pre><code>firewall-cmd --zone=public --add-port=6666/tcp --permanent
firewall-cmd --zone=public --add-port=6666/udp --permanent
firewall-cmd --reload</code></pre><p><strong>3、使用方法</strong><br>我们在制作种子添加<code>Tracker</code>服务器时，可以填：</p>
<pre><code>http://IP:6666/announce
或者：
udp://IP:6666/announce</code></pre><p>也可以同时添加<code>http</code>和<code>udp</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装Aria2+AriaNg+Filerun/Nextcloud，在线下载BT磁链/在线观看/全功能文件管理/云盘应用</title>
    <url>/1672/</url>
    <content><![CDATA[<h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>首先得感谢，<code>@Jaeger</code>几天前发布的帖子：老司机使用<code>docker-pan</code>一键搭建可离线磁力种子的私有云盘,可在线播放预览文件 -&gt;<a href="https://www.v2ex.com/t/383801" target="_blank" rel="noopener">https://www.v2ex.com/t/383801</a></p>
<p>谢谢!</p>
<p>正是受这个帖子的影响。也是因为使用了那个<code>docker-pan</code>镜像。让我觉得我很需要这个功能，而且这个镜像本身稳定性方面也有一些可以提升的空间。于是才有了这里的东西。</p>
<p>我主要是使用了<code>docker-compose</code>来搭建这样一个应用。为什么？</p>
<ul>
<li>使用<code>Docker-compose</code>让每个<code>docker</code>镜像只做一件事，则其本身会更加稳定，不易受其他组件的影响，也更方便管理。</li>
<li>另外一个<code>Nextcloud</code>比<code>filerun</code>更好用，更稳定，还有各种移动端，桌面端的<code>client</code>。（在手机上使用也更方便），不需要外置数据库就可以使用（少了一个不稳定因素）。</li>
</ul>
<p>代码地址：<a href="https://github.com/wahyd4/aria2-ariang-x-docker-compose" target="_blank" rel="noopener">https://github.com/wahyd4/aria2-ariang-x-docker-compose</a></p>
<p>同时提供了<code>Aria2+AriaNg+filerun</code>和<code>Aria2+AriaNg+Nextcloud</code>两种方案，供大家选择。</p>
<h2 id="比较Filerun和Nextcloud"><a href="#比较Filerun和Nextcloud" class="headerlink" title="比较Filerun和Nextcloud"></a>比较Filerun和Nextcloud</h2><p><img src="https://www.southcat.net/usr/picture/docker-compose(1).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="我的推荐"><a href="#我的推荐" class="headerlink" title="我的推荐"></a>我的推荐</h2><pre><code>我更喜欢Nextcloud。毕竟颜值更高，功能强大还有各种客户端，大家从下面的两种方式中选择一种就好。</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>提示：</strong>如果你不是在本地安装，请记得替换<code>localhost</code>为你的<code>ip</code>或者绑定的域名哦！！</p>
<p>1、安装<code>Docker CE</code>(社区版)，不要使用<code>Ubuntu</code>等操作系统系统自带的安装包来安装，因为他们的版本都很老了。推荐使用官方提供的方式安装。</p>
<p>2、安装<code>Docker Compose</code>：<a href="https://docs.docker.com/compose/install/#install-compose。" target="_blank" rel="noopener">https://docs.docker.com/compose/install/#install-compose。</a></p>
<p>3、使用<code>Filerun</code>作为在线文件管理器：</p>
<pre><code>git clone https://github.com/wahyd4/aria2-ariang-x-docker-compose.git
cd aria2-ariang-x-docker-compose/filerun
docker-compose up -d</code></pre><p>一切搞定，尽情享受吧！<br>文件管理<code>Filerun</code>：<code>http://ip:8000</code><br><code>AriaNg</code>：<code>http://ip:8000/aria2/</code></p>
<p>4、使用<code>nextcloud</code>安装</p>
<pre><code>git clone https://github.com/wahyd4/aria2-ariang-x-docker-compose.git
cd aria2-ariang-x-docker-compose/nextcloud
docker-compose up -d</code></pre><p>文件管理<code>Nextcloud</code>： <code>http://ip:8000</code><br><code>AriaNg</code>：<code>http://ip:8000/aria2/</code></p>
<p><code>Nextcloud</code>还需额外的一点手动操作。</p>
<h2 id="Nextcloud配置external-storage"><a href="#Nextcloud配置external-storage" class="headerlink" title="Nextcloud配置external-storage"></a>Nextcloud配置external-storage</h2><p>1、打开<code>http://ip:3000</code>使用你喜欢的任意密码进行登录。<br>2、点击右上角设置-&gt;应用。<br>3、启用<code>External storage support</code>插件, 并输入密码确认。<br><img src="https://www.southcat.net/usr/picture/docker-compose(2).jpg" alt="请输入图片描述" title="请输入图片描述"><br>4、点击右上角 设置-&gt;管理-&gt;外部存储 进行添加外部存储,<code>Aria2</code>下载的文件会存在<code>/user-files/</code>目录下，存储类型选择本地存储，当存储添加成功，且可用时，最左端会显示出绿色。<br><img src="https://www.southcat.net/usr/picture/docker-compose(3).jpg" alt="请输入图片描述" title="请输入图片描述"><br>搞定，现在你通过<code>AriaNg</code>下载的文件就可以在<code>Nextcloud</code>里面查看到了。<br><img src="https://www.southcat.net/usr/picture/docker-compose(4).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="如果你仅仅想使用Aria2-AriaNg"><a href="#如果你仅仅想使用Aria2-AriaNg" class="headerlink" title="如果你仅仅想使用Aria2+AriaNg"></a>如果你仅仅想使用Aria2+AriaNg</h2><pre><code>docker run --rm  -p 8000:80  -p 6800:6800 -v ~/data/:/user-files wahyd4/aria2-ariang</code></pre><p><code>8000</code>本地则是你暴露出对外访问的<code>AriaNg</code>图形界面的端口，<code>~/data/</code>是你所有通过<code>Aria2</code>下载的文件目录。</p>
<h2 id="如果你在群晖上使用"><a href="#如果你在群晖上使用" class="headerlink" title="如果你在群晖上使用"></a>如果你在群晖上使用</h2><p>先运行<code>wahyd4/aria2-ariang</code>容器，再运行<code>wonderfall/nextcloud</code>容器，并使用<code>volume_from</code>属性即可实现完整功能了。</p>
<h2 id="相关说明"><a href="#相关说明" class="headerlink" title="相关说明"></a>相关说明</h2><p>1、又去了解了了下，<code>Nextcloud</code>确实很强大，有很多插件！安装完这些插件<code>Nextcloud</code>就是一个工作平台，一个效率工具啊。 比如:</p>
<ul>
<li>在线<code>word</code>编辑</li>
<li><code>markdown</code>编辑</li>
<li><code>Calendar</code>客户端</li>
<li>邮件客户端</li>
<li>视频电话</li>
<li>通信录</li>
<li><code>Kanban</code><br>等等……</li>
</ul>
<p>详见：<a href="https://apps.nextcloud.com/categories/files" target="_blank" rel="noopener">https://apps.nextcloud.com/categories/files</a></p>
<p>2、看到很多人使用<code>v2ex</code>的收藏，建议大家也可以在<code>github</code>上面︎哦持续关注，多谢。<br><a href="https://github.com/wahyd4/aria2-ariang-x-docker-compose" target="_blank" rel="noopener">https://github.com/wahyd4/aria2-ariang-x-docker-compose</a></p>
<p>3、有什么新需求的，欢迎到<code>Github</code>上给我提<code>issue</code>啊，这样才更加方便跟踪和管理。<br><a href="https://github.com/wahyd4/aria2-ariang-x-docker-compose/issues" target="_blank" rel="noopener">https://github.com/wahyd4/aria2-ariang-x-docker-compose/issues</a></p>
<p>4、刚刚对镜像进行了升级。新版本中只需要使用一个端口<code>8000</code>。<br><code>aria2</code>地址：<code>http://ip:8000/aria2/</code><br>文件管理地址：<code>http://ip:8000</code></p>
<p>如果你是升级，进入<code>filerun</code>或者<code>nextcloud</code>目录：</p>
<pre><code>docker-compose stop # 将 docker 镜像暂时关掉
git pull origin master # 获取最近代码
docker-compose up -d # 运行最新版本的镜像</code></pre><p>更多具体使用还请到<code>github</code>仓库地址。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker安装Seafile云盘专业版，并配置域名及SSL证书</title>
    <url>/2168/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Seafile</code>是一个开源的文件云存储平台，主要是为团队设计的，功能很多，用户可加密资料库，且密码不会保存在服务器端，管理员也无权访问你的文件。用户之间也可以共享和同步文件，方便了团队协同工作。其版本分为开源免费版和专业版，两者区别挺大的，比如专业版多了搜索、集群、亚马逊<code>S3</code>、<code>Ceph</code>、阿里云<code>OSS</code>等功能，而且专业版<code>3</code>用户免费，一两个人用的话建议专业版，这里说下专业版安装教程。如果人多建议使用开源免费版，安装可以查看：Linux VPS一键安装Seafile搭建私有云盘存储。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Seafile_Pro(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Seafile_Pro(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/haiwen/seafile-docs-cn" target="_blank" rel="noopener">https://github.com/haiwen/seafile-docs-cn</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Seafile专业版</strong><br>先访问该地址：<a href="https://customer.seafile.com，注册个账号，然后点击左侧的`Downloads`，这时候你会看到`Seafile`专业版的`Docker`登录信息。" target="_blank" rel="noopener">https://customer.seafile.com，注册个账号，然后点击左侧的`Downloads`，这时候你会看到`Seafile`专业版的`Docker`登录信息。</a></p>
<p>然后使用<code>VPS</code>登陆<code>Seafile</code>的私有仓库：</p>
<pre><code>#登录仓库地址docker.seadrive.org，输入给你的用户名和密码即可
docker login docker.seadrive.org</code></pre><p>运行<code>Seafile</code>专业版容器：</p>
<pre><code>#记得修改默认域名、管理员用户名和密码，本配置可自动申请Let&apos;s encrypt SSL证书，记得提前解析好域名
docker run -d --name seafile \
  -e SEAFILE_SERVER_LETSENCRYPT=true \
  -e SEAFILE_SERVER_HOSTNAME=southcat.net \
  -e SEAFILE_ADMIN_EMAIL=admin@southcat.net \
  -e SEAFILE_ADMIN_PASSWORD=moerats_password \
  -v /root/seafile:/shared \
  -p 80:80 \
  -p 443:443 \
  docker.seadrive.org/seafileltd/seafile-pro:latest

#如果你想使用自己的SSL证书，需要创建/root/seafile/ssl目录, 并将你的证书以及私钥放入这个目录中，如果的网站名称为southcat.net, 那么你的证书名称必须为southcat.net.crt，私钥名称必须为southcat.net.key。</code></pre><p>安装完成后，需要进行初始化配置，打开域名会出现<code>502 Bad Gateway</code>，等待几分钟再访问就可以看到<code>Seafile</code>的<code>Web</code>界面了，此后<code>Seafile</code>数据会保存在服务器的<code>/root/seafile</code>目录。</p>
<h2 id="客户端登录"><a href="#客户端登录" class="headerlink" title="客户端登录"></a>客户端登录</h2><p>我们除了可以通过域名登录查看外，还可以使用专用的客户端登录，支持<code>Windows</code>客户端、<code>Mac</code>客户端、<code>Linux</code>客户端、<code>Terminal</code>客户端、<code>Android</code>客户端、<code>iPad</code>/<code>iPhone</code>客户端。</p>
<p>客户端下载：<a href="https://www.seafile.com/download/，安装后打开客户端，直接填入域名，用户名和密码登录即可。" target="_blank" rel="noopener">https://www.seafile.com/download/，安装后打开客户端，直接填入域名，用户名和密码登录即可。</a></p>
<h2 id="添加管理员"><a href="#添加管理员" class="headerlink" title="添加管理员"></a>添加管理员</h2><pre><code>docker exec -it seafile /opt/seafile/seafile-server-latest/reset-admin.sh</code></pre><p>然后根据提示输入用户名以及密码即可。</p>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>这里说下容器内<code>/shared</code>的目录结构，可直接查看映射在外部的<code>/root/seafile</code>文件夹即可。</p>
<pre><code>/shared/db：mysql服务的数据目录。
/shared/seafile：Seafile服务的配置文件以及数据文件。
/shared/logs：日志目录。
/shared/logs/var-log：我们将容器内的/var/log挂载到本目录，您可以在shared/logs/var-log/nginx/中找到nginx的日志文件。
/shared/logs/seafile：Seafile服务运行产生的日志文件目录，比如您可以在 shared/logs/seafile/seafile.log文件中看到seaf-server的日志。
/shared/ssl：存放证书的目录。</code></pre><h2 id="升级Seafile"><a href="#升级Seafile" class="headerlink" title="升级Seafile"></a>升级Seafile</h2><pre><code>#该命令可以升级到Seafile的最新版本
docker pull docker.seadrive.org/seafileltd/seafile-pro:latest
docker rm -f seafile
docker run -d --name seafile \
  -e SEAFILE_SERVER_LETSENCRYPT=true \
  -e SEAFILE_SERVER_HOSTNAME=southcat.net \
  -e SEAFILE_ADMIN_EMAIL=admin@southcat.net \
  -e SEAFILE_ADMIN_PASSWORD=moerats_password \
  -v /root/seafile:/shared \
  -p 80:80 \
  -p 443:443 \
  docker.seadrive.org/seafileltd/seafile-pro:latest</code></pre><h2 id="问题查看"><a href="#问题查看" class="headerlink" title="问题查看"></a>问题查看</h2><pre><code>docker logs -f seafile
#或者
docker exec -it seafile bash</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>一款不错的个人私有云：NextCloud安装教程</li>
<li>多功能网盘&amp;&amp;文件管理器：FileRun安装教程</li>
<li>私有云盘&amp;&amp;在线文件管理器：可道云KodExplorer安装教程</li>
<li>一个基于GO的轻量级文件管理系统：FileManager安装教程</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker安装Wine-CoolQ，并运行酷Q Air/Pro(QQ机器人)</title>
    <url>/2293/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>酷Q</code>大概是使用最多的一款<code>QQ</code>机器人软件，功能也很强大。我们可以用它实现<code>QQ</code>群管理、好友聊天、日常便民等多种功能，大多数都是在<code>Win</code>系统上运行它，由于官方有<code>Docker</code>镜像，借助<code>Wine</code>运行的<code>CoolQ</code>，所以我们也可以在<code>Linux</code>系统上运行，这里就说下方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Wine-CoolQ(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Wine-CoolQ(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Wine-CoolQ(3).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/CoolQ/docker-wine-coolq" target="_blank" rel="noopener">https://github.com/CoolQ/docker-wine-coolq</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装wine-coolq</strong></p>
<pre><code>docker run --restart=always --name wine-coolq -d \
-p 9000:9000 \
-v /coolq:/home/user/coolq \
-e VNC_PASSWD=moerats \
-e COOLQ_ACCOUNT=1234567 \
coolq/wine-coolq</code></pre><p>参数说明：</p>
<pre><code>-p 将内部的Web运行端口9000映射到外部的9000，可自行修改端口。
-v 将内部酷Q和其数据文件夹/home/user/coolq映射到外部的/coolq文件夹，可自行修改路径。
-e 为环境变量，大致有3个变量，其中第3种未使用，大致如下：
1、VNC_PASSWD为VNC密码。注意该密码不能超过8个字符，默认MAX8char。
2、COOLQ_ACCOUNT为设置要登录酷Q的帐号。在第一次手动登录后，你可以勾选“快速登录”功能以启用自动登录，此后，docker容器启动或酷Q异常退出时，便会自动为你登录该帐号。
3、COOLQ_URL为下载酷Q的地址，默认为http://dlsec.cqp.me/cqa-tuling，即酷Q Air图灵版。请确保下载后的文件能解压出酷Q Air/CQA.exe或酷Q Pro/CQP.exe。</code></pre><p>安装好了后，访问<code>http://IP:9000</code>，可以打开一个<code>VNC</code>页面，输入密码，文中默认<code>moerats</code>，即可看到一个<code>酷Q Air</code>已经启动。</p>
<p>对于<code>CentOS</code>系统，还需要开启<code>9000</code>端口，开启如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 9000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=9000/tcp --permanent
firewall-cmd --reload</code></pre><p>相关命令：</p>
<pre><code>#启动镜像
docker start wine-coolq
#重启镜像
docker restart wine-coolq</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装Aria2+AriaNg+h5ai，可离线BT下载和在线播放</title>
    <url>/1882/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发了很多<code>BT</code>下载搭配在线文件管理器的教程了，这样搭配的好处，就可以在下载后直接在线管理和观看了，比之前的下载后还要拖到本地电脑看要方便很多。而今天要发的这个<code>Aria2</code>搭配<code>h5ai</code>的教程其实在之前的某个教程就该发出来的，参考：使用Docker快速安装Aria2+AriaNg+Filerun/Nextcloud，在线下载BT磁链/在线观看，只是在安装<code>h5ai</code>的地方就一直有问题，所以就没发，而作者现在已经修复好了，于是就可以发出来了。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Docker_h5ai(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Docker_h5ai(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Docker和Docker Compose</strong></p>
<pre><code>#安装Docker
curl -sSL https://get.docker.com/ | sh
#安装Docker Compose
curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>2、安装Aria2+AriaNg+h5ai</strong></p>
<pre><code>git clone https://github.com/wahyd4/aria2-ariang-x-docker-compose.git
cd aria2-ariang-x-docker-compose/h5ai
docker-compose up -d</code></pre><p>直到安装完成。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用AVS搭建我们的视频/照片/游戏分享平台</title>
    <url>/2200/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>AVS</code>在线视频上传分享脚本是一个老牌的国外视频<code>CMS</code>，您可以使用该源码创建在线视频，照片，游戏网站。用户可以上传自己的视频、照片以及<code>flash</code>游戏，程序有多语言支持，及很多很多功能，差不多很多国外视频站都用的这个程序，本次用的源码来自顶点网，且为最新的<code>V7.0</code>版本，这里就说下安装方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/AWS(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AWS(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AWS(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/AWS(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.2.15】
更新源码为中文汉化版，由林叶展博主汉化。</code></pre><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p><strong>1、视频功能</strong></p>
<pre><code>#前端
用户可以上传视频（超过20种格式）
上传视频上传的进度条
用户可以直播观看视频）
用户可以评论视频
用户可以举报视频
用户可以评价视频
用户可以嵌入视频
用户可以分享视频
用户可以查看相关视频
视频页面按时间轴，类别和类型排序（私人/公共）

#后台（管理面板）
管理视频（删除/批准/暂停/功能/取消功能/编辑）
管理视频评论
管理垃圾邮件和标记的视频</code></pre><p><strong>2、照片功能</strong></p>
<pre><code>#前端
用户可以上传照片并整理相册中的照片（jpg，gif和png）
用户可以评论照片
用户可以标记照片
用户可以评价照片
用户可以分享照片
用户可以查看相册幻灯片

#后端（管理面板）
管理照片和相册（删除/批准/暂停）
管理照片评论
管理垃圾邮件和标记的照片</code></pre><p><strong>3、游戏功能</strong></p>
<pre><code>#前端
用户可以上传游戏（swf扩展）
用户可以评论游戏
用户可以评价游戏
用户可以分享游戏

#后端（管理面板）
管理游戏（删除/批准/暂停/编辑）
管理游戏评论
管理垃圾邮件和标记的游戏</code></pre><p><strong>4、博客功能</strong></p>
<pre><code>#前端
用户可以创建博客
用户可以在他们的博客上嵌入照片和视频
用户可以评论博客

#后端（管理面板）
管理博客（删除/批准/暂停/编辑）
管理博客评论</code></pre><p><strong>5、用户功能</strong></p>
<pre><code>#前端
用户拥有自己的个人资料页面
用户可以配置在其个人资料页面上列出的内容
用户可以配置要接收的电子邮件
用户可以邀请朋友
用户可以评论其他用户个人资料
用户可以向其他用户发送消息
用户可以报告其他用户
用户可以订阅其他用户
用户可以编辑他们的个人资
用户可以上传和裁剪头像
用户可以轻松批准/拒绝朋友
用户可以监控其他用户的操作（当他们上传视频/照片/游戏/博客时）

#用户墙
按性别排序的用户
后端（管理面板）
管理用户（添加/删除/暂停/编辑）
电子邮件用户（或群发邮件）</code></pre><p><strong>6、管理博客/公告</strong></p>
<pre><code>管理员可以在网站上创建博客/新闻/公告部分
用户可以对管理博客/新闻/公告发表评论
管理员可以通过支持/反馈页面接收访问者的电子邮件</code></pre><p><strong>7、分类管理</strong></p>
<pre><code>类别页面
对于每个类别，可以显示类别封面图像，或其最新视频
后端（管理面板）
管理类别（添加/删除/编辑）</code></pre><p><strong>8、广告功能</strong></p>
<pre><code>整个网站有20多个广告位
旋转广告（广告组）
视频播放器中的前/后滚动视频/图像/ Flash广告
播放期间视频播放器中的文字广告（位于底部）</code></pre><p><strong>9、管理面板</strong></p>
<pre><code>能够控制网站的各个方面
配置邮件设置（php邮件，sendmail或smtp服务器）
配置视频转换设置（适用于SD，HD和移动设备）
编辑静态页面
编辑电子邮件模板
配置视频播放器
限制访客访客带宽/访问权限
系统检查（检查文件夹权限和所需的编解码器）
媒体设置（配置允许的最大上传大小和允许的视频格式）
启用/禁用照片库，游戏和博客模块
启用/禁用电子邮件验证
启用/禁用视频，游戏，照片，用户评论
通过ip或用户选择评级
选择会话驱动程序（数据库/文件）</code></pre><p><strong>10、其他功能</strong></p>
<pre><code>优化数据库结构和查询超快网站
干净的代码（可以轻松定制）
安全代码（输入过滤）
搜索引擎友好的URL（SEO）
在后台进程中完成视频转换/编码
聪明的模板引擎，从管理面板轻松模板切换
带语言文件的多语言系统
垃圾邮件保护（recaptcha/keycaptcha/areyouhuman集成，评论防洪保护）</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>PHP 5.x/7.x</code>、<code>MySQL</code>、<code>Nginx/Apache</code>。</p>
<p><code>PHP</code>配置建议：</p>
<pre><code>safe_mode off
open_basedir off
max_execution_time 7200
max_input_time 7200
memory_limit (with 1MB more then the maximum video upload size)
post_max_size (maximum video upload size)
upload_max_size (maximum video upload size)
exec() should be allowed

Support for GD2 Library
Support for MySQL/MySQLi
Support for Curl</code></pre><p>这里使用宝塔面板做演示。对于熟悉的可以使用<code>OneinStack</code>或者其它一键包环境。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板安装<code>PHP 5.6</code>或者<code>7.x</code>、<code>Mysql</code>、<code>Nginx</code>或者<code>Apache</code>、<code>phpmyadmin</code>。</p>
<p><strong>2、安装程序</strong><br>添加域名，然后下载程序源码，并将程序上传到网站根目录解压，源码下载：avs7.zip，觉得上传慢的也可以使用命令下载程序。</p>
<pre><code>cd /www/wwwroot/domain.com 
wget https://www.southcat.net/usr/down/avs7.zip &amp;&amp; unzip avs7.zip</code></pre><p><strong>3、导入数据库</strong><br>点击面板左侧数据库，通过<code>phpmyadmin</code>访问数据库管理界面，新建一个<code>AVS</code>数据库，再将根目录里的<code>avs.sql</code>文件导入到数据库即可，并编辑根目录<code>include/config.db.php</code>文件，填入你的数据库信息。</p>
<p><strong>4、相关配置</strong><br>打开宝塔，点击左侧软件管理-<code>PHP</code>设置-禁用函数-删除<code>shell_exec</code>和<code>exec</code>。然后再点击配置文件，进行如下修改：</p>
<pre><code>#使用Ctrl + F进行搜索修改
safe_mode off
open_basedir off
max_execution_time 7200
max_input_time 7200</code></pre><p>再点击<code>Nginx</code>设置，添加伪静态，如果是<code>Apache</code>可以不用添加。</p>
<pre><code>location / { 
if (!-f $request_filename){
    set $rule_1 1$rule_1;
}
if (!-d $request_filename){
    set $rule_1 2$rule_1;
}
if ($rule_1 = &quot;21&quot;){
    rewrite /.* /loader.php last;
}
}</code></pre><p>接下来编辑根目录<code>include/config.paths.php</code>文件，在<code>$config[&#39;BASE_URL&#39;]</code>处输入你的网站地址。最后授权<code>777</code>给以下文件或文件夹。</p>
<pre><code>/include/config.local.php
/cache/frontend
/cache/backend
/images/logo
/images/notice_images
/images/notice_images/thumbs
/media/albums
/media/categories/game
/media/categories/album
/media/categories/video
/media/csv
/media/games/swf
/media/games/tmb
/media/games/tmb/orig
/media/photos
/media/photos/tmb
/media/player/logo
/media/users
/media/users/orig
/media/videos/tmb
/media/videos/vid
/media/videos/h264
/templates/backend/default/analytics/analytics.tpl 
/templates/emails
/templates/emails/*.tpl
/templates/frontend/(your_template)/static/*.tpl
/tmp/albums
/tmp/avatars
/tmp/downloads
/tmp/logs
/tmp/sessions
/tmp/thumbs
/tmp/uploader
/aembed.sh</code></pre><p><strong>5、安装ffmpeg</strong><br>要使用程序，我们还需要安装<code>ffmpeg</code>。安装参考：使用静态ffmpeg二进制文件秒安装ffmpeg。</p>
<p><strong>6、访问网站</strong><br>后台地址<code>http://xx.com/siteadmin</code>，用户名和密码都是<code>admin</code>，进入后我们访问<code>Settings</code>-<code>General</code>-<code>System Check</code>，检查条件是否满足。<br><img src="https://www.southcat.net/usr/picture/AWS(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>差不多到这里就算安装完成了，然后更多功能自行研究吧。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装express-ffmpeg云转码切片</title>
    <url>/2269/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前博主介绍过这个云转码和搭建教程，查看：云转码express-ffmpeg+CMS一体化系统安装教程，功能确实强大，不过还是有很多人搭建容易出点小问题，这里博主就整了个<code>Docker</code>镜像，适合小白使用。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.9.3】
重做镜像，新增部分变量参数，必要设置都给填了，使用更方便了。
【2018.11.4】
修复了上传错误等问题。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>注意：</strong>该安装方法不适用于<code>OVZ</code>等类似结构。内存太小的话，建议加点<code>Swap</code>，<code>Swap</code>添加脚本→传送门。目前云转码为最新版本，如果作者有修复<code>Bug</code>和添加功能，请提醒博主更新下镜像。</p>
<p><strong>说明：</strong>镜像测试了一下，上传和转码均正常，记得安装后，如果使用自带<code>CMS</code>播放，请在播放设置那里关掉强制<code>QQ</code>浏览器。</p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、运行镜像</strong></p>
<pre><code>#先看下面的参数详解，进行相关修改后，再将下面一起复制到ssh客户端运行
docker run --restart=always --name express-ffmpeg -d \
-p 3000:3000 \
-e localip=192.168.2.1 \
-e usr=moerats \
-e pass=moerats \
-e url=moerats \
-v ~/express-ffmpeg/mongodb:/data \
-v ~/express-ffmpeg/config:/express-ffmpeg/config \
-v ~/express-ffmpeg/movies:/express-ffmpeg/movies \
-v ~/express-ffmpeg/videos:/express-ffmpeg/public/videos \
-v ~/express-ffmpeg/uploads:/express-ffmpeg/public/uploads \
-v ~/express-ffmpeg/images:/express-ffmpeg/public/images \
moerats/express-ffmpeg</code></pre><p>相关变量参数详解，自行修改：</p>
<pre><code>serverip：服务器的ip地址
#用户名、密码，后台路径均自己修改，且路径不能为admin
usr：后台管理员用户名
pass：后台管理员密码
url：后台登录路径</code></pre><p>最后访问地址是<code>http://ip:3000</code>，后台路径为<code>http://ip:3000/moerats</code>，路径参考自己修改的。</p>
<p>对于<code>CentOS</code>系统，还需要开启<code>3000</code>端口，开启如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 3000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=3000/tcp --permanent
firewall-cmd --reload</code></pre><p>如果要用域名访问，就需要反代了。</p>
<h2 id="相关目录"><a href="#相关目录" class="headerlink" title="相关目录"></a>相关目录</h2><pre><code>#数据库的目录
~/express-ffmpeg/mongodb
#配置文件目录
~/express-ffmpeg/config
#上传视频文件夹
~/express-ffmpeg/movies
#放切片文件、上传封面和VTT字幕文件夹
~/express-ffmpeg/videos
#上传文章图片的文件夹
~/express-ffmpeg/uploads
#上传图集的文件夹
~/express-ffmpeg/images</code></pre><h2 id="域名访问"><a href="#域名访问" class="headerlink" title="域名访问"></a>域名访问</h2><p>反代可以用<code>Nginx</code>、<code>Apache</code>、<code>Caddy</code>，这里只说宝塔和<code>Caddy</code>。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:3000</code>，再启用反向代理即可。至于启用<code>SSL</code>就不说了，直接在站点配置就可以启用。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;www.southcat.net {
 gzip
 proxy / 127.0.0.1:3000 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:3000 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<p><strong>3、Nginx配置</strong><br>如果你使用其它的，这里就大概发个<code>Nginx</code>反代配置，直接添加到配置文件即可。</p>
<pre><code>#在配置文件里添加
location / {
     proxy_pass http://127.0.0.1:3000;
     proxy_redirect off;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装FileRun多功能网盘</title>
    <url>/1880/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>FileRun</code>的安装方法已经说了<code>2</code>种了，分别用宝塔面板和手动编译的方式进行安装，参考：一款强大的多功能网盘和文件管理器：FileRun安装教程，如果只是临时用用的话，感觉就没必要花很长时间来安装了，这时候就可以使用<code>Docker</code>安装，不仅快，还省心，基本几分钟就可以安装完成，这里说下教程。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Docker和Docker Compose</strong></p>
<pre><code>#安装Docker
curl -sSL https://get.docker.com/ | sh
#安装Docker Compose
curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>2、安装FileRun镜像</strong></p>
<pre><code>docker pull afian/filerun</code></pre><p><strong>3、配置yml文件</strong><br>建立<code>docker-compose.yml</code>文件，并使用默认的配置即可。</p>
<pre><code>#以下是一整个命令，一起复制运行即可。
echo &quot;version: &apos;2&apos;

services:
  db:
    image: mariadb:10.1
    environment:
      MYSQL_ROOT_PASSWORD: filerun
      MYSQL_USER: filerun
      MYSQL_PASSWORD: filerun
      MYSQL_DATABASE: filerun
    volumes:
      - /filerun/db:/var/lib/mysql

  web:
    depends_on:
      - db
    links:
      - db
    image: afian/filerun
    ports:
      - &quot;80:80&quot;
    volumes:
      - /filerun/html:/var/www/html
      - /filerun/user-files:/user-files&quot; &gt; /root/docker-compose.yml</code></pre><p><strong>4、启动FileRun</strong></p>
<pre><code>docker-compose up -d</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装H5ai网盘、内置HTML5视频播放器DPlayer</title>
    <url>/2024/</url>
    <content><![CDATA[<p><strong>说明：</strong>本镜像由<code>iLemonrain</code>大佬制作，使用的是<code>LOC</code>冻猫大佬修改的<code>H5ai</code>源码，其内置了<code>HTML5</code>视频播放器<code>DPlayer</code>，这里说下安装方法。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本镜像使用环境为<code>Apache 2.4</code>、<code>PHP 7.1</code>。</p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取并配置镜像</strong></p>
<pre><code>#命令
docker run [-t/-d] -p [80]:80 -v [$PWD]:/h5ai --name h5ai ilemonrain/h5ai:[lite/full]
#示例
docker run -t -p 80:80 -d -v /home:/h5ai --name h5ai ilemonrain/h5ai:full</code></pre><p>参数说明：</p>
<pre><code>#-d/-t：决定是以后台运行模式启动或是前台监控模式启动。
使用-d参数启动，镜像将不会输出任何日志到你的Console，直接以Daemon模式启动。Deamon模式启动下，可以使用docker logs h5ai命令显示启动日志。
使用-t参数启动，将会直接Attach你的镜像到你的Console，这个模式启动下，你可以直观的看到镜像的启动过程，适合于初次部署镜像，以及镜像Debug部署使用。你可以使用Ctrl+C将Docker镜像转入后台运行，使用docker attach h5ai命令显示启动日志。

#-p [80]:80：h5ai on Docker 需要映射的端口，方括号中端口可任意修改为你需要的端口。

#-v /h5ai:/h5ai：映射目录，将会自动在选定的目录下创建h5ai程序目录(_h5ai)和Apache2必要的.htaccess文件，如果在在使用完成后不需要这两个文件，可以自行删除；如果需要映射当前目录(可以使用pwd命令确定)，请直接输入 “$PWD”。

#--name h5ai：Docker容器的名称，可以自行修改。

#ilemonrain/h5ai:[lite/full]：启动的镜像名称，请注意：如果你只是为了测试镜像，或者Docker宿主机所在网络环境不佳，请使用lite分支 (即 ilemonrain/h5ai , ilemonrain/h5ai:latest , ilemonrain/h5ai:lite均可)；正式使用或者需要完整功能，请使用full分支 (ilemonrain/h5ai:full)。</code></pre><p>最后打开<code>ip</code>地址即可，如果你想使用域名，请解析到服务器即可。</p>
<p>最后目录文件在你映射的文件夹，如示例命令里的<code>/home</code>。如果想加登录密码，把<code>public/index.php</code>里第<code>2</code>行的注释取消掉，第<code>5</code>行自己设置用户名密码。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装HTML5-Based Speedtest，可以准确的测试本地到VPS的网络速度</title>
    <url>/2106/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>网页版<code>Speedtest</code>看起来很强，却测试不出来本地到目标服务器的速度？</p>
<p>在<code>VPS</code>服务器上跑<code>Speedtest-CLI</code>却总感觉测试结果不靠谱？</p>
<p>现在，有了<code>HTML5-Based Speedtest</code>，这一切都迎刃而解！</p>
<p>更要命的是居然还<code>Docker</code>化了？真正的一键部署测速环境！</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/HTML5-Speedtest.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>由于<code>Speedtest</code>会尽可能使用最大的带宽，来反馈最真实的网络性能，所以，在部署完成项目后，请不要将你的测速地址分享给其他人或者公开到群/论坛/贴吧等处！因此导致的流量损失、超流量停机，甚至欠费，iLemonrain (镜像作者)将不负任何责任！</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、配置镜像</strong><br>使用命令：</p>
<pre><code>docker run [-t/-d] -p [6688]:80 ilemonrain/html5-speedtest:alpine</code></pre><p>参数详解：</p>
<pre><code>-t：启动后显示日志，可用Ctrl+C转入后台运行
-d：后台模式启动
-p 6688:80：镜像映射端口，修改6688为任意端口即可</code></pre><p>示例命令：</p>
<pre><code>docker run -d -p 6688:80 ilemonrain/html5-speedtest:alpine</code></pre><p>然后打开<code>http://ip:6688</code>即可。</p>
<pre><code>#打开6688端口
firewall-cmd --zone=public --add-port=6688/tcp --permanent

#关闭防火墙
systemctl stop firewalld.service
systemctl disable firewalld.service</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装NextCloud个人私有云盘</title>
    <url>/1844/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>NexCould</code>是一款不错，也很漂亮的个人私有云网盘，现在使用的人是越来越多了，之前发过一篇常规的搭建教程，参考：一款不错的个人私有云：NextCloud安装教程，鉴于很多人在搭建过程中或多或少都会出点问题，今天博主发个很方便的安装方法，就是用<code>Docker</code>安装<code>NextCloud</code>，看到网上很多这样的教程都是通过编辑<code>docker-compose.yml</code>文件来安装的，还要配置反向代理，期间容易出现很多问题，对新手很不友好，而本教程使用纯命令形式安装，不容易出问题，适合尝鲜的新手。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Docker_nextcloud(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Docker_nextcloud(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p><code>Docker</code>镜像已替换成更新比较频繁，体积更加小的镜像，使用的是最新稳定版<code>Alpine Linux</code>，环境为<code>PHP 7</code>和<code>Nginx</code>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/chrootLogin/docker-nextcloud" target="_blank" rel="noopener">https://github.com/chrootLogin/docker-nextcloud</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Nextcloud</strong></p>
<pre><code>#拉取Mysql镜像，记得修改数据库信息
docker run --name mysqlnc -d \
-p 3306:3306 \
-e MYSQL_ROOT_PASSWORD=moerats \
-e MYSQL_DATABASE=moerats \
-e MYSQL_USER=moerats \
-e MYSQL_PASSWORD=moerats \
-v /root/nextcloud/mysql:/var/lib/mysql \
mysql:5.7

#拉取Nextcloud镜像
docker run -d --name nextcloud --link mysqlnc \
-v /root/nextcloud/data:/data \
-p 3000:80 \
rootlogin/nextcloud</code></pre><p>访问地址为<code>http://IP:3000</code>，启动命令里的<code>3000</code>端口可自行替换，不过后面有关端口的命令都自行修改，<code>/root/nextcloud</code>为网盘的数据库，也可以自行修改。</p>
<p>对于<code>CentOS</code>系统，还需要开启<code>3000</code>端口，开启如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 3000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=3000/tcp --permanent
firewall-cmd --reload</code></pre><p>如果要用域名访问，就需要反代了。</p>
<h2 id="域名访问"><a href="#域名访问" class="headerlink" title="域名访问"></a>域名访问</h2><p>反代可以用<code>Nginx</code>、<code>Apache</code>、<code>Caddy</code>，这里只说宝塔和<code>Caddy</code>。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:3000</code>，再启用反向代理即可。至于启用<code>SSL</code>就不说了，直接在站点配置就可以启用。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;xx.com {
 gzip
 proxy / 127.0.0.1:3000 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;xx.com {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:3000 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<p><strong>3、Nginx配置</strong><br>如果你使用其它的，这里就大概发个<code>Nginx</code>反代配置，直接添加到配置文件即可。</p>
<pre><code>#在配置文件里添加
location / {
     proxy_pass http://127.0.0.1:3000;
     proxy_redirect off;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装OneList目录列表程序</title>
    <url>/2381/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>OneList</code>之前介绍过了，一个基于<code>Python3</code>的简约<code>OneDrive</code>目录列表，具体查看→传送门，优势是简洁，而且可以减少因<code>api</code>抽风导致空目录的情况，由于有人反映需要<code>Docker</code>镜像，所以博主就花了几分钟做了个，这里就分享下。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong><br>拉取镜像前，需要准备<code>refresh_token</code>参数，获取方法查看→传送门，然后使用命令：</p>
<pre><code>#镜像里预设了2个变量，分别是refresh_token和title，title为目录标题，内部运行端口为8000

#自行修改refresh_token参数和title标题
docker run --name onelist -d \
  -p 8000:8000 \
  -e refresh_token=&quot;abcdefg&quot; \
  -e title=&quot;MOERATS&quot; \
  moerats/onelist</code></pre><p>访问地址为<code>ip:8000</code>，然后一般情况下<code>CentOS</code>还需要开启防火墙<code>8000</code>端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8000/tcp --permanent
firewall-cmd --reload</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装Poste.io邮件服务器</title>
    <url>/2190/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Poste.io</code>是最近在国外非常火的轻量级邮件服务器。它具有非常高的稳定性，并提供非常出众的管理面板，能够轻易实现邮件收发、多域名控制、邮箱容量控制、邮件杀毒、邮件过滤以及<code>Webmail</code>等基础功能。同时，<code>Poste</code>还提供了投递统计分析、客户端自动适配、一键安装<code>SSL</code>证书、邮件转发、邮件别名、<code>Catch-All</code>等相当有用的功能。而且收发信可靠，非常适合个人、团体以及企业使用。另外，<code>Poste</code>邮件服务器基于<code>Docker</code>搭建，搭建过程十分简单。</p>
<p><strong>官网：</strong><a href="https://poste.io/" target="_blank" rel="noopener">https://poste.io/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Poste.io(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Poste.io(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Poste.io(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>首先我们介绍一下服务器的运行环境。由于基于<code>Docker</code>，因此大部分<code>Linux</code>发行版均可以运行<code>Poste</code>。运行的<code>Poste</code>占用内存在<code>800 MB</code>左右，因此建议选择一个内存<code>1 GB</code>或者以上的<code>VPS</code>进行搭建。<code>Poste</code>仅支持<code>64</code>位操作系统。</p>
<p>在安装任何邮件服务器之前，我们需要配置好<code>hostname</code>。本文我们以<code>mx.qing.su</code>为例，当您在<code>SSH</code>中执行<code>hostname</code>命令时，应当看到<code>mx</code>的回显；当您在<code>SSH</code>中执行<code>hostname -f</code>命令时，应当看到<code>mx.qing.su</code>的回显。若您未配置好<code>hostname</code>，请不要继续。</p>
<p>开始安装之前，建议您先设置好一部分<code>DNS</code>。我们需要设置这样的几条记录 (请用您自己的域名替代下文中的<code>qing.su</code>)：</p>
<pre><code>qing.su A Any_IP
mx.qing.su A 88.88.88.88
qing.su MX mx.qing.su. 10
mail.qing.su CNAME mx.qing.su.
smtp.qing.su CNAME mx.qing.su.
imap.qing.su CNAME mx.qing.su.
qing.su TXT “v=spf1 mx ~all”
_dmarc.qing.su TXT “v=DMARC1; p=none; rua=mailto:dmarc-reports@qing.su”
88.88.88.88 PTR mx.qing.su</code></pre><p>其中<code>4</code>、<code>5</code>、<code>6</code>、<code>8</code>项为可选，第九项为域名<code>PTR</code>也就是设置<code>rDNS</code>，需要您在自己的服务器提供商处设定，比如<code>Vultr</code>在后台就可以直接设置<code>rDNS</code>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Poste</strong></p>
<pre><code>#/srv/poste/data为Poste数据存放文件夹，如用户数据库、电子邮件、日志，方便备份。
docker run -d -p 25:25 -p 80:80 -p 110:110 -p 143:143 -p 443:443 -p 587:587 -p 993:993 -p 995:995 -v /etc/localtime:/etc/localtime:ro -v /srv/poste/data:/data --name &quot;PosteServ&quot; -h &quot;mx.qing.su&quot; -t analogic/poste.io</code></pre><p>安装完成后，打开你的域名地址，进行安装配置。<br><img src="https://www.southcat.net/usr/picture/Poste.io(4).png" alt="请输入图片描述" title="请输入图片描述"><br>刚开始打开会显示不安全，然后点击左侧<code>System settings</code>-<code>TLS certificate</code>，申请免费的<code>SSL</code>证书即可。<br><img src="https://www.southcat.net/usr/picture/Poste.io(5).png" alt="请输入图片描述" title="请输入图片描述"><br>还有更多功能就自己慢慢折腾吧。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker搭建DPlayer视频弹幕接口API后端</title>
    <url>/2331/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前有同学要求博主出个<code>DPlayer</code>弹幕后端搭建教程，刚好本博客的<code>Handsome</code>主题更新并完美适配了<code>Dplayer</code>，然后就研究了下，发现了点小问题，如作者提供的弹幕<code>API</code>加载不出弹幕，而且<code>Typecho</code>当中的<code>Dplayer</code>插件有点旧无法对接<code>V3</code>后端，不知道其它程序插件是不是这样，这里博主只能使用<code>HTML</code>代码直接输出调用，经测试已完全正常加载弹幕和观看。这里就说下搭建及使用方法。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>DPlayer</code>是一个支持弹幕的<code>HTML5</code>视频播放器。支持<code>Bilibili</code>视频和<code>danmaku</code>，支持<code>HLS</code>、<code>FLV</code>、<code>MPEG DASH</code>、<code>WebTorrent</code>以及其他视频格式，支持截屏、热键、切换清晰度以及字幕等。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>作者提供的弹幕后端搭建方法挺多的，这里选择一个搭建最快，版本最新的一种。</p>
<p><strong>Github地址：</strong><a href="https://github.com/MoePlayer/DPlayer-node" target="_blank" rel="noopener">https://github.com/MoePlayer/DPlayer-node</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Docker Compose</strong></p>
<pre><code>curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>3、运行镜像</strong><br>安装<code>git</code>：</p>
<pre><code>#Debian、Ubuntu系统
apt install git -y

#CentOS系统
yum install -y git</code></pre><p>再使用命令：</p>
<pre><code>#拉取源码
git clone https://github.com/MoePlayer/DPlayer-node.git
cd DPlayer-node
#新建镜像
docker-compose build
#拉取其它镜像并后台运行
docker-compose up -d</code></pre><p>此时<code>api</code>地址为<code>http://ip:1207</code>，数据和日志存放在<code>/root/dplayer</code>文件夹。</p>
<p>当然如果你想其它端口，或者修改存放文件夹路径，那你在上面的新建镜像之前，作出如下操作：</p>
<pre><code>#编辑DPlayer-node文件夹的docker-compose.yml文件，部分修改如下
mongo:
  volumes:
      - ~/dplayer/db:/data/db  #数据库存放文件夹，~/dplayer/db为映射在外部的路径，自行修改，
web:
  ports:
    - 1207:1207  #api映射到外部的端口，将前面的1207修改成你想要的即可
  volumes:
    - ~/dplayer/logs:/usr/src/app/logs  #同数据库操作
    - ~/dplayer/pm2logs:/root/.pm2/logs  #同上</code></pre><p>改完后再新建镜像即可，如果你已经新建镜像了，但想改，那就清空之前的镜像再修改，方法参考→传送门。</p>
<h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>如果你的博客已经开启了<code>https</code>访问，那<code>api</code>也需要<code>https</code>地址，所以只使用<code>ip:端口</code>是不行的，这里就需要使用域名反代了。博主喜欢<code>Caddy</code>，所以这里说下宝塔和<code>Caddy</code>反代，其它一键环境的建议看官方文档或自行搜索。</p>
<p>如果你服务器没有安装<code>Nginx</code>/<code>Apache</code>的，可以用下<code>Caddy</code>，很方便很快，记得提前将域名解析到服务器。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:1207</code>，再启用反向代理即可。至于启用<code>SSL</code>就不说了，直接在站点配置就可以看到。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！
echo &quot;xx.com {
 tls admin@southcat.net
 proxy / http://127.0.0.1:1207
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>反代好了后，你的<code>API</code>地址就为<code>https://xx.com</code>。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>作者提供了很多插件，这里列举一点：</p>
<pre><code>Typecho：https://github.com/volio/DPlayer-for-typecho
Hexo：https://github.com/NextMoe/hexo-tag-dplayer
Z-Blog：https://github.com/fghrsh/DPlayer_for_Z-BlogPHP
Discuz!：https://coding.net/u/Click_04/p/video/git
WordPress：https://github.com/BlueCocoa/DPlayer-WordPress</code></pre><p>不过<code>Typecho</code>插件暂时用不了，其它程序暂时不清楚，所以这里提供一个播放器的<code>HTML</code>代码，代码如下：</p>
<pre><code>&lt;link href=&quot;https://www.southcat.net/usr/dplayer/DPlayer.min.css&quot; rel=&quot;stylesheet&quot;&gt;
&lt;div id=&quot;dplayer&quot;&gt;&lt;/div&gt;
&lt;script src=&quot;https://www.southcat.net/usr/dplayer/DPlayer.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://cdnjs.loli.net/ajax/libs/blueimp-md5/2.10.0/js/md5.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
var url=&quot;https://www.southcat.net/xx.mp4&quot;;    //这里填写视频地址
var id=md5(url);
const dp = new DPlayer({
    container: document.getElementById(&apos;dplayer&apos;),
    video: {
        url: url
  },
  danmaku: {
        id: id,
        api: &apos;https://dplayer.southcat.net/&apos;    //这里填写弹幕地址
    }
});
&lt;/script&gt;</code></pre><p>直接将代码贴进文章里即可，如果在<code>Typecho</code>开发版中使用不正常的话，可能还需要用两排<code>!!!</code>将代码上下围住使其强制输出，比如：</p>
<pre><code>#特殊原因，不得已才加上o，使用的时候记得去掉
o!!!
代码
o!!!</code></pre><p>还有更多功能及使用方法可以查看→传送门。</p>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><pre><code>博主知道有人懒搭建的，所以这里提供个弹幕API地址：https://dplayer.southcat.net/。</code></pre><p>var url=”<a href="https://www.southcat.net/usr/dplayer/xx.mp4&quot;" target="_blank" rel="noopener">https://www.southcat.net/usr/dplayer/xx.mp4&quot;</a>; var id=md5(url); const dp = new DPlayer({ container: document.getElementById(‘dplayer’), video: { url: url }, danmaku: { id: id, api: ‘<a href="https://dplayer.southcat.net/&#39;" target="_blank" rel="noopener">https://dplayer.southcat.net/&#39;</a> } });</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Docker快速安装rTorrent和ruTorrent</title>
    <url>/2157/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主前些日子单独发了个<code>rtorrent</code>使用教程，查看：Linux VPS使用rtorrent下载BT种子，并在线观看，感觉缺少前端<code>Web</code>界面<code>ruTorrent</code>会让一些小白操作不是那么顺畅，而单独安装也有点麻烦，于是就在<code>Docker</code>商店找了个最新的<code>rTorrent</code>和<code>ruTorrent</code>的<code>Docker</code>镜像，基本上一步就可以安装好，让我们<code>1</code>分钟就可以上手使用。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/rTorrent_ru(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/rTorrent_ru(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Docker地址：</strong><a href="https://store.docker.com/community/images/diameter/rtorrent-rutorrent" target="_blank" rel="noopener">https://store.docker.com/community/images/diameter/rtorrent-rutorrent</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、添加密码访问</strong></p>
<pre><code>#为了一次性操作到位，博主将这步放到了安装镜像之前，所以不用怀疑博主放错了顺序</code></pre><p>一般<code>Docker</code>镜像安装完成后，我们就可以通过<code>IP</code>访问<code>Web</code>客户端，在默认的情况下是不带密码访问的，可以直接进入，如果想通过密码访问，我们需要进行如下操作。</p>
<p>在根目录新建一个文件夹<code>dwon</code>：</p>
<pre><code>#该文件夹必须为Docker镜像里/downloads文件夹映射对象
mkdir down</code></pre><p>进入文件夹并新建<code>.htpasswd</code>文件，输入访问用户名和密码：</p>
<pre><code>#进入文件夹
cd down

#以下3种加密任选其一，记得修改用户名rats和密码moerats
#crypt加密
printf &quot;rats:$(openssl passwd -crypt moerats)\n&quot; &gt;&gt; .htpasswd 

#apr1加密
printf &quot;rats:$(openssl passwd -apr1 moerats)\n&quot; &gt;&gt; .htpasswd

#MD5加密
printf &quot;rats:$(openssl passwd -1 moerats)\n&quot; &gt;&gt; .htpasswd</code></pre><p>如果不需要密码访问的可直接跳过该步骤。</p>
<p><strong>3、拉取镜像</strong></p>
<pre><code>docker run -dt --name rtorrent-rutorrent -p 8080:80 -p 49160:49160/udp -p 49161:49161 -v /root/down:/downloads diameter/rtorrent-rutorrent:latest</code></pre><p>参数说明：</p>
<pre><code>-p 8080:80：将内部Web 80端口映射到外部的8080端口，8080可自定义，之后通过http://ip:8080访问Web界面
-v /root/down:/downloads：将内部/downloads文件夹映射到外部的/root/down文件夹

#/downloads包含以下信息
下载文件夹、autodl-irssi配置文件、rtorrent暂存文件(watch/session)、rtorrent和ruTorrent配置文件、nginx和rtorrent日志等，将文件夹映射出来后，可直接在/root/down文件夹查看或修改

#其他参数大概说下，都可不变
DHT UDP端口：49160
传入连接端口：49161</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Droppy搭建一个在线文件分享系统</title>
    <url>/2145/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Droppy</code>是一款在线文件分享系统，主要功能有拖拽上传、多文件同时上传、邮件分享和链接分享、支持密码设置、举报、文件管理等，界面非常简洁，使用起来也很方便，很适合做文件分享存储站。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Droppy(6).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Droppy(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统环境：</strong><code>PHP 5.5+</code>、<code>Mysql</code>、<code>Nginx</code>、<code>MOD rewrite</code>、<code>Cron Jobs</code>。<br><strong>说明：</strong>由于<code>Droppy</code>为收费系统，所以这里使用的为最新破解版，源码来自于顶点网。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板安装<code>PHP</code>、<code>Mysql</code>、<code>Nginx</code>、<code>phpmyadmin</code>。</p>
<p><strong>2、上传程序</strong><br>添加域名，然后下载程序：Droppy-v1.4.5破解版，将程序上传到网站根目录解压。</p>
<p><strong>3、添加伪静态</strong><br>点击域名，找到伪静态，添加以下代码：</p>
<pre><code>location / {
try_files $uri $uri/ /index.php?$query_string;
if (!-f $request_filename){
set $rule_0 1$rule_0;
}
if (!-d $request_filename){
set $rule_0 2$rule_0;
}
if ($rule_0 = &quot;21&quot;){
rewrite ^/([^/]+)$ /index.php?download=$1 last;
}
}</code></pre><p><strong>4、新建数据库</strong><br>点击面板左侧数据库，登录<code>phpmyadmin</code>添加数据库，注意<code>Droppy</code>所使用的数据库用户名需为<code>root</code>。</p>
<p><strong>5、安装程序</strong><br>先将以下目录权限更改为<code>777</code>：</p>
<pre><code>uploads、uploads/tmp/、admin/updates/</code></pre><p>然后打开域名<code>http://xx.com/install.php</code>进行安装配置，授权码：<code>JUST-A-PRANK-BRO</code>。<br><img src="https://www.southcat.net/usr/picture/Droppy(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Droppy(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Droppy(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>安装完成后，记得删除根目录下<code>install.php</code>文件。</p>
<h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p><strong>插件下载：</strong>点击下载，分别为<code>PAYPAL支付</code>、<code>亚马逊S3存储</code>、<code>FTP/SFTP上传</code>。</p>
<p>下载后，点击左侧插件，选择插件压缩包进行安装，然后点击设置进行设置。<br><img src="https://www.southcat.net/usr/picture/Droppy(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="汉化前端"><a href="#汉化前端" class="headerlink" title="汉化前端"></a>汉化前端</h2><p>由于后台默认中文，前端没有，所以我们需要汉化下，将根目录的<code>简体中文.php</code>文件移到<code>config/language</code>目录中，并给予<code>775</code>的权限。</p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>一款支持对接多家云存储的多功能网盘系统：Cloudreve搭建教程</li>
<li>一个简洁的去中心化视频分享平台：ipfstube安装教程</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Firefox Send搭建一个临时文件分享系统</title>
    <url>/2379/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Firefox Send</code>好像一两年前博主就分享过，是<code>Firefox</code>推出的一個全新的临时文件分享系统，具体查看→传送门，不过貌似代码开源了，也有几个小伙伴搭建的时候遇到了点问题，要博主发个教程，这里就水一下手动搭建和<code>Docker</code>搭建。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/DJFirefoxSend(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/DJFirefoxSend(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/DJFirefoxSend(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/DJFirefoxSend(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>Github地址：</strong><a href="https://github.com/mozilla/send" target="_blank" rel="noopener">https://github.com/mozilla/send</a></p>
<p><strong>所需环境：</strong><code>Node.js 10+</code>、<code>Redis</code>，如果你服务器，特别是<code>CentOS</code>，内存<code>512M</code>或以下的话，建议加点虚拟内存，不然后面可能会安装失败，也可以用下<code>Swap</code>一键脚本→传送门。</p>
<p><strong>1、安装Nodejs</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y nodejs git

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs -y
yum -y groupinstall &quot;Development Tools&quot;</code></pre><p><strong>2、安装Redis</strong><br><code>CenOS 6</code>系统：</p>
<pre><code>#安装EPEL
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
#安装Redis
yum install redis git -y
#启动Redis
service redis start
#设置开机自启
chkconfig redis on</code></pre><p><code>CenOS 7</code>系统：</p>
<pre><code>#安装EPEL
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#安装Redis
yum install redis -y
#启动Redis
systemctl start redis
#设置开机自启
systemctl enable redis</code></pre><p><code>Debian</code>/<code>Ubuntu</code>系统：</p>
<pre><code>apt install redis-server -y</code></pre><p><strong>3、安装Firefox Send</strong></p>
<pre><code>git clone https://github.com/mozilla/send.git
cd send
#安装依赖
npm install
#构建生产环境
npm run build
#运行
npm run prod</code></pre><p>基本上官方安装方法是这样，不过貌似使用<code>root</code>用户构建生产环境的时候会有点小问题，普通用户倒是没问题的。</p>
<p>一般我们玩的服务器都是直接给的<code>root</code>用户，所以这里就需要新建一个普通用户进行构建操作。</p>
<p>先使用<code>root</code>登录<code>SSH</code>客户端，使用命令：</p>
<pre><code>#新建一个moerats用户，指定该用户的主目录为/home/moerats

#Debian/Ubuntu系统
useradd -d /home/moerats -m moerats

#CentOS系统，以下命令会自动给你创建一个/home/moerats主目录
useradd moerats</code></pre><p>然后继续使用命令：</p>
<pre><code>#进入到/home/moerats目录下载send项目
cd /home/moerats
git clone https://github.com/mozilla/send.git
#将send目录用户权限改为新建用户moerats
chown -R moerats:moerats send
#切换moerats用户
su - moerats
#进入项目文件夹
cd send
#安装依赖
npm install
#构建生产环境
npm run build
#运行
npm run prod</code></pre><p>不出意外的话，构建和运行都没问题，不过运行的话<code>root</code>用户和新建的<code>moerats</code>用户都是可以运行的。</p>
<p>访问地址为<code>ip:1443</code>，然后一般情况下<code>CentOS</code>还需要开启防火墙<code>1443</code>端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 1443 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=1443/tcp --permanent
firewall-cmd --reload</code></pre><p>想要访问就需要使用域名反代，方法看后面。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong><br>这里就直接使用博主制作的镜像，使用命令：</p>
<pre><code>docker run --name send -d -p 1443:1443 moerats/send</code></pre><p>然后使用<code>ip:1443</code>访问即可，如果你想用其它端口，就更改前面的<code>1443</code>参数，比如<code>8888:1443</code>。</p>
<h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;www.southcat.net {
 gzip
 proxy / 127.0.0.1:1443 {
    websocket
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:1443 {
    websocket
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用FileManager+基于Python3的爬虫程序建立影音图片库</title>
    <url>/1940/</url>
    <content><![CDATA[<p><strong>说明：</strong>爬虫估计很多人知道，可以自动下载一些网站上面的图片，视频，这里说下使用<code>FileManager</code>和爬虫建立影音、图片库，并分享几个美女站爬虫（<code>1024</code>/<code>mm131</code>/<code>91</code>/<code>mmjpg</code>）。想看美女的可以爬来看看。至于其他学习资料网站的爬虫，可以去<code>Github</code>上找找。</p>
<pre><code>提示：91爬虫已失效，现已移除该爬虫脚本。</code></pre><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/python(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/python(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p><strong>注：</strong>以下部分爬虫由Eq博主提供。</p>
<p>爬虫使用<code>python3</code>+<code>requests</code>库编写，在<code>Windows</code>系统和<code>Linux</code>系统下都可以运行，大部分<code>Ubuntu</code>、<code>Debian</code>都含有<code>Python3</code>，直接安装最新此系统就可以了。而<code>CentOS</code>需要额外安装<code>Python3</code>，这里只说下<code>CentOS 7</code>系统使用方法。</p>
<p><strong>1、安装FileManager网盘</strong><br>教程参考：利用Caddy扩展快速安装FileManager私人网盘/在线文件管理器。</p>
<p><strong>2、检查Python3并升级</strong><br>查看<code>Python3</code>是否安装</p>
<pre><code>python3 -V</code></pre><p>如果返回<code>-bash: python3: command not found</code>，就使用<code>Python 3.6</code>一键脚本进行安装：</p>
<pre><code>wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh</code></pre><p>本脚本包含许多必需库，不会因为缺少依赖而出问题，如果不想用脚本的，也可以手动升级，教程参考：Linux CentOS升级Python 3.6版本方法。</p>
<p><strong>3、安装requests库</strong></p>
<pre><code>pip3 install requests</code></pre><p><strong>4、创建文件夹</strong></p>
<pre><code>mkdir /usr/local/caddy/www/file/xx  #用来存储文件
cd /usr/local/caddy/www/file/xx</code></pre><p><strong>5、下载并运行爬虫</strong></p>
<pre><code>#1024图片爬虫
wget https://www.southcat.net/usr/shell/Python3/1024_spider.py &amp;&amp; python3 1024_spider.py
#mm131图片爬虫
wget https://www.southcat.net/usr/shell/Python3/mm131_spider.py &amp;&amp; python3 mm131_spider.py
#mmjpg图片爬虫
wget https://www.southcat.net/usr/shell/Python3/mmjpg.py &amp;&amp; python3 mmjpg.py    </code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用EH Forwarder Bot实现Telegram同时收发多个微信/QQ消息</title>
    <url>/2392/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>EH Forwarder Bot</code>是一个可扩展的聊天隧道框架，允许用户一次发送和接收来自多个<code>IM</code>平台的消息，并最终远程管理他们的帐户，目前可以实现的<code>Telegram</code>收发<code>QQ</code>、微信、<code>Facebook Messenger</code>等消息，你也可以同时一起收发<code>N</code>个微信、<code>N</code>个<code>QQ</code>等，这里就说下<code>Telegram</code>收发微信/<code>QQ</code>消息的手动安装及<code>Docker</code>安装。</p>
<h2 id="收发微信"><a href="#收发微信" class="headerlink" title="收发微信"></a>收发微信</h2><pre><code>提示：使用该功能前，请先确认所使用的微信能成功登录WEB端，不然后面会报错。</code></pre><p><strong>项目地址：</strong><a href="https://github.com/blueset/ehForwarderBot" target="_blank" rel="noopener">https://github.com/blueset/ehForwarderBot</a></p>
<p>所使用的模块地址：</p>
<pre><code>#Telegram模块
https://github.com/blueset/efb-telegram-master
#微信模块
https://github.com/blueset/efb-wechat-slave</code></pre><p>其他模块地址→传送门，包括<code>Facebook Messenger</code>等模块，有兴趣的可以看下。</p>
<p><strong>环境要求：</strong><code>Python 3.6+</code>、<code>EH Forwarder Bot 2.0+</code>、<code>ffmpeg</code>、<code>libmagic</code>、<code>libwebp</code></p>
<p>手动教程适用于<code>Debian</code>、<code>CentOS</code>、<code>Ubuntu</code>，如果你想用<code>Ubuntu</code>的话，最好使用<code>18.04+</code>版本。</p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#CentOS系统
yum install file-devel libwebp-tools git screen -y

#Debian/Ubuntu系统
apt install libwebp-dev libmagic-dev git screen -y</code></pre><p><strong>2、安装Python3.6</strong></p>
<pre><code>#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh
#Ubuntu系统
apt update
apt install python3-pip python3-setuptools python3-dev -y</code></pre><p><strong>3、安装ffmpeg</strong></p>
<pre><code>#下载ffmpeg二进制
wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz
#解压文件
tar xvf ffmpeg-git-*-static.tar.xz
#移动ffmpeg可执行文件
mv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/bin/
#删除文件
rm -rf ffmpeg-git-*</code></pre><p><strong>4、安装框架</strong></p>
<pre><code>#安装稳定版
pip3 install ehforwarderbot

#安装开发版，建议安装开发版，bug修复快些，功能也新
pip3 install git+https://github.com/blueset/ehforwarderbot.git</code></pre><p><strong>5、安装TG和微信模块</strong></p>
<pre><code>pip3 install efb-telegram-master efb-wechat-slave</code></pre><p><strong>6、启用模块</strong><br>先新建配置文件夹和配置文件<code>config.yaml</code>，使用命令：</p>
<pre><code>#default为配置文件默认的文件夹，你也可以命名为其它的，不会玩的就默认
mkdir -p ~/.ehforwarderbot/profiles/default
nano ~/.ehforwarderbot/profiles/default/config.yaml</code></pre><p>参考代码为：</p>
<pre><code>#请根据实际情况修改
master_channel: foo.demo_master
slave_channels:
- foo.demo_slave
- bar.dummy
middlewares:
- foo.null</code></pre><p>以上对应的均为模块名称，模块参考→传送门，比如这里博主只用了<code>Telegram</code>和<code>WeChat</code>模块，所以大致配置为：</p>
<pre><code>master_channel: blueset.telegram
slave_channels:
- blueset.wechat</code></pre><p>然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>这只是登录一个微信号，如果你要同时登录多个微信号，那么配置文件就需要改为：</p>
<pre><code>#比如我要同时登录并收发3个微信号
master_channel: blueset.telegram
slave_channels:
- blueset.wechat
- blueset.wechat#moe123
- blueset.wechat#rats321</code></pre><p>只需要在后面使用<code>#</code>指定一个<code>ID</code>号，该<code>ID</code>号只能有字母，数字和下划线，即正则表达式<code>[a-zA-Z0-9_]+</code>，想登录几个账户就加几个。如果你使用<code>QQ</code>、<code>Facebook Messenger</code>模块的话，设置方法也一样。</p>
<p><strong>7、建立TG配置文件</strong><br>建立配置文件前需要先获取<code>Telegram</code>的<code>Token</code>和<code>Userid</code>，获取方法如下：</p>
<pre><code>#Telegram的Token获取
1、在Telegram关注@BotFather
2、再到对话框依次输入：/start=&gt;/newbot，然后会要你给机器人命名(如：MoeratsBot)，命名完成会给你一个Token。

#Telegram群Userid获取
1、先和你的机器人聊天，随便发一句话。
2、在浏览器输入https://api.telegram.org/botxx:xx/getUpdates(其中xx:xx为Token)，然后chat后面的id即为你的userid。</code></pre><p>再新建一个<code>Telegram</code>模块配置文件夹和配置文件<code>config.yaml</code>，使用命令：</p>
<pre><code>#同样的也建在default文件夹，如果你上面更改了default文件夹，那这里也要更改
mkdir ~/.ehforwarderbot/profiles/default/blueset.telegram
nano ~/.ehforwarderbot/profiles/default/blueset.telegram/config.yaml</code></pre><p>填入以下代码：</p>
<pre><code>token: &quot;12345:moerats&quot; 
admins:
- 765432 </code></pre><p>然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。上面所对应的参数分别为<code>Token</code>和<code>Userid</code>。关于<code>Telegram</code>模块的更多玩法可以参考→传送门。</p>
<p><strong>8、启动</strong></p>
<pre><code>#该命令会默认从default文件夹读取信息，如果你之前建的是moerats文件夹，那命令应该为ehforwarderbot -p moerats
ehforwarderbot</code></pre><p>这时候会给一个微信二维码或者二维码链接你，放到浏览器打开扫描登录即可，如果你设置了同时登录多个账户，那设置几个就需要登录几个。</p>
<p>然后使用<code>Ctrl+C</code>断开运行，再使用命令后台运行：</p>
<pre><code>screen -dmS EHF ehforwarderbot</code></pre><p>最后你的微信消息会通过机器人发送给你，你也可以通过机器人将消息发送给指定好友。</p>
<h2 id="收发QQ消息"><a href="#收发QQ消息" class="headerlink" title="收发QQ消息"></a>收发QQ消息</h2><pre><code>提示：这里随便提了下，了解下就行了，建议使用下面Docker方式安装。</code></pre><p>所使用的模块地址：</p>
<pre><code>#Telegram模块
https://github.com/blueset/efb-telegram-master
#QQ模块
https://github.com/milkice233/efb-qq-slave</code></pre><p>由于方法写的很大概，所以需要你把收发微信的方法看懂，这里<code>EH Forwarder Bot</code>只支持<code>酷Q</code>客户端，一般采用<code>Docker</code>的方法在<code>Linux</code>上安装酷<code>Q</code>，方法很久以前就说过了，参考→传送门，不过启动命令变了下，也就是安装<code>wine-coolq</code>的命令。</p>
<p>安装<code>TG</code>和<code>QQ</code>模块：</p>
<pre><code>pip3 install efb-telegram-master efb-qq-slave</code></pre><p>安装<code>wine-coolq</code>：</p>
<pre><code>mkdir coolq  #包含CoolQ程序文件
docker run -ti --rm --name cqhttp-test --net=&quot;host&quot; \
     -v $(pwd)/coolq:/home/user/coolq     `#mount coolq folder` \
     -p 9000:9000                         `#网页noVNC端口` \
     -p 5700:5700                         `#酷Q对外提供的API接口的端口` \
     -e VNC_PASSWD=MAX8char               `#请修改VNC密码！！！！` \
     -e COOLQ_PORT=5700                   `#酷Q对外提供的API接口的端口` \
     -e COOLQ_ACCOUNT=123456              `#在此输入要登录的QQ号，虽然可选但是建议填入` \
     -e CQHTTP_POST_URL=http://127.0.0.1:8000   `#efb-qq-slave监听的端口/地址用于接受传入的消息` \
     -e CQHTTP_SERVE_DATA_FILES=yes       `#允许以HTTP方式访问酷Q数据文件` \
     -e CQHTTP_ACCESS_TOKEN=ac0f790e1fb74ebcaf45da77a6f9de47  `#Access Token` \
     -e CQHTTP_POST_MESSAGE_FORMAT=array  `# 回传消息时使用数组(必选)` \
     richardchien/cqhttp:latest</code></pre><p>然后使用<code>ip:9000</code>访问<code>noVNC</code>登录<code>酷Q</code>即可。</p>
<p>新建<code>QQ</code>模块配置文件：</p>
<pre><code>mkdir ~/.ehforwarderbot/profiles/default/milkice.qq
nano ~/.ehforwarderbot/profiles/default/milkice.qq/config.yaml</code></pre><p>填入的代码大致如下:</p>
<pre><code>Client: CoolQ                         #指定要使用的QQ客户端（此处为CoolQ）
CoolQ:
    type: HTTP                        #指定efb-qq-slave与酷Q通信的方式 现阶段仅支持HTTP
    access_token: ac0f790e1fb74ebcaf45da77a6f9de47
    api_root: http://127.0.0.1:5700/  # 酷Q API接口地址/端口
    host: 127.0.0.1                   # efb-qq-slave所监听的地址用于接收消息
    port: 8000                        # 同上
    is_pro: false                      # 若为酷Q Pro则为true，反之为false
    air_option:                       # 包含于air_option的配置选项仅当is_pro为false时才有效
        upload_to_smms: true          # 将来自EFB主端(通常是Telegram) 的图片上传到sm.ms服务器并以链接的形式发送到QQ端</code></pre><p>最后使用<code>ehforwarderbot</code>命令启动即可。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>这里选择<code>2</code>个最新的<code>Docker</code>镜像，也是官方推荐的，项目地址：</p>
<pre><code>#Telegram收发QQ消息
https://github.com/Earth-Online/efb-qq-coolq-docker
#Telegram收发微信消息
https://www.github.com/Mikubill/efb-wechat-docker</code></pre><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、Telegram收发QQ消息</strong><br>安装<code>docker-compose</code>：</p>
<pre><code>curl -L https://github.com/docker/compose/releases/download/1.25.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
#验证是否安装成功
docker-compose --version
#返回以下信息即安装成功
docker-compose version 1.25.0, build 1110ad01</code></pre><p>拉取<code>Docker</code>源码：</p>
<pre><code>git clone https://github.com/Earth-Online/efb-qq-coolq-docker.git
cd efb-qq-coolq-docker
#编辑config.yaml配置文件
nano ehforward_config/profiles/default/blueset.telegram/config.yaml</code></pre><p>修改如下：</p>
<pre><code>#token和userid参数获取方法查看上面的手动安装教程
token: &quot;你的TG机器人Token&quot;
admins:
- 你的Userid</code></pre><p>然后再编辑<code>docker-compose.yml</code>文件：</p>
<pre><code>nano docker-compose.yml</code></pre><p>修改如下：</p>
<pre><code>- VNC_PASSWD=你的密码
- COOLQ_ACCOUNT=你的qq账号</code></pre><p>后台启动：</p>
<pre><code>#第一次启动会构建镜像，所以会慢点
docker-compose up -d</code></pre><p>然后打开<code>ip:9801</code>登陆<code>novnc</code>后完成<code>coolq</code>登陆操作。如果该地址打不开，请检查下防火墙。</p>
<p><strong>3、Telegram收发微信消息</strong></p>
<pre><code>#拉取源码
git clone https://github.com/mikubill/efb-wechat-docker.git
#构建镜像
cd efb-wechat-docker &amp;&amp; docker build -t mikubill/efbwechat .
#启动镜像，TOKEN为TG机器人Token、ADMIN为你的Userid，获取方法查看上面的手动安装教程
docker run -d -t --name &quot;efbwechat&quot; -e TOKEN=xxxx -e ADMIN=xxxx mikubill/efbwechat</code></pre><p>最后获取微信登录验证码，使用命令：</p>
<pre><code>docker logs -f efbwechat </code></pre><p>扫描登录即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>一个去中心化的视频分享服务平台：PeerTube安装教程</title>
    <url>/2051/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>PeerTube</code>是一个视频上传、分享服务平台，这个项目是建立在<code>webtorrent</code>这个项目和<code>ActivityPub</code>协议；架构很灵活，可以支持自建服务器，<code>web</code>版本的<code>bittorrent</code>分发视频，简而言之，就是建立了一个去中心化的，在线版的快播。</p>
<ul>
<li>每个<code>peertube</code>节点称之为一个<code>Instance</code>。</li>
<li>一个<code>Instance</code>可以提供类似<code>youtube</code>的服务，可以开放用户注册，上传视频。</li>
<li>多个<code>Instance</code>之间通过<code>bittorent</code>共享服务。</li>
<li>用户访问<code>Instance</code>时，多个用户通过<code>webtorrent</code>来交换数据，变身<code>seeds</code>，从而减轻服务器压力，提高车速。</li>
<li>如果只有一个用户观看，<code>Instance</code>自动变成<code>seeds</code>。</li>
<li>支持<code>ActivityPub</code>协议，后续可以搭建去中心化的评论平台之类的。</li>
<li><code>Github</code>项目地址：<a href="https://github.com/Chocobozzz/PeerTube" target="_blank" rel="noopener">https://github.com/Chocobozzz/PeerTube</a></li>
</ul>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/PeerTube(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PeerTube(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PeerTube(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本教程适用于<code>CentOS</code>、<code>Debian</code>、<code>Ubuntu</code>系统，内存至少为<code>1G</code>，并在<code>Debian 8 X64</code>下完美通过。</p>
<p><strong>1、安装Docker和Docker Compose</strong></p>
<pre><code>#安装Docker
curl -sSL https://get.docker.com/ | sh
service docker start
#安装Docker Compose
curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>2、添加虚拟内存</strong><br>如果你的内存足够的大，这步可以跳过。</p>
<pre><code>cd /var/
#获取文件块，count后面参数建议为内存的2倍
dd if=/dev/zero of=swapfile bs=1M count=2048
#创建swap文件
/sbin/mkswap swapfile
#激活swap文件
/sbin/swapon swapfile
#修改权限
chmod 0644 /var/swapfile
#开机自启
echo &quot;/var/swapfile swap swap defaults 0 0&quot; &gt;&gt;/etc/fstab</code></pre><p><strong>3、下载PeerTube并配置</strong></p>
<pre><code>git clone https://github.com/Chocobozzz/PeerTube.git</code></pre><p>如果提示<code>git</code>不存在的，运行：</p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install git

#CentOS/RHEL系统
yum -y install git</code></pre><p>修改<code>docker-compose.yml</code>文件，并将内部端口<code>9000</code>暴露出来，使其映射到其它外部端口。</p>
<pre><code>cd /root/PeerTube/support/docker/production/
nano docker-compose.yml</code></pre><p>编辑文件，将<code>PEERTUBE_HOSTNAME</code>参数后面写成你的域名，并在文件里添加<code>ports</code>代码：</p>
<pre><code>#前面的端口随便填
ports:
  - &quot;8000:9000&quot;

#示例
version: &quot;3.3&quot;
services:
  peertube:
    ports:
      - &quot;8000:9000&quot;
    build:</code></pre><p><strong>4、运行容器</strong></p>
<pre><code>docker-compose up</code></pre><p>如果遇到错误<code>Error: EACCES: permission denied, mkdir &#39;/data/logs&#39;</code>，使用<code>Ctrl+c</code>关闭，并运行：</p>
<pre><code>chown -R 991:991 data/</code></pre><p>然后后台启动</p>
<pre><code>docker-compose up -d</code></pre><p>然后可以进入<code>http://IP:8000</code>查看界面了。</p>
<p><strong>5、配置https访问</strong><br>为了方便，这里使用<code>Caddy</code>反代，并自动添加<code>ssl</code>证书。</p>
<p>安装<code>Caddy</code></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>编辑配置文件</p>
<pre><code>#以下全部内容是一个整体，修改域名、IP、邮箱后一起复制到SSH运行！
echo &quot;https://xx.com {
 tls admin@southcat.net
 proxy / 127.0.0.1:8000 {
    header_upstream Connection {&gt;Connection}
    header_upstream Upgrade {&gt;Upgrade}
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
 log /var/log/caddy.log
 gzip
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>启动<code>Caddy</code></p>
<pre><code>/etc/init.d/caddy restart</code></pre><p>最后就可以通过域名<code>https</code>访问了。</p>
<pre><code>#查看日志
cat /root/PeerTube/support/docker/production/docker-volume/data/logs/peertube.log
#会输出一些信息，找到如下信息，密码就是xxxxxx
{&quot;message&quot;:&quot;Username: root&quot;,&quot;level&quot;:&quot;info&quot;,&quot;timestamp&quot;:&quot;}
{&quot;message&quot;:&quot;User password: xxxxxxxxxx&quot;,&quot;level&quot;:&quot;info&quot;,&quot;timestamp&quot;:&quot;}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Forsaken Mail搭建一个临时邮箱系统，即收即毁</title>
    <url>/2211/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Forsaken Mail</code>是一个临时邮箱系统，可以供任何人接受邮件，即收即毁，支持自定义邮箱地址前缀，这里就说下<code>Docker</code>和<code>NPM</code>两种安装教程，任选一种即可，有兴趣或者有需求的可以玩玩。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Forsaken_Mail(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Forsaken_Mail(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>1、<code>VPS</code>需要开启<code>25</code>端口，这个直接发工单要主机商开启。<br>2、域名解析，如果你想邮件地址格式都为<code>*@xx.com</code>的形式，则为<code>xx.com</code>设置<code>MX</code>记录，需要添加以下<code>2</code>条解析记录。</p>
<pre><code>#MX记录
xx.com MX 10 mx.xx.com
#A记录 
mx.xx.com A 服务器IP</code></pre><h2 id="NPM安装"><a href="#NPM安装" class="headerlink" title="NPM安装"></a>NPM安装</h2><p><strong>Github地址：</strong><a href="https://github.com/denghongcai/forsaken-mail" target="_blank" rel="noopener">https://github.com/denghongcai/forsaken-mail</a></p>
<p><strong>1、安装NPM</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt-get install -y nodejs git screen

#Centos系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs git screen -y</code></pre><p><strong>2、安装Forsaken Mail</strong></p>
<pre><code>git clone https://github.com/denghongcai/forsaken-mail.git
cd forsaken-mail
#安装Forsaken Mail
npm install
#后台运行Forsaken Mail
screen -S forsakenmail
npm start</code></pre><p>最后按<code>Ctrl+A</code>，再按<code>D</code>键返回主界面，然后打开<code>http//mx.xx.com:3000</code>就可以查看<code>Forsaken Mail</code>邮箱界面了，如果你打不开界面，可能还需要开启防火墙端口，一般该情况在<code>CentOS</code>系统上出现最多，这里就说下<code>CentOS</code>开启操作。</p>
<pre><code>#Centos 6系统
iptables -I INPUT -p tcp --dport 3000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7系统
firewall-cmd --zone=public --add-port=3000/tcp --permanent 
firewall-cmd --reload</code></pre><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Forsaken Mail</strong></p>
<pre><code>docker run --name forsaken-mail -d -p 25:25 -p 3000:3000 denghongcai/forsaken-mail</code></pre><p>安装成功后打开<code>http//mx.xx.com:3000</code>就可以了，如果打不开界面请参考<code>NPM</code>安装步骤。</p>
<h2 id="配置Https访问"><a href="#配置Https访问" class="headerlink" title="配置Https访问"></a>配置Https访问</h2><p>如果你不习惯使用<code>http//mx.xx.com:3000</code>，或者想使用<code>Https</code>域名访问主界面，那我们可以使用<code>Caddy</code>反代。</p>
<p>这里所使用的域名只能是上面设置<code>MX</code>记录的<code>xx.com</code>，并提前将域名<code>A</code>记录解析到服务器<code>IP</code>。</p>
<p><strong>1、安装Caddy</strong><br>使用命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p><strong>2、配置Caddy</strong></p>
<pre><code>#以下全部内容是一个整体，请修改2个域名后一起复制到SSH运行！
echo &quot;xx.com {
 gzip
 tls admin@southcat.net
 proxy / mx.xx.com:3000
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p><strong>3、启动Caddy</strong></p>
<pre><code>/etc/init.d/caddy start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用GetSub一键下载指定视频的ass/srt等字幕文件</title>
    <url>/2449/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多时候我们下载视频的时候，都是么得字幕的，对于强迫症或者有其他需求的人来说，都需要加进去，一般都是首先去其它字幕网站下载后，使用<code>ffmpeg</code>或者一些转码程序将字幕烧录进去，通常来说，手动获取字幕还是比较麻烦的，这里就分享一个工具<code>GetSub</code>，可以自动给我们根据某个视频或者视频文件夹，匹配出相应的<code>ass</code>/<code>srt</code>字幕文件，字幕来源于subhd、zimuzu和zimuku，获取速度也是很快的，有需求的可以用下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/getsub.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/gyh1621/GetSubtitles" target="_blank" rel="noopener">https://github.com/gyh1621/GetSubtitles</a></p>
<p><strong>环境要求：</strong><code>Python 2</code>或<code>3</code>，建议使用<code>Python 3</code>。</p>
<p><strong>1、安装pip或pip3</strong></p>
<pre><code>提示：pip和pip3自己选一种进行安装。</code></pre><p>安装<code>pip</code>：</p>
<pre><code>#CentOS 6.x 32位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 6.x 64位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 7.x
yum install -y epel-release
yum install -y python-pip
#如果CentOS 7安装出现No package python-pip available，可以用以下命令进行安装
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py

#Debian/Ubuntu系统
apt -y update
apt -y install python-pip</code></pre><p>安装<code>pip3</code>：</p>
<pre><code>#CenOS 6系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
yum install python34 -y
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py

#CenOS 7系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install python36 -y
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py

#Debian/Ubuntu系统
apt update
apt install python3-pip python3-setuptools python3-wheel -y</code></pre><p><strong>2、安装GetSub</strong></p>
<pre><code>#pip安装
pip install getsub

#pip3安装
pip3 install getsub</code></pre><p><strong>3、使用方法</strong></p>
<pre><code>#使用命令
getsub [-h] [-q] [-s] [-o] [-m] [-n NUMBER] [-b] [-d DOWNLOADER] [--debug] [--plex] name

#参数详解
-h          帮助
-q          查询模式，手动选择下载的压缩包，多选使用&apos;,&apos;或&apos;，&apos;分隔
-s          手动选择下载压缩包中要解压的字幕
-o          若视频存在同名字幕，替换已经存在的字幕
-m          保存原始下载字幕压缩包（通常一个字幕压缩包含有多个字幕）
-b          若一个字母压缩包内同时有.ass、.srt类型字幕，保存两种字幕
-n          查询模式下显示最大候选字幕数
-d          选择下载器，subhd、zimuku、zimuzu
--plex      在下载完成的字幕名中插入.zh标识供plex识别为中文字幕
--debug     显示报错详细信息</code></pre><p>下载指定视频的字幕，使用命令：</p>
<pre><code>#自动给你匹配它认为最合适的字幕，一般是ass格式、双语字幕
getsub Aladdin.2019.720p.WEBRip.x264

#自动查询字幕文件，并让你选择合适的下载
getsub -q -s Aladdin.2019.720p.WEBRip.x264</code></pre><p>以上命令默认将字幕文件下载到当前执行目录，如果想下载到指定目录，比如<code>/moerats</code>，那后面就使用<code>/moerats/电影名称</code>。</p>
<p>批量下载视频文件夹所有视频的字幕，使用命令：</p>
<pre><code>#自动匹配/moerats文件夹里的所有视频最合适的字幕，并直接给你下载到/moerats目录
getsub /moerats

#批量查询/moerats文件夹里的所有视频的字幕文件，并让你选择合适的下载
getsub -q -s /moerats</code></pre><p>最后就可以自行将字幕烧录进视频了。</p>
<p>使用<code>ffmpeg</code>烧录字幕的方法大致为：</p>
<pre><code>#安装ffmpeg
wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz
tar xvf ffmpeg-git-*-static.tar.xz
mv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/bin/
rm -rf ffmpeg-git-*

#简单的烧录命令
ffmpeg -i input.mp4 -vf subtitles=input.ass output.mp4</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用github gist api搭建一个动态的个性化博客</title>
    <url>/2096/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一个在Github上搭建个人的Hexo博客教程，其特点是不需要域名和服务器就可以搭建一个博客，不过由于<code>Hexo</code>为静态的，所以只能当成一个纯写作博客，而博主刚刚发现了个新项目，同样搭建在<code>Github</code>上，与<code>Hexo</code>不同的是为动态博客，非常美观和强大，还支持自定义设置。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>博客基于<code>GitHub Pages</code>与<code>Github API</code>实现无后台，可动态发布博客的系统，博客数据储存于<code>gist</code>通过<code>Github API</code>进行增删改查，带音乐播放区，社交圈，可以动态修改标题，描述，背景等配置。</p>
<p><strong>演示地址：</strong><a href="https://github-laziji.github.io" target="_blank" rel="noopener">https://github-laziji.github.io</a><br><strong>Github地址：</strong><a href="https://github.com/GitHub-Laziji/vblog" target="_blank" rel="noopener">https://github.com/GitHub-Laziji/vblog</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Github_blog(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Github_blog(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Github_blog(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Github_blog(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>基于<code>GitHub Pages</code>无需服务器</li>
<li>改进传统<code>GitHub Pages</code>不能动态发布的缺陷</li>
<li>包含电脑端和移动端</li>
<li>单页面应用</li>
</ul>
<h2 id="快速搭建"><a href="#快速搭建" class="headerlink" title="快速搭建"></a>快速搭建</h2><p>快速搭建博客只需<code>2</code>步，首先去右上角点击<code>github</code>头像旁边的<code>&quot;+&quot;</code>号 选择<code>&quot;Import repository&quot;</code>克隆地址填<code>&quot;https://github.com/GitHub-Laziji/GitHub-Laziji.github.io&quot;</code>项目名填<code>&quot;${你的用户名}.github.io&quot;</code>。<br><img src="https://www.southcat.net/usr/picture/Github_blog(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>克隆完成后，进入所建项目，修改文件<code>/static/configuration.json</code>中的<code>&quot;github-username&quot;</code>为自己的<code>github</code>用户名，其他自己看着办。</p>
<p>接下来打开<code>https://${你的用户名}.github.io</code>就可以进入自己博客了，然后管理博客需要<code>Token</code>，获取如下：</p>
<pre><code>在github &gt; settings &gt; Developer settings &gt; Personal access tokens 勾选gist权限就可以获取Token</code></pre><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>如果你想用<code>Github</code>二级域名访问，就无视这一步，如果你想用自己的域名访问，请继续看。</p>
<p>先解析域名的<code>CNAME</code>记录到你的<code>Git</code>二级域名。如果你想用<code>Https</code>访问，可以使用<code>CloudFlare</code>解析域名，并开启<code>CDN</code>强制<code>Http</code>转<code>Https</code>。<br><img src="https://www.southcat.net/usr/picture/Github_blog(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后访问你的博客<code>Git</code>项目地址，点击<code>Create new file</code>新建文件，命名<code>CNAME</code>，内容写上你的域名，不要<code>http</code>等。<br><img src="https://www.southcat.net/usr/picture/Github_blog(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Google Drive File Stream后，C盘没空间/爆满的解决方法</title>
    <url>/1939/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前提到了Windows/Mac系统下挂载Google Drive网盘为本地硬盘使用，不过经使用存在着<code>C</code>盘很容易出现爆满的情况，查了下资料，发现是缓存没有清除导致的，这里就说下解决方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>原理就是利用<code>Windows</code>下的软链接命令做个”快捷方式”，将缓存目录变相的丢进其它盘。</p>
<p>首先确认你的缓存位置，比如我这系统盘是<code>C</code>盘，那么我的缓存路径应该是<code>c:\Users\&lt;用户名&gt;\AppData\Local\Google\DriveFS</code>，你可以丢到资源管理器地址栏回车确认是不是这个位置。</p>
<p>用户名换成你自己的，如果不是你自己的那么可能是<code>Administrator</code>，然后请<code>Win+R</code>，输入<code>CMD</code>确定。再输入命令：</p>
<pre><code>mklink /d &lt;link_name&gt; &lt;target&gt;</code></pre><p><code>&lt;link_name&gt;</code>为原缓存缓存目录，<code>&lt;target&gt;</code>为新的缓存目录，如：</p>
<pre><code>mklink /d c:\Users\&lt;用户名&gt;\AppData\Local\Google\DriveFS d:\DriveFS</code></pre><p>请不要在<code>C：\Users ...</code>文件夹中更改<code>DriveFS</code>的名称。而且需要先把<code>DriveFS</code>这个文件夹先移动(剪切)到目标位置然后执行这个命令。</p>
<p><strong>注意：</strong>请务必在操作前右击程序点击退出应用。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用haprxoy隐藏SMTP发信服务器源IP地址方法</title>
    <url>/1563/</url>
    <content><![CDATA[<p><code>SMTP</code>发信会暴露网站服务器的IP(即使用了CDN)。如何隐藏服务器源IP呢，可以使用<code>haproxy</code>来端口转发来完成。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>1、需要找一台机器做中转，先安装<code>Haproxy</code>，具体可参考Haproxy安装及端口转发配置</p>
<p>2、把下面的内容写入到<code>haproxy.cfg</code>文件中</p>
<pre><code>global
ulimit-n  51200
defaults
log global
mode    tcp
option  dontlognull
timeout connect 1000ms
timeout client 150000ms
timeout server 150000ms
listen status
bind 0.0.0.0:1080
mode http
log global
stats refresh 30s
stats uri /admin?stats
stats realm Private lands
stats auth admin:password
stats hide-version
frontend ssin
bind *:465
#如果是普通模式，那这里就填25，如果是SSL模式，就需要填465
default_backend ssout
backend ssout
server server1 11.22.33.44 maxconn 204800
#这里的IP需要改成SMTP地址的IP，ping一下SMTP域名即可得到地址</code></pre><p>3、修改完成后，执行重启命令，并设为开机启动</p>
<pre><code>service haproxy restart
chkconfig haproxy on</code></pre><p>4、登录WEB服务器，把smtp地址写进<code>/etc/hosts</code>文件，指向中转服务器的IP。假如我使用的是阿里云的邮件推送，那么它的SMTP服务器域名就是<code>smtpdm.aliyun.com</code>然后编辑<code>/etc/hosts</code>文件</p>
<pre><code>[root@sscloud ~]# vim /etc/hosts
127.0.0.1 localhost
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
10.16.156.98 sscloud
22.33.44.55  smtpdm.aliyun.com
//22.33.44.55就是中转服务器的IP</code></pre><p>修改完成后，执行<code>service network restart</code>重启网卡即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Holer远程登录家里或公司内网的电脑</title>
    <url>/2203/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多家用电脑或者公司内网电脑都没有公网<code>IP</code>，导致我们在外面的时候就不能直接进行远程连接操作，这里就需要用到内网穿透工具了，一般我们都会用到<code>ngrok</code>、花生壳、<code>frp</code>，这里博主就介绍个工具<code>Holer</code>，<code>Holer</code>是一个免费开源的内网穿透工具，它可以将局域网服务器代理到公网的内网穿透工具，支持转发基于<code>TCP</code>协议的报文，而且不需要我们额外使用服务器配置服务端，使用起来非常方便。</p>
<h2 id="远程设置"><a href="#远程设置" class="headerlink" title="远程设置"></a>远程设置</h2><p>首先我们先需要在被远程的电脑上开启远程桌面设置和配置<code>Holer</code>，本文教程以<code>Windows 7</code>为例，如果其它系统设置不一样的请自行百度/谷歌。</p>
<p><strong>1、设置本地管理员账号和密码</strong><br>一般电脑超级管理员账号都是<code>Administrator</code>，而密码也许很多人没设置，这里就大概说下方法。</p>
<p>先点击左下角开始-控制面板-添加或删除用户，然后自行设置或修改管理员密码。<br><img src="https://www.southcat.net/usr/picture/Holer_Win(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、配置本地远程连接</strong><br>右键计算机/我的电脑-远程设置-系统属性界面，将第<code>2</code>项打勾，这里可能需要开启电脑防火墙。<br><img src="https://www.southcat.net/usr/picture/Holer_Win(2).png" alt="请输入图片描述" title="请输入图片描述"><br>再点击右下角选择用户，将管理员账号<code>Administrator</code>添加进去。<br><img src="https://www.southcat.net/usr/picture/Holer_Win(3).png" alt="请输入图片描述" title="请输入图片描述"><br>具体添加步骤为：先点击添加-将对象类型里的用户打勾-高级-立即查找-最后选择<code>Administrator</code>确认即可。</p>
<h2 id="Holer安装配置"><a href="#Holer安装配置" class="headerlink" title="Holer安装配置"></a>Holer安装配置</h2><p><strong>Github地址：</strong><a href="https://github.com/Wisdom-Projects/holer" target="_blank" rel="noopener">https://github.com/Wisdom-Projects/holer</a></p>
<p><strong>1、安装Java 1.7或者更高版本</strong><br>按住<code>Win+R</code>，输入<code>cmd</code>进入命令窗口，输入<code>java -version</code>命令确认后查看<code>Java</code>版本，如果提示版本过低或者没安装，就需要安装下了。</p>
<p>先进入<code>JAVA</code>下载地址：点击进入，再点击中间的<code>Downloads</code>，选择<code>Win</code>版本进行下载安装。</p>
<p><strong>2、下载Holer并配置</strong><br>先在电脑上下载<code>Holer</code>软件包，下载地址：holer-client.zip，然后解压出来。</p>
<p>再修改配置文件<code>holer-client/conf/holer.conf</code>，修改成如下值：</p>
<pre><code>#该参数将本地电脑的127.0.0.1:3389映射到外网holer.org:65533
HOLER_ACCESS_KEY=HOLER_CLIENT-AF3E6391525F70E4</code></pre><p>最后进入<code>Bin</code>文件夹双击<code>startup.bat</code>即可。注意该窗口不能关闭。</p>
<h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><p>这时候被远程连接的电脑已经配置好了，然后就可以使用其它电脑或者手机进行远程连接操作了，这里就说下大概连接方法。</p>
<p><strong>1、使用电脑远程连接</strong><br>我们先在其它电脑上打开远程桌面连接，计算机地址填<code>holer.org:65533</code>，用户名<code>Administrator</code>，连接后输入密码即可访问了。<br><img src="https://www.southcat.net/usr/picture/Holer_Win(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Instantbox快速搭建一个开箱即用的Web端临时Linux系统</title>
    <url>/2373/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多时候想学习下<code>Linux</code>或者程序搭建，然后出错了，不会解决的可能会直接重装系统，很麻烦，然后这里博主就找到了个可以解决该问题的工具<code>instantbox</code>，使用该工具可以让你仅通过浏览器的情况下，快速创建一个开箱即用的<code>Linux</code>系统，可以随时调整配置、使用时长，不用的话可以直接删掉，目前有<code>Ubuntu</code>、<code>CentOS</code>、<code>Debian</code>、<code>Alpine</code>等主流系统，不过由于是通过<code>Docker</code>实现的，所以平时有些命令操作肯定是不能用了，但一般情况下还是可以满足需求的，搭建方法也是超简单，这里说下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Instantbox(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Instantbox(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Instantbox(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Instantbox(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/instantbox/instantbox" target="_blank" rel="noopener">https://github.com/instantbox/instantbox</a></p>
<p><strong>1、安装Docker</strong><br>使用以下命令：</p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Instantbox</strong></p>
<pre><code>#期间会要你输入端口等信息
mkdir instantbox &amp;&amp; cd $_
bash &lt;(curl -sSL https://raw.githubusercontent.com/instantbox/instantbox/master/init.sh)

#启动容器
docker-compose up -d</code></pre><p>然后使用<code>ip:port</code>访问即可。</p>
<p>对于<code>CentOS</code>系统，还需要开启端口，比如你上面填的<code>8888</code>，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8888 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8888/tcp --permanent
firewall-cmd --reload</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用ipset设置防火墙端口白名单，只让指定国家访问</title>
    <url>/2167/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主很早前发过<code>VPS</code>一键屏蔽指定国家<code>IP</code>的教程，查看：Linux VPS一键屏蔽指定国家所有的IP访问，这对于我们阻止某个国家访问网站和<code>CC</code>攻击还是很有用的，不过鉴于很多人需要白名单设置方法，博主研究了下，发现也可以用<code>ipset</code>来完成，这里就说下，目前测试是没问题的。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>首先需要得到国家<code>IP</code>段，下载地址：<a href="http://www.ipdeny.com/ipblocks/。这里以我们国家为例。" target="_blank" rel="noopener">http://www.ipdeny.com/ipblocks/。这里以我们国家为例。</a></p>
<p><strong>1、安装ipset</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install ipset

#CentOS系统
yum -y install ipset</code></pre><p><code>CentOS 7</code>还需要关闭<code>firewall</code>防火墙：</p>
<pre><code>systemctl stop firewalld.service
systemctl disable firewalld.service</code></pre><p><strong>2、清空之前的规则</strong></p>
<pre><code>#防止设置不生效，建议清空下之前的防火墙规则
iptables -P INPUT ACCEPT
iptables -F</code></pre><p><strong>3、创建新规则</strong></p>
<pre><code>#创建一个名为cnip的规则
ipset -N cnip hash:net
#下载国家IP段，这里以中国为例
wget -P . http://www.ipdeny.com/ipblocks/data/countries/cn.zone
#将IP段添加到cnip规则中
for i in $(cat /root/cn.zone ); do ipset -A cnip $i; done</code></pre><p><strong>4、设置IP段白名单</strong></p>
<pre><code>#放行IP段
iptables -A INPUT -p tcp -m set --match-set cnip src -j ACCEPT
#关掉所有端口
iptables -P INPUT DROP</code></pre><p>这时候就只有指定国家的<code>IP</code>能访问服务器了。</p>
<p>如果你在国内，网站不允许被国内人访问，建议别关所有端口，这样你的<code>SSH</code>会上不去，我们可以只关闭<code>80</code>/<code>443</code>端口。</p>
<pre><code>#关闭指定端口，比如80/443
iptables -A INPUT -p tcp --dport 80 -j DROP
iptables -A INPUT -p tcp --dport 443 -j DROP</code></pre><p>这时候其他国家的<code>IP</code>是无法访问你服务器的<code>80</code>/<code>443</code>端口，等于无法访问你的网站，其它端口还是可以访问的。</p>
<p><strong>5、删除规则</strong></p>
<pre><code>#将参数里的-A改成-D就是删除规则了，如
iptables -D INPUT -p tcp -m set --match-set cnip src -j ACCEPT
iptables -D INPUT -p tcp --dport 443 -j DROP</code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用iptables封掉所有邮件端口</title>
    <url>/1508/</url>
    <content><![CDATA[<p><strong>说明：</strong>封掉邮件端口可以防止垃圾邮件</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、直接封掉所有邮件协议端口</strong></p>
<pre><code>iptables -A INPUT -p tcp -m multiport --dport 25,110,465:587,993:995 -j DROP
iptables -A INPUT -p udp -m multiport --dport 25,110,465:587,993:995 -j DROP
iptables -A OUTPUT -p tcp -m multiport --dport 25,110,465:587,993:995 -j DROP
iptables -A OUTPUT -p udp -m multiport --dport 25,110,465:587,993:995 -j 


iptables-save
service iptables save</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用iptables进行端口转发</title>
    <url>/1507/</url>
    <content><![CDATA[<p><strong>说明：</strong>玩<code>vps</code>的经常要用到端口转发用以实现更快的速度，比如手上有个某商家的<code>vps</code>，本地访问速度很慢，这时候就可以用一个香港或者日本的线路做桥梁，达到更快的速度，这里先说下用<code>iptables</code>来进行中转的教程，毕竟自认为这个是最好上手的。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、开启系统的转发功能</strong></p>
<pre><code>vi /etc/sysctl.conf</code></pre><p>将<code>net.ipv4.ip_forward=0</code>修改成<code>net.ipv4.ip_forward=1</code></p>
<p>编辑后使用命令让配置马上生效</p>
<pre><code>sysctl -p</code></pre><p><strong>2、iptables的命令</strong></p>
<pre><code>iptables -t nat -A PREROUTING -p tcp --dport [端口号] -j DNAT --to-destination [目标IP]
iptables -t nat -A PREROUTING -p udp --dport [端口号] -j DNAT --to-destination [目标IP]
iptables -t nat -A POSTROUTING -p tcp -d [目标IP] --dport [端口号] -j SNAT --to-source [本地服务器IP]
iptables -t nat -A POSTROUTING -p udp -d [目标IP] --dport [端口号] -j SNAT --to-source [本地服务器IP]</code></pre><p><strong>3、重启iptables使配置生效</strong></p>
<pre><code>service iptables save
service iptables restart</code></pre><h2 id="扩展需求"><a href="#扩展需求" class="headerlink" title="扩展需求"></a>扩展需求</h2><p><strong>1、多端口转发修改方案：</strong></p>
<pre><code>#将本地服务器的50000~65535转发至目标IP为1.1.1.1的50000~65535端口
-A PREROUTING -p tcp -m tcp --dport 50000:65535 -j DNAT --to-destination 1.1.1.1
-A PREROUTING -p udp -m udp --dport 50000:65535 -j DNAT --to-destination 1.1.1.1
-A POSTROUTING -d 1.1.1.1/32 -p tcp -m tcp --dport 50000:65535 -j SNAT --to-source [本地服务器IP]
-A POSTROUTING -d 1.1.1.1/32 -p udp -m udp --dport 50000:65535 -j SNAT --to-source [本地服务器IP]


#使用本地服务器的60000端口来转发目标IP为1.1.1.1的50000端口
-A PREROUTING -p tcp -m tcp --dport 60000 -j DNAT --to-destination 1.1.1.1:50000
-A PREROUTING -p udp -m udp --dport 60000 -j DNAT --to-destination 1.1.1.1:50000
-A POSTROUTING -d 1.1.1.1/32 -p tcp -m tcp --dport 50000 -j SNAT --to-source [本地服务器IP]
-A POSTROUTING -d 1.1.1.1/32 -p udp -m udp --dport 50000 -j SNAT --to-source [本地服务器IP]</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Linux VPS自动删除在百度贴吧的一切回复(黑历史)</title>
    <url>/2153/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多人小时候不懂事，到处发自己的个人信息，家人信息等，导致这些信息在网上就会随时被搜索到，很可能会被一些别有用心的人利用，特别是和自己闹过矛盾的网友，严重的会影响自己的生活，最近一个朋友就遇到了，所以这里博主就提一下，一般以前使用最多社交软件也就是贴吧了，所以建议在贴吧留过自己的信息的人可以都删掉，以防万一。如果回复的帖子太多，每天删除都被限制，可能会导致我们没耐心或没时间天天去删，这里就说下使用<code>VPS</code>自动删除贴吧回复的方法。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/rmb122/Delete-my-hisroy-in-tieba" target="_blank" rel="noopener">https://github.com/rmb122/Delete-my-hisroy-in-tieba</a></p>
<p><strong>1、安装Python3</strong><br>一般大多数<code>Ubuntu</code>自带<code>Python3</code>，而<code>Centos</code>、<code>Debian</code>就需要我们安装了。</p>
<pre><code>#查看是否有Python3
python3 -V

#安装Python3
#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</code></pre><p>然后再输入<code>python3 -V</code>看是否安装成功。</p>
<p><strong>2、下载源码</strong></p>
<pre><code>#CentOS系统
yum install git -y
#Ubuntu和Debian系统
apt-get install git -y

#下载源码
git clone https://github.com/rmb122/Delete-my-hisroy-in-tieba.git
cd Delete-my-hisroy-in-tieba
#安装依赖
pip3 install -r requirements.txt</code></pre><p><strong>3、使用</strong><br>先获取贴吧的<code>Cookie</code>，且为<code>JSON</code>格式，这里可以借助浏览器的<code>Edit This Cookie</code>插件，先打开浏览器拓展，搜索该插件安装，然后登录贴吧，点击浏览器上面的<code>EditThisCookie</code>按钮，并导出<code>Cookie</code>。<br><img src="https://www.southcat.net/usr/picture/Delete-teiba(1).png" alt="请输入图片描述" title="请输入图片描述"><br>再编辑<code>cookie.json</code>文件，将<code>Cookie</code>全部替换进去。</p>
<pre><code>cd /root/Delete-my-hisroy-in-tieba
nano cookie.json</code></pre><p>替换好了后，使用<code>Ctrl+x</code>，<code>y</code>保存退出。</p>
<p>再运行工具：</p>
<pre><code>python3 Delete-reply.py</code></pre><p>会输出以下画面：<br><img src="https://www.southcat.net/usr/picture/Delete-teiba(2).png" alt="请输入图片描述" title="请输入图片描述"><br>如果你的回复很多，一天是删不完的，因为有限制，所以就需要个定时任务，一天运行一次，直到删完为止，查看：Linux系统Crontab的安装及定时任务的命令详解。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用LNMP常见问题解答</title>
    <url>/1487/</url>
    <content><![CDATA[<p><strong>一、<code>LNMP</code>的安装</strong></p>
<pre><code>##先要下载，并根据不同系统进行安装：
wget -c http://soft.vpser.net/lnmp/lnmp1.3.tar.gz
tar zxvf lnmp1.3.tar.gz
cd lnmp1.3
./install.sh #开始进行安装操作</code></pre><p>以上为下载及进入安装过程，以下为安装前简易设置，切记输入个其它域名及牢记<code>mysql</code>密码：</p>
<pre><code>+------------------------------------------------------------------------+
|          LNMP V1.2 for Ubuntu Linux Server, Written by Licess          |
+------------------------------------------------------------------------+
|        A tool to auto-compile &amp; install LNMP/LNMPA/LAMP on Linux       |
+------------------------------------------------------------------------+
|          For more information please visit http://www.lnmp.org         |
+------------------------------------------------------------------------+
Please setup root password of MySQL.(Default password: root)
Please enter: southcat.net #输入mysql的root密码
MySQL root password: southcat.net
===========================
Do you want to enable or disable the InnoDB Storage Engine?
Default enable,Enter your choice [Y/n]: n #是否安装InnoDB
You will disable the InnoDB Storage Engine!
===========================
You have 5 options for your DataBase install.
1: Install MySQL 5.1.73
2: Install MySQL 5.5.42 (Default)
3: Install MySQL 5.6.23
4: Install MariaDB 5.5.42
5: Install MariaDB 10.0.17
Enter your choice (1, 2, 3, 4 or 5): 3 #选择mysql版本
You will Install MySQL 5.6.23
===========================
You have 5 options for your PHP install.
1: Install PHP 5.2.17
2: Install PHP 5.3.29
3: Install PHP 5.4.41 (Default)
4: Install PHP 5.5.25
5: Install PHP 5.6.9
Enter your choice (1, 2, 3, 4 or 5): 5 #选择php版本
You will install PHP 5.6.9
===========================
You have 3 options for your Memory Allocator install.
1: Don&apos;t install Memory Allocator. (Default)
2: Install Jemalloc
3: Install TCMalloc
Enter your choice (1, 2 or 3): 1 
You will install not install Memory Allocator.
#按任意键，设置完成，正式进入安装，预计20-40分钟完成</code></pre><p>常见<code>lnmp</code>管理命令：</p>
<pre><code>#1.2版本以后，不需要再执行/root/lnmp了，可以在任意位置执行lnmp命令
lnmp #会出现一些提示信息
lnmp restart #重启
lnmp vhost add #添加网站绑定
lnmp database add #添加数据库信息</code></pre><p><strong>二、域名绑定详解</strong></p>
<p>其实所谓的域名绑定，就是通过命令的形式，简易创建一个<code>conf</code>文件到<code>/usr/local/nginx/conf/vhost</code>下面，这个过程完全可以手工创建<code>conf</code>，或者，平时修改目录、域名等，直接修改<code>conf</code>文件，效果完全一样：</p>
<pre><code>lnmp vhost add #执行lnmp添加网站命令
+-------------------------------------------+
|    Manager for LNMP, Written by Licess    |
+-------------------------------------------+
Please enter domain(example: www.lnmp.org): southcat.net #输入绑定的主域名
======================================
 Your domain: southcat.net
======================================
Do you want to add more domain name? (y/n) y #是否绑定其它域名
Enter domain name(example: lnmp.org *.lnmp.org): www.southcat.net #输入其它域名
domain list: www.southcat.net
Please enter the directory for the domain: southcat.net
(Default directory: /home/wwwroot/southcat.net): #默认创建的网站文件所在目录
Virtual Host Directory: /home/wwwroot/southcat.net
===========================
Allow Rewrite rule? (y/n)
===========================
y #是否添加伪静态文件
Please enter the rewrite of programme: 
wordpress,discuz,typecho,sablog,dabr rewrite was exist.
(Default rewrite: other):typecho #小夜用的typecho程序
===========================
You choose rewrite=typecho
===========================
===========================
Allow access_log? (y/n)
===========================
n #是否启用日志文件
======================================================
Create database and MySQL user with same name (y/n)
======================================================
y #是否创建mysql数据库
verify your current MySQL root password: **** #输入安装时的mysql数据库root密码
Warning: Using a password on the command line interface can be insecure.
MySQL root password correct.
Enter database name: moerats_user #创建数据库用户名
Your will create a database and MySQL user with same name: moerats_user
Please enter password for mysql user vpsmm_user: moeratspasswd
Your password: moeratspasswd #创建相应密码

Press any key to start create virtul host...

Create Virtul Host directory......
set permissions of Virtual Host directory......
You select the exist rewrite rule:/usr/local/nginx/conf/typecho.conf
Gracefully shutting down php-fpm . done
Starting php-fpm  done
Test Nginx configure file......
nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful

Restart Nginx......
Warning: Using a password on the command line interface can be insecure.
Warning: Using a password on the command line interface can be insecure.
User moerats_user create Sucessfully.
Warning: Using a password on the command line interface can be insecure.
Warning: Using a password on the command line interface can be insecure.
Warning: Using a password on the command line interface can be insecure.
Database: moerats_user create Sucessfully.
Warning: Using a password on the command line interface can be insecure.
Warning: Using a password on the command line interface can be insecure.
GRANT ALL PRIVILEGES ON moerats_user Sucessfully.
Warning: Using a password on the command line interface can be insecure.
FLUSH PRIVILEGES Sucessfully.
================================================
Virtualhost infomation:
Your domain: southcat.net
Home Directory: /home/wwwroot/southcat.net
Rewrite: typecho
Enable log: no
Database username: moerats_user
Database userpassword: moeratspasswd
Database Name: moerats_user
Create ftp account: no
#以上为新创建网站的一些信息
================================================</code></pre><p><strong>三、自定义伪静态规则</strong></p>
<p>如果<code>lnmp</code>默认的伪静态规则不能满足你的需要，或者，你要自行定义伪静态规则，可以新建一个<code>conf</code>文件，放置于 <code>/usr/local/nginx/conf</code> 下，在域名配置文件，即：<code>/usr/local/nginx/conf/vhost/southcat.net.conf</code> 里引用。</p>
<pre><code>server
  {
    listen       80;
    server_name legcloud.com www.southcat.net; #绑定的域名
    index index.html index.htm index.php default.html default.htm default.php; #首页文件
    root  /home/southcat.net; #网站存放目录
    include wordpress.conf; #伪静态规则文件，可自定义成你需要的
    location ~ .*\.(php|php5)?$
      {
        try_files $uri =404;
        fastcgi_pass  unix:/tmp/php-cgi.sock;
        fastcgi_index index.php;
        include fcgi.conf;
      }
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
      {
        expires      30d;
      }
    location ~ .*\.(js|css)?$
      {
        expires      12h;
      }
    access_log off;
  }</code></pre><p>修改设置以后，一定要重新载入<code>lnmp</code>或者，重新载入<code>nginx</code>，以下任决命令都一样：</p>
<pre><code>/root/lnmp reload #使用lnmp重新载入配置
/etc/init.d/nginx reload #只重新载入nginx配置，我一般用这个</code></pre><p><strong>四、自定义404、503等常见错误</strong></p>
<p>不管是404还是503等常见错误，还是设置<code>/usr/local/nginx/conf/vhost/southcat.net.conf</code>文件来完成：</p>
<pre><code>listen       80;
 server_name southcat.net www.southcat.net;
 index index.html index.htm index.php default.html default.htm default.php;
 root  /home/southcat.net;
 error_page 404 /404.php; #放在这里，可自定义文件名，再重载nginx就可以了
 include wordpress.conf;</code></pre><p><strong>五、判断当前域名并自动301到主域名</strong></p>
<pre><code>if ($host != &apos;southcat.net&apos; ) {rewrite ^/(.*)$ http://www.southcat.net/$1 permanent;}
#判断当前域名，如果不是则自动301到主域名，放置于error_page ...;上下均可。</code></pre><p><strong>六、关闭或开启FSO等php函数</strong></p>
<p><code>lnmp</code>最新版，默认禁用了一些函数，例如<code>fso</code>等，可修改<code>/usr/local/php/etc/php.ini</code></p>
<pre><code>disable_functions = passthru,exec,system,chroot,scandir....
#----这是禁用函数，把不想禁用的删除即可----如果自用主机，最简单的修改方案：
disable_functions =
; passthru,exec,system,chroot,scandir....
#----设置为全部开启</code></pre><p>修改后，使用<code>/etc/init.d/php-fpm restart</code>，重新启动<code>php</code></p>
<pre><code>cd lnm0.9 #进入lnmp安装目录
./upgrade_nginx.sh #升级nginx，只要输入你要升级的版本即可（可见nginx.org）
./upgrade_php.sh #升级php，只要输入你要升级的版本即可（可见php.net）</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Mysqldump备份和还原MySQL数据库</title>
    <url>/1504/</url>
    <content><![CDATA[<p>linux vps最方便，在ssh下使用就可。</p>
<h2 id="登入MySQL数据库"><a href="#登入MySQL数据库" class="headerlink" title="登入MySQL数据库"></a>登入MySQL数据库</h2><pre><code>mysql -uroot -pmypassword</code></pre><p>root为mysql数据库用户名，mypassword为密码</p>
<h2 id="备份MySQL数据库"><a href="#备份MySQL数据库" class="headerlink" title="备份MySQL数据库"></a>备份MySQL数据库</h2><p><strong>1、备份单个数据库</strong></p>
<pre><code>mysqldump -uroot -pmypassword wp &gt; wpbak.sql</code></pre><p>root为mysql数据库用户名，mypassword为密码，wp为数据库名，wpbak.sql为备份成的文件。</p>
<p><strong>2、备份多个数据库</strong></p>
<pre><code>mysqldump -uroot -pmypassword --databases wp stuff &gt; wpbak.sql</code></pre><p>root为mysql数据库用户名，mypassword为密码，wp、stuff为数据库名，wpbak.sql为备份成的文件。</p>
<p><strong>3、备份所有数据库</strong></p>
<pre><code>mysqldump -uroot -pmypassword --all-databases &gt; all-databases.sql</code></pre><p>root为mysql数据库用户名，mypassword为密码，all-databases.sql为备份成的文件。</p>
<h2 id="还原MySQL数据库"><a href="#还原MySQL数据库" class="headerlink" title="还原MySQL数据库"></a>还原MySQL数据库</h2><p><strong>1、还原单个数据库</strong></p>
<pre><code>mysql -uroot -pmypassword [database_name] &lt; dumpfilename.sql</code></pre><p>root为mysql数据库用户名，mypassword为密码，[database_name]为数据库名，dumpfilename.sql为还原的数据</p>
<p><strong>2、还原多个数据库</strong></p>
<pre><code>mysql -uroot -pmypassword &lt; all-databases.sql</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Mysqldump备份数据库出现when using LOCK TABLES解决方法</title>
    <url>/1610/</url>
    <content><![CDATA[<pre><code>mysqldudmp -u 数据库用户名 -p 数据库密码 数据库 --skip-lock-tables &gt; 备份数据库.sql</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用NextCloud来搭建我们的私有网盘、并结合Redis优化性能</title>
    <url>/1575/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在越来越多云盘都相继宣布关闭，差不多都去用百度云盘了，而我们手上有些比如小姐姐电影之类传上去就会被和谐，于是我们有必要自己搭建个私有云来存这些资源了，也安全，这里推荐<code>NextCloud</code>，一款继<code>ownCloud</code>之后，又一个很不错的私有云。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Nextcloud</code>是一套用于创建和使用文件托管服务的客户端-服务器软件。它在功能上类似于<code>Dropbox</code>，虽然<code>Nextcloud</code>是免费的和开源的，允许任何人在私人服务器上安装和操作它。与<code>Dropbox</code>等专有服务相反，开放架构允许以应用程序的形式向服务器添加附加功能。</p>
<p>虽然<code>Nextcloud</code>作为<code>ownCloud</code>的衍生版本，在其基础上做了许多改进，但有一些差异。<code>ownCloud</code>提供了一个开源社区版本，但它们还提供了一个专有的企业版，具有附加功能和支持订阅。相比之下，<code>Nextcloud</code>是完全开源的。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Nextcloud(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Nextcloud(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019年6月28日】
更新教程，替换为宝塔安装，并新增Redis缓存优化方案以提高NextCloud运行速度。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>如果不喜欢折腾的，可参考<code>1</code>分钟就能安装完成的方法：Snap安装教程、Docker安装教程。</p>
<p><strong>环境要求：</strong><code>PHP 5.6 +</code>、<code>Mysql</code>、<code>Nginx</code>、<code>Redis</code>(非必需)。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件商店，然后安装<code>PHP 5.6+</code>、<code>Mysql</code>、<code>Nginx</code>、<code>Redis</code>。</p>
<p>然后点击左侧软件商店-<code>PHP</code>设置-安装扩展，安装<code>Redis</code>模块即可</p>
<p>接下来点击左侧网站-添加站点，填好域名和<code>Mysql</code>数据库用户名和密码信息。</p>
<p><strong>2、上传Nextcloud程序</strong><br><code>Nextcloud</code>程序下载地址→传送门，目前为<code>16.0.1</code>版本，使用命令：</p>
<pre><code>#进入站点根目录，自行修改路径
cd /www/wwwroot/www.southcat.net
#下载最新版程序，记得随时将链接换成最新版的下载地址
wget https://download.nextcloud.com/server/releases/nextcloud-16.0.1.zip
#解压并移动到根目录
unzip nextcloud-*.zip &amp;&amp; rm -rf nextcloud-*.zip index.html
mv nextcloud/* . &amp;&amp; rm -rf nextcloud
chown -R www:www ./</code></pre><p><strong>3、伪静态设置</strong><br>点击站点设置-伪静态设置，添加以下代码：</p>
<pre><code>location / {
    rewrite ^ /index.php$request_uri;
}

location ~ ^\/(?:build|tests|config|lib|3rdparty|templates|data)\/ {
    deny all;
}

location ~ ^\/(?:\.|autotest|occ|issue|indie|db_|console) {
    deny all;
}

location ~ ^\/(?:updater|oc[ms]-provider)(?:$|\/) {
    try_files $uri/ =404;
    index index.php;
}

location ~ \.(?:css|js|woff2?|svg|gif|map)$ {
    try_files $uri /index.php$request_uri;
    add_header Cache-Control &quot;public, max-age=15778463&quot;;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection &quot;1; mode=block&quot;;
    add_header X-Robots-Tag none;
    add_header X-Download-Options noopen;
    add_header X-Permitted-Cross-Domain-Policies none;
    add_header Referrer-Policy no-referrer;

    access_log off;
}

location ~ \.(?:png|html|ttf|ico|jpg|jpeg)$ {
    try_files $uri /index.php$request_uri;
    access_log off;
}</code></pre><p><strong>4、新增Redis缓存配置</strong><br>使用宝塔点击左侧文件，找到网站根目录的<code>config/config.php</code>配置文件，在后面新增以下代码：</p>
<pre><code>&apos;memcache.locking&apos; =&gt; &apos;\OC\Memcache\Redis&apos;,
&apos;memcache.distributed&apos; =&gt; &apos;\OC\Memcache\Redis&apos;,
&apos;redis&apos; =&gt; [
     &apos;host&apos; =&gt; &apos;127.0.0.1&apos;,
     &apos;port&apos; =&gt; 6379,
],</code></pre><p><strong>5、安装Nextcloud</strong><br><img src="https://www.southcat.net/usr/picture/Nextcloud(1).png" alt="请输入图片描述" title="请输入图片描述"><br>打开网址，选择<code>Mysql</code>数据库，填上数据库信息，并设置管理员账号和密码后，点击安装即可！到这里属于我们的私有云盘<code>Nextcloud</code>就搭建好了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Nginx反向代理，自建CDN加速节点</title>
    <url>/2041/</url>
    <content><![CDATA[<p><strong>说明：</strong>博客刚刚搬到了美西，感觉速度不如香港，于是准备拿香港的服务器自建<code>CDN</code>加速了，对于自建<code>CND</code>，之前讲过<code>Fikker</code>，查看：CentOS安装Fikker自建CDN系统，支持Https/反向代理/防CC攻击，使用非常方便，功能也很强大，不过免费版不支持页面缓存、也不支持<code>HTTP/2</code>，所以放弃了。就使用<code>Nginx</code>反向代理实现自建<code>CDN</code>加速了，这里分享下方法。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Nginx</strong></p>
<pre><code>#这里使用的是军哥的lnmp
wget -c http://soft.vpser.net/lnmp/lnmp1.4.tar.gz &amp;&amp; tar zxf lnmp1.4.tar.gz &amp;&amp; cd lnmp1.4 &amp;&amp; ./install.sh nginx</code></pre><p><strong>2、CDN配置</strong><br>假如我需要对<code>www.southcat.net</code>搭建<code>CDN</code>节点，数据放在<code>192.168.1.100</code>，需要先修改<code>hosts</code>指向，告知<code>CDN</code>节点去哪里去获取网站数据，也就是回源地址，做如下修改：</p>
<pre><code>vi /etc/hosts
192.168.1.100    www.southcat.net</code></pre><p>然后创建<code>nginx</code>配置文件<code>southcat.net.conf</code>。</p>
<pre><code>#创建缓存目录
mkdir -p /data/wwwroot/caches/www.southcat.net
#设置缓存目录权限
chown -R www:www /data/wwwroot/caches/www.southcat.net
#创建southcat.net.conf
vi /usr/local/nginx/conf/vhost/southcat.net.conf</code></pre><p>在<code>southcat.net.conf</code>中添加下面的内容，缓存目录/缓存时间请根据实际情况调整。</p>
<pre><code>proxy_cache_path /data/wwwroot/caches/www.southcat.net levels=1:2 keys_zone=Rats:50m inactive=30m max_size=50m;
server {
    listen 80;
    server_name www.southcat.net;
    charset utf-8,gbk;
        location / {
        proxy_set_header Accept-Encoding &quot;&quot;;
           proxy_pass https://www.southcat.net;
           proxy_redirect off;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_cache Rats;
           proxy_cache_valid  200 304  30m;
           proxy_cache_valid  301 24h;
           proxy_cache_valid  500 502 503 504 0s;
           proxy_cache_valid any 1s;
           proxy_cache_min_uses 1;
           expires 12h;
    }
}</code></pre><p>参数说明：</p>
<pre><code>/data/wwwroot/caches/www.southcat.net：为缓存目录
levels：指定该缓存空间有两层hash目录，第一层目录为1个字母，第二层为2个字母。
keys_zone=Rats:50m：为缓存空间起个名字，这里取名为“Rats”，后面的50m指内存缓存空间
inactive=30m：如果30分钟内该资源没有被访问则删除
max_size=50m：指硬盘缓存大小为50MB
proxy_cache_valid：指定状态码缓存时间，前面写状态码，后面写缓存时间。</code></pre><p>然后重启<code>Nginx</code>生效</p>
<pre><code>lnmp nginx reload</code></pre><p><strong>3、Https配置</strong><br>如果是<code>https</code>网站，配置文件参考：</p>
<pre><code>proxy_cache_path /data/wwwroot/caches/www.southcat.net levels=1:2 keys_zone=Rats:50m inactive=30m max_size=50m;
server {
    listen 443 ssl http2;
    ssl_certificate    /home/southcat.net.crt;
    ssl_certificate_key    /home/southcat.net.key;
    ssl_session_timeout 1d;
    ssl_session_cache builtin:1000 shared:SSL:10m;
    ssl_dhparam /data/ssl/dhparam.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers &apos;ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS&apos;;
    ssl_prefer_server_ciphers on;
    ssl_stapling on;
    ssl_stapling_verify on;
    server_name www.southcat.net;
    access_log /data/wwwlogs/southcat.net_nginx.log combined;

    charset utf-8,gbk;
        location / {
        proxy_set_header Accept-Encoding &quot;&quot;;
           proxy_pass https://www.southcat.net;
           proxy_redirect off;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_cache Rats;
           proxy_cache_valid  200 304  30m;
           proxy_cache_valid  301 24h;
           proxy_cache_valid  500 502 503 504 0s;
           proxy_cache_valid any 1s;
           proxy_cache_min_uses 1;
           expires 12h;
    }
}
server {
    listen 80 default_server;
    return 301 https://$host$request_uri;
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用PHP Server Monitor自建网站和服务器监控</title>
    <url>/1772/</url>
    <content><![CDATA[<p><strong>说明：</strong>对于我们网站和服务器多的人来说，需要个监控工具是很有必要的，观察服务器和网站都是一目了然，之前发了个网络监控工具，参考：Uptime Robot ：免费且功能强大的在线网站服务器监控工具，使用起来还是不错的，刚刚在小<code>z</code>博客也看到个不错的，就发一下。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>PHP Server Monitor</code>是使用<code>PHP</code>开发的网络监控工具，用于检查您的网站和服务器是否已启动并正常运行，支持<code>Ping</code>、<code>Tcping</code>、网站等监控，提供了友好的<code>Web</code>的用户界面，方便管理与查看，当服务器宕机会自动发送邮件或短信通知。</p>
<p><strong>官方地址：</strong><a href="http://www.phpservermonitor.org/" target="_blank" rel="noopener">http://www.phpservermonitor.org/</a></p>
<p><strong>提示：</strong>由于需要使用<code>crontab</code>等作为定时任务，推荐使用<code>VPS</code>进行安装。下图可以直观的看出<code>VPS</code>网络情况变化，非常方便。<br><img src="https://www.southcat.net/usr/picture/ServerMonitor(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、搭建web环境</strong><br>推荐宝塔和军哥的<code>lnmp</code>一键包。<br><code>lnmp</code>安装方法可参考：<a href="https://www.southcat.net/archives/61/" target="_blank" rel="noopener">https://www.southcat.net/archives/61/</a><br>宝塔安装方法可看：<a href="https://www.southcat.net/archives/254/" target="_blank" rel="noopener">https://www.southcat.net/archives/254/</a></p>
<p><strong>2、上传程序及配置</strong><br>官方下载地址：phpservermon-v3.2.0.zip，访问下载地址下载最新版本，解压至您站点根目录，访问<code>http://youdomain.com/install.php</code>根据提示填写数据库信息完成安装。如果不能写入配置文件，可以手动将数据库信息添加到<code>config.php</code>做法如下：</p>
<pre><code>#复制配置文件
cp config.php.sample config.php
#修改配置文件
vi config.php
#填写数据库信息
define(&apos;PSM_DB_PREFIX&apos;, &apos;monitor_&apos;);#表前缀，保持默认
define(&apos;PSM_DB_USER&apos;, &apos;status&apos;);#数据库用户
define(&apos;PSM_DB_PASS&apos;, &apos;xxxxxxx&apos;);#数据库密码
define(&apos;PSM_DB_NAME&apos;, &apos;status&apos;);#数据库用户名
define(&apos;PSM_DB_HOST&apos;, &apos;localhost&apos;);#数据库连接地址
define(&apos;PSM_DB_PORT&apos;, &apos;3306&apos;);#数据库连接端口，一般默认3306
define(&apos;PSM_BASE_URL&apos;, &apos;http://xx.com&apos;);#网站地址</code></pre><p>官方安装文档：<a href="http://docs.phpservermonitor.org/en/latest/install.html" target="_blank" rel="noopener">http://docs.phpservermonitor.org/en/latest/install.html</a></p>
<h2 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h2><p>网站安装好了还没有完毕，还得添加采集任务，否则无法获取数据。以<code>Linux</code>系统(<code>CentOS</code>)为例，<code>Linux</code>一般使用<code>crontab</code>作为定时任务，方法如下：</p>
<pre><code>#安装crontab
yum -y install crontabs
#添加定时任务
crontab -e
#计划任务中添加如下内容，请根据实际情况修改路径
*/5 * * * * /usr/local/php/bin/php /home/wwwroot/xx.com/cron/status.cron.php
#重载crontab
service crond reload</code></pre><p>查看<code>PHP</code>路径方法：<code>which php</code>，然后版上面的<code>/usr/local/php/bin/php</code>改成自己<code>PHP</code>路径。<code>status.cron.php</code>为<code>PHP Server Monitor</code>脚本地址，请填写绝对路径。</p>
<h2 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h2><p><code>PHP Server Monitor</code>支持多种语言，可以在后台设置中修改为中文，如下截图。添加监控、<code>SMTP</code>设置什么的就比较简单了，大家可自行研究。<br><img src="https://www.southcat.net/usr/picture/ServerMonitor(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="后台部分截图"><a href="#后台部分截图" class="headerlink" title="后台部分截图"></a>后台部分截图</h2><p><img src="https://www.southcat.net/usr/picture/ServerMonitor(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ServerMonitor(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ServerMonitor(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><code>PHP Server Monitor</code>配置非常简单，功能也基本够用，代码是开源的，可以很方便的集成或二次开发，有兴趣的童鞋可以研究下。安装<code>PHP Server Monitor</code>的目的主要是为了监控国外<code>VPS</code>网络变化，后期会每周或每月送出监控报告。还是很不错的。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用OneinStack搭建网站LNMP环境，并配置WAF防火墙防CC攻击</title>
    <url>/2079/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>现在对于很多站长来说，或多或少的都会遇到<code>CC</code>攻击，而防御最好的办法就是套<code>CDN</code>，比如国外的<code>CloudFlare</code>，而<code>CF</code>很多时候速度并不是很快，在很多地方也被屏蔽了，所以体验不是很好。这时候我们可以用脚本来防一下，之前发过一个防<code>CC</code>脚本，查看：Linux VPS防CC攻击一键脚本，带微信提醒，由于需要访问日志，所以效果并不是很好，稍微大点的<code>CC</code>都会扛不住，所以该脚本在一些情况下不是很适合。</p>
<p>这里再讲个防<code>CC</code>教程，使用<code>Nginx</code>+<code>Lua</code>设置<code>WAF</code>防火墙来防<code>CC</code>，还可以拦截<code>Url</code>关键词等，其优点<code>Nginx</code>占用小，高并发的优势，以及<code>Lua</code>语言的轻快，并在用户访问前就可以处理掉攻击，效果还是很不错的。</p>
<p>由于配置前需要编译<code>Lua</code>模块，而<code>OneinStack</code>的<code>LNMP</code>一键包中<code>OpenResty</code>自带<code>Lua</code>模块，所以博主建议使用该一键包安装网站环境。</p>
<h2 id="LNMP安装"><a href="#LNMP安装" class="headerlink" title="LNMP安装"></a>LNMP安装</h2><p>先去<code>OneinStack</code>网站获取一键包，访问地址：<a href="https://oneinstack.com/auto/。`Nginx`选择`OpenResty`；如果内存小于`1G`，`Mysql`不能大于`5.5`，然后其它自己看着办。" target="_blank" rel="noopener">https://oneinstack.com/auto/。`Nginx`选择`OpenResty`；如果内存小于`1G`，`Mysql`不能大于`5.5`，然后其它自己看着办。</a></p>
<p><img src="https://www.southcat.net/usr/picture/Nginx_Lua(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>将获取到的一键包复制到<code>SSH</code>客户端运行，直到安装完成。</p>
<p><strong>LNMP操作命令：</strong></p>
<pre><code>#操作前请在oneinstack目录下操作
cd oneinstack
#添加网站
./vhost.sh
#删除网站
./vhost.sh del
#添加其它组件
./addons.sh
#网站备份
./backup_setup.sh
#更新版本
./upgrade.sh</code></pre><p>更多命令及图文操作查看：<a href="https://oneinstack.com/install/。" target="_blank" rel="noopener">https://oneinstack.com/install/。</a></p>
<p><strong>相关目录：</strong></p>
<pre><code>#数据库文件夹，请将phpMyAdmin改成不容易猜到的名字比如xx，然后可通过IP:xx访问数据库
/data/wwwroot/default
#网站目录
/data/wwwroot
#网站配置文件
/usr/local/openresty/nginx/conf/vhost</code></pre><p>添加网站后，使用<code>FTP</code>工具将程序上传至根目录，建立数据库，打开网站配置就可以了。</p>
<h2 id="配置WAF防火墙"><a href="#配置WAF防火墙" class="headerlink" title="配置WAF防火墙"></a>配置WAF防火墙</h2><p>这里使用<code>Github</code>很火的一个基于<code>ngx_lua</code>的<code>WAF</code>防火墙脚本来防<code>CC</code>攻击和拦截<code>Url</code>关键词等。其功能如下：</p>
<ul>
<li>防止<code>sql</code>注入，本地包含，部分溢出，<code>fuzzing</code>测试，<code>xss</code>，<code>55RF</code>等<code>web</code>攻击。</li>
<li>防止<code>svn</code>/备份之类文件泄漏。</li>
<li>防止<code>ApacheBench</code>之类压力测试工具的攻击。</li>
<li>屏蔽常见的扫描黑客工具，扫描器。</li>
<li>屏蔽异常的网络请求。</li>
<li>屏蔽图片附件类目录<code>php</code>执行权限。</li>
<li>防止<code>webshell</code>上传。</li>
</ul>
<p><code>Github</code>地址：<a href="https://github.com/loveshell/ngx\_lua\_waf。" target="_blank" rel="noopener">https://github.com/loveshell/ngx\_lua\_waf。</a></p>
<p>先把<code>ngx_lua_waf</code>下载到<code>conf</code>目录下：</p>
<pre><code>cd /usr/local/openresty/nginx/conf
wget https://www.southcat.net/usr/down/waf.tar.gz
tar zxf waf.tar.gz
rm -rf waf.tar.gz</code></pre><p>再编辑<code>/usr/local/openresty/nginx/conf/nginx.conf</code>，将以下代码放入<code>http{}</code>中。</p>
<pre><code>lua_shared_dict limit 10m;
lua_package_path &quot;/usr/local/openresty/nginx/conf/waf/?.lua&quot;;
init_by_lua_file &quot;/usr/local/openresty/nginx/conf/waf/init.lua&quot;;
access_by_lua_file &quot;/usr/local/openresty/nginx/conf/waf/waf.lua&quot;;</code></pre><p>然后运行<code>service nginx restart</code>重启<code>nginx</code>，使其生效。</p>
<p><strong>配置文件：</strong></p>
<pre><code>#配置文件路径
/usr/local/openresty/nginx/conf/waf/config.lua
#详细参数，具体自己看着设置
RulePath = &quot;/usr/local/openresty/nginx/conf/waf/wafconf/&quot;
--规则存放目录
attacklog = &quot;on&quot;
--是否开启攻击信息记录，需要配置logdir
logdir = &quot;/data/wwwlogs/&quot;
--log存储目录，该目录需要用户自己新建，需要nginx用户的可写权限
UrlDeny=&quot;on&quot;
--是否拦截url访问
Redirect=&quot;on&quot;
--是否拦截后重定向
CookieMatch = &quot;on&quot;
--是否拦截cookie攻击
postMatch = &quot;off&quot;
--是否拦截post攻击
whiteModule = &quot;on&quot;
--是否开启URL白名单
black_fileExt={&quot;php&quot;,&quot;jsp&quot;}
--填写不允许上传文件后缀类型
ipWhitelist={&quot;127.0.0.1&quot;}
--ip白名单，多个ip用逗号分隔
ipBlocklist={&quot;1.0.0.1&quot;}
--ip黑名单，多个ip用逗号分隔
CCDeny=&quot;on&quot;
--是否开启拦截cc攻击
CCrate = &quot;10/60&quot;
--设置cc攻击频率，单位为秒.
--默认1分钟同一个IP只能请求同一个地址10次</code></pre><p><strong>过滤规则：</strong></p>
<pre><code>#过滤规则在/usr/local/openresty/nginx/conf/waf/wafconf下。
#规则可根据需求自行调整，每条规则需换行，或者用|分割
args里面的规则get参数进行过滤的
url是只在get请求url过滤的规则        
post是只在post请求过滤的规则        
whitelist是白名单，里面的url匹配到不做过滤        
user-agent是对user-agent的过滤规则
#默认开启了get和post过滤的，需要开启cookie过滤，编辑waf.lua取消部分--注释即可。
#日志文件名称格式如下：虚拟主机名_sec.log</code></pre><p><strong>白名单设置：</strong></p>
<pre><code>#ip白名单
修改/usr/local/openresty/nginx/conf/waf/wafconf/config.lua中的ipWhitelist。
可以填写多个ip，多个ip中用,分割，例如{&quot;127.0.0.1&quot;,&quot;192.155.1.1&quot;}。

#url白名单
修改/usr/local/openresty/nginx/conf/waf/wafconf/whiteurl，一行一个，取字符段验证，只取uri，通常用于api链接放行，且不能带参数。
例如https://xxx/Rats.php?xx，我们填入^/Rats.php$即可放行全部以/Rats.php开头的uri。</code></pre><p><strong>效果测试：</strong><br>拦截<code>CC</code>攻击返回<code>503</code>错误。<br><img src="https://www.southcat.net/usr/picture/Nginx_Lua(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>触发关键词会被防火墙拦截。<br><img src="https://www.southcat.net/usr/picture/Nginx_Lua(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>注意<code>ngx_lua_waf</code>默认拦截<code>phpMyAdmin</code>目录，请修改成其它名称访问数据库。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用PHPDNS为DNSmasq搭建一个WEB界面</title>
    <url>/2159/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>DNSmasq</code>是一个小巧且方便地用于配置<code>DNS</code>和<code>DHCP</code>的工具，适用于小型网络，它提供了<code>DNS</code>功能和可选择的<code>DHCP</code>功能。使用<code>DNSmasq</code>可以很方便的搭建递归<code>DNS</code>（公共<code>DNS</code>），诸如类似的<code>119.29.29.29</code>，可以有效的帮助我们防止<code>DNS</code>劫持、屏蔽广告等，博主很久前发过一个<code>DNSmasq</code>搭建教程，查看：Linux安装DNSmasq搭建自己的公共DNS，使用起来还是有点麻烦，现在小<code>Z</code>大佬使用<code>PHPDNS</code>为<code>DNSmasq</code>写了个<code>Web</code>界面，让我们使用更加方便了。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/PHP_DNSmasq(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装DNSmasq"><a href="#安装DNSmasq" class="headerlink" title="安装DNSmasq"></a>安装DNSmasq</h2><p><strong>系统要求：</strong><code>CentOS 6</code>、<code>7</code>，且需要国内服务器。</p>
<p><strong>1、安装DNSmasq</strong><br>先使用<code>ifconfig</code>命令查看服务器<code>IP</code>，并记录，比如下图中的<code>192.168.0.4</code>。<br><img src="https://www.southcat.net/usr/picture/PHP_DNSmasq(2).png" alt="请输入图片描述" title="请输入图片描述"><br>再执行下面的命令安装<code>DNSmasq</code></p>
<pre><code>#安装epel源
yum -y install epel-release
#安装DNSmasq
wget https://raw.githubusercontent.com/helloxz/dnsmasq/master/dns.sh --no-check-certificate
chmod +x dns.sh
#注意后面填写ifconfig看到的IP
./dns.sh 192.168.0.4</code></pre><p>如果是阿里云等服务器，注意防火墙还要放行<code>tcp/udp 53</code>端口。输入<code>netstat -apn|grep &#39;dnsmasq&#39;</code>可查看<code>DNSmasq</code>是否运行正常。</p>
<p><strong>2、常用命令</strong></p>
<pre><code>启动：service dnsmasq start
停止：service dnsmasq stop
重启：service dnsmasq restart</code></pre><h2 id="安装PHPDNS"><a href="#安装PHPDNS" class="headerlink" title="安装PHPDNS"></a>安装PHPDNS</h2><p><strong>Github地址：</strong><a href="https://github.com/helloxz/phpdns" target="_blank" rel="noopener">https://github.com/helloxz/phpdns</a></p>
<p><strong>1、运行原理</strong></p>
<pre><code>#PHPDNS生成DNSmasq格式的配置文件
#服务器crontab定时检测配置文件变化，若有改动则重启DNSmasq使其生效</code></pre><p><strong>2、环境要求</strong></p>
<pre><code>PHP 5.6+（需要PDO组件支持）、SQLite 3</code></pre><p><strong>3、安装PHPDNS</strong><br>先访问master.zip下载最新源码，并解压到站点根目录，同时注意站点目录所属用户权限可读可写。</p>
<p>再编辑<code>application/helpers/check_helper.php</code>设置用户名、密码，里面有注释说明。</p>
<p>最后访问您的域名<code>http://domain.com/</code>登录测试。</p>
<p><strong>4、Nginx伪静态设置</strong><br>如果是<code>Apache</code>已经自带了<code>.htaccess</code>规则，无需额外设置。如果是<code>Nginx</code>请再<code>server</code>段内添加：</p>
<pre><code>location ^~ /application {
        deny all;
}
location ^~ /system {
        deny all;
}
location ^~ /(application|system) {
        deny all;
}
location / {
    try_files $uri $uri/ /index.php?$query_string;
}</code></pre><p>添加完成后别忘记重启一次<code>nginx</code>。</p>
<p><strong>5、编写Shell脚本</strong><br><code>PHPDNS</code>通过<code>shell</code>脚本检测<code>DNSmasq</code>文件变化，使用<code>vi reload.sh</code>命令新建<code>Shell</code>脚本，并写入以下内容，路径请自行修改。</p>
<p><code>CentOS 7</code>系统：</p>
<pre><code>#!/bin/bash
find /data/wwwroot/xxx.com/application/conf/ -name &apos;*.conf&apos; -mmin -1 -exec /usr/bin/systemctl restart dnsmasq.service {} \;</code></pre><p><code>CentOS 6</code>系统：</p>
<pre><code>#!/bin/bash
find /data/wwwroot/xxx.com/application/conf/ -name &apos;*.conf&apos; -mmin -1 -exec /sbin/service dnsmasq restart {} \;</code></pre><p>参数说明：</p>
<pre><code>/data/wwwroot/xxx.com/application/conf/是DNSmasq配置文件目录，改为自己的目录。
/usr/bin/systemctl是CentOS 7 systemctl的目录
/sbin/service是CentOS 6的service目录</code></pre><p>别忘记赋予脚本执行权限：<code>chmod +x reload.sh</code>。</p>
<p><strong>6、设置crontab定时任务</strong></p>
<pre><code>#安装crontab
yum install crontabs
#新建定时任务
crontab -e
#写入下面的内容，注意路径
*/1 * * * * /root/shell/reload.sh
#重载crontab
service crond reload</code></pre><p><code>/root/shell/reload.sh</code>是上面<code>shell</code>脚本的绝对路径，请注意修改。</p>
<p><strong>7、建立软连接</strong><br>软连接默认已经生成好了，直接登录<code>PHPDNS</code>后台，将命令复制到<code>Linux</code>终端执行即可。<br><img src="https://www.southcat.net/usr/picture/PHP_DNSmasq(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用phpmyadmin批量修改WordPress等博客文章信息</title>
    <url>/1498/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候网站出现变动后，就需要修改很多信息，很多人只会手动修改，这对于数据很少的还好说，多就需要时间了，比如开启ssl后，需要将http开头的都修改成https，这样手动就很麻烦了，可以利用<code>phpmyadmin</code>来批量修改了，这样很快。</p>
<p>以下修改都需要<code>SQL</code>语句来执行，即使你不知道<code>SQL</code>语句是什么，那没事，直接使用下面的语句命令就行了，不过这里先介绍以下如何执行<code>SQL</code>语句，进行批量操作。现在一般的空间都是用<code>phpmyadmin</code>来管理数据库，这里将以<code>phpmyadmin</code>为例来介绍如何执行SQL语句：<br>1、进入你的<code>phpmyadmin</code>管理页面，然后进入你的博客对应的数据库<br>2、菜单栏有个<code>SQL</code>选项，点击进去<br>3、出现一个<code>SQL</code>语句的输入框，现在你就可以在里面输入<code>SQL</code>语句了<br>4、输入完毕，点击执行 ，将执行你刚才输入的<code>SQL</code>语句<br>5、<code>SQL</code>语句执行完毕，你的文章也被批量修改了，现在去看看你的文章是否都被更改了<br>6、最后提个醒：以下介绍的<code>SQL</code>语句都在我的博客上做过测试，但是尽管如此，操作数据库之前都要先备份一下你的数据库；定期备份你的数据库是好习惯</p>
<p>SQL命令执行窗口：<br><img src="https://www.southcat.net/usr/picture/phpmyadminxg.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>这里以<code>wordpress</code>为例，其它博客的话多看几遍以下<code>SQL</code>语句应该也会修改了。</p>
<p><strong>1、批量修改文章内容：</strong><br>如果你想替换之前写过的所有文章中的某些内容，如更换博客的名称，更换博客的网址，更换文章配图的链接等等，你可以使用以下<code>SQL</code>语句：</p>
<pre><code>UPDATE wp_posts 
SET post_content = REPLACE( post_content, &apos;http://southcat.net&apos;, &apos;https://southcat.net&apos; );</code></pre><p>该语句的功能是将所有文章中的<code>http://southcat.net</code>字眼，全部替换成<code>https://southcat.net</code>，你可以根据需要做一些更改。因为文章内容在数据库中是以<code>HTML</code>代码形式存储的，所以以上SQL语句同样可以替换HTML代码。</p>
<p>如果你只是想更改文章插图的链接，而不想影响其他的链接，可以使用以下SQL语句，所有<code>src=&quot;oldurl.com</code>被替换成了<code>src=&quot;newurl.com</code></p>
<pre><code>UPDATE wp_posts 
SET post_content = 
REPLACE (post_content, &apos;src=&quot;oldurl.com&apos;, &apos;src=&quot;newurl.com&apos;);</code></pre><p>如果你是以图片附件形式上传的话，需要更改图片附件的<code>GUID</code></p>
<pre><code>UPDATE wp_posts
SET  guid = REPLACE (guid, &apos;oldsiteurl.com&apos;, &apos;newsiteurl.com&apos;) 
WHERE post_type = &apos;attachment&apos;;</code></pre><p><strong>2、批量修改文章摘要：</strong><br>文章摘要就是你在<code>WordPress</code>后台编辑文章时，”摘要”框中输入的内容，如果你想批量更改文章摘要，可以使用以下语句：</p>
<pre><code>UPDATE wp_posts 
SET post_excerpt = REPLACE( post_excerpt, &apos;Rat&apos;, &apos;Rats&apos; );</code></pre><p>该语句的功能是将所有文章摘要中的<code>Rat</code>字眼，全部替换成<code>Rats</code>。</p>
<p><strong>3、批量修改文章的作者：</strong><br>假设你的博客有两名注册用户，张三和李四，你想将张三的所有文章划归到李四名下，这时候该怎么办呢？你可以执行以下语句：</p>
<pre><code>UPDATE wp_posts 
SET post_author = 李四用户id 
WHERE post_author = 张三用户id;</code></pre><p>那如何获得 李四的用户<code>id</code>和张三的用户<code>id</code>呢？你可以执行以下<code>SQL</code>语句：</p>
<pre><code>SELECT ID, user_nicename, display_name FROM wp_users;</code></pre><p>这时将列出你博客上所有的注册用户的ID，昵称和公开显示的名称，你现在就可以找到对应用户的<code>ID</code>了。</p>
<p><strong>4、批量修改文章评论者的网站URL：</strong><br>假设，你的博客有个非常忠实的读者，给你的博客文章留下很多有用的评论，同时他的评论都填写了留言者的网站<code>URL</code>，但是有一天他的博客域名换了，并请求你更新他留言中的网站<code>URL</code>，那你怎么办？手动一个一个帮他改，这不太现实。你可以使用以下<code>SQL</code>语句：</p>
<pre><code>UPDATE wp_comments 
SET comment_author_url = 
REPLACE( comment_author_url, &apos;oldurl.com&apos;, &apos;newurl.com&apos; )</code></pre><p>以上语句，将留言者所有旧的网站链接<code>oldurl.com</code>，更改为新的网址<code>newurl.com</code></p>
<p><strong>5、禁用所有文章的pingback功能：</strong><br>开启<code>pingback</code>功能，可以在别人引用你的文章链接的情况下，给你发送通知，但是该功能似乎对我们的文章没多大帮助，那为何不把<code>pingback</code>给禁止了呢？在<code>WordPress</code>后台 - 设置 - 讨论，取消勾选”接收来自外部博客的引用通告(<code>pingbacks</code>和<code>trackbacks</code>)”，这样以后的文章都不开启<code>pingback</code>，但是该选项不会对之前的已发布的文章起作用，还是要用到<code>SQL</code>:</p>
<pre><code>UPDATE wp_posts 
SET ping_status = &apos;closed&apos;;</code></pre><p><strong>6、删除所有文章的修订版：</strong><br>在通常情况下，文章的修订版对大多数人来说没多大意义，而且修订版的数量会随着你修改文章的次数不断增长，这会增加数据库的查询速度，这并不是什么好事。互联网上有很多教你如何禁止修订版的文章，还有很多插件可以删除文章修订版，你可以自己搜索看看。这里教你如何使用<code>SQL</code>语句，删除所有已产生的文章修订版数据：</p>
<pre><code>DELETE a,b,c
FROM wp_posts a
LEFT JOIN wp_term_relationships b ON (a.ID = b.object_id)
LEFT JOIN wp_postmeta c ON (a.ID = c.post_id)
WHERE a.post_type = &apos;revision&apos;;</code></pre><p><strong>7、删除某个评论者的所有评论：</strong><br>如果你的博客想要封杀某人，并删除其在你博客的所有留言，可以使用以下<code>SQL</code>语句。<br>(1)根据留言者的博客<code>URL</code>进行删除，以下SQL语句将删除所有URL为<code>www.example.com</code>的评论</p>
<pre><code>DELETE FROM wp_comments 
WHERE comment_author_url LIKE &apos;%www.example.com%&apos;;</code></pre><p>(2)根据留言者的昵称进行删除，以下语句将删除所有昵称为<code>example</code>的评论</p>
<pre><code>DELETE FROM wp_comments 
WHERE comment_author = &apos;example&apos;;</code></pre><p>(3)根据留言者的<code>Email</code>进行删除，以下语句将删除所有Email为<code>example@example.com</code>的评论</p>
<pre><code>DELETE FROM wp_comments 
WHERE comment_author_email = &apos;example@example.com&apos;;</code></pre><p><strong>8、替换所有评论中的敏感词汇：</strong><br>国内的互联网监控力度表现出了不断加强的趋势，如果你的博客评论中出现了大量的敏感词汇，很可能离被墙也不远了。最好的做法是，替换相关的敏感词汇，以保证你的博客安全，以下<code>SQL</code>语句将所有评论中的<code>fuck</code>，替换成<code>**</code>，替换内容根据你的需要来。</p>
<pre><code>UPDATE wp_comments 
SET comment_content = REPLACE( comment_content, &apos;fuck&apos;, &apos;**&apos; );</code></pre><p><strong>9、关闭文章评论功能:</strong><br>有时候你的博客可能会因为某种原因，需要关闭文章的评论。在<code>WordPress</code>后台 - 设置 - 讨论，那里取消勾选”允许人们发表新文章的评论”，以后发表的文章默认是关闭评论的。但是之前已经发表的文章，若想关闭评论需要你一篇一篇地去修改评论设置，这是一件比较痛苦的事情。以下<code>SQL</code>语句可以帮助你轻松地批量关闭文章评论：<br>(1) 关闭所有旧文章的评论：<br>通常情况下，一篇旧文章就很少会有人发表评论了，一般访问旧文章的访客大都来自搜索引擎，这是好事，但是这部分访客还会提出一些新问题，尤其是技术问题，但是可能文章中提到的技术细节你已经淡忘，这时候会让你很难办。最好的做法还是还是禁用旧文章的评论，以下<code>SQL</code>将禁止<code>2009-01-01</code>之前发表的所有文章的评论，你可以根据需要修改日期：</p>
<pre><code>UPDATE wp_posts 
SET comment_status = &apos;closed&apos; 
WHERE post_date &lt; &apos;2009-01-01&apos; AND post_status = &apos;publish&apos;;</code></pre><p>(2) 关闭所有文章的评论：<br>有时候很不幸，在不可抗力的威胁下，你不得不关闭所有文章的评论，可以使用以下SQL语句：</p>
<pre><code>UPDATE wp_posts 
SET comment_status = &apos;closed&apos; WHERE post_status = &apos;publish&apos;;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用phpSound搭建私人的音乐网站</title>
    <url>/2183/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>phpSound</code>是一款社会化音乐分享平台代码，基于著名的<code>SoundCloud</code>，用户可以在线分享自己创作的歌曲或者喜欢的歌曲！也可以本地上传和管理自己的音乐小样，任何注册的用户均可分享，所有访客可在线收听！且程序自带收费会员，但支付渠道仅限<code>PAYPAL</code>。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/phpSound(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/phpSound(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/phpSound(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>PHP &gt;= 5.5</code>、<code>MySQL</code>、<code>GD Library</code>、<code>OpenSSL</code>、<code>cURL</code>、<code>mod_rewrite</code>。</p>
<p>本文所使用的破解源码为最新版<code>v4.2.0</code>，源码来自于顶点网，并由林叶展弟弟进行汉化。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板安装<code>PHP</code>、<code>Mysql</code>、<code>Nginx</code>、<code>phpmyadmin</code>。</p>
<p><strong>2、安装程序</strong><br>先添加域名，然后下载程序：</p>
<pre><code>#phpSound-v4.2.0汉化破解
https://www.southcat.net/usr/down/phpSound-v4.2.0.zip
#phpSound-v4.3.0汉化破解
https://www.southcat.net/usr/down/phpsound-v4.3.0.zip</code></pre><p>将程序源码上传到网站根目录解压，然后新建一个数据库，将网站根目录里的<code>phpSound.sql</code>导入进去。</p>
<p>接着编辑网站根目录<code>includes/config.php</code>，进行如下修改：</p>
<pre><code>$CONF[&apos;user&apos;] = &apos;YOURDBUSER&apos;;//数据库用户
$CONF[&apos;pass&apos;] = &apos;YOURDBPASS&apos;;//数据库密码
$CONF[&apos;name&apos;] = &apos;YOURDBNAME&apos;;//数据库名
$CONF[&apos;url&apos;] = &apos;http://southcat.net&apos;;//程序安装网址
$CONF[&apos;email&apos;] = &apos;admin@southcat.net&apos;;//系统联系邮件</code></pre><p>再将根目录下列文件或文件夹属性设置为<code>777</code>：</p>
<pre><code>cache
uploads、uploads/avatars、uploads/covers、uploads/media、uploads/tracks
themes/sound/images</code></pre><p>最后点击网站设置，添加<code>Nginx</code>伪静态：</p>
<pre><code>location / {
  if (-e $request_filename){
    rewrite ^/(.*) /$1 break;
  }
  rewrite ^/(([^/]*)+)?$ /index.php?a=$1 break;
}

location /welcome {
  rewrite ^/welcome/?$ /index.php?a=welcome;
}

location /stream {
  rewrite ^/stream/?$ /index.php?a=stream;
  rewrite ^/stream/logout/([^/]+)/?$ /index.php?a=stream&amp;logout=1&amp;token_id=$1;
}

location /explore {
  rewrite ^/explore/?$ /index.php?a=explore;
  rewrite ^/explore/filter/([^/]+)/?$ /index.php?a=explore&amp;filter=$1;
}

location /upload {
  rewrite ^/upload/?$ /index.php?a=upload;
}

location /pro {
  rewrite ^/pro/?$ /index.php?a=pro;
}

location /stats {
  rewrite ^/stats/?$ /index.php?a=stats;
  rewrite ^/stats/filter/([^/]+)/?$ /index.php?a=stats&amp;filter=$1;
}

location /profile {
  rewrite ^/profile/([^/]+)/?$ /index.php?a=profile&amp;u=$1;
  rewrite ^/profile/([^/]+)/([^/]+)/?$ /index.php?a=profile&amp;u=$1&amp;r=$2;
  rewrite ^/profile/([^/]+)/filter/([^/]+)/?$ /index.php?a=profile&amp;u=$1&amp;filter=$2;
}

location /notifications {
  rewrite ^/notifications/?$ /index.php?a=notifications;
  rewrite ^/notifications/filter/([^/]+)/?$ /index.php?a=notifications&amp;filter=$1;
}

location /settings {
  rewrite ^/settings/?$ /index.php?a=settings;
  rewrite ^/settings/([^/]+)/?$ /index.php?a=settings&amp;b=$1;
}

location /messages {
  rewrite ^/messages/?$ /index.php?a=messages;
  rewrite ^/messages/([^/]+)/([^/]+)/?$ /index.php?a=messages&amp;u=$1&amp;id=$2;
}

location /track {
  rewrite ^/track/([^/]+)/?$ /index.php?a=track&amp;id=$1;
  rewrite ^/track/([^/]+)/edit/?$ /index.php?a=track&amp;id=$1&amp;type=edit;
  rewrite ^/track/([^/]+)/report/?$ /index.php?a=track&amp;id=$1&amp;type=report;
  rewrite ^/track/([^/]+)/stats/?$ /index.php?a=track&amp;id=$1&amp;type=stats;
  rewrite ^/track/([^/]+)/likes/?$ /index.php?a=track&amp;id=$1&amp;type=likes;
  rewrite ^/track/([^/]+)/stats/filter/([^/]+)/?$ /index.php?a=track&amp;id=$1&amp;type=stats&amp;filter=$2;
  rewrite ^/track/([^/]+)/([^/]+)/?$ /index.php?a=track&amp;id=$1&amp;name=$2;
}

location /playlist {
  rewrite ^/playlist/([^/]+)/?$ /index.php?a=playlist&amp;id=$1;
  rewrite ^/playlist/([^/]+)/edit/?$ /index.php?a=playlist&amp;id=$1&amp;edit=true;
  rewrite ^/playlist/([^/]+)/([^/]+)/?$ /index.php?a=playlist&amp;id=$1&amp;name=$2;
}

location /search {
  rewrite ^/search/filter/([^/]+)/([^/]+)/?$ /index.php?a=search&amp;filter=$1&amp;q=$2;
}

location /page {
  rewrite ^/page/([^/]+)/?$ /index.php?a=page&amp;b=$1;
}

location /recover {
  rewrite ^/recover/?$ /index.php?a=recover;
  rewrite ^/recover/do/?$ /index.php?a=recover&amp;r=1;
}</code></pre><p>然后就可以打开域名查看了，用户名<code>admin</code>，密码<code>password</code>，后台地址：<code>http://xx.com/index.php?a=admin</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用PlayTube搭建私人的视频网站</title>
    <url>/2125/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>PlayTube</code>是一个视频分享程序，它能快速的建立一个视频上传、导入、分享的网站，具有多语言、用户管理、广告管理、视频上传、从<code>youtube</code>和<code>vime</code>等网站导入视频等功能。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/PlayTube(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PlayTube(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PlayTube(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PlayTube(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>上传视频：上传本地视频。</li>
<li>导入视频：非常简单的从<code>YouTube</code>、<code>Dailymotion</code>、和<code>Vimeo</code>等站点批量导入视频，此功能需要对应网站的<code>API</code>。</li>
<li>自动导入视频：设置一些关键词并创建导入任务，轻松从<code>YouTube</code>和<code>Dailymotion</code>导入视频到你的网站。</li>
<li>高性能：<code>PlayTube</code>可以轻松的处理超过<code>1B</code>的视频。</li>
<li><code>WoWonder</code>登录集成：无缝对接<code>WoWonder</code>社交系统，可以使用社交系统的帐户授权登入。</li>
<li>喜欢&amp;反感：用户可以对某视频进行喜欢投票。</li>
<li>评论系统：注册用户可以对视频进行评论。</li>
<li>订阅、历史、接下来观看：功能也是比较人性化的。</li>
<li>用户频道：完整的用户展示页。</li>
<li>广告系统：可以创建视频、页面的广告，一切都在后台的广告设置里。</li>
<li>站点地图建立：建立站点地图并自动发送到<code>Google/Bing</code>。</li>
<li><code>SEO</code>友好：搜索引擎优化友好的链接，非常有利于谷歌收录。</li>
<li>完整的后台：功能完善的后台控制面板。</li>
<li>漂亮的<code>UI</code>：非常容易修改而且还很漂亮的模板。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>环境要求：<code>PHP &gt;= 5.5</code>、<code>MySQL</code>、<code>GD Library</code>、<code>mbstring</code>、<code>cURL</code>、<code>allow_url_fopen</code>。</p>
<p>这里使用宝塔面板做演示，如果你有基础的话，也可以使用其它面板或者<code>lnmp</code>一键包。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板安装<code>PHP</code>、<code>Mysql</code>、<code>Nginx</code>、<code>phpmyadmin</code>。</p>
<p><strong>2、安装程序</strong><br>添加域名，然后下载程序源码，并将程序上传到网站根目录解压，源码下载：</p>
<pre><code>#v1.4.1完整源码
https://www.southcat.net/usr/down/Playtube/playtube-v1.4.1-full.zip
#增量包，升级时需要一个一个挨着解压覆盖
https://www.southcat.net/usr/down/Playtube/playtube-v1.4.2-update.zip
https://www.southcat.net/usr/down/Playtube/playtube-v1.4.3-update.zip
https://www.southcat.net/usr/down/Playtube/playtube-v1.4.5-update.zip
https://www.southcat.net/usr/down/Playtube/playtube-v1.4.5.1-update.zip
https://www.southcat.net/usr/down/Playtube/playtube-v1.5-update.zip
https://www.southcat.net/usr/down/Playtube/playtube-v1.5.1-update.zip
https://www.southcat.net/usr/down/Playtube/playtube-v1.6-update.zip
#语言包
https://www.southcat.net/usr/down/Playtube/lang1.4.1-v1.4.2-cn.zip

#升级方法，比如v1.4.1升级到v1.4.2
将v1.4.2增量包上传至根目录，解压并直接替换根目录文件，再访问http://xx.com/update.php进行更新即可。

#v1.4.5.1开心完整版源码
https://www.southcat.net/usr/down/Playtube/playtube-v1.4.5.1-nulled.zip

#v1.6开心完整版源码，安装的时候购买代码和其他版本不一样，V1.6购买代码为：顶点网破解
https://www.southcat.net/usr/down/Playtube/playtube-v1.6-nulled.zip</code></pre><p>再添加<code>Nginx</code>伪静态：</p>
<pre><code>if (!-f $request_filename){
    set $rule_0 1$rule_0;
}
if (!-d $request_filename){
    set $rule_0 2$rule_0;
}
if ($rule_0 = &quot;21&quot;){
    rewrite ^/$ /index.php?link1=home ;
}
rewrite ^/$ /index.php?link1=home ;
rewrite ^/reset-password/([^/]+)(/|)$ /index.php?link1=reset-password&amp;code=$1 ;
rewrite ^/confirm/(.*)/(.*)$ /index.php?link1=confirm&amp;code=$1&amp;email=$2 ;
rewrite ^/api/v(([0-9])([.][0-9]+))(/|)$ /api.php?v=$1 ;
rewrite ^/admin-cp$ /admincp.php ;
rewrite ^/admin-cp/(.*)$ /admincp.php?page=$1 ;
rewrite ^/admin-cdn/(.*)$ /admin-panel/$1 last;
rewrite ^/videos/category/(.*)/rss(/|)$ /index.php?link1=videos&amp;page=category&amp;id=$1&amp;feed=rss ;
rewrite ^/videos/category/(.*)$ /index.php?link1=videos&amp;page=category&amp;id=$1 ;
rewrite ^/videos/(.*)/rss(/|)$ /index.php?link1=videos&amp;page=$1&amp;feed=rss ;
rewrite ^/videos/(.*)$ /index.php?link1=videos&amp;page=$1 ;
rewrite ^/articles(/|)$ /index.php?link1=articles ;
rewrite ^/articles/category/(.*)$ /index.php?link1=articles&amp;category_id=$1 ;
rewrite ^/articles/read/(.*)$ /index.php?link1=read&amp;id=$1 ;
if (!-f $request_filename){
    set $rule_14 1$rule_14;
}
if (!-d $request_filename){
    set $rule_14 2$rule_14;
}
if ($rule_14 = &quot;21&quot;){
    rewrite ^/aj/([^/.]+)/?$ /ajax.php?type=$1&amp;first=$2 last;
}
rewrite ^/aj/([^/.]+)/([^/.]+)/?$ /ajax.php?type=$1&amp;first=$2 last;
rewrite ^/aj/([^/.]+)/([^/.]+)/([^/.]+)/?$ /ajax.php?type=$1&amp;first=$2&amp;second=$3 last;
rewrite ^/edit-video/(.*)?$ /index.php?link1=edit-video&amp;id=$1 last;
rewrite ^/watch/([^/]+)(/|)?$ /index.php?link1=watch&amp;id=$1 last;
rewrite ^/watch/([^/]+)/list/([^/]+)(/|)?$ /index.php?link1=watch&amp;id=$1&amp;list=$2 last;
rewrite ^/embed/(.*)?$ /index.php?link1=embed&amp;id=$1 last;
rewrite ^/resend/(.*)/(.*)?$ /index.php?link1=resend&amp;id=$1&amp;u_id=$2 last;
rewrite ^/redirect/(.*)?$ /index.php?link1=redirect&amp;id=$1 last;
rewrite ^/settings/(.*)/(.*)$ /index.php?link1=settings&amp;page=$1&amp;user=$2 ;
rewrite ^/settings/(.*)$ /index.php?link1=settings&amp;page=$1 ;
rewrite ^/terms/([^/]+)(/|)$ /index.php?link1=terms&amp;type=$1 ;
rewrite ^/go_pro(/|)$ /index.php?link1=go_pro ;
rewrite ^/ads(/|)$ /index.php?link1=ads ;
rewrite ^/ads/create(/|)$ /index.php?link1=create_ads ;
rewrite ^/ads/edit/(d+)(/|)$ /index.php?link1=edit_ads&amp;id=$1 ;
rewrite ^/contact-us(/|)$ /index.php?link1=contact ;
rewrite ^/@([^/]+)(/|)$ /index.php?link1=timeline&amp;id=$1 ;
rewrite ^/messages/(.*)$ /index.php?link1=messages&amp;id=$1 ;
if (!-f $request_filename){
    set $rule_33 1$rule_33;
}
if (!-d $request_filename){
    set $rule_33 2$rule_33;
}
if ($rule_33 = &quot;21&quot;){
    rewrite ^/([^/]+)(/|)$ /index.php?link1=$1 ;
}</code></pre><p>最后打开域名进行安装配置，授权码：<code>nulled-by-reishi</code>，直接使用<code>v1.4.5.1</code>完整版的可能不需要授权。<br><img src="https://www.southcat.net/usr/picture/PlayTube(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PlayTube(6).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PlayTube(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>3、中文设置</strong><br>我们通过<code>phpmyadmin</code>进入到数据库，找到<code>PlayTube</code>所使用数据库，删除<code>langs.sql</code>，再将语言包的<code>langs.sql</code>文件导入到数据库即可。</p>
<p>然后刷新网站会看到有右下角语言有<code>中文</code>的，如果选择<code>中文</code>后，分类显示不出来，可能是分类语言乱码，这时候我们去根目录<code>assets/langs</code>，将乱码的语言文件改成<code>中文.php</code>即可。</p>
<p><strong>4、安装ffmpeg</strong><br>要使用程序完整的功能，我们还需要安装<code>ffmpeg</code>。安装参考：使用静态ffmpeg二进制文件秒安装ffmpeg。</p>
<p>再打开宝塔，点击左侧软件管理-<code>PHP</code>设置-禁用函数-删除<code>shell_exec</code>。最后在后台设置<code>FFmpeg</code>二进制文件路径为<code>/usr/bin/ffmpeg</code>。</p>
<p><strong>5、更多设置</strong></p>
<pre><code>#视频分类设置
网站目录./assets/langs/中文.php修改。
#编辑样式表
./themes/default/css，主样式文件是style.css
#添加自己的代码
想在head、body、footer标签中添加自己的代码，请在./themes/default/layout/container.html修改</code></pre><p>差不多到这里就算安装完成了，然后更多功能自行研究吧。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Plik搭建一个临时文件上传系统，自定义时长/下载即摧毁</title>
    <url>/2258/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Plik</code>是一个基于<code>golang</code>的可扩展且友好的临时文件上传系统。上传者可自定义文件保留时长，设置下载密码，允许上传者随时删除文件，设置下载一次就自动删除，二维码下载，上传者还可以选择不保存在服务器里，直接传到免费服务(貌似用的<code>ShareX</code>)，还支持在线播放<code>mp3</code>/<code>mp4</code>文件，及一些功能拓展，挺强的，安装也简单。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/plik(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/plik(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/root-gg/plik" target="_blank" rel="noopener">https://github.com/root-gg/plik</a></p>
<p>可以直接用作者编译好的包安装，下载地址：点击查看。</p>
<pre><code>#下载最新版本的Plik，目前是1.2.3版本
wget https://github.com/root-gg/plik/releases/download/1.2.3/plik-1.2.3-linux-64bits.tar.gz
#解压
tar xzvf plik-1.2.3-linux-64bits.tar.gz
#运行
cd plik-1.2.3/server
./plikd</code></pre><p>然后就可以访问<code>IP:8080</code>查看了，程序的配置文件在<code>server/plikd.cfg</code>，可以设置监听端口/最大上传/默认保存天数等等，上传文件默认保存在<code>server/files</code>。</p>
<p>如果<code>Web</code>界面打不开，可能需要开启防火墙端口。</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8080/tcp --permanent
firewall-cmd --reload</code></pre><p>最后设置完毕后就需要程序常驻后台了，可以使用<code>screen</code>命令，使用查看→传送门。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装镜像</strong></p>
<pre><code>#建一个保存Plik数据的文件夹
mkdir /Plik &amp;&amp; cd /Plik
#下载配置文件，可以保持默认，也可以编辑
wget https://raw.githubusercontent.com/root-gg/plik/master/server/plikd.cfg
#启动容器
docker run --name pilk -d -p 8080:8080 -v /Plik/plikd.cfg:/home/plik/server/plikd.cfg -v /Plik/files:/home/plik/server/files rootgg/plik</code></pre><p>然后就可以打开<code>IP:8080</code>了，配置文件为<code>/Plik/plikd.cfg</code>，上传文件在<code>/Plik/files</code>，当然外部端口，文件路径可自行修改。</p>
<p>最后我们需要给外部存储目录，也就是<code>/Plik/files</code>文件夹<code>777</code>权限，不然上传会失败。</p>
<pre><code>chmod 777 /Plik/files</code></pre><h2 id="域名访问"><a href="#域名访问" class="headerlink" title="域名访问"></a>域名访问</h2><p>如果想通过域名访问的就需要使用域名反代了，这里就使用最方便的<code>Caddy</code>，请提前解析好域名到服务器，过程会自动签发<code>SSL</code>。</p>
<p><strong>1、安装Caddy</strong><br>使用命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p><strong>2、配置Caddy</strong></p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！
echo &quot;xx.com {
 gzip
 tls admin@southcat.net
 proxy / 0.0.0.0:8080
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p><strong>3、启动Caddy</strong></p>
<pre><code>/etc/init.d/caddy start</code></pre><p>如果启动失败，使用<code>tail -f /tmp/caddy.log</code>查看启动日志，可以自己分析下错误日志，如果不会就留言。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Plexdrive/Rclone+Google Drive搭建无限容量的媒体库，适用于Plex/Emby/Jellyfin等</title>
    <url>/2343/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般我们玩<code>Plex</code>、<code>Emby</code>、<code>Jellyfin</code>这些媒体服务器的时候，都会考虑到硬盘大小的问题。如果考虑到成本的话，那就只能挂载无限网盘了，这里就建议用<code>Google Drive</code>，挂载方法的话可以用<code>Plexdrive</code>和<code>Rclone</code>。</p>
<pre><code>提示：本教程需要国外的服务器，且挂载后看电影、听音乐的时候不需要梯子</code></pre><p><code>Plexdrive</code>是一个可以安装<code>Gdrive</code>应用的工具，看名字像是为<code>Plex</code>量身打造，其实其它应用也可以用，该工具可以直接从<code>Gdrive</code>读取媒体文件，专门争对媒体服务器优化，貌似是利用内存缓存原理，可以加快媒体访问并减少<code>API</code>的读取次数。所以可能需要内存大点，不够的可以添加个几<code>G</code>的虚拟内存，<code>Swap</code>一键脚本→传送门。</p>
<p><code>Rclone</code>是一个强大的网盘挂载工具，很久前博主就经常介绍，不过考虑到用途，之前的挂载参数肯定是需要调整下的，所以会在这里单独说下，该工具目前也有适合媒体服务器的缓存读取功能，但缓存很容易占用本地硬盘空间，所以这里博主就不用缓存功能了，主要使用的是分段读取，读取会快点，对于<code>API</code>来说，读取次数也会变的非常少。</p>
<pre><code>#两个工具的读取区别
Plexdrive：只能读取和删除
Rclone：可以写入、读取和删除，但不能当硬盘直接写入，只能将文件移动进去</code></pre><p>这<code>2</code>个工具都需要安装<code>fuse</code>，可以提前装下，使用命令：</p>
<pre><code>#Debian/Ubuntu系统
apt-get install fuse -y
#CentOS系统
yum install fuse -y</code></pre><h2 id="使用Plexdrive"><a href="#使用Plexdrive" class="headerlink" title="使用Plexdrive"></a>使用Plexdrive</h2><p><strong>Github地址：</strong><a href="https://github.com/dweidenfeld/plexdrive" target="_blank" rel="noopener">https://github.com/dweidenfeld/plexdrive</a></p>
<p><strong>1、获取谷歌API凭据</strong><br>先启用<code>Google Drive API</code>，启用地址：点击进入。<br><img src="https://www.southcat.net/usr/picture/plexdrive(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>再创建一个<code>OAuth client ID</code>，创建地址：点击进入。应用类型选择其他(<code>Other</code>)，名称自己填，这里博主填的<code>Plexdrive</code>。<br><img src="https://www.southcat.net/usr/picture/plexdrive(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后你会获得自己的客户端<code>ID</code>和客户端密钥，再复制下来。<br><img src="https://www.southcat.net/usr/picture/plexdrive(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、运行Plexdrive</strong><br><code>Plexdrive</code>下载地址→传送门，根据自己的架构选择对应的版本。</p>
<pre><code>#下载最新的Plexdrive
wget https://github.com/dweidenfeld/plexdrive/releases/download/5.0.0/plexdrive-linux-amd64
#移动并命名
mv plexdrive-linux-amd64 /usr/local/bin/plexdrive
chmod +x /usr/local/bin/plexdrive
#新建本地挂载目录
mkdir -p /home/gdrive
#开始挂载
/usr/local/bin/plexdrive mount \
 -c /home/.plexdrive \
 -o allow_other \
 -v 4 --refresh-interval=1m \
 --chunk-check-threads=4 \
 --chunk-load-threads=4 \
 --chunk-load-ahead=4 \
 --max-chunks=20 \
 /home/gdrive</code></pre><p>挂载参数可以参考→传送门，可以根据你的需求自行调整以上参数。</p>
<p>挂载后会要你输入客户端<code>ID</code>和密匙，然后打开获取到的链接绑定账号后，将自己获取到的<code>code</code>复制到<code>SSH</code>客户端确定即可。</p>
<p>然后接下来<code>Plexdrive</code>将开始生成缓存，所以期间我们需要等几分钟。缓存完了后，你会看到<code>Gdrive</code>的文件已经同步到了本地挂载文件夹。然后使用<code>Plex</code>、<code>Emby</code>、<code>Jellyfin</code>等媒体服务器的时候，就可以直接把媒体文件夹指向本地挂载文件夹了。</p>
<p><strong>3、开机自启</strong><br>这里使用<code>Systemctl</code>守护进程，只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p>
<pre><code>#以下是一整条命令，一起复制到SSH客户端运行
cat &gt; /etc/systemd/system/plexdrive.service &lt;&lt;EOF
[Unit]
Description=Plexdrive
AssertPathIsDirectory=/home/gdrive
After=network-online.target

[Service]
Type=simple
ExecStart=/usr/local/bin/plexdrive mount \
 -c /home/.plexdrive \
 -o allow_other \
 -v 4 --refresh-interval=1m \
 --chunk-check-threads=4 \
 --chunk-load-threads=4 \
 --chunk-load-ahead=4 \
 --max-chunks=20 \
 /home/gdrive
ExecStop=/bin/fusermount -u /home/gdrive
Restart=on-abort

[Install]
WantedBy=default.target
EOF</code></pre><p>开始启动：</p>
<pre><code>systemctl start plexdrive</code></pre><p>设置开机自启：</p>
<pre><code>systemctl enable plexdrive</code></pre><p>其他命令：</p>
<pre><code>重启：systemctl restart plexdrive
停止：systemctl stop plexdrive
状态：systemctl status plexdrive</code></pre><h2 id="使用Rclone"><a href="#使用Rclone" class="headerlink" title="使用Rclone"></a>使用Rclone</h2><p><strong>1、配置Rclone</strong><br>使用和挂载<code>Google Drive</code>的方法可以参考博主以前发的教程→传送门，但只参考教程安装和配置即可，挂载就看本文。</p>
<p><strong>2、挂载Gdrive</strong><br>挂载需要<code>3</code>个主要参数，这里很多人容易搞混，就详细的说下，比如开头的参数如下：</p>
<pre><code>/usr/bin/rclone mount DriveName:Folder LocalFolder</code></pre><p>参数解读：</p>
<pre><code>DriveName为Rclone的配置名称，比如你配置rclone的时候，Name填的Rats
Folder为网盘里的文件夹路径，如果你要挂载整个网盘，直接填/挂载整个根目录
LocalFolder为本地服务器上的挂载文件夹，如果你需要将网盘的文件夹挂载到服务器上的/Drive文件夹，那就填/Drive</code></pre><p>博主目前针对媒体服务器测试了个比较不错的挂载参数，命令：</p>
<pre><code>#记得修改DriveName:Folder和LocalFolder的值
/usr/bin/rclone mount DriveName:Folder LocalFolder \
 --umask 0000 \
 --default-permissions \
 --allow-non-empty \
 --allow-other \
 --buffer-size 32M \
 --dir-cache-time 12h \
 --vfs-read-chunk-size 64M \
 --vfs-read-chunk-size-limit 1G</code></pre><p>更多参数可以查看→地址一和地址二，如果你喜欢折腾的话，可以测试下，看还有不有更适合的参数，然后留个言。</p>
<p><strong>3、开机自启</strong><br>这里和<code>Plexdrive</code>一样，同样使用<code>Systemctl</code>守护进程，也只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p>
<pre><code>#以下是一整条命令，先修改DriveName:Folder和LocalFolder的值，再一起复制到SSH客户端运行
cat &gt; /etc/systemd/system/rclone.service &lt;&lt;EOF
[Unit]
Description=Rclone
AssertPathIsDirectory=LocalFolder
After=network-online.target

[Service]
Type=simple
ExecStart=/usr/bin/rclone mount DriveName:Folder LocalFolder \
 --umask 0000 \
 --default-permissions \
 --allow-non-empty \
 --allow-other \
 --buffer-size 32M \
 --dir-cache-time 12h \
 --vfs-read-chunk-size 64M \
 --vfs-read-chunk-size-limit 1G
ExecStop=/bin/fusermount -u LocalFolder
Restart=on-abort
User=root

[Install]
WantedBy=default.target
EOF</code></pre><p>开始启动：</p>
<pre><code>systemctl start rclone</code></pre><p>设置开机自启：</p>
<pre><code>systemctl enable rclone</code></pre><p>其他命令：</p>
<pre><code>重启：systemctl restart rclone
停止：systemctl stop rclone
状态：systemctl status rclone</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>现在<code>Plexdrive</code>项目好像很少更新了，不过还能用；至于<code>Rclone</code>的话，更新频繁，功能也强，所以博主还是偏向于<code>Rclone</code>的，不过博主体验了下下，貌似<code>Plexdrive</code>加载什么的更快些，当然也不能肯定<code>Plexdrive</code>要快，毕竟也可能与其它因素有关，对于这<code>2</code>个工具的选择，可以都体验下，觉得哪个适合自己就用那个。</p>
<h2 id="编译Plexdrive"><a href="#编译Plexdrive" class="headerlink" title="编译Plexdrive"></a>编译Plexdrive</h2><p><strong>说明：</strong>由于作者<code>Github</code>源码更新了，二进制还没更新，为了可以使用最新版的功能，我们可以编译下，这里就说下方法。</p>
<p><strong>1、安装Go</strong></p>
<pre><code>#32位系统下载
wget -O go.tar.gz https://dl.google.com/go/go1.13.3.linux-386.tar.gz
#64位系统下载
wget -O go.tar.gz https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz

#解压压缩包
tar -zxvf go.tar.gz -C /usr/local
#设置环境变量，将以下一起复制进ssh客户端运行
mkdir $HOME/go
echo &apos;export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin&apos; &gt;&gt; /etc/profile
source /etc/profile
#查看go版本，有输出即为安装成功
go version</code></pre><p><strong>2、安装Git</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install git

#CentOS/RHEL系统
yum -y install git</code></pre><p><strong>3、编译Plexdrive</strong></p>
<pre><code>go get github.com/dweidenfeld/plexdrive
cd $GOPATH/src/github.com/dweidenfeld/plexdrive
#构建
go build</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>一款开源免费且类似Emby的个人媒体服务器：Jellyfin安装教程</li>
<li>使用Docker安装Aria2+AriaNg+H5ai+Plex，离线BT下载/建立私人影院</li>
<li>建立你的私人在线影库：Plex云盘搭建及使用教程</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用scp代替wget传输文件</title>
    <url>/1477/</url>
    <content><![CDATA[<p>有时候，主机做了限制，wget无法获取文件，这时候在ssh下使用scp传输文件，就方便了很多。</p>
<p><strong>1、下载文件</strong></p>
<pre><code>scp username@servername:/path/filename /home/local_dir</code></pre><p><code>username@servername</code> 是服务器的SSH用户名和IP地址，如 <code>root@127.0.0.1</code><br><code>/path/filename</code> 是服务器文件存放目录<br><code>/home/local_dir</code> 是本机文件需存放的目录（目录要有写权限）</p>
<p><strong>2、上传文件</strong></p>
<pre><code>scp /path/filename username@servername:/path</code></pre><p><code>/path/filename</code> 本机文件<br><code>username@servername</code> 是服务器的SSH用户名和IP地址，如 <code>root@127.0.0.1</code><br><code>/path</code> 服务器存放目录</p>
<p><strong>3、下载整个目录</strong></p>
<pre><code>scp -r username@servername:/var/www/remote_dir/ /home/local_dir</code></pre><p><code>username@servername</code> 是服务器的SSH用户名和IP地址，如 <code>root@127.0.0.1</code><br><code>/var/www/remote_dir/</code> 服务器目录<br><code>/home/local_dir</code> 本机目录</p>
<p><strong>4、上传目录到服务器</strong></p>
<pre><code>scp -r /home/local_dir username@servername:/var/www/remote_dir/</code></pre><p><code>/home/local_dir</code> 本机目录<br><code>username@servername</code> 是服务器的SSH用户名和IP地址，如 <code>root@127.0.0.1</code><br><code>/var/www/remote_dir/</code> 服务器目录</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用QuickBox搭建多用户BT离线下载/媒体库系统</title>
    <url>/1627/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>QuickBox</code>是一个非常好用的<code>SeedBox</code>软件，支持多用户使用。可以使用<code>Deluge</code>、<code>Rutorrent</code>、<code>Rtorrent</code>、<code>BTSync</code>（<code>Resilio-Sync</code>）等多种种子软件。<br><img src="https://www.southcat.net/usr/picture/QuickBox(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>注意：</strong>请勿在有数字版权保护法保护的<code>VPS</code>或者服务器上下载BT资源，否则会有罚款删机器的风险。（尤其是美国地区对版权非常敏感。<code>OVH</code>机房也非常反对<code>BT</code>版权影视、软件等资源）。请选择罗马尼亚、俄罗斯等版权非常宽松的地区的服务器进行测试。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Ubuntu 15.10</code>、<code>Ubuntu 16.04</code>，内存<code>4G</code>以上。</p>
<p>登录服务器<code>root</code>命令运行脚本：</p>
<pre><code>apt-get -yqq update; apt-get -yqq upgrade; apt-get -yqq install git lsb-release; \
git clone https://github.com/QuickBox/QB /etc/QuickBox &amp;&amp;
bash /etc/QuickBox/setup/quickbox-setup</code></pre><p>运行完成后根据提示配置相关信息，然后我们访问我们的<code>IP</code>地址或者域名即可进入控制面板。</p>
<p><strong>注意：</strong>此时安装完成后<code>SSH</code>端口会变成<code>4747</code>，以后需要使用此端口登录<code>SSH</code>。</p>
<h2 id="安装Plex"><a href="#安装Plex" class="headerlink" title="安装Plex"></a>安装Plex</h2><p><code>Plex</code>（plex.tv）是一款非常强大的媒体中心软件，可以以库的方式显示所有的影视资源，自动获取信息。支持全平台客户端。可以在服务器上部署后，家里远程访问。</p>
<p>我们连接上装有<code>QuickBox</code>的服务器，然后输入以下指令即可安装：</p>
<pre><code>box install plex</code></pre><p><strong>注意：</strong>请勿直接在<code>QuickBox</code>控制面板中安装<code>Plex</code>，会无法启动。请在<code>SSH</code>中使用以上命令进行操作。</p>
<p>然后，我们安装好<code>Plex</code>之后不要急忙打开<code>Plex</code>网址访问，我们还需初始化服务端进行账号关联。</p>
<p>首先，我们打开<code>Putty</code>, 照常输入服务器地址和<code>SSH</code>端口号，然后点击左侧<code>Connection</code>&gt;<code>SSH</code>&gt;<code>Tunnels</code>，在<code>Source</code> <code>port</code>中填入<code>12345</code>, 在<code>Destination</code>中填入<code>localhost:32400</code> ，然后点击<code>Add</code>，如下图所示。<br><img src="https://www.southcat.net/usr/picture/QuickBox(1).png" alt="请输入图片描述" title="请输入图片描述"><br>然后点击<code>Open</code>并登录<code>SSH</code>. 此时打开浏览器，输入<code>http://localhost:12345/web</code>就可以看到服务器加载界面，点击<code>Agree</code>并点击<code>Claim Server</code>, 即可实现服务器加载和初始化，以后就可以在任何地方（包括各种手机客户端）登录该服务器了。</p>
<h2 id="签发Let’s-Encrypt证书"><a href="#签发Let’s-Encrypt证书" class="headerlink" title="签发Let’s Encrypt证书"></a>签发Let’s Encrypt证书</h2><p>首先以<code>Root</code>登录进入<code>SSH</code>。然后运行：</p>
<pre><code>apt-get -y install git
box install letsencrypt </code></pre><p>然后根据提示输入你的邮箱，要申请<code>SSL</code>的域名就行了<del>（需要你提前解析好域名哦</del>）。</p>
<h2 id="使用H5ai代替默认列表"><a href="#使用H5ai代替默认列表" class="headerlink" title="使用H5ai代替默认列表"></a>使用H5ai代替默认列表</h2><p>因为<code>Apache</code>的默认列表很丑，所以这里使用<code>H5ai</code>来美化查看文件的列表。然后我们前往<code>Apache</code>目录下配置默认文档设置：</p>
<pre><code>vim /etc/apache2/apache2.conf</code></pre><p>找到最后一行，把它前面的<code>#</code>删掉并保存，最后内容应该是这样：</p>
<pre><code>DirectoryIndex index.html index.php /_h5ai/public/index.php</code></pre><p>最后重启<code>Apache</code>：</p>
<pre><code>service apache2 restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用screen来实现多任务不断线操作命令</title>
    <url>/1456/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们用<code>VPS</code>执行一个系统安装，就输入命令然后在那一直等。如果出现掉线或者断网死机的情况，我们还得重新安装。如果能使用上<code>screen</code>命令可以实现无人值守的效果。我们可以同时操作多个任务，也可以关机操作。所以说很方便。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、安装方法：</strong></p>
<pre><code>yum install screen  #CentOS
apt-get install screen  #Debian或者Ubuntu</code></pre><p><strong>2、创建一个screen会话：</strong></p>
<pre><code>screen -S xx  #xx为创建会话的名称</code></pre><p><strong>3、隐藏并保留当前会话窗口：</strong></p>
<pre><code>按Ctrl+A，再按&quot;D&quot;键</code></pre><p>如果怕中途掉线或者要离开的话，可以使用。<br><strong>4、恢复会话窗口：</strong></p>
<pre><code>screen -r xx #恢复名字为xx的会话</code></pre><p>如果在恢复会话的时候忘记了或者没有设定会话名称我们就要执行：</p>
<pre><code>screen -ls</code></pre><p>他会列出你所有的会话列表，然后使用：</p>
<pre><code>screen -r 会话名称</code></pre><p>来恢复会话窗口。<br><strong>5、关闭会话窗口：</strong></p>
<pre><code>exit</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Searx搭建一个私人的搜索引擎平台，可展现Google/Bing等70多种搜索网站的搜索结果</title>
    <url>/2345/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在百毒各种犀利操作导致很多人都转向了谷歌，不过由于谷歌在国内被墙，对一些人来说访问起来是有点困难的，除了挂梯子以外，反代谷歌也可以，很久前就发过这种教程→传送门，不过最近找到了个好项目<code>Searx</code>，一个基于<code>Python</code>的完全开源免费搜索引擎平台，为你提供来自<code>Google</code>、<code>Bing</code>、<code>Yahoo</code>等<code>70</code>多种各大视频、图片、搜索、磁力等网站结果展示，并对搜索结果进行优化，同时不会存储你的任何搜索信息，搭建也很方便，有兴趣的可以搭建给需要谷歌的同事或朋友用下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Searx(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Searx(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>项目地址：</strong><a href="https://github.com/asciimoo/searx" target="_blank" rel="noopener">https://github.com/asciimoo/searx</a></p>
<p><strong>1、安装pip</strong></p>
<pre><code>#CentOS 6.x 32位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 6.x 64位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 7.x
yum install -y epel-release
yum install -y python-pip
#如果CentOS 7安装出现No package python-pip available，可以用以下命令进行安装
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py

#Debian/Ubuntu系统
apt-get -y update
apt-get -y install python-pip</code></pre><p><strong>2、安装git</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install git

#CentOS系统
yum -y install git</code></pre><p><strong>3、编辑Searx</strong></p>
<pre><code>#拉取源码
git clone https://github.com/asciimoo/searx.git
#安装依赖
cd searx
pip install -r requirements.txt
#编辑配置文件
nano searx/settings.yml</code></pre><p>修改名称什么参数，应该都看的懂，自行设置，这里只说下<code>4</code>种参数：</p>
<pre><code>language：为搜索语言，默认en-US，如果你的搜索以中文为主，那就改成zh-CN，当然这个语言在搜索界面也可以设置
port：为监听端口，默认8888，可自行修改。
bind_address：为监控地址，默认为127.0.0.1，如果需要让ip地址能被外网访问，就修改为0.0.0.0，这里建议默认，然后再用域名反代即可。
secret_key：该参数为加密密匙，可自行设置，数值可以在ssh客户端使用openssl rand -hex 16命令生成。</code></pre><p>这里你也可以不用<code>nano</code>编辑器，直接使用命令修改：</p>
<pre><code>#修改language，默认为中文搜索结果
sed -i &apos;s/language : &quot;en-US&quot;/language : &quot;zh-CN&quot;/g&apos; searx/settings.yml
#修改secret_key
sed -i &quot;s/ultrasecretkey/`openssl rand -hex 16`/g&quot; searx/settings.yml
#修改bind_address，改了后就可以使用ip访问了，如果你使用域名的话，可以不修改
sed -i &apos;s/bind_address : &quot;127.0.0.1&quot;/bind_address : &quot;0.0.0.0&quot;/g&apos; searx/settings.yml
#修改port，比如修改成8000
sed -i &quot;s/port : 8888/port : 8000/g&quot; searx/settings.yml</code></pre><p>更多参数设置可以参考→传送门。</p>
<p><strong>4、运行Searx</strong><br>安装<code>screen</code>：</p>
<pre><code>#CentOS系统
yum install screen -y

#Debian/Ubuntu系统
apt-get install screen -y</code></pre><p>后台运行：</p>
<pre><code>screen -dmS searx python searx/webapp.py</code></pre><p>然后使用<code>ip:port</code>访问，如果你的<code>bind_address</code>地址没修改，可能浏览器会访问不了，就需要反代了，方法后面会说。</p>
<p>如果你修改了<code>bind_address</code>地址为<code>0.0.0.0</code>，还打不开媒体界面的话，还需要开启防火墙端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8888 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8888/tcp --permanent
firewall-cmd --reload</code></pre><p>如果你开了端口还不能打开，可能还需要去服务商后台开启对应的端口。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p>这里貌似用官方的<code>Dockerfile</code>文件构建镜像的时候会报错，所以博主自己写了个<code>Dockerfile</code>文件，安装也很快。</p>
<p><strong>Github地址：</strong><a href="https://github.com/iiiiiii1/Docker-Searx" target="_blank" rel="noopener">https://github.com/iiiiiii1/Docker-Searx</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装git</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install git

#CentOS系统
yum -y install git</code></pre><p><strong>3、构建镜像</strong></p>
<pre><code>#拉取源码
git clone https://github.com/iiiiiii1/Docker-Searx
#构建镜像，搜索语言默认已改成中文
cd Docker-Searx
docker build -t searx .</code></pre><p><strong>4、启动镜像</strong></p>
<pre><code>docker run -d --name searx -p 8888:8888 searx </code></pre><p>启动命令被我简化了，详细可参考→传送门，然后使用<code>ip:8888</code>，访问即可，映射端口可自行修改，比如<code>-p 8000:8888</code>。</p>
<h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>这里是建议使用域名反代的，反代可以用<code>Nginx</code>、<code>Apache</code>、<code>Caddy</code>，这里只说宝塔和<code>Caddy</code>。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:8888</code>，再启用反向代理即可。至于启用<code>SSL</code>就不说了，直接在站点配置就可以启用。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;www.southcat.net {
 gzip
 proxy / 127.0.0.1:8888 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:8888 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<p><strong>3、Nginx配置</strong><br>如果你使用其它的，这里就大概发个<code>Nginx</code>反代配置，直接添加到配置文件即可。</p>
<pre><code>#在配置文件里添加
  location / {
      proxy_pass http://127.0.0.1:8888;
      proxy_set_header        Host                 $host;
      proxy_set_header        X-Real-IP            $remote_addr;
      proxy_set_header        X-Forwarded-For      $proxy_add_x_forwarded_for;
      proxy_set_header        X-Remote-Port        $remote_port;
      proxy_set_header        X-Forwarded-Proto    $scheme;
      proxy_redirect          off;
  }</code></pre><p>最后使用的时候，记得在高级设置那里将搜索语言设置成你需要的就行了，不然搜出来的结果可能不会让你满意。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用socat进行单个端口的转发，同时支持tcp和udp</title>
    <url>/1510/</url>
    <content><![CDATA[<p><strong>说明：</strong>由于用<code>iptables</code>经常不成功。所以只能寻求另一种办法，就是用<code>socat</code>工具来完成端口转发，如果你只有少数几个端口要转发的话，那么<code>socat</code>就是比较好的选择了。<code>socat</code>唯一麻烦的地方就是好像我没找到如何转发端口段，只能一个命令一个端口。不过如果只是自用转发少量端口的话还是蛮好用的。</p>
<h2 id="socat安装"><a href="#socat安装" class="headerlink" title="socat安装"></a>socat安装</h2><p>使用命令：</p>
<pre><code>#CentOS系统
yum install -y socat

#Ubuntu或Debian系统
apt-get update
apt-get install -y socat</code></pre><h2 id="socat的使用"><a href="#socat的使用" class="headerlink" title="socat的使用"></a>socat的使用</h2><p><strong>1、转发TCP</strong></p>
<pre><code>nohup socat TCP4-LISTEN:10000,reuseaddr,fork TCP4:1.1.1.1:10000 &gt;&gt; socat.log 2&gt;&amp;1 &amp;</code></pre><p>说明：</p>
<pre><code>TCP4-LISTEN:10000监听ipv4的10000TCP端口。10000改成你自己需要转发的端口
fork TCP4:1.1.1.1:10000`转发到1.1.1.1的10000端口，根据需求修改自行修改ip和端口
nohup后台运行。可以把这个命令写到/etc/rc.local里面开机启动启动。</code></pre><p><strong>2、转发UDP</strong></p>
<pre><code>nohup socat -T 600 UDP4-LISTEN:10000,reuseaddr,fork UDP4:1.1.1.1:10000 &gt;&gt; socat.log 2&gt;&amp;1 &amp;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Syncthing搭建我们的私有同步网盘</title>
    <url>/2121/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Syncthing</code>是一个开源免费的文件夹/文件同步神器，支持<code>Android</code>、<code>Linux</code>、<code>Windows</code>、<code>Mac OS X</code>等系统，可以使我们在<code>2</code>台任何系统任何设备之间，实现文件实时同步，很强大。而且数据很安全，不会存储在你的设备以外的其他地方。所有通信都使用<code>TLS</code>进行保护。所使用的加密包括完美的前向保密，以防止窃听者获得对您的数据的访问权限。很适合我们用来搭建私有同步网盘。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本文只做<code>Linux VPS</code>服务器与<code>Windows</code>电脑之间的同步安装及演示操作。<code>Syncthing</code>官网：点击进入，软件自行下载最新版本即可。</p>
<p><strong>1、VPS安装Syncthing</strong><br>安装<code>Syncthing</code>：</p>
<pre><code>#目前最新版v1.1.4，日后自行修改版本号    
#64位系统下载
wget https://github.com/syncthing/syncthing/releases/download/v1.1.4/syncthing-linux-amd64-v1.1.4.tar.gz
#32位系统下载
wget https://github.com/syncthing/syncthing/releases/download/v1.1.4/syncthing-linux-386-v1.1.4.tar.gz

#解压并删除压缩包
tar xzvf syncthing-linux* &amp;&amp; rm -rf syncthing-linux*.tar.gz
cd syncthing-linux*
cp syncthing /usr/local/bin
cd ~
rm -rf syncthing*</code></pre><p>开启<code>Syncthing</code>：</p>
<pre><code>syncthing</code></pre><p>第一次启动会生成配置，然后给的内网地址我们是进不去的，这时候需要修改成外网地址才行，先使用<code>Ctrl+C</code>退出。</p>
<p>然后编辑<code>/root/.config/syncthing/config.xml</code>文件，将<code>127.0.0.1:8384</code>改成<code>0.0.0.0:8384</code>即可，可以直接使用命令：</p>
<pre><code>sed -i &apos;s/127.0.0.1/0.0.0.0/g&apos; &apos;/root/.config/syncthing/config.xml&apos;</code></pre><p>再次启动<code>Syncthing</code>：</p>
<pre><code>#后台运行该程序
nohup syncthing &amp;</code></pre><p>然后在浏览器访问<code>http://IP:8384</code>，就可以进入<code>Syncthing</code>界面，如果打不开请自行开放<code>8384</code>端口。<br><img src="https://www.southcat.net/usr/picture/Syncthing(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后我们点设置，填好管理用户、密码及其它参数再重启<code>Syncthing</code>即可。<br><img src="https://www.southcat.net/usr/picture/Syncthing(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、Windows安装Syncthing</strong><br><code>Win</code>系统安装<code>Syncthing</code>是非常简单的，直接从官方网站下载对应版本的<code>Syncthing</code>程序，解压打开<code>syncthing.exe</code>，然后会弹出一个窗口，浏览器再打开<code>http://127.0.0.1:8384</code>就可以进入并使用<code>Syncthing</code>了，默认文件夹路径为<code>C:\Users\Administrator\Sync</code>。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先打开其中一个设备的<code>Syncthing</code>界面，并点击右上角<code>操作</code>-<code>显示ID</code>获取设备<code>ID</code>。再到另一个设备的<code>Syncthing</code>界面，点击右下角<code>添加远程设备</code>，输入需要同步的设备<code>ID</code>和共享的文件夹。<br><img src="https://www.southcat.net/usr/picture/Syncthing(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>这时候另一台设备会弹出一个窗口，点击添加设备即可。<br><img src="https://www.southcat.net/usr/picture/Syncthing(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>此时设备添加完成，就可以开始同步文件夹了，也可以在其中一台设备新建/添加其它文件夹<br><img src="https://www.southcat.net/usr/picture/Syncthing(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后同样的，另一台设备也会弹出一个窗口，点击同意添加即可。<br><img src="https://www.southcat.net/usr/picture/Syncthing(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>最后等待片刻，所添加的文件夹都会自动同步完成。<br><img src="https://www.southcat.net/usr/picture/Syncthing(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Tumblr爬虫，结合h5ai创建图库</title>
    <url>/1564/</url>
    <content><![CDATA[<p><code>Tumblr</code>内容丰富，特别是图片和视频。下面利用<code>Tumblr</code>爬虫，结合<code>h5ai</code>目录直读程序，或者其他图床程序，创建图库。</p>
<p>本方法需要一个<code>Python 2.7</code>的环境，<code>CentOS 6</code>升级<code>Python 2.7</code>方法请参考CentOS 6升级Python 2.6至Python 2.7的方法，CentOS 7自带<code>python 2.7</code>，下面使用CentOS 7和<code>python 2.7</code>。</p>
<h2 id="使用tumblr-crawler爬虫"><a href="#使用tumblr-crawler爬虫" class="headerlink" title="使用tumblr-crawler爬虫"></a>使用tumblr-crawler爬虫</h2><p><code>tumblr-crawler</code>爬虫<code>github</code>项目地址：<a href="https://github.com/dixudx/tumblr-crawler" target="_blank" rel="noopener">https://github.com/dixudx/tumblr-crawler</a></p>
<p><strong>1、安装可能使用的依赖</strong></p>
<pre><code>yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel
yum -y install gcc automake autoconf libtool make
yum install gcc gcc-c++
yum -y install readline-devel</code></pre><p><strong>2、安装tumblr-crawler</strong></p>
<pre><code>git clone https://github.com/dixudx/tumblr-crawler.git
cd tumblr-crawler
pip install -r requirements.txt</code></pre><p><strong>3、使用tumblr-crawler下载图片和视频</strong><br>1、在<code>sites.txt</code>中添加<code>tumblr</code>站，用逗号分开，但不需要<code>.tumblr.com</code>后缀。如<code>rat.tumblr.com</code>和<code>rats.tumblr.com</code></p>
<pre><code>rat,rats</code></pre><p>保存后，运行</p>
<pre><code>python tumblr-photo-video-ripper.py</code></pre><p>2、直接下载</p>
<pre><code>python tumblr-photo-video-ripper.py rat,rats</code></pre><p>最后将所有图片和视频均保存在当前路径的与<code>tumblr</code>博客名字相同的文件夹</p>
<h2 id="安装、使用h5ai"><a href="#安装、使用h5ai" class="headerlink" title="安装、使用h5ai"></a>安装、使用h5ai</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用UnblockNeteaseMusic播放网易云音乐客户端无版权歌曲</title>
    <url>/2399/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>UnblockNeteaseMusic</code>是一款可以给你解除网易云音乐海外限制并解锁变灰(无版权)歌曲的工具，让你可以听取客户端任何的歌曲，而不受到限制，此前该类似工具挺多的，不过貌似都不维护或者失效了，这里提到的项目更新很频繁，支持<code>Windows</code>、<code>MacOS</code>、安卓、<code>IOS</code>等设备，所以就分享一下使用方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/UnblockNeteaseMusic(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/UnblockNeteaseMusic(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>使用网易云旧链/<code>QQ</code>/虾米/百度/酷狗/酷我/咕咪/<code>JOOX</code>音源替换变灰歌曲链接(默认仅启用前四)。</li>
<li>为请求增加<code>X-Real-IP</code>参数解锁海外限制，支持指定网易云服务器<code>IP</code>，支持设置上游<code>HTTP</code>/<code>HTTPS</code>代理。</li>
<li>完整的流量代理功能(<code>HTTP</code>/<code>HTTPS</code>)，可直接作为系统代理(同时支持<code>PAC</code>)。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/nondanee/UnblockNeteaseMusic" target="_blank" rel="noopener">https://github.com/nondanee/UnblockNeteaseMusic</a></p>
<p><strong>1、安装Nodejs</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y nodejs git 

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs git -y</code></pre><p><strong>2、运行UnblockNeteaseMusic</strong></p>
<pre><code>git clone https://github.com/nondanee/UnblockNeteaseMusic.git
cd UnblockNeteaseMusic
node app.js</code></pre><p>运行端口默认为<code>8080</code>，需要想修改可以编辑<code>app.js</code>文件的<code>config.port</code>对应的数值，或者使用命令：</p>
<pre><code>#这里默认修改4567，自行调整
node app.js -p 4567</code></pre><p>这里还可以加一个<code>-s</code>参数限制代理范围防止被滥用，也就是仅放行网易云音乐所属域名的请求，不过使用起来的话就受限了，仅支持<code>PAC</code>或<code>Hosts</code>。</p>
<pre><code>node app.js -s</code></pre><p><strong>3、开机自启</strong><br>这里使用<code>Systemd</code>进程守护，只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>等。</p>
<pre><code>#修改下ExecStartPre源码路径即可，然后一起复制到SSH运行
cat &gt; /etc/systemd/system/UnblockNeteaseMusic.service &lt;&lt;EOF
[Unit]
Description=UnblockNeteaseMusic
After=network.target
Wants=network.target

[Service]
Type=simple
PIDFile=/var/run/UnblockNeteaseMusic.pid
WorkingDirectory=/root/UnblockNeteaseMusic
ExecStart=$(command -v node) app.js -p 4567
RestartPreventExitStatus=23
Restart=always

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>启动并开机自启：</p>
<pre><code>systemctl start UnblockNeteaseMusic
systemctl enable UnblockNeteaseMusic</code></pre><p>如果没有<code>Systemd</code>的，比如<code>CentOS 6</code>，<code>Debian 7</code>等，直接使用<code>rc.local</code>，使用命令：</p>
<pre><code>#路径和命令自行修改
sed -i &apos;/exit/d&apos; /etc/rc.local
echo &quot;cd /root/UnblockNeteaseMusic &amp;&amp; node app.js -p 4567&quot; &gt;&gt; /etc/rc.local</code></pre><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、运行镜像</strong></p>
<pre><code>docker run --restart=always --name unmusic -d -p 4567:8080 nondanee/unblockneteasemusic</code></pre><p>运行端口<code>4567</code>，自行修改。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre><code>提示：使用方法可以选择修改Hosts或者设置代理的方式，自己挑选一种比较会的吧。</code></pre><p><strong>1、修改Hosts</strong><br>找到<code>Hosts</code>路径，大致位置：</p>
<pre><code>Windows系统：位于C:\Windows\System32\drivers\etc\hosts
Android系统：位于/system/etc/hosts
Mac系统：位于/etc/hosts
IOS系统：位于/etc/hosts
Linux系统：位于/etc/hosts</code></pre><p>向<code>hosts</code>文件添加两条规则</p>
<pre><code>#将前面参数修改为服务器IP
&lt;Server IP&gt; music.163.com
&lt;Server IP&gt; interface.music.163.com</code></pre><p>使用此方法必须监听<code>80</code>端口，也就是使用<code>-p 80</code>参数指定<code>80</code>端口运行。</p>
<p><strong>2、设置代理</strong><br>安卓系统：</p>
<pre><code>#设置方法
手机设置 &gt; WLAN &gt; 网络设置 &gt; 高级选项 &gt; 代理

一般安卓手机设置代理类型的时候分2种，手动代理和自动代理，有的手机可能只有手动代理，大致设置如下：
手动代理 &gt; 只需要填上你的服务器IP和端口就可以了。
自动代理 &gt; 填上你的PAC地址就行了，地址：http://&lt;Server Name:PORT&gt;/proxy.pac，修改为你的ip、运行端口。

如果你发现设置后不能使用或者出现其它网络问题，带了-s参数的不妨去掉后再试试。</code></pre><p><code>Windows</code>系统：</p>
<pre><code>#设置方法
网易云客户端设置 &gt; 工具 &gt; 自定义代理 &gt; HTTP代理

这里只需要填上你的服务器ip和端口，保存即可。</code></pre><p><code>IOS</code>系统：<br>这里很久前有人要博主详细说下<code>IOS</code>使用方法，对于不会设置的是挺复杂的，所以就截图说下，需要借助<code>Shadowrocket</code>工具。</p>
<pre><code>#设置方法
打开小火箭 &gt; 添加节点(类型选择HTTP，输入你的ip和端口，随便备注下，右上角完成即可) &gt; 编辑配置 &gt; 添加规则(类型选择USER-AGENT，选项选择网易云，用户代理输入NeteaseMusic*)，保存即可。</code></pre><p><img src="https://www.southcat.net/usr/picture/UnblockNeteaseMusic(3).png" alt="请输入图片描述" title="请输入图片描述"><br>像<code>macOS</code>啥的，没设备就不测试了，直接列举下作者提供方法。</p>
<pre><code>UWP    Windows设置 &gt; 网络和Internet &gt; 代理
Linux    系统设置 &gt; 网络 &gt; 网络代理
macOS    系统偏好设置 &gt; 网络 &gt; 高级 &gt; 代理</code></pre><p>设置好了后，你会发现客户端之前因为版权问题不能听的都可以听了，然后建议搭建的时候，选择的服务器网络延迟尽量好点，不然播放会很慢。</p>
<h2 id="问题补充"><a href="#问题补充" class="headerlink" title="问题补充"></a>问题补充</h2><p>1、如果设置好了后，打开客户端提示网络问题的话，稍等片刻就好了，如果过会还是不行，就检查下操作啥的，比如防火墙。</p>
<p>一般情况下<code>CentOS</code>防火墙还需要开启运行端口，比如博主用的<code>4567</code>，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 4567 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=4567/tcp --permanent
firewall-cmd --reload</code></pre><p>宝塔的话可以直接面板左侧-安全-开启对应的端口即可。</p>
<p>2、上面只提到了安卓<code>WLAN</code>下的使用方法，这里再补充个手机数据下的使用方法，建议配合<code>Xndroid</code>工具，最新版<code>APP</code>下载地址→传送门，大致设置如下：</p>
<pre><code>打开Xndroid &gt; 点击左侧Fqrouter &gt; 添加个人代理(只需要填服务器ip和端口即可) &gt; 代理列表配置项(将高级设置里面全部关掉) &gt; 软件右上角代理设置(只代理网易云音乐)</code></pre><p>设置完成后你还可以在右上角启动设置中，关掉<code>xx-net</code>和<code>fqrouter</code>里面的所有启动项，这样开启软件速度也会快很多。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Uptime Robot搭建我们私人的服务器/网站监控系统</title>
    <url>/2223/</url>
    <content><![CDATA[<p><strong>说明：</strong>很久前博主就介绍过<code>Uptime Robot</code>，查看：使用Uptime Robot的API搭建网站监控服务，不过需要在自己服务器上搭建，其实我们可以直接使用他们提供的系统，不需要服务器，你只需要提供一个域名解析<code>CNAME</code>记录即可，自带<code>https</code>，<code>Web</code>界面也很有逼格。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Uptime Robot</code>是国外比较知名免费监控工具，可以监控<code>HTTP(s)</code>、<code>Ping</code>、端口、关键词，查看监控服务器/网站的正常运行时间，停机时间和响应时间。可免费监控<code>50</code>个网站/服务器，岩机的时候支持短信，邮件，推特，<code>TG</code>等推送，很强大。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Uptime_Robot(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Uptime_Robot(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、添加服务器/网站</strong><br>首先进入官网：<a href="https://uptimerobot.com申请账号，再进入后台，点击左上角的`Add" target="_blank" rel="noopener">https://uptimerobot.com申请账号，再进入后台，点击左上角的`Add</a> New Monitor<code>按钮。  
![请输入图片描述](https://www.southcat.net/usr/picture/Uptime_Robot(3).png &quot;请输入图片描述&quot;)  
再添加我们需要监控的服务器/网站类型。添加的时候，我们选择的警报通知类型可以在后台右上角</code>Alert Contacts`里添加。<br><img src="https://www.southcat.net/usr/picture/Uptime_Robot(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Unix Sockets的Redis作为对象缓存来加速wordpress站点</title>
    <url>/1540/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>当 Redis 走 Unix Sockets 是在 OSI 模型中而没有哦组 TCP/IP，可以实现约 25% 的性能提升。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>以 Ubuntu 16.04 LTS 为例，</p>
<p>一、安装 Redis</p>
<pre><code>apt-get install redis-server</code></pre><p>二、查看目前 Redis 运行在那个用户上</p>
<pre><code>root@host:~# sudo ps aux | grep redis
sudo: unable to resolve host www.xx.com
redis    29409  0.0  0.8  37224  8796 ?        Ssl  10:43   0:00 /usr/bin/redis-server 127.0.0.1:6379</code></pre><p>可见 Redis 运行在 redis 上</p>
<p>三、添加到 <code>Apache</code>、<code>Nginx</code> 和 <code>PHP-FPM</code> 所在的用户组，一般来说软件源安装的都是 <code>www-data</code>，编译的都是 <code>www</code>，但是不绝对，我这里是在 <code>www-data</code></p>
<pre><code>usermod -g www-data redis</code></pre><p>四、创建 unix socket 所在文件夹</p>
<pre><code>mkdir -p /var/run/redis/</code></pre><p>五、赋予权限</p>
<pre><code>chown -R redis:www-data /var/run/redis</code></pre><p>六、修改配置文件，我的是在 <code>/etc/redis/redis.conf</code><br>将 <code>unixsocket</code> 和 <code>unixsocketperm</code> 前的 <code>#</code> 去掉，并将 <code>unixsocketperm</code> 的值由 <code>700</code> 改为 <code>777</code>，否则将不能清理缓存</p>
<pre><code># Specify the path for the Unix socket that will be used to listen for
# incoming connections. There is no default, so Redis will not listen
# on a unix socket when not specified.
#
unixsocket /var/run/redis/redis.sock
unixsocketperm 777</code></pre><p>七、重启</p>
<pre><code>service redis-server restart</code></pre><p>八、如何正常运行的话，通过 <code>ls -lh</code> 命令查看会返回如下结果：</p>
<pre><code>root@host:~# ls -lh /var/run/redis
total 4.0K
-rw-r--r-- 1 redis www-data 6 Mar 14 10:56 redis-server.pid
srwx------ 1 redis www-data 0 Mar 14 10:56 redis.sock </code></pre><h2 id="WP设置"><a href="#WP设置" class="headerlink" title="WP设置"></a>WP设置</h2><p>一、安装 Redis Object Cache 插件</p>
<p>二、在 <code>wp-config.php</code> 文件的 <code>&lt;?php</code> 后添加，顺序不能变：</p>
<pre><code>define(&apos;WP_REDIS_PATH&apos;, /var/run/redis/redis.sock
define(&apos;WP_REDIS_SCHEME&apos;, unix););</code></pre><p>三、然后 Redis Object Cache 插件就会用走 Unix Socket 的 Redis 作为对象缓存而不是 TCP/IP 的了</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用vnstat来查看linux服务器带宽流量统计</title>
    <url>/1515/</url>
    <content><![CDATA[<p><strong>说明：</strong>因为很多vps或者服务器都是限流量的，但是又很多服务商并没有提供详细的流量表，比如每天的流量表，所以肯定有人很想知道自己服务器到底跑了多少流量。vnstat就是一个很好用的服务器流量统计命令。下面就来看2张截图。</p>
<p><strong>统计天数：</strong><br><img src="https://www.southcat.net/usr/picture/vnstat(1).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>统计月份：</strong><br><img src="https://www.southcat.net/usr/picture/vnstat(2).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>统计说明：</strong>estimated是预估使用量的意思。最后一列avg.rate是平均使用带宽。rx是接收流量（inbound），tx是发送流量（outbound）</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>centos需要先安装epel源后才能使用yum来安装</p>
<pre><code>yum install epel-release -y &amp;&amp; yum install -y vnstat</code></pre><p>ubuntu、debian的话应该直接<code>apt-get</code>就可以了</p>
<h2 id="创建监控数据库"><a href="#创建监控数据库" class="headerlink" title="创建监控数据库"></a>创建监控数据库</h2><pre><code>vnstat -u -i eth0</code></pre><p>这里的<code>eth0</code>可以改成你需要的网卡</p>
<h2 id="启动服务并设置开机启动"><a href="#启动服务并设置开机启动" class="headerlink" title="启动服务并设置开机启动"></a>启动服务并设置开机启动</h2><pre><code>service vnstat start
chkconfig vnstat on</code></pre><h2 id="流量查看命令"><a href="#流量查看命令" class="headerlink" title="流量查看命令"></a>流量查看命令</h2><p><strong>看每天的流量统计命令：</strong></p>
<pre><code>vnstat -d

vnstat -m</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用virt-what判断VPS虚拟化技术</title>
    <url>/1445/</url>
    <content><![CDATA[<p><strong>说明：</strong>VPS拥有多种虚拟化技术，常见的VPS虚拟化架构有OpenVZ、Xen、KVM这三种，我们可以用“virt-what”这个工具，判断和参考自己的VPS虚拟化架构。</p>
<p><strong>1、下载工具</strong></p>
<pre><code>wget http://www.southcat.net/usr/down/virt-what-1.11.tar.gz</code></pre><p><strong>2、安装</strong></p>
<pre><code>tar zxf virt-what-1.11.tar.gz   #解压缩包
cd virt-what-1.11               #进入目录
./configure                     #按默认设置
make &amp;&amp; make install            #编译并安装


virt-what</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用VPS服务器自建SpeedTest客户端网络测速页面</title>
    <url>/1782/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>该页面程序修改自<code>adolfintel</code>的speedtest项目适用于<code>IDC</code>服务商服务器或者自己的<code>VPS</code>自建<code>speedtest</code>，供客户端对服务器进行网络测试，程序轻便<code>5KB</code>。</p>
<p>目前很多主机商用的是<code>Looking Glass</code>，搭起来稍微有些繁琐，如果嫌麻烦，可以试试我优化的这个程序。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/speedtest_lite(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/speedtest_lite(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ol>
<li>根据<code>example3.html</code>原版汉化精简界面。</li>
<li>优化细节排版，参照beta.speedtest.net <code>css</code>稍作美化。</li>
<li>如果你喜欢别的样式可以根据<code>Github</code>项目中的其他<code>example</code>页面自行美化修改。</li>
</ol>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Speedtest Lite C2S：</strong>点击下载<br><strong>原版Github：</strong><a href="https://github.com/adolfintel/speedtest" target="_blank" rel="noopener">https://github.com/adolfintel/speedtest</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用VPS采集1024贴图区，并自动发布到WordPress博客</title>
    <url>/1993/</url>
    <content><![CDATA[<p><strong>说明：</strong>本教程使用的是基于<code>Python3</code>爬虫，配合<code>Chevereto</code>图床一起使用，这里说下搭建教程，且只适用于国外的服务器。</p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>首先你得有一个<code>WordPress</code>博客，不会搭建的可以在本博客搜索关键词，找到教程。然后还得有一个<code>Chevereto</code>图床，搭建方法：一款强大好用的图床程序：chevereto安装教程，搭建好了后需要去后台关闭防洪保护。</p>
<p><strong>1、安装Python 3.6</strong></p>
<pre><code>#检查系统是否有Python3
python3 -V

#安装Python3
#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</code></pre><p><strong>2、安装Python所需库</strong></p>
<pre><code>pip3 install requests
pip3 install pymysql</code></pre><p><strong>3、下载并编辑爬虫</strong></p>
<pre><code>wget https://www.southcat.net/usr/shell/Python3/1024_wp.py
nano 1024_wp.py</code></pre><p>修改如下：</p>
<pre><code>1、设置连接的Mysql数据库信息，在代码第11行。
2、还有要修改第26、28行的图床Key，和图床url，只支持chevereto。
3、第80行文章分类ID（默认未分类）。
4、保留了采集一次后停止60s后再采集，如果不需要，删除第121行即可。</code></pre><p><strong>4、运行爬虫</strong></p>
<pre><code>chmod +x spider.py
python3 spider.py</code></pre><p>建议配合<code>screen</code>一起使用，参考：使用screen来实现多任务不断线操作命令。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用Xshell连接VPS后延迟过高或者连接不上的解决办法</title>
    <url>/1612/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们有时候用<code>Xshell</code>连接<code>vps</code>后，运行命令会有很大的延迟，或者服务器<code>ip</code>被墙，导致连接不上去，这时候我们就可以利用<code>55</code>来解决这个问题了。</p>
<p><strong>具体设置步骤：</strong><br><img src="https://www.southcat.net/usr/picture/Xshellss.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>修复官方Dplayer-Typecho插件不能连接弹幕API后端的方法</title>
    <url>/2332/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主之前发过<code>DPlayer</code>弹幕后端搭建教程→传送门，也说了下<code>HTML</code>代码的使用方法，不过对于<code>Typecho</code>博客来说，插件不能用会很麻烦，加上看见很多使用<code>Typecho</code>的同学对这个还是有点兴趣的，所以就咨询了下某大佬插件修复方法，貌似是播放器版本没更新到最新，然后在这里就说下，有需求的可以用下。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><pre><code>官方插件地址：https://github.com/MoePlayer/DPlayer-Typecho
修复后的地址：https://github.com/menhood/DPlayer-Typecho</code></pre><p><strong>1、直接使用</strong><br>去提供修复后的<code>Github</code>地址下载插件，然后将文件夹名改为<code>DPlayer</code>上传到<code>usr/plugins</code>目录启用即可。</p>
<p><strong>2、自行修复</strong><br>如果你不放心使用修复后的插件，那么你可以自行替换文件修复，修复方法如下：</p>
<pre><code>1)下载官方提供的旧版本插件，插件地址见上面！
2)然后下载该地址的4个文件：https://github.com/MoePlayer/DPlayer/tree/master/dist
3)将下载的文件复制并替换旧插件dplayer/dist目录的4个文件即可。</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>由于插件地址使用的弹幕服务器地址默认为官方的，貌似服务器出了问题不能用，这里可以使用博主搭建的<code>API</code>服务器，地址为：<code>https://dplayer.southcat.net/</code>，当然你也可以使用博主提供的方法自行搭建<code>API</code>，教程查看→传送门。</p>
<pre><code>提示：由于特殊原因，博主将下面所有例子最开始的[换成了(，到时候使用的时候，将开头的(换成[，即被[]包住即可。</code></pre><p>使用方法如下，直接贴近文章里即可!</p>
<pre><code>#默认不自动播放，弹幕开启
(dplayer url=&quot;http://xxx.com/xxx.mp4&quot; pic=&quot;http://xxx.com/xxx.jpg&quot;/]

#关闭弹幕
(dplayer url=&quot;http://xxx.com/xxx.mp4&quot; pic=&quot;http://xxx.com/xxx.jpg&quot; danmu=&quot;false&quot;/]

#开启自动播放
(dplayer url=&quot;http://xxx.com/xxx.mp4&quot; pic=&quot;http://xxx.com/xxx.jpg&quot; autoplay=&quot;true&quot;/]

#添加额外弹幕源(例：bilibili弹幕)，这里和作者的文档有点区别，就是需要在api后面加v3。
(dplayer url=&quot;http://xxx.com/xxx.mp4&quot; pic=&quot;http://xxx.com/xxx.jpg&quot; autoplay=&quot;true&quot; addition=&quot;https://api.prprpr.me/dplayer/v3/bilibili?aid=7286894&quot;/]</code></pre><p>当然，如果你想假装很多人看的样子，那可以添加额外的<code>bilibili</code>弹幕，这时候不管你放什么视频，<code>B</code>站弹幕都会在上面密密麻麻的滚动。</p>
<p>要是有时候不生效，可以对斜杠<code>/</code>转义一下，比如：</p>
<pre><code>(dplayer url=&quot;http:\/\/xxx.com\/xxx.mp4&quot; pic=&quot;http:\/\/xxx.com\/xxx.jpg&quot;/]</code></pre><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><pre><code>#这里直接用的B站一个视频，顺便把弹幕也给拉过来了，假装看的人很多吧。</code></pre><p>dPlayerOptions.push({“id”:”a89363227cf7f1f6a7be6ab3ecb3d5f4”,”autoplay”:false,”theme”:”#FADFA3”,”video”:{“url”:”https:\/\/<a href="http://www.southcat.net\\/usr\\/dplayer\\/yyy.flv&quot;,&quot;pic&quot;:&quot;https:\\/\\/www.southcat.net\\/usr\\/dplayer\\/yyy.png&quot;},&quot;danmaku&quot;:{&quot;id&quot;:&quot;d8a5b5d2522dd8279d2c22585ac47619&quot;,&quot;token&quot;:&quot;299b6a5543616b5508c1ce8616ed530b&quot;,&quot;api&quot;:&quot;https:\\/\\/dplayer.southcat.net\\/&quot;,&quot;addition&quot;:\[&quot;https:\\/\\/dplayer.southcat.net\\/v3\\/bilibili?aid=7100521&quot;\]}}" target="_blank" rel="noopener">www.southcat.net\\/usr\\/dplayer\\/yyy.flv&quot;,&quot;pic&quot;:&quot;https:\\/\\/www.southcat.net\\/usr\\/dplayer\\/yyy.png&quot;},&quot;danmaku&quot;:{&quot;id&quot;:&quot;d8a5b5d2522dd8279d2c22585ac47619&quot;,&quot;token&quot;:&quot;299b6a5543616b5508c1ce8616ed530b&quot;,&quot;api&quot;:&quot;https:\\/\\/dplayer.southcat.net\\/&quot;,&quot;addition&quot;:\[&quot;https:\\/\\/dplayer.southcat.net\\/v3\\/bilibili?aid=7100521&quot;\]}}</a>);<br>如果该视频播放器不显示的话，刷新一下就行了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>修改phpMyAdmin导入MySQL数据库文件大小限制</title>
    <url>/1633/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候网站内容多了，数据库也自然增大了，我们在迁移网站的时候发现数据过大，导致导入数据库超过了<code>phpmyadmin</code>自身的限制，无法直接导入，一般会出现如下提示：<code>”No data was received to import. Either no file name was submitted, or the file size exceeded the maximum size permitted by your PHP configuration. See FAQ 1.16.”</code>不过我们可以修改<code>phpmyadmin</code>导入文件的大小限制来实现。</p>
<p>这里说下2种方法，一般第一种就可以了，如果不行，就进行第二步，不过虚拟主机用户是无法修改这些文件的，如果数据库文件太大，只能单表导出。</p>
<p><strong>一、修改php.ini文件</strong><br>1、查找<code>post_max_size</code>，指通过表单<code>POST</code>给<code>PHP</code>的所能接收的最大值，包括表单里的所有值，默认为<code>8M</code>，看你自己需要进行改变。<br>2、查找<code>File Uploads</code>，首先确认<code>file_uploads = on</code>;是否允许通过<code>HTTP</code>上传文件的开关，默认为<code>ON</code>即是开。<br>3、查找<code>upload_max_filesize</code>;即允许上传文件大小的最大值。默认为<code>2M</code>。</p>
<p>如果要上传<code>&gt;8M</code>的文件，那么只设置上述四项还不定一定可以。最好对下面的参数也进行设置：</p>
<pre><code>max_execution_time = 600;每个PHP页面运行的最大时间值(秒)，默认30秒。
max_input_time = 600;每个PHP页面接收数据所需的最大时间，默认60秒。
memory_limit = 8M;每个PHP页面所吃掉的最大内存，默认8M。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>使用WordPress一些常用技巧</title>
    <url>/1541/</url>
    <content><![CDATA[<p>以下代码片段，添加至自己的主题模板函数(functions.php)</p>
<p><strong>添加登陆界面背景,每天从bing更新</strong></p>
<pre><code>/**
 * Login head.
 */
function custom_login_head(){
$str=file_get_contents(&apos;https://global.bing.com/HPImageArchive.aspx?idx=0&amp;n=1&apos;);
if(preg_match(&quot;/&lt;url&gt;(.+?)&lt;\/url&gt;/ies&quot;,$str,$matches)){
$imgurl=&apos;https://global.bing.com&apos;.$matches[1];
    echo&apos;&lt;style type=&quot;text/css&quot;&gt;body{background: url(&apos;.$imgurl.&apos;);width:100%;height:100%;background-image:url(&apos;.$imgurl.&apos;);-moz-background-size: 100% 100%;-o-background-size: 100% 100%;-webkit-background-size: 100% 100%;background-size: 100% 100%;-moz-border-image: url(&apos;.$imgurl.&apos;) 0;background-repeat:no-repeat\9;background-image:none\9;}&lt;/style&gt;&apos;;
}}
add_action(&apos;login_head&apos;, &apos;custom_login_head&apos;);</code></pre><p><strong>保护wp-admin目录</strong></p>
<pre><code>/**
 * Protected WP-Login.
 */
function login_protection(){
 if($_GET[&apos;key&apos;] != &apos;Login&apos;)header(&apos;Location: https://xx.com/&apos;);
}
add_action(&apos;login_enqueue_scripts&apos;, &apos;login_protection&apos;);</code></pre><p><strong>移除WordPress版本号</strong></p>
<pre><code>/**
 * Remove Version.
 */
remove_action( &apos;wp_head&apos;, &apos;wp_generator&apos; ) ;
remove_action( &apos;wp_head&apos;, &apos;wlwmanifest_link&apos; ) ;
remove_action( &apos;wp_head&apos;, &apos;rsd_link&apos; ) ;</code></pre><p><strong>禁止WordPress更新</strong></p>
<pre><code>/**
 * Close update.
 */
remove_action(&apos;admin_init&apos;, &apos;_maybe_update_core&apos;);
remove_action(&apos;admin_init&apos;, &apos;_maybe_update_plugins&apos;);
remove_action(&apos;admin_init&apos;, &apos;_maybe_update_themes&apos;);
add_filter(&apos;pre_site_transient_update_core&apos;, create_function(&apos;$a&apos;, &quot;return null;&quot;));
add_filter(&apos;pre_site_transient_update_plugins&apos;, create_function(&apos;$a&apos;, &quot;return null;&quot;));
add_filter(&apos;pre_site_transient_update_themes&apos;, create_function(&apos;$a&apos;, &quot;return null;&quot;));


/**
 * Remove their logo 
 */
function annointed_admin_bar_remove() {
 global $wp_admin_bar;
 $wp_admin_bar-&gt;remove_menu(&apos;wp-logo&apos;);
}
add_action(&apos;wp_before_admin_bar_render&apos;, &apos;annointed_admin_bar_remove&apos;, 0);</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>修改SSH端口+禁止ROOT登陆</title>
    <url>/1483/</url>
    <content><![CDATA[<p>其实本身<code>Linux</code>已经很安全了，但是如果密码设置的不够复杂，如果说小写+数字共12位以下，你的<code>SSH</code>还用的默认端口，那强力一点的黑客用不上半小时，就能暴力破解你的密码。所以，最好的方法就是修改掉<code>SSH</code>的端口。</p>
<p>一、修改文件：<code>/etc/ssh/sshd_config</code></p>
<pre><code>Port 22 #在第三行或第四行，如果前面有井号，请删除，修改为65534以下即可</code></pre><p>可在远程连接中用<code>vi</code>命令，或<code>sftp</code>下载到本地修改，修改后使用以下命令重启<code>ssh</code>服务</p>
<pre><code>#CentOS系统
service sshd restart
#Debian/Ubuntu系统
service ssh restart</code></pre><p>二、更加安全的设置，禁止<code>ROOT</code>登陆，采用小号登陆再切换<code>ROOT</code>（此方法不能用<code>SFTP</code>上传文件）</p>
<pre><code>useradd rats #新建一个小号
passwd rats #给小号设置密码，需要输入完全相同的二次，注意提示
vi /etc/ssh/sshd_config #修改的文件还是这个
PermitRootLogin yes #把yes，改成no，保存退出，并重启SSH服务（上面有重启命令）</code></pre><p>切记，如果没有新建小号，或小号密码设置错误，你又禁了<code>ROOT</code>，那你只能重启系统或回滚快照，再也登陆不了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>免费的Linux服务器管理面板：宝塔6.2正式版发布</title>
    <url>/1655/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>宝塔<code>Web</code>端管理面板，支持一键创建网站、<code>FTP</code>、数据库、<code>SSL</code>；安全管理，计划任务，文件管理，<code>PHP</code>多版本共存及切换；自带<code>LNMP</code>与<code>LAMP</code>等等很多功能，支持<code>CentOS</code>、<code>Ubuntu</code>、<code>Debian</code>、<code>Fedora</code>，目前很多人在使用。</p>
<p><strong>官网：</strong><a href="https://www.bt.cn" target="_blank" rel="noopener">https://www.bt.cn</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre><code>#Centos/Redhat/Fedora
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh

#Debian/Ubuntu
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>免费申请谷歌G Suite套件、并获取无限空间Google Drive</title>
    <url>/2127/</url>
    <content><![CDATA[<p><strong>说明：</strong>前两天就看到有大佬分享免费获取谷歌<code>G Suite</code>套件的方法，可以让我们获得无限容量的<code>Google Drive</code>，只是博主感觉随时会翻车就没水到博客，不过刚刚试了下，还可以申请，就分享下，或许不会翻车，不过目前千万别用来放重要的资料，当成玩具就好了。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>目前该方法好像已失效。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>注册账号：点击进入，填写后提交注册，且注册的时候需要梯子。</p>
<p>然后点击上面的其他，选择个人资料，在最底下勾选<code>申請Google教育帳號服務</code>，基本秒批。</p>
<p>最后谷歌<code>gsuite</code>账号是<code>用户名@huayuworld.org</code>，密码就是你账户密码。</p>
<p>建议只玩玩<code>Google Drive</code>就行了，其它可以不用管。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>免费获得一年的21TB OneDrive和Microsoft Office 365企业版</title>
    <url>/2181/</url>
    <content><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>微软官方的活动，现在申请<code>Office 365</code>开发者计划，可以获得为期一年的免费<code>Office 365</code>企业版（价值<code>100</code>美元）。最高可获取<code>21TB</code>的<code>OneDrive for Business</code>存储空间，<code>1TB</code>用于管理员帐户，<code>5TB</code>用于<code>4</code>个子账户，申请了后我们就可以用来挂载到<code>VPS</code>服务器，进行离线<code>BT</code>下载或用于其它用途了。</p>
<h2 id="申请"><a href="#申请" class="headerlink" title="申请"></a>申请</h2><p>1、先访问申请地址：<a href="https://dev.office.com/devprogram，点击立即加入，再登录微软账户。" target="_blank" rel="noopener">https://dev.office.com/devprogram，点击立即加入，再登录微软账户。</a><br><img src="https://www.southcat.net/usr/picture/free_office(1).png" alt="请输入图片描述" title="请输入图片描述"><br>2、再填写国家，公司等信息后，再填写一个表，表的话自己看着填。<br><img src="https://www.southcat.net/usr/picture/free_office(2).png" alt="请输入图片描述" title="请输入图片描述"><br>3、设置订阅信息，输入邮箱信息，密码，再验证电话即可。<br><img src="https://www.southcat.net/usr/picture/free_office(3).png" alt="请输入图片描述" title="请输入图片描述"><br>如果你卡在验证码这步，也就是获取不了验证码，使用梯子解决下。<br><img src="https://www.southcat.net/usr/picture/free_office(4).png" alt="请输入图片描述" title="请输入图片描述"><br>然后就申请成功了。<br><img src="https://www.southcat.net/usr/picture/free_office(5).png" alt="请输入图片描述" title="请输入图片描述"><br>4、等待几分钟，你就可以收到邮件了。<br><img src="https://www.southcat.net/usr/picture/free_office(6).png" alt="请输入图片描述" title="请输入图片描述"><br>再点击邮件给的链接，使用之前设置的邮箱密码登录就可以进行后台操作了。<br><img src="https://www.southcat.net/usr/picture/free_office(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>在创建新用户之前，您应该在“存储设置” 页面上编辑<code>1024</code>到<code>5120</code>的默认<code>OneDrive</code>存储 。要下载<code>Office 365</code>软件包，您需要在此处添加产品许可证 。</p>
<p>如果你要修改全局管理员和已存在用户<code>OneDrive</code>存储大小，可以查看该教程：Microsoft Office365 E3 MSDN全局管理员修改自身和用户OneDrive存储大小方法。</p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>Aria2+Aria2Ng+OneIndex一键安装脚本，下载后自动上传至OneDrive</li>
<li>VPS使用GDList挂载Google Drive和OneDrive网盘，支持多个同时挂载</li>
<li>在Debian/Ubuntu上使用rclone挂载OneDrive网盘</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>免费申请一年期限的AlphaSSL泛域名证书</title>
    <url>/2451/</url>
    <content><![CDATA[<p><strong>说明：</strong>目前基本上找不到免费的泛域名<code>SSL</code>证书申请渠道了，除了<code>3</code>个月的<code>Let’s Encrypt</code>，不过时长有点短，这里萌咖大佬就写了个<code>AlphaSSL</code>泛域名证书申请接口，申请后的证书有效时长为<code>1</code>年，可以给主域名及任意一个子域名使用，这里就说下申请方法，有需求就上。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2020.3.14】
从3.16开始，每偶数号均送1到2个码，留言即可，我会随机发送到你邮箱，先到先得，请使用真实邮箱留言，且不能重复留言领取。

【2019.8.28】
签发已支持ECC加密，新增15个码子。

【2019.8.30】
更新辅助签发，使签发更方便，方法可看文章后面，新增15个码子。</code></pre><h2 id="签发码"><a href="#签发码" class="headerlink" title="签发码"></a>签发码</h2><pre><code>提示：为了防止滥用，所以签发是需要签发码的，这里会免费提供签发码，也会经常随机更新新的码。</code></pre><p><code>AlphaSSL Apply Token</code>如下：</p>
<pre><code>C28E6F5C6414C2EF2B731FC765FCB0D2
ABB11118CA1E5584A387F4AAD10CD6BA
C1ACB129AD40D9915895E21602C3AD3F
8A44E022B7AF6BDDD688A1E4A37A9C35
496D79B5E89AFB4CC14D55E0826C1F1D
A3BFD28A87639ED52CD903B61EFCCBC4
9984DDBE84CD01D3D6F447361D57726F
E35AC4ABDDB9BC1AAF3D21F30BCE7A0F
22DCDC835A020970DC58AF61D3A0713E
BC9A2EEECB42305482C55EB9400E891F
5EE524D551A86E0D7A4AA3BE447CF2A9
C3347E2CB91C5E6E3E298F326E58FBF1
5F3A4B7E725EEE103EDD4B7C56100B27
23468A884F0B120E7200E3F53D203F85
72669CC1A0A3C105FB8A0C5A38E50F51
0E856D0395240AC0E51D8EA34C53B675
642B5CF4D03799F1F9411B397EF3EFFB
524381747C1AA9C8070DD9B8945E9191
60B188731D6585B632863C7A0B063316
90F60A98CBF234B83CB17778A9D5152A

#8.28新增
E63051E08DFC90EF328CFD2E3CFEE352
58903EA7ED2A5ADD28CAE8E0365EB555
3000D5188A8F60C289DAB55D96E5F852
0D47B08A6862F4C5BD7FE2A2E468F2FB
72227B8177CA7642E3876438FBC32089
9C7EAC0474B4A9A74891BC77CA026F6E
511A973559A58AD61C6A4745748445CB
EB6CDD1A5133E50AE093DE46240888BE
7BB176EE0FBD73ED8CBFBD5584AB4B86
9EF47C94C94B52B56269BF818146B1D3
9000E8CC67C1EE1425037EB8DF9D881D
1BFA3809F85B7B3BEEAE36D211D720D8
E11F334AD22EF21448BA7D16C75C1B01
4856D5D1C575560BC2F48F299CA85B2E
9844378A0A7BF991605FB3EF64FBCB97

#8.30新增
C02C39B5DC66E291B9D58B1EBAA52B7E
654C5E7E480B39D677CAA260F440E821
A917F8F72A3E525912AD0AE2F90C5888
1ACEE80193B2A781EF7B30AF1F49468A
0BCF0A7B75B7170AA3380EBB218AC057
6ABC7AD16BB37AB7123E3F1CCAB099BC
0539F82ED413D8CA992FC0FB6BE5DCF0
78B081B742452FAF1FDFF1F437A478F2
419AF3543ADAFE7A0AB0008305753517
E3820037BFEBD7235AD024735CB04A8F
CB4F697A35532CB5110E7D5465F7A84E
F6795570B905BDF33A53BF3A0791A4D0
0E40138BB06D09CBDDAD369AA3B33827
A0F2A5139B865CAF77190BD1F90370AD
746B26AD507C8629678651FF920358A1

#9.2新增
BFAF974C6C84DAD26820E60ECE856898
6DD19D980D4DA866B0CD29D2CB28B57B
0A94361D1A7EEB97F4296A0F540FD41B
5055342AF24BF358BA31965CEB40887D
3E9CB566797BED19275BBC7B161E55B9
4A6BC26735D1C5E006D566166DB3DDE2
2D8E670E72E46E03659E5DF1067E37A7
2B2532ADB83A8BE913047D6355BE985C
90CBF554697F2D8C02901F34A230C275
A9CA87C6E7030ED9D8ABE326DDE1C731

#9.8新增
9CEED5E7DB4314AF5F44B2C96E9D8403
019C64BDAE42358EA0D85A01C161495B
9321EE54F13D4972FF71A56A8E8ACFEB
2775BE2AFF1EB5FB9A43BCFC79F7B2EF
4CDC3229842B6ADD57A52472F9EBDB47

#9.12新增
395E7A25D2174BC54E78FE6B39A530E1
5A8BEEE64ADA90A409222529A50002AD
1175C17FBDB41C2EA0272EF5C90D8D68
A7EA214772692573BC250B7341696D9E
EDD711560BA1BFBDEF590B3A6B870E54
C1F2E11AC4F97AF8DEBAF9232419E158
E128DEB5DD3E966F5D13AB8946EAFF2B
97DBC3A39D815121298D2E5CF574A772

#9.19新增
F5037751FBC4010BB30D1E48CBA8AAA6
19B0B8D00CAA6C294BF59557BBA3B334
A1D133A5E13F98487BE2FE1D3F0030B7
7250E618171B6B2F0A32586C9BCADD81
087073A6EF3ED8CC4FCB826093DC1F74
8A506894078128CA153764134FBA28C0
29A697554EB8880B7B64469C68446F1D
2109CE10BDEF3FEA4BF1F85C10E9262B
28619C487681530FAC7DD76A3B3FD4AA
ED94DDCC35F3F7D9A2D64AC31EF75878

#9.26新增
3E6B28C9DDA69C710A2A81B08787DCF5
D09A164225BE817825EACF76482D8968
D3780289C9FD7558E6C656E59199203F
0EA847A41C3F37872BD1A8EC265771AB
433A093AD5459110094E854F48E1AB9E

#9.30新增
9C4A48A7F842A254B9F28392247030EF
456A181A6BBC9F8146522DB5D427EDE6
E72229500397D8D2269695418FE64508
ECF83A157A185610346EEBC16043DA6A
40F6F31E416AA0373CB6B0F1FFBFC20A
C6451E81A038FAE2DC93D96ADE19A534

#10.6新增
8E3F3DFD8527A9D76F5041676D9913CA
046A1B3439B52C11AD9FDE128468EB81
063166A6F3B25B2FC8BFDBE4ED758C11
498DA21B145978DA164D93F77E4FF3DB
9FB552B115C40C7679F458799449F1F7

#10.8新增
6DD8A563EF120B5B3042F96BE368CFD0
DA4FC9912682C430997602EA9C02A323
1F255FE0E2F804F64243F6BA6D195238
CC8A97A02101051A90A9598A16E1BF92
67C57C66A8086572D55E983106DA1B3E

#10.10新增
02EA692234347EDB37B720E9FCA00F43
B36D69B357AA75D4906A0CCEC9742061
6015F6FDE6B26127DC82B1D56C929DB9
B2670B3B56F8408C2757E912EEC88B4F
FBBF75B523BED0AA80AA5DF2720BDA03

#10.13新增
67923E0F79A0EFB65A337C2C707B2A69
D5C079F21AC53EF8990DB405A97E76DB
F7293DBB498DDAAB23542E4F6C3B0ED2
10CF25362AC3DA465B62BBEF836A8C47
3ADDCC0707D4566DB6E54A6EAFC9E117

#10.20新增
9EE7075593F44ED35EF188677F612069
FB9BED31921D08EE24956AE8E88A520E
78122C532EF8032DB3438A3EDF60AA66
DC150E8C54D4204114E4C2E03B0A65D8
D7A173E1CD06671770B9D2031953D258

#11.11新增11个
D51EFE5D031D00BE8C2E6ECD912ECE7B
A9C72E94D877677A47B25C220AC87B9F
C466ACF8FEC3C0F06703B73AD86050D7
2A331867A1C40492B0E684FCE0E8770C
2C52D3EA7E36AAE4E908DA76D2F5CCC1
6C86F00AF7A2721F55FFE2AD96132FAB
5741D5C134FBFD4CD7E7895DB87AAAB3
8968B655F6A9B14E3E98E6819436462A
4E893C82B2B1D8B05A9A75B37519200B
350CC255FC8E1AAF7E609CBBFEE3B887
552A5736CB7384888B47726CC460CE96

#11.15新增
5A4A5E68DFE40E9BD1479B8A128AB28C
FA4675FC957E5305EC6D4801384D2014
0552622FCACE338F89B531C38222BA10
064F562F1517CE9E66F317E5AF63D1E8
8E6ABFA2DD570F86BAD6D3E988C910F9

#11.27新增
C077737716DC675EC0A80390FDEF56DD
58ED86532CF23D0C8A68C3CC7FF9B177
26763B0127D8C23A5521ECB681FFB287
1BFF44768C5EC3DD65A30FCD05DE68D5
02D46EAD8818F35E6C1B23BB1A5080CE

#12.1新增
5DE18AE56E46D1D711AE7A20A39B9877
6004C62928EB52B39BA239426FD68519
FA589FC507A324F0C7413E41F5DE26A4
FFA06EB64CD41ABE45D18CB6ACC322F7
9ACCA1BF4CDD2547D5994F75CC170AAF

#12.16新增
11A9E970CF2A19890D3C734C653DB6A4
D6A71EA8F694BB7B33D7C41A6F93338D
03FBE98831D11E228C4525DBAA8BF76D
CA0312ED192E7DF786B523E3CDD531C0
BDCF3D3DC649949BC2E3B16C2BBE9DAC
6E874A1F00B0EEF5470F0C0F2BFA10AB
E2CB26F6E7929C863146C4EED52B8DD1
70151CA81292E01C3159798A155040A8
78F9265EF111AC036F36DE806616F9C3
9F40EC46EE5CDEB8C3ABFB6D830AFE31

#12.20新增
44613DA7E735BBDBEA17975284A5264D
5D1ADBB3684BB3CFE776ECC2C2DEE931
94A61FC489F74D9551EDF801BFD26037
AE81B6D83696E7841550FD3DCED631E2
426ACEF9A1435CE40FA8115803C62FD6

#2020.01.09新增
05DCF0513FA6CB59F5A12C7EA6B7CB7E
6E59FED5666492E0AE35B1246AC8D46D
1C005384EBDF35AC45FBCC95E9374C2E
13EA7838B7DA018C20B52F4FEEC4EFBA
200F85C6F395B79F4A60CF08D16211EC
D66CA27668891CC4B16BA0B51F1888B8
3D92797BC756B2802E55788E8876ABC6
939C011DA1A854937040BBB5164B97B5
6A131929B2FA7846F81557516B13E33A
9E901459F377543AD5A519372BB49DB7

#01.20
A769ACDD55C2F0A4DB48C13AEA3421E9
4E7C6ED1D5C665306BEC49CB8499E5CE
0EF2C8F5CDBE07F5239920A4EC104F61
D281E0C7AB3A4282C0FB8472A20A3C5A
0FF46B7B9E99FC57B158A3123074C53B

#01.30
A7FD3462FF912DF49CF5B113BF71D83F
CDA87F3539BCE3C7042D22BE99FF9E3D
DD287FDFE43E7AF7A8575CF9FC42B092
65A7A30173986036AFE5E18238FD2483
2F898F4C4F394A42F1206E57B75F9C3E
1862B4CFF802BD13E6BBD3E2410D4CE4</code></pre><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul>
<li>签发出来的证书，有效期均为<code>1</code>年。</li>
<li>签发无邮件重发功能，请确保能够收到邮件。(接收邮件延迟可能很大)</li>
<li>由于腾讯邮箱服务大概率接受不到邮件，暂时禁止<code>MX</code>记录解析腾讯的域名。</li>
</ul>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul>
<li>一个域名</li>
<li>一个邮箱，该邮箱格式必须为<code>admin</code>开头的域名邮箱，比如<code>admin@omain.com</code></li>
<li>一个域名<code>csr</code>文件</li>
</ul>
<p><strong>1、邮箱获取</strong><br>域名邮箱的话，主要是用来验证邮件及证书的，这里提供<code>2</code>种获取方法：</p>
<pre><code>1、使用Yandex免费域名邮箱，官方地址：https://connect.yandex.com
2、借用临时邮箱就可以了，不过要是申请的主域名有在建站的话，可能需要你关站几分钟了。</code></pre><p>这里拿萌咖的临时邮箱为例，地址：<a href="http://shared.readmail.net/，首先在你域名的`DNS`商解析一个记录：" target="_blank" rel="noopener">http://shared.readmail.net/，首先在你域名的`DNS`商解析一个记录：</a></p>
<pre><code>#以下2种解析任选其一
1、解析你主域名的A记录到207.46.149.80
2、解析你主域名的CNAME记录到shared.readmail.net</code></pre><p>等待生效后你就可以打开你的主域名了，然后在右上角设置一个<code>admin</code>的前缀即可。</p>
<p><strong>2、CSR文件获取</strong><br>获取方法很简单，直接百度/谷歌搜索<code>CSR文件在线生成</code>，你会看到很多这种网站，生成的时候建议选<code>RSA</code>加密，域名格式为<code>*.southcat.net</code>。</p>
<p>这里的话就推荐直接使用<code>openssl</code>命令行获取<code>CSR</code>文件，使用<code>SSH</code>登录服务器，输入命令：</p>
<pre><code>#RSA加密
domain=&quot;southcat.net&quot;
openssl req -new -newkey rsa:2048 -nodes -out ${domain}.csr -keyout ${domain}_key.pem -subj &quot;/C=CN/ST=00/L=/O=/CN=*.${domain}&quot;

#ECC加密
domain=&quot;southcat.net&quot;
openssl ecparam -name prime256v1 -genkey -out ${domain}_key.pem
openssl req -new -key ${domain}_key.pem -out ${domain}.csr -subj &quot;/C=CN/ST=00/L=/O=/CN=*.${domain}&quot;</code></pre><p>将域名修改为自己的再运行，加密方式任选其一。</p>
<p>然后查看<code>CSR</code>文件：</p>
<pre><code>cat ${domain}.csr</code></pre><p>接下来复制信息，后面会用到。</p>
<h2 id="获取证书"><a href="#获取证书" class="headerlink" title="获取证书"></a>获取证书</h2><p>申请地址：<a href="https://api.moeclub.org/SSL，直接点击会`404`，需要先复制域名地址，然后粘贴到浏览器地址打开。" target="_blank" rel="noopener">https://api.moeclub.org/SSL，直接点击会`404`，需要先复制域名地址，然后粘贴到浏览器地址打开。</a></p>
<p>打开后粘贴<code>CSR</code>文件信息和<code>Token</code>码，然后等待验证邮件及接收证书即可。</p>
<p>最后补全下证书链，将以下内容粘贴至证书文件的最后面。</p>
<pre><code>-----BEGIN CERTIFICATE-----
MIIETTCCAzWgAwIBAgILBAAAAAABRE7wNjEwDQYJKoZIhvcNAQELBQAwVzELMAkG
A1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv
b3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw0xNDAyMjAxMDAw
MDBaFw0yNDAyMjAxMDAwMDBaMEwxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i
YWxTaWduIG52LXNhMSIwIAYDVQQDExlBbHBoYVNTTCBDQSAtIFNIQTI1NiAtIEcy
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2gHs5OxzYPt+j2q3xhfj
kmQy1KwA2aIPue3ua4qGypJn2XTXXUcCPI9A1p5tFM3D2ik5pw8FCmiiZhoexLKL
dljlq10dj0CzOYvvHoN9ItDjqQAu7FPPYhmFRChMwCfLew7sEGQAEKQFzKByvkFs
MVtI5LHsuSPrVU3QfWJKpbSlpFmFxSWRpv6mCZ8GEG2PgQxkQF5zAJrgLmWYVBAA
cJjI4e00X9icxw3A1iNZRfz+VXqG7pRgIvGu0eZVRvaZxRsIdF+ssGSEj4k4HKGn
kCFPAm694GFn1PhChw8K98kEbSqpL+9Cpd/do1PbmB6B+Zpye1reTz5/olig4het
ZwIDAQABo4IBIzCCAR8wDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8C
AQAwHQYDVR0OBBYEFPXN1TwIUPlqTzq3l9pWg+Zp0mj3MEUGA1UdIAQ+MDwwOgYE
VR0gADAyMDAGCCsGAQUFBwIBFiRodHRwczovL3d3dy5hbHBoYXNzbC5jb20vcmVw
b3NpdG9yeS8wMwYDVR0fBCwwKjAooCagJIYiaHR0cDovL2NybC5nbG9iYWxzaWdu
Lm5ldC9yb290LmNybDA9BggrBgEFBQcBAQQxMC8wLQYIKwYBBQUHMAGGIWh0dHA6
Ly9vY3NwLmdsb2JhbHNpZ24uY29tL3Jvb3RyMTAfBgNVHSMEGDAWgBRge2YaRQ2X
yolQL30EzTSo//z9SzANBgkqhkiG9w0BAQsFAAOCAQEAYEBoFkfnFo3bXKFWKsv0
XJuwHqJL9csCP/gLofKnQtS3TOvjZoDzJUN4LhsXVgdSGMvRqOzm+3M+pGKMgLTS
xRJzo9P6Aji+Yz2EuJnB8br3n8NA0VgYU8Fi3a8YQn80TsVD1XGwMADH45CuP1eG
l87qDBKOInDjZqdUfy4oy9RU0LMeYmcI+Sfhy+NmuCQbiWqJRGXy2UzSWByMTsCV
odTvZy84IOgu/5ZR8LrYPZJwR2UcnnNytGAMXOLRc3bgr07i5TelRS+KIz6HxzDm
MTh89N1SyvNTBCVXVmaU6Avu5gMUTu79bZRknl7OedSyps9AsUSoPocZXun4IRZZ
Uw==
-----END CERTIFICATE-----</code></pre><p>然后就可以自行为该域名及所有子域名配置<code>SSL</code>证书了。</p>
<h2 id="辅助签发"><a href="#辅助签发" class="headerlink" title="辅助签发"></a>辅助签发</h2><pre><code>提示：辅助签发不怎么会的，建议用上面的签发方法。</code></pre><p><strong>1、辅助生成CSR</strong><br><code>CSR</code>生成地址: <a href="https://api.moeclub.org/SSL/CSR，打开后输入域名即可生成`CSR`和`KEY`，记得保存。" target="_blank" rel="noopener">https://api.moeclub.org/SSL/CSR，打开后输入域名即可生成`CSR`和`KEY`，记得保存。</a></p>
<p><strong>2、辅助签发及确认邮件</strong><br>如果没有“<code>admin@域名</code>”的邮箱，或者<code>MX</code>记录被禁止，可以使用</p>
<pre><code>1、可以暂时把MX记录解析至api.moeclub.org，权重随意，比如：10。
2、使用接口查询MX记录是否生效(将google.com替换为自己的域名)：https://api.moeclub.org/DNS?server=8.8.8.8&amp;type=MX&amp;domain=google.com
3、等待生效
4、进入https://api.moeclub.org/SSL，在填CSR的框框内填上&quot;MAIL&quot;(不包括引号)，Token填你申请时的Token即可。</code></pre><p>然后按照提示即可辅助帮助确认邮件，最后完成后即可更改解析。</p>
<p><strong>3、辅助获取证书</strong><br>如果没有“<code>admin@域名</code>”的邮箱。</p>
<pre><code>进入https://api.moeclub.org/SSL，在填CSR的框框内填上&quot;VIEW&quot;(不包括引号)，Token填你申请时的Token即可查询到自己申请的证书。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>免费送5个Office365 E3 MSDN 25用户注册链接</title>
    <url>/2197/</url>
    <content><![CDATA[<p><strong>说明：</strong>这里博主就先送<code>5</code>个<code>Office365 E3 MSDN 25</code>用户注册链接，这次就不发邮箱了，先看到先得，如果你有的话，建议让给别人，以后会随时发放其它福利，至于<code>Do</code>码，博主会继续坚持发放，领取地址就自己找。</p>
<h2 id="注册链接"><a href="#注册链接" class="headerlink" title="注册链接"></a>注册链接</h2><pre><code>https://signup.microsoft.com/Signup?OfferId=78888157-A040-4A9C-80BB-C36A5FAB2FEB&amp;pc=02b0c6d0-e042-4865-9f68-8a9213de6131&amp;ali=1
https://signup.microsoft.com/Signup?OfferId=78888157-A040-4A9C-80BB-C36A5FAB2FEB&amp;pc=02bdc80d-00fe-4e18-bab2-8de7a52ff4e8&amp;ali=1
https://signup.microsoft.com/Signup?OfferId=78888157-A040-4A9C-80BB-C36A5FAB2FEB&amp;pc=02d322fa-c938-4c44-abbf-ea434812184a&amp;ali=1
https://signup.microsoft.com/Signup?OfferId=78888157-A040-4A9C-80BB-C36A5FAB2FEB&amp;pc=02d4b5e6-925e-4c10-a597-71daeb9a5b9e&amp;ali=1
https://signup.microsoft.com/Signup?OfferId=78888157-A040-4A9C-80BB-C36A5FAB2FEB&amp;pc=02f5c285-298d-479d-b610-dc020fd131d7&amp;ali=1</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>免费Alphassl泛域名SSL证书申请方法</title>
    <url>/1670/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前分享了几个可以申请免费<code>SSL</code>证书的网站，参考：一个可以在线获取Let’s Encrypt的免费SSL证书的网站，分享6个免费SSL证书申请网站，给你的网站开启https加密，今天在<code>loc</code>看到80老总恢复了免费<code>Alphassl</code>证书的提供，就搬运下。</p>
<h2 id="申请地址"><a href="#申请地址" class="headerlink" title="申请地址"></a>申请地址</h2><p>新版免费<code>Alphassl</code>证书申请地址：<br><a href="http://alpha.80host.com/" target="_blank" rel="noopener">http://alpha.80host.com/</a><br><a href="http://alpha.ceranetworks.net/" target="_blank" rel="noopener">http://alpha.ceranetworks.net/</a><br>两个地址都可，分别是<code>80host</code>老总和<code>50kvm</code>老总提供。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>申请证书前需要准备的就是一张<code>CSR</code>证书请求文件，可使用在线工具：<a href="https://csr.chinassl.net/generator-csr.html生成。这里需要注意的一点是`CSR`里域名那里一定要填`*.southcat.net`这样的，`*`代表前面子域名是泛域。" target="_blank" rel="noopener">https://csr.chinassl.net/generator-csr.html生成。这里需要注意的一点是`CSR`里域名那里一定要填`*.southcat.net`这样的，`*`代表前面子域名是泛域。</a></p>
<p><strong>注意：</strong>请关闭<code>whois</code>保护或者是配置好域名邮箱再签，如果<code>whois</code>保护关了也看不到正确邮箱那就去配置好域名邮箱再签发。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>免费CDN系统：wdCDN2单节点版本安装教程</title>
    <url>/1578/</url>
    <content><![CDATA[<p><strong>wdCDN是什么？</strong><br><code>wdCDN</code>是一款基于<code>squid</code>开发的缓存加速管理系统,高效,稳定,安全.<br>旨在为的<code>CDN</code>有需求的用户提供一个安装简单，使用方便易操作的一套系统及解决方案，可帮助大中小企业或站长低成本，部署快速，构建自己的<code>CDN</code>网络或服务器群,提供专业的<code>CDN</code>加速服务或增值服务,更好的在线服务,更快速的网络和网站.<br>使用<code>wdCDN,</code>自架<code>CDN</code>加速系统,部署架构<code>CDN</code>系统,提供<code>CDN</code>加速服务<code>,CDN</code>加速解决方案,将变得容易和简单</p>
<p><strong>wdCDN2</strong><br>新版本不再依懒<code>wdCP</code>，而是一个独立的服务和应用，可以单独安装和使用<br>单节点版本功能相对简单，只实现基础功能，如网站管理，缓存内容管理,系统资源监控<br>对于针对站点的流量统计或计费等，可以考虑使用多节点版本</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>支持系统：</strong><code>CentOS 6.x/7.x</code>，<code>RedHat</code>及其它未测试，也欢迎测试!</p>
<p><strong>注意：</strong><code>wdcdn2</code>单节点版本仍然是免费的，但服务和技术支持则需收费</p>
<p><strong>1、安装wdcdn2</strong></p>
<pre><code>wget http://dl.wdlinux.cn/files/wdcdn/wdcdn2_install.sh
sh wdcdn2_install.sh</code></pre><p>安装完，后台访问地址：<code>http://ip:8090</code>，默认用户密码为<code>admin/wdlinux.cn</code>。</p>
<p><strong>2、登录后台，添加网站,更新配置</strong></p>
<p><strong>3、解析域名</strong></p>
<p>简单几步，就可以部署一个CDN应用了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>免费CDN系统：wdDNS_v3版本安装教程</title>
    <url>/1629/</url>
    <content><![CDATA[<p><strong>说明：</strong>对于自建<code>CDN</code>系统相信很多人都有兴趣，之前发了个<code>CDN</code>系统自建教程：免费CDN系统：wdCDN2单节点版本安装教程，这次又看到了一个新的，就发下。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>wdDNS</code>是由<code>wdlinux</code>团队于2011年推出的智能<code>DNS</code>解析系统，基于开源软件<code>bind</code>开发的高效，稳定的智能<code>DNS</code>系统支持<code>WEB</code>在线管理和操作设置，支持各大运营商线路解析，分省地区路智能解析等，支持一键安装部署，方便快捷，经历了二次大版本的升级与重构，此次<code>v3</code>更是从底层上重构了管理系统，运行更加高效，稳定，扩展性好,更易安装及线上部署<code>v3</code>功能亮点。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>完全重构，性能更高及更稳定</li>
<li>数据支持文本与<code>mysql</code>数据库方式的，更灵活及需求选择</li>
<li>独立运行，不依懒<code>wdCP</code>,更易部署及扩展</li>
<li>支持<code>API</code>调用开发，易于个性化支持与服务</li>
<li>支持批量操作，适合站群或特殊用户的特殊需求</li>
</ul>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>目前<code>v3</code>没有业务系统，如多用户支持，在线支付及自助开通，流量统计等，更合适个人或中小企业自用，站群应用，内部网解析应用，局部<code>DNS</code>劫持等，如需要智能<code>DNS</code>运营版，仍可考虑<code>v2</code>版本,或等后续<code>v3</code>的升级版，为提供更好的服务与支持，v3将继续提供免费的基础版和收费的高级版。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境：</strong><code>CentOS 6.x</code>/<code>7.x</code>，其它系统尚未测试。<br><strong>准备：</strong>安装前，需要系统已安装好并动行<code>mysql</code>，在安装过程中，需要输入<code>mysql</code>的<code>root</code>用户密码。</p>
<p><strong>1、下载安装</strong></p>
<pre><code>wget http://down.wdlinux.cn/in/wddns3_install.sh &amp;&amp; sh wddns3_install.sh</code></pre><p>安装完后，默认后台，用户，密码分别为<code>http://ip:8091</code>，<code>admin</code>/<code>wdlinux.cn</code>。</p>
<p><strong>2、关于升级</strong><br>因<code>v3</code>是完全重构版，不兼容<code>v2</code>版本，暂时无法升级。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>出现/usr/bin/env: node: No such file or directory错误解决方法</title>
    <url>/1660/</url>
    <content><![CDATA[<p><strong>说明：</strong>在<code>Ubuntu</code>系统升级<code>npm</code>后，<code>npm</code>命令停止工作。突然，它开始出现<code>/usr/bin/env: node: No such file or directory</code>错误提示。<br><img src="https://www.southcat.net/usr/picture/node%20error.png" alt="请输入图片描述" title="请输入图片描述"></p>
<pre><code>sudo ln -s /usr/bin/nodejs /usr/bin/node</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>出现&quot;command &#39;gcc&#39; failed with exit status 1&quot;错误的解决方法</title>
    <url>/1583/</url>
    <content><![CDATA[<p><strong>说明：</strong>今天在安装<code>Python</code>库软件的时候遇到<code>&quot;command &#39;gcc&#39; failed with exit status 1&quot;</code>错误问题，之后有执行过<code>yum</code>安装<code>gcc</code>，但是还是有这样的问题，于是查了点资料发现缺少<code>openssl-devel</code>支持，所以我们需要安装<code>openssl-devel</code>才能解决问题。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>这里用的<code>CentOs</code>系统，执行命令：</p>
<pre><code>yum install gcc libffi-devel python-devel openssl-devel -y</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>出现&quot;ImportError: No module named setuptools&quot;错误的解决方法</title>
    <url>/1592/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候我们运行<code>python</code>，会出现无法运行直接报错<code>&quot;ImportError: No module named setuptools&quot;</code>。根据提示应该是缺少<code>setuptools</code>模块导致的，那就需要在当前服务器环境中重新编译安装<code>setuptools</code>工具。这里说下方法。</p>
<p><strong>1、下载setuptools模块</strong></p>
<pre><code>wget --no-check-certificate https://www.southcat.net/usr/down/setuptools-0.6c11.tar.gz
tar -zxvf setuptools-0.6c11.tar.gz
cd setuptools-0.6c11</code></pre><p><strong>2、编译setuptools</strong></p>
<pre><code>python setup.py build</code></pre><p><strong>3、安装setuptools</strong></p>
<pre><code>python setup.py install</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享一个Directory Lister美化修改版源码，可解决打开慢的问题</title>
    <url>/2010/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Directory Lister</code>是一个不错的目录列表程序，官方的源码由于用了谷歌字体、<code>js</code>等之类的，导致打开特别慢，相信很多使用过的都已经体会到了，这里分享个由小夜<code>MM</code>修改美化的<code>Directory Lister</code>，很好看，打开非常快。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/DirectoryLister_vpsmm.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><ul>
<li>整理所有的<code>css/js</code>文件到本地，去掉<code>google</code>字体。</li>
<li>添加了<code>flat-ui</code>效果，个人比较喜欢大字体以及绿色的文字。</li>
<li>核心代码修改了一下，目录进行了伪静态化，原：<code>/?dir=codes</code>改后：<code>/codes/</code>。</li>
<li>只添加了<code>nginx.conf</code>伪静态，<code>apache</code>没测试。</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>本地下载：</strong>DirectoryLister_vpsmm.tar.gz</p>
<p><code>Nginx</code>伪静态规则：</p>
<pre><code>location / {
 rewrite /(.*)/$ /index.php?dir=$1 last;
 }</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享一个SSL证书链补全工具，解决部分浏览器显示证书不可信的问题</title>
    <url>/1677/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候我们得到并配置上<code>SSL</code>证书后因为种种因素，某些浏览器依然显示证书不可信，也不显示小绿锁，其实原因是因为证书链不完整导致的，这里就分享一个<code>SSL</code>证书链补全工具，可完美解决该问题。</p>
<p><strong>SSL证书链补全地址：</strong><a href="https://csr.cheapssl.cn/get_chain" target="_blank" rel="noopener">https://csr.cheapssl.cn/get_chain</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享一些1T OneDrive账号，及免费获取一年Office 365企业版E3</title>
    <url>/2302/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主无聊翻了下邮箱，发现以前注册的<code>Microsoft office365</code>企业版<code>E3</code>还剩下为期<code>9</code>个月的订阅时间，就开了<code>23</code>个子账号，每个账号均有<code>OneDrive 1T</code>使用空间以及<code>office</code>全家桶。这里分享出来，应该够同学们看几个月电影了。然后免费获取一年<code>E3</code>方法后面会讲到。</p>
<h2 id="账号"><a href="#账号" class="headerlink" title="账号"></a>账号</h2><pre><code>【2018.12.03】
这里再分享24个子账户，给不想注册E3的人用吧！这次有效期为1年，均在2019.12.2到期，不会翻车。</code></pre><p><code>Office</code>访问地址：<a href="https://www.office.com。" target="_blank" rel="noopener">https://www.office.com。</a></p>
<pre><code>#如果密码错误就说明被领取了
用户名：moerats1@moeratss.onmicrosoft.com
密码：Pof20724

用户名：moerats2@moeratss.onmicrosoft.com
密码：Jah65399

用户名：moerats3@moeratss.onmicrosoft.com
密码：Fay44047

用户名：moerats4@moeratss.onmicrosoft.com
密码：Yuy35484

用户名：moerats5@moeratss.onmicrosoft.com
密码：Tun00993

用户名：moerats6@moeratss.onmicrosoft.com
密码：Rob19000

用户名：moerats7@moeratss.onmicrosoft.com
密码：Zud12971

用户名：moerats8@moeratss.onmicrosoft.com
密码：Nak44167

用户名：moerats9@moeratss.onmicrosoft.com
密码：Vob23194

用户名：moerats10@moeratss.onmicrosoft.com
密码：Fam07525

用户名：moerats11@moeratss.onmicrosoft.com
密码：Xus45710

用户名：moerats12@moeratss.onmicrosoft.com
密码：Rok30868

用户名：moerats13@moeratss.onmicrosoft.com
密码：Pas36315

用户名：moerats14@moeratss.onmicrosoft.com
密码：Moc70087

用户名：moerats15@moeratss.onmicrosoft.com
密码：Fof97605

用户名：moerats16@moeratss.onmicrosoft.com
密码：Cor99420

用户名：moerats17@moeratss.onmicrosoft.com
密码：Vob34212

用户名：moerats18@moeratss.onmicrosoft.com
密码：Lag00527

用户名：moerats19@moeratss.onmicrosoft.com
密码：Cuq65425

用户名：moerats20@moeratss.onmicrosoft.com
密码：Qum17491

用户名：moerats21@moeratss.onmicrosoft.com
密码：Gud41136

用户名：moerats22@moeratss.onmicrosoft.com
密码：Bal48564

用户名：moerats23@moeratss.onmicrosoft.com
密码：Gon98498

用户名：moerats24@moeratss.onmicrosoft.com
密码：Sux07511

用户名：moerats24@moeratss.onmicrosoft.com
密码：Wuc97755</code></pre><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>这里博主又随便的试了下之前的方法注册<code>Microsoft Office 365</code>企业版<code>E3</code>，发现之前微软活动还没结束，依然还可以参加<code>Office 365</code>开发者计划，并获得为期一年的免费<code>Office 365</code>企业版<code>E3</code>(可分配给<code>25</code>个子用户，每人<code>1T</code>)。<br><img src="https://www.southcat.net/usr/picture/onedrive_office.png" alt="请输入图片描述" title="请输入图片描述"></p>
<pre><code>申请教程：https://www.southcat.net/archives/696/

E3开子账户OneDrive默认为1T，需要提前修改下容量，修改地址：https://admin.onedrive.com/#v=StorageSettings，设置好了后再重新添加子账户，默认容量就会变成5T。

然后这里博主开的小号依然显示1T，不知道是姿势不对，还是试用版有限制，看同学们能不能成功吧。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享一些最新的BT Tracker服务器地址</title>
    <url>/1557/</url>
    <content><![CDATA[<p><strong>说明：</strong>由于这几天一直在用<code>Aria2</code>和<code>Transmission</code>程序来下载<code>BT</code>，很多时候用的磁力链接或者BT种子下载文件的时候，速度很慢，之后在网上找的方法，添加了一些<code>BT Tracker</code>服务器地址后，速度果然提起来了！</p>
<p><code>BT Tracker</code>服务器<code>Github</code>提供地址：<a href="https://github.com/ngosang/trackerslist" target="_blank" rel="noopener">https://github.com/ngosang/trackerslist</a></p>
<pre><code>udp://tracker.open-internet.nl:6969/announce
udp://tracker.coppersurfer.tk:6969/announce
udp://tracker.skyts.net:6969/announce
udp://tracker.piratepublic.com:1337/announce
udp://tracker.opentrackr.org:1337/announce
udp://tracker.internetwarriors.net:1337/announce
udp://9.rarbg.to:2710/announce
udp://public.popcorn-tracker.org:6969/announce
udp://wambo.club:1337/announce
udp://tracker4.itzmx.com:2710/announce
udp://tracker1.wasabii.com.tw:6969/announce
udp://tracker.zer0day.to:1337/announce
udp://tracker.xku.tv:6969/announce
udp://tracker.vanitycore.co:6969/announce
udp://open.facedatabg.net:6969/announce
udp://mgtracker.org:6969/announce
udp://ipv4.tracker.harry.lu:80/announce
udp://inferno.demonoid.pw:3418/announce
udp://tracker.tiny-vps.com:6969/announce
udp://tracker.tvunderground.org.ru:3218/announce
udp://tracker.torrent.eu.org:451/announce
udp://tracker.halfchub.club:6969/announce
udp://tracker.grepler.com:6969/announce
udp://tracker.files.fm:6969/announce
udp://tracker.dler.org:6969/announce
udp://tracker.desu.sh:6969/announce
udp://tracker.cypherpunks.ru:6969/announce
udp://thetracker.org:80/announce
udp://p4p.arenabg.com:1337/announce
udp://oscar.reyesleon.xyz:6969/announce
udp://open.stealth.si:80/announce
udp://explodie.org:6969/announce
udp://bt.xxx-tracker.com:2710/announce
udp://tracker.uw0.xyz:6969/announce
udp://t.agx.co:61655/announce
udp://sd-95.allfon.net:2710/announce
udp://santost12.xyz:6969/announce
udp://sandrotracker.biz:1337/announce
udp://retracker.nts.su:2710/announce
udp://retracker.lanta-net.ru:2710/announce
udp://peerfect.org:6969/announce
http://tracker.city9x.com:2710/announce
http://retracker.mgts.by:80/announce
http://alpha.torrenttracker.nl:443/announce
http://0d.kebhana.mx:443/announce
udp://tracker.mg64.net:6969/announce
udp://tracker.martlet.tk:6969/announce
udp://tracker.kamigami.org:2710/announce
udp://torr.ws:2710/announce
http://retracker.telecom.by:80/announce
wss://tracker.openwebtorrent.com:443/announce
wss://tracker.fastcast.nz:443/announce
wss://tracker.btorrent.xyz:443/announce
ws://tracker.btsync.cf:2710/announce
udp://zephir.monocul.us:6969/announce
udp://tracker.bluefrog.pw:2710/announce
udp://tracker.acg.gg:2710/announce
udp://retracker.coltel.ru:2710/announce
udp://pubt.in:2710/announce
https://evening-badlands-6215.herokuapp.com:443/announce
udp://z.crazyhd.com:2710/announce
udp://tracker.swateam.org.uk:2710/announce
udp://tracker.justseed.it:1337/announce
udp://tracker.cyberia.is:6969/announce
udp://packages.crunchbangplusplus.org:6969/announce
udp://104.238.198.186:8000/announce
https://open.acgnxtracker.com:443/announce
http://tracker2.itzmx.com:6961/announce
http://tracker.vanitycore.co:6969/announce
http://tracker.torrentyorg.pl:80/announce
http://tracker.tfile.me:80/announce
http://tracker.mg64.net:6881/announce
http://tracker.internetwarriors.net:1337/announce
http://tracker.electro-torrent.pl:80/announce
http://share.camoe.cn:8080/announce
http://open.acgtracker.com:1096/announce
http://open.acgnxtracker.com:80/announce
http://omg.wtftrackr.pw:1337/announce
http://mgtracker.org:6969/announce
http://fxtt.ru:80/announce
http://bt.dl1234.com:80/announce
http://agusiq-torrents.pl:6969/announce
http://104.238.198.186:8000/announce</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享个免费观看各大视频网站VIP资源的网站</title>
    <url>/1548/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人遇到一些喜欢的电视剧或者电影的时候，发现要会员才能看，可是就为了这一个电视开会员就没必要了，所以这里就分享了这个办法，可以免费观看各大视频网站<code>VIP</code>资源。</p>
<p><strong>疯狂解析-vip视频在线解析</strong><br><strong>地址：</strong><a href="http://vip.ifkdy.com" target="_blank" rel="noopener">http://vip.ifkdy.com</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享一款多个音乐网站合一的音乐搜索播放器</title>
    <url>/1977/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前分享过一款很漂亮的音乐播放器源码，查看：MKOnlineMusicPlayer：一款开源的基于Meting的在线音乐播放器，现在再分享个，支持的音乐网站更广，就是界面没前者好看，有兴趣的可以用用。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>麦葱特制多站合一音乐搜索解决方案，支持搜索试听以下网站音乐：</p>
<pre><code>网易云音乐 QQ音乐 酷狗音乐 酷我音乐 虾米音乐 百度音乐 一听音乐 咪咕音乐 荔枝FM 蜻蜓FM 喜马拉雅FM 全民K歌 5sing原创 5sing翻唱</code></pre><p>数据调用的是各网站的<code>API</code>接口，有的接口并不是开放的，随时可能失效，本项目相关代码仅供参考。</p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><strong>在线演示：</strong><a href="http://music.2333.me/" target="_blank" rel="noopener">http://music.2333.me/</a><br><strong>GitHub地址：</strong><a href="https://github.com/maicong/music" target="_blank" rel="noopener">https://github.com/maicong/music</a><br><strong>下载地址：</strong>开发版、稳定版<br><strong>更新日志：</strong>CHANGELOG.md</p>
<h2 id="界面截图"><a href="#界面截图" class="headerlink" title="界面截图"></a>界面截图</h2><p><img src="https://www.southcat.net/usr/picture/all_music(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/all_music(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p><strong>1、提示数据获取失败</strong></p>
<pre><code>#方案1
修改index.php文件里的MC_PROXY为您的代理地址。
将core/music.php里需要代理的URL &apos;proxy&apos;=&gt;false改为&apos;proxy&apos; =&gt; true。

#方案2
在core/music.php里查找setTimeout，将其后面的数值20改为更大。
在static/js/music.js里查找timeout，将其数值30000改为更大。

#方案3
服务器要支持curl。
更换服务器，选择延迟更低的服务器。


#音乐链接为空
1、音乐需要付费才能收听。
2、版权限制，外站无法获取。
3、服务器IP所在地不在源站允许的区域。
4、音乐下架了，链接被去除。

#音乐链接不为空
1、当前IP所在地因版权限制而无法播放。
2、音乐格式浏览器无法正常解析。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享几个在线扫描病毒软件的网站</title>
    <url>/1568/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人平常喜欢下一些破解软件，很多杀毒软件喜欢报毒，可文件本身却没有病毒，却又不想很折腾去下工具来检测，所以这里推荐几个可以在线扫描软件病毒的网站。</p>
<p>1、一款可疑文件分析服务, 通过各种知名反病毒引擎, 对您所上传的文件进行检测, 以判断文件是否被病毒, 蠕虫, 木马, 以及各类恶意软件感染。</p>
<pre><code>https://www.virustotal.com/zh-cn/</code></pre><p>2、一个非盈利性的免费为广大网友服务的网站，它通过多种不同厂家提供的最新版本的病毒检测引擎对您上传的可疑文件进行在线扫描，并可以立刻将检测结果显示出来，从而提供给您可疑程度的建议。</p>
<pre><code>http://virscan.org/</code></pre><p>3、一个免费服务的网站，可以让您同时使用几个反病毒程序进行扫描可疑文件，可以在同一时间提交多个文件扫描。</p>
<pre><code>https://virusscan.jotti.org/


http://onlinelinkscan.com/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享几个好用的Google Hosts</title>
    <url>/1547/</url>
    <content><![CDATA[<h2 id="Hosts下载地址"><a href="#Hosts下载地址" class="headerlink" title="Hosts下载地址"></a>Hosts下载地址</h2><p><strong>1、racaljk hosts</strong><br>这是最多人使用的版本，很多衍生版本都是基于这个项目。但是部分地区用户用这个版本看不了<code>YouTube</code>视频，如果用这个看不了<code>YouTube</code>视频的可以看下其他衍生项目。<br><strong>项目主页：</strong><a href="https://github.com/racaljk/hosts" target="_blank" rel="noopener">https://github.com/racaljk/hosts</a><br><strong>Hosts文件下载：</strong><a href="https://raw.githubusercontent.com/racaljk/hosts/master/hosts" target="_blank" rel="noopener">https://raw.githubusercontent.com/racaljk/hosts/master/hosts</a></p>
<p><strong>2、DannyWu hosts</strong><br>这是基于<code>racaljk hosts</code>的一个衍生版本，对<code>YouTube</code>支持相对友好。需要注意的是，这个项目默认<code>hosts</code>是带有广告屏蔽 <code>hosts</code>的，无广告屏蔽版本处于<code>noad</code>目录。<br><strong>项目主页：</strong><a href="https://github.com/WUZHIQIANGX/hosts" target="_blank" rel="noopener">https://github.com/WUZHIQIANGX/hosts</a><br><strong>Hosts文件下载：</strong><a href="https://raw.githubusercontent.com/WUZHIQIANGX/hosts/master/noad/hosts" target="_blank" rel="noopener">https://raw.githubusercontent.com/WUZHIQIANGX/hosts/master/noad/hosts</a><br><strong>官方网站：</strong><a href="http://idannywu.com" target="_blank" rel="noopener">http://idannywu.com</a></p>
<h2 id="Hosts所在文件夹"><a href="#Hosts所在文件夹" class="headerlink" title="Hosts所在文件夹"></a>Hosts所在文件夹</h2><p><strong>Windows系统：</strong>位于<code>C:\Windows\System32\drivers\etc\hosts</code><br><strong>Android系统：</strong>位于<code>/system/etc/hosts</code><br><strong>Mac系统：</strong>位于<code>/etc/hosts</code><br><strong>IOS系统：</strong>位于<code>/etc/hosts</code><br><strong>Linux系统：</strong>位于<code>/etc/hosts</code><br>绝大多数<code>Unix</code>系统都是在<code>/etc/hosts</code></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享几款强大的类似Google搜索的搜索引擎</title>
    <url>/1743/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Google</code>是全世界最棒的搜索引擎，因为某些原因在中国无法访问。这里将整合一些可以实现展示结果与<code>Google</code>并无差异的搜索引擎，重点是国内均可直接访问，无需自由上网。</p>
<h2 id="Rambler-ru"><a href="#Rambler-ru" class="headerlink" title="Rambler.ru"></a>Rambler.ru</h2><p><code>Rambler.ru</code>是俄罗斯门户网站，也是俄罗斯三大门户网站之一。重点是无需爬<code>Q</code>。这个网站的搜索引擎是谷歌提供支持。网页搜索右下角显示由谷歌技术驱动。比百度良心<code>10000</code>倍。<br><strong>官方地址：</strong><a href="https://nova.rambler.ru/" target="_blank" rel="noopener">https://nova.rambler.ru/</a></p>
<h2 id="MEZW"><a href="#MEZW" class="headerlink" title="MEZW"></a>MEZW</h2><p>经过几个简单的关键字搜索，发现<code>MEZW</code>搜索结果与<code>Google</code>并无太大差异。优点：国内正常访问，界面简洁，<code>MEZW</code>搜索服务可以汇集国内外网页的搜索结果，登录帐号，更可自定义的屏蔽掉不希望展示在搜索结果中的网站。比百度良心 <code>3000</code>倍。<br><strong>官方地址：</strong><a href="https://so.mezw.com/" target="_blank" rel="noopener">https://so.mezw.com/</a></p>
<h2 id="Bird-so"><a href="#Bird-so" class="headerlink" title="Bird.so"></a>Bird.so</h2><p><code>Bird.so</code>关于技术问题的搜索结果来自<code>google</code>搜索、雅虎搜索、必应搜索的聚合；经过测试，优先展示<code>google</code>搜索结果，在大部分关键字的展示结果与<code>google</code>并无差异，比百度良心<code>2800</code>倍。<br><strong>官方地址：</strong><a href="http://bird.so/" target="_blank" rel="noopener">http://bird.so/</a></p>
<h2 id="avira"><a href="#avira" class="headerlink" title="avira"></a>avira</h2><p><code>Avira</code>是世界著名的杀毒软件，中文名：小红伞，来自德国。 搜索引擎基于<code>ASK</code>，搜索结果相较谷歌有差异，但相对准确比百度良心<code>800</code>倍。<br><strong>官方地址：</strong><a href="https://search.avira.com/" target="_blank" rel="noopener">https://search.avira.com/</a></p>
<h2 id="Ecosia"><a href="#Ecosia" class="headerlink" title="Ecosia"></a>Ecosia</h2><p><code>Ecosia</code>是一个基于<code>Bing</code>和<code>Yahoo</code>的绿色搜索引擎，通过自身算法优化整合<code>Bing</code>和<code>Yahoo</code>的搜索结果，展示最优的结果。与<code>google</code>搜索结果有较大差异，但展示结果依然相对准确，比百度良心<code>500</code>倍。<br><strong>官方地址：</strong><a href="https://www.ecosia.org/" target="_blank" rel="noopener">https://www.ecosia.org/</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享2款网站程序源码/主题等后门检测工具</title>
    <url>/2195/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多人都喜欢从网上找一些未知来源的网站程序源码，或者一些主题。如果运气不好，这些被植入后门的话，别人就可以很轻松的获得服务器的执行操作权限，比如执行系统命令、窃取用户数据、删除<code>web</code>页面、修改主页等，其危害还是挺大的，所以我们在使用前就需要亲自检测下，看是否含有后门，这里就分享<code>2</code>种检测工具，分别是<code>D</code>盾<code>_Web</code>查杀和<code>WebShellkiller</code>。</p>
<h2 id="WebShellkiller"><a href="#WebShellkiller" class="headerlink" title="WebShellkiller"></a>WebShellkiller</h2><p><code>WebShellkiller</code>作为一款<code>web</code>后门专杀工具，不仅支持<code>webshell</code>的扫描，同时还支持暗链的扫描。这是一款融合了多重检测引擎的查杀工具。在传统正则匹配的基础上，采用模拟执行，参数动态分析监测技术、<code>webshell</code>语义分析技术、暗链隐藏特征分析技术，并根据<code>webshell</code>的行为模式构建了基于机器学习的智能检测模型。传统技术与人工智能技术相结合、静态扫描和动态分析相结合，更精准地检测出<code>WEB</code>网站已知和未知的后门文件。<br><img src="https://www.southcat.net/usr/picture/WebShell_JC(1).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>下载地址：</strong>官方下载，本地下载</p>
<h2 id="D盾-Web查杀"><a href="#D盾-Web查杀" class="headerlink" title="D盾_Web查杀"></a>D盾_Web查杀</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享5款免费且功能不错的PHP图床源码</title>
    <url>/1691/</url>
    <content><![CDATA[<p><strong>1、Lychee</strong><br>简单、漂亮，需<code>PHP 5.5</code>以上、<code>MySQL</code>环境。<br>本地下载：Lychee.zip<br>项目地址：<a href="https://github.com/electerious/Lychee" target="_blank" rel="noopener">https://github.com/electerious/Lychee</a></p>
<p><strong>2、CF Image Host</strong><br>主题多、插件多，需<code>PHP</code>和<code>Mysql</code>。<br>本地下载：imagehost_v1.6.5_chinese.zip<br>项目地址：<a href="http://codefuture.co.uk/projects/imagehost" target="_blank" rel="noopener">http://codefuture.co.uk/projects/imagehost</a></p>
<p><strong>3、XZ Pic（小z图床）</strong><br><code>XZ Pic</code>（小z图床）是一个简易的图床程序，开箱即用，实现快速上传图片到本地服务器（或七牛），支持一键复制<code>HTML</code>、<code>Markdown</code>链接，方便快捷。仅需<code>PHP&gt;=5.6</code>即可，不需数据库。<br>本地下载：xz-pic-1.3.zip<br>项目地址：<a href="https://github.com/helloxz/xz-pic" target="_blank" rel="noopener">https://github.com/helloxz/xz-pic</a></p>
<p><strong>4、qchan</strong><br>轻量级<code>PHP</code>图床程序。需<code>PHP&gt;5.3.0</code>以上。<br>本地下载：qchan-0.7.zip<br>项目地址：<a href="https://github.com/qakcn/qchan" target="_blank" rel="noopener">https://github.com/qakcn/qchan</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>分享6个免费SSL证书申请网站，给你的网站开启https加密</title>
    <url>/1591/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在网站上<code>ssl</code>证书已是大势所趋，各大主流网站纷纷都上了<code>ssl</code>，对于我们这些小博客来说，上了<code>ssl</code>可以防止被运营商劫持，还可以增加收录几率。这里分享6个免费的<code>ssl</code>申请地址。<br><strong>1、Let’s Encrypt</strong><br>提供免费<code>SSL</code>证书周期为90天，我们需要设置自动或者提前续约才可以继续使用</p>
<pre><code>https://letsencrypt.org/</code></pre><p><strong>2、StartSSL</strong><br>提供3年免费<code>SSL</code>服务，不过<code>StartSSL</code>在火狐浏览器中可能会不信任，不过可以尝试下，说不定就兼容信任了。</p>
<pre><code>https://www.startssl.com/</code></pre><p><strong>3、阿里云Symantec DV SSL</strong><br>免费<code>DV SSL</code>证书，一次申请每个域名1年，每个阿里账户可以签发20张免费证书。单个域名、二级域名，单独申请是分开算的。</p>
<pre><code>https://www.aliyun.com/product/cas</code></pre><p><strong>4、西部数码DV SSL证书</strong><br>提供免费一年<code>DV SSL</code>证书</p>
<pre><code>http://www.west.cn/web/ssl/default/index</code></pre><p><strong>5、腾讯云DV SSL证书</strong><br>提供免费一年<code>DV SSL</code>证书</p>
<pre><code>https://console.qcloud.com/ssl</code></pre><p><strong>6、景安DV SSL证书</strong><br>提供免费一年<code>DV SSL</code>证书，一个账号可以申请3个。</p>
<pre><code>http://www.zzidc.com/main/huodong/freessl.html</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>利用Aria2+AriaNg+H5ai+Google Drive建立离线BT下载/在线播放/无限空间网盘</title>
    <url>/1950/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在很多人撸了无限空间的<code>Google Drive</code>后，都不知道咋玩，这里可以利用小硬盘<code>VPS</code>挂载<code>Google Drive</code>后进行一系列老司机操作，这里说下方法，过程不需要使用面板、<code>LNMP</code>等一键包，博主认为有点花时间，所以这里都使用一键脚本来完成，基本<code>10</code>分钟就搭建好了，且自带免费的<code>SSL</code>证书，可长期使用。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/h5ai_gd(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/h5ai_gd(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/h5ai_gd(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>由于本教程所使用的<code>H5ai</code>一键包只适用<code>Debian 8+</code>，且必须纯净的系统，不含有<code>WEB</code>环境。</p>
<p><strong>1、安装H5ai</strong><br>本<code>H5ai</code>一键安装包自带<code>SSL</code>证书，需要提前解析域名到服务器。使用命令：</p>
<pre><code>#下载脚本
apt-get install git -y
git clone https://github.com/wulabing/h5ai_onekey_install-lnp-.git h5ai
cd h5ai

#Debian 8运行命令
bash h5ai.sh

#Debian 9运行命令
sed -i &apos;53,54d&apos; h5ai.sh &amp;&amp; bash h5ai.sh

#脚本备份
https://www.southcat.net/usr/shell/h5ai_ssl.sh</code></pre><p>运行后，选择<code>3</code>即可。完成后进入<code>https://domain.com</code>就可以打开了<code>H5ai</code>界面了，且目录在<code>/home/wwwroot/domain.com</code>。</p>
<p><strong>2、安装Aria2</strong><br>这里用的逗比的脚本，使用命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Aria2/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; bash aria2.sh</code></pre><p>默认密匙为<code>doub.io</code>,下载目录为<code>/usr/local/caddy/www/aria2/Download</code>。</p>
<p><strong>3、安装AriaNg</strong><br>博主认为<code>AriaNg 0.2</code>版本好用些，所以默认用这个，使用命令：</p>
<pre><code>apt-get install unzip -y
mkdir /home/wwwroot/domain.com/ariaNg  #将domain改成你的域名再运行
cd /home/wwwroot/domain.com/ariaNg
wget https://www.southcat.net/usr/down/aria-ng-0.2.0.zip &amp;&amp; unzip aria-ng-0.2.0.zip</code></pre><p>此时进入<code>https://domain.com/ariaNg</code>就可以打开<code>ariaNg</code>界面了，记住该文件夹不能删，误删的重新此操作。</p>
<p><strong>4、挂载Google Drive</strong><br>教程参考：在Debian/Ubuntu上使用rclone挂载Google Drive网盘，注意挂载为磁盘的目录需要在<code>H5ai</code>目录里，且为子目录，比如<code>/home/wwwroot/domain.com/GoogleDrive</code>。</p>
<p><strong>5、配置上传Google Drive</strong><br>直接通过<code>Aria2</code>下载文件到<code>Google Drive</code>挂载盘可能会有问题，所以需要简单操作下。<br>使用命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/GDupload.sh</code></pre><p>再编辑<code>GDupload.sh</code>文件</p>
<pre><code>nano GDupload.sh</code></pre><p>修改以下参数：</p>
<pre><code>downloadpath=&apos;/usr/local/caddy/www/aria2/Download&apos; #Aria2下载目录，这里默认逗比脚本目录，不变即可。
rclone=&apos;/home/wwwroot/xx.com/GoogleDrive&apos;   #rclone挂载的目录</code></pre><p>再授权<code>chmod +x GDupload.sh</code>，然后再到<code>Aria2</code>配置文件中加上一行<code>on-download-complete=/root/GDupload.sh</code>即可，后面为脚本的路径。</p>
<p>最后就可以愉快的去下电影和音乐了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>利用Caddy快速搭建Aria2控制前端webui-aria2或者AriaNg</title>
    <url>/1837/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多喜欢使用<code>Aria2</code>来进行离线下载，而<code>Web</code>前端是必不可少的，之前差不多都是用的<code>lnmp</code>一键包来搭建前端，耗时挺长的，而了解<code>Caddy</code>后，发现利用<code>Caddy</code>来搭建<code>Web</code>前端是炒鸡快的，本人<code>2</code>分钟可以搞定。对于那些暂时找不到别人搭建好的前端而又急用的人来说，这个就可以派上用场了。这里说下<code>webui-aria2</code>和<code>AriaNg</code>两个前端搭建方法，具体安装哪个看个人喜好了。</p>
<p><code>Aria2</code>服务端安装请参考：BT种子/磁力链接下载工具：Aria2一键安装管理脚本。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先得解析一个二级域名到<code>VPS</code>上。</p>
<p>系统要求：<code>Ubuntu 14.x</code>、<code>15.x</code>、<code>16.x</code>，<code>Debian 7.x</code>、<code>8.x</code>、<code>9.x</code>，<code>CentOS 6.8</code>、<code>7.2</code>。<br><strong>1、安装Caddy</strong></p>
<pre><code>wget https://git.io/vra5C -O - -o /dev/null|bash
caddy install</code></pre><p>会要求你输入域名和邮箱，自动帮你签发<code>ssl</code>。然后使用<code>caddy start</code>命令运行<code>caddy</code>。</p>
<p><strong>2、搭建AriaNg</strong><br><code>AriaNg</code>下载地址：<a href="https://github.com/mayswind/AriaNg/releases" target="_blank" rel="noopener">https://github.com/mayswind/AriaNg/releases</a><br>使用命令：</p>
<pre><code>yum install unzip  #CentOS系统
apt-get install unzip  #Debian和Ubuntu系统
cd /var/caddywww &amp;&amp; rm -rf index.html
wget https://github.com/mayswind/AriaNg/releases/download/0.3.0/aria-ng-0.3.0.zip
unzip aria-ng-0.3.0.zip</code></pre><p><strong>3、搭建webui-aria2</strong><br><code>webui-aria2</code>下载地址：<a href="https://github.com/ziahamza/webui-aria2" target="_blank" rel="noopener">https://github.com/ziahamza/webui-aria2</a><br>使用命令：</p>
<pre><code>yum install git  #CentOS系统
apt-get install git  #Debian和Ubuntu系统
cd /var/caddywww &amp;&amp; rm -rf index.html
git clone https://github.com/ziahamza/webui-aria2.git
mv webui-aria2/* /var/caddywww</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>利用Caddy快速简单的部署反向代理/镜像，自动签发SSL证书</title>
    <url>/1847/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前关于反向代理教程发了好几个了，参考：利用Nginx反向代理来简单镜像HTTP(S)网站的方法，不过对比使用<code>Caddy</code>来反代的方法，还是麻烦了些，但是<code>Nginx</code>性能却好些，各有优点吧，一般不想折腾的就建议使用<code>Caddy</code>来反代，毕竟<code>Caddy</code>配置简单也支持自签<code>Let’s Encrypt SSL</code>证书，很方便。</p>
<h2 id="安装Caddy"><a href="#安装Caddy" class="headerlink" title="安装Caddy"></a>安装Caddy</h2><p>运行以下命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>以下所有示例域名为<code>toyoo.ml</code>，请注意替换为自己的域名 ！</p>
<p><strong>1、服务器IP反向代理</strong><br>下面是一个，用你服务器的<code>IP</code>来反向代理一个<code>http</code>协议的网站<code>http://www.baidu.com</code> 。</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行！
echo &quot;:80 {
 gzip
 proxy / http://www.baidu.com
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>服务器<code>IP</code>也可以反向代理<code>HTTPS</code>协议的网站，但是需要自签<code>SSL</code>证书，现在的浏览器一般都不会认自签的<code>SSL</code>证书，所以不建议这么做。</p>
<p><strong>2、域名反向代理HTTP</strong><br>下面是一个，用你的域名来反向代理一个<code>http</code>协议的网站<code>http://www.baidu.com</code>。</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行！
echo &quot;http://toyoo.ml {
 gzip
 proxy / http://www.baidu.com
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>如果你需要反向代理<code>HTTPS</code>协议的网站，比如<code>https://www.baidu.com</code>，那么继续看下面步骤。</p>
<p><strong>3、域名反向代理HTTPS</strong><br>如果你有<code>SSL</code>证书和密匙的话，把<code>SSL</code>证书(<code>xxx.crt</code>)和密匙(<code>xxx.key</code>)文件放到<code>/root</code>文件夹下（也可以是其他文件夹，自己改下面代码），然后这样做：</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行！
echo &quot;https://toyoo.ml {
 gzip
 tls /root/xxx.crt /root/xxx.key
 proxy / https://www.baidu.com
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>如果你没有<code>SSL</code>证书和密匙，那么你可以这样做：</p>
<p>下面的<code>xxxx@xxx.xx</code>改成你的邮箱，同时需要注意的是，申请<code>SSL</code>证书前，请务必提前解析好域名记录(解析后最好等一会，以全球生效)，否则<code>Caddy</code>会申请并配置失败！</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行！
echo &quot;https://toyoo.ml {
 gzip
 tls xxxx@xxx.xx
 proxy / https://www.baidu.com
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>如果一切正常，那么<code>Caddy</code>会自动帮你申请<code>SSL</code>证书并配置好，而且会定时续约<code>SSL</code>证书和强制<code>http</code>重定向至<code>https</code>！</p>
<p><strong>4、HTTP重定向为HTTPS</strong><br>当你是手动指定<code>SSL</code>证书和密匙 来配置的话，<code>Caddy</code>只会监听<code>443</code>端口(<code>https</code>)，并不会自动设置<code>80</code>端口(<code>http</code>)的重定向（如果是<code>Caddy</code>自动申请的<code>SSL</code>证书，那么就自动做好了），如果要做重定向的话，可以这样做：</p>
<p>下面的示例代码中，是把<code>http://toyoo.ml</code>、<code>http://233.toyoo.ml</code>、<code>https://666.toyoo.ml</code>三个域名都重定向到了 <code>https://toyoo.ml</code>。</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行！
echo &quot;http://toyoo.ml ,http://233.toyoo.ml ,https://666.toyoo.ml {
 redir https://toyoo.ml{url}
}
https://toyoo.ml {
 gzip
 tls /root/xxx.crt /root/xxx.key
 proxy / https://www.baidu.com
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>修改完<code>Caddy</code>的配置文件后，重启<code>Caddy</code>即可。</p>
<pre><code>/etc/init.d/caddy restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>利用Flexget给Transmission添加RSS功能</title>
    <url>/2194/</url>
    <content><![CDATA[<p><strong>说明：</strong>很久前发过一个<code>Transmission+H5ai</code>脚本，安装快使用也方便，查看：Debian/Ubuntu系统安装Transmission+h5ai实现离线BT下载，然后近期脚本作者萌咖根据该脚本，添加了<code>RSS</code>功能，使我们可以自动挂<code>PT</code>等，不过得配合另一种脚本完成，这里就分享下。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>1、只添加了简单的规则(需要自定义)。<br>2、已配置开机自启动。<br>3、用户验证依赖于<code>Nginx</code>。</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>1、设置的默认密码为<code>MoeClub.org</code>。<br>2、利用<code>Nginx</code>反代本地<code>Flexget</code>端口，来取消<code>Flexget</code>自带的用户验证。<br>3、可以利用<code>Nginx</code>的用户名密码验证功能，不用记忆多个密码就可以轻松管理。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>注意：</strong>该脚本需要配合文章开头说的<code>Transmission+H5ai</code>脚本一起使用。</p>
<pre><code>wget --no-check-certificate -qO &apos;/tmp/Debian_Flexget.sh&apos; &apos;https://moeclub.org/attachment/LinuxShell/Debian_Flexget.sh&apos; &amp;&amp; bash /tmp/Debian_Flexget.sh
#备用命令
wget --no-check-certificate -qO &apos;/tmp/Debian_Flexget.shh&apos; &apos;https://www.southcat.net/usr/down/PT/Debian_Flexget.sh&apos; &amp;&amp; bash /tmp/Debian_Flexget.sh</code></pre><p><code>Flexget</code>管理面板：<code>http://site.name/flex</code>，如要使用更多功能请查看官网的使用说明：<a href="https://flexget.com。" target="_blank" rel="noopener">https://flexget.com。</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>利用Caddy扩展快速安装FileManager(Filebrowser)私人网盘/在线文件管理器</title>
    <url>/1827/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>FileManager</code>安装方法之前说过，参考：一个基于GO的轻量级文件管理系统：FileManager安装教程，不过对于小白来说，还是有点麻烦，刚刚看到逗比那里也有个安装方法，很方便。</p>
<pre><code>提示：目前FileManager已更名为Filebrowser</code></pre><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/FileManager_caddy.gif" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="Caddy-FileManager扩展介绍"><a href="#Caddy-FileManager扩展介绍" class="headerlink" title="Caddy FileManager扩展介绍"></a>Caddy FileManager扩展介绍</h2><p><code>FileManager</code>是基于<code>Caddy</code>的扩展。它提供文件管理界面，可用于上传/下载/删除/预览和重命名等该目录中的文件。</p>
<ul>
<li>支持 上传文件</li>
<li>支持 按类型 搜索文件</li>
<li>支持 批量压缩 文件下载</li>
<li>支持 多用户管理(权限可控)</li>
<li>支持 在网页执行 <code>Linux</code>命令</li>
<li>支持 创建 共享链接(限时/永久)</li>
<li>支持 在线编辑 各类文本文件</li>
<li>支持 在线浏览 图片/文本/视频等</li>
<li>支持 新建/重命名/移动/删除 文件和文件夹等</li>
<li>部署简单，几步完成，无需任何依赖环境</li>
<li>等等 …</li>
</ul>
<h2 id="安装Caddy"><a href="#安装Caddy" class="headerlink" title="安装Caddy"></a>安装Caddy</h2><p><strong>Caddy文档：</strong><a href="https://caddyserver.com/docs/http.filebrowser" target="_blank" rel="noopener">https://caddyserver.com/docs/http.filebrowser</a><br><strong>Github项目：</strong><a href="https://github.com/hacdias/filebrowser" target="_blank" rel="noopener">https://github.com/hacdias/filebrowser</a></p>
<p>运行以下命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh install http.filebrowser
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh install http.filebrowser</code></pre><p>安装成功后，继续新建一个用于使用的虚拟主机文件夹，例如<code>file</code>（可以自己改）：</p>
<pre><code>mkdir /usr/local/caddy/www &amp;&amp; mkdir /usr/local/caddy/www/file</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>1、IP访问</strong><br>绑定虚拟主机为<code>IP</code>（即通过<code>IP</code>访问），<code>HTTP</code>协议（<code>80</code>端口）。</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行！
echo &quot;:80 {
 root /usr/local/caddy/www/file
 timeouts none
 gzip
 filebrowser / /usr/local/caddy/www/file {
  database /usr/local/caddy/filebrowser.db
 }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><strong>2、域名HTTP访问</strong><br>本示例是，绑定虚拟主机为域名（即通过域名访问），<code>HTTP</code>协议（<code>80</code>端口）。</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行（注意替换示例域名）！
echo &quot;http://southcat.net {
 root /usr/local/caddy/www/file
 timeouts none
 gzip
 filebrowser / /usr/local/caddy/www/file {
  database /usr/local/caddy/filebrowser.db
 }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><strong>3、域名HTTPS访问</strong><br>本示例是，绑定虚拟主机为域名（即通过域名访问），<code>HTTPS</code>协议（<code>443</code>端口）。</p>
<p>如果你有<code>SSL</code>证书和密匙的话，把<code>SSL</code>证书(<code>xxx.crt</code>)和密匙(<code>xxx.key</code>)文件放到<code>/root</code>文件夹下（也可以是其他文件夹，自己改下面代码），然后这样做：</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行（注意替换示例域名）！
echo &quot;https://southcat.net {
 root /usr/local/caddy/www/file
 timeouts none
 tls /root/xxx.crt /root/xxx.key
 gzip
 filebrowser / /usr/local/caddy/www/file {
  database /usr/local/caddy/filebrowser.db
 }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>如果你没有<code>SSL</code>证书和密匙，那么你可以这样做：</p>
<p>下面的<code>xxxx@xxx.xx</code>改成你的邮箱，同时需要注意的是，申请<code>SSL</code>证书前，请务必提前解析好域名记录(解析后最好等一会，以全球生效)，否则<code>Caddy</code>会申请并配置失败！</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行（注意替换示例域名）！
echo &quot;https://southcat.net {
 root /usr/local/caddy/www/file
 timeouts none
 tls xxxx@xxx.xx
 gzip
 filebrowser / /usr/local/caddy/www/file {
  database /usr/local/caddy/filebrowser.db
 }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><strong>4、域名HTTP重定向HTTPS</strong><br>本示例是，域名<code>HTTP</code>重定向为<code>HTTPS</code>。</p>
<p>当你是手动指定<code>SSL</code>证书和密匙 来配置的话，<code>Caddy</code>只会监听<code>443</code>端口(<code>https</code>)，并不会自动设置<code>80</code>端口(<code>http</code>)的重定向，如果要做重定向的话，可以这样做：</p>
<p>下面的示例代码中，是把<code>http://southcat.net</code>重定向到了<code>https://southcat.net</code>。</p>
<pre><code># 以下全部内容是一个整体，是一个命令，全部复制粘贴到SSH软件中并一起执行（注意替换示例域名）！
echo &quot;http://southcat.net {
 timeouts none
 redir https://southcat.net{url}
}
https://southcat.net {
 root /usr/local/caddy/www/file
 timeouts none
 tls /root/xxx.crt /root/xxx.key
 gzip
 filebrowser / /usr/local/caddy/www/file {
  database /usr/local/caddy/filebrowser.db
 }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>当你已经配置完上面步骤后，那就需要启动<code>Caddy</code>了。</p>
<pre><code>/etc/init.d/caddy start
# 如果启动失败可以看Caddy日志： tail -f /tmp/caddy.log</code></pre><p>最后就可以通过<code>ip</code>访问<code>filemanager</code>了，用户名和密码均为<code>admin</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>利用IDM工具高速下载百度云大文件教程</title>
    <url>/1566/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Internet Download Manager(IDM)</code>是国外的一款优秀下载工具，号称可以提高5倍的下载速度, ，安排下载时程，或续传一半的软件。</p>
<p>这里从网上找了个绿色免安装破解版软件，本地下载地址：IDM v6.28.6</p>
<p>官方网站：<a href="http://www.internetdownloadmanager.com" target="_blank" rel="noopener">http://www.internetdownloadmanager.com</a></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>1、先去获取百度云文件的链接地址，方法可以参考：百度网盘直接下载助手 Tampermonkey（油猴）脚本</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>利用Python3脚本监控whmcs是否有货，并邮件或者微信提醒</title>
    <url>/1912/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般很多商家都喜欢使用<code>whmcs</code>面板卖东西，特别是<code>VPS</code>主机商，有时候很多服务器都是只卖一会就没了，很容易错过自己喜欢的<code>VPS</code>，所以我们需要个监控，之前好像发过一个服务器库存监控教程，参考：PHP VPS库存监控系统搭建教程，不过经常要去看，有点不方便，这里再分享个<code>VPS</code>库存监控教程，可以邮箱或者微信提醒，很方便。</p>
<p>以下脚本需要<code>Python3</code>环境，一般大多数新系统都自带<code>Python3</code>，使用<code>python -V</code>命令可查看<code>Python</code>版本，<code>CentOS</code>升级教程参考：Linux CentOS升级Python 3.6版本方法。</p>
<h2 id="邮箱提醒"><a href="#邮箱提醒" class="headerlink" title="邮箱提醒"></a>邮箱提醒</h2><p>本脚本基于<code>python3</code>+<code>sendmail</code>实现，这里只说<code>CentOS</code>系统。注意邮件<code>25</code>端口得打开，可能有的主机商会直接屏蔽<code>25</code>端口，直接发工单要他开。</p>
<p><strong>1、安装sendmail</strong></p>
<pre><code>yum install sendmail -y
service sendmail start
chkconfig sendmail on</code></pre><p><strong>2、下载并编辑脚本</strong></p>
<pre><code>wget https://www.southcat.net/usr/down/vpsyx.py</code></pre><p>然后我们使用<code>vi</code>命令编辑，将脚本中的<code>url</code>里的网址换为其它<code>whmcs</code>即可实现监控其它网址，不会使用<code>vi</code>的，用<code>FTP</code>软件比如<code>WinSCP</code>登录<code>VPS</code>后操作。</p>
<pre><code>#脚本代码如下
from sys import argv
from urllib import request
from os import system
try:
 flag=0
 while True:
    url=&apos;https://einstein.enoctus.co.uk/cart.php?a=add&amp;pid=&apos;+argv[1]
    header={&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&apos;}
    req=request.Request(url,headers=header)
    page=request.urlopen(req).read()
    with open(&apos;content.txt&apos;,&apos;w&apos;) as f:
        f.write(&apos;有货了，链接是:&apos;+url)
    if str(page).find(&apos;out of stock&apos;)&gt;0:
        flag=0
        print(&apos;无货&apos;)
    else:
        flag=flag+1
        print(&apos;有货&apos;)
        if flag&lt;3:
            system(&quot;mail -s &apos;有货了&apos; {0} &lt; content.txt&quot;.format(argv[2]))

except:
    print(&apos;脚本异常,退出&apos;)&quot;</code></pre><p><strong>3、使用</strong><br>运行以下命令：</p>
<pre><code>#pid为产品号，即链接最后面的数字
python vpsyx.py pid 邮箱</code></pre><h2 id="微信提醒"><a href="#微信提醒" class="headerlink" title="微信提醒"></a>微信提醒</h2><p>本脚本基于<code>python3</code>+方糖实现微信推送。</p>
<p><strong>1、下载脚本并编辑</strong></p>
<pre><code>wget https://www.southcat.net/usr/down/vpswx.py</code></pre><p>然后我们使用<code>vi</code>命令编辑，将脚本中的<code>url</code>里的网址换为其它<code>whmcs</code>即可实现监控其它网址，修改<code>pid</code>为你想要监控的套餐<code>pid</code>，并修改<code>sckey</code>为你自己的方糖<code>key</code>。不会使用<code>vi</code>的，用<code>FTP</code>软件比如<code>WinSCP</code>登录<code>VPS</code>后操作。</p>
<p>不知道方糖的，去<code>Server</code>酱首页（<a href="https://sc.ftqq.com/），按照要求申请`key`。" target="_blank" rel="noopener">https://sc.ftqq.com/），按照要求申请`key`。</a></p>
<pre><code>#脚本代码如下
from sys import argv
from urllib import request,parse
from os import system
import datetime
import time
sckey=&quot;xxxxx&quot;  #替换为你自己的方糖key
pid=93  #替换为你想要监控的套餐pid

url=&apos;https://einstein.enoctus.co.uk/cart.php?a=add&amp;pid=%s&apos; % (pid)  #替换为监控的套餐地址
try:
    flag=0
    oktime=datetime.datetime.now()
    oktime.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)
    outoftime=datetime.datetime.now()
    outoftime.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)
    while True:
        header={&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36&apos;}
        req=request.Request(url,headers=header)
        page=request.urlopen(req).read()
        if str(page).find(&apos;out of stock&apos;)&gt;0:
            if flag&gt;0:
                outoftime=datetime.datetime.now()
                outoftime.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)
                timeout=&apos;本轮次上货持续时间:%s&apos; % (outoftime-oktime)
                print(timeout)
                tile=&apos;%s%s&apos; % (&apos;缺货提醒&apos;,timeout)
                textmod={&apos;text&apos;:tile,&apos;desp&apos;:url}
                textmod = parse.urlencode(textmod)
                urlsc=&apos;https://sc.ftqq.com/%s.send&apos; % (sckey)
                req1=request.Request(url=&apos;%s%s%s&apos; % (urlsc,&apos;?&apos;,textmod),headers=header)
                page1=request.urlopen(req1).read()
            flag=0
            print(&apos;缺货,10秒后将再次检测&apos;)
            time.sleep(10)
        else:
            if flag==0:
                oktime=datetime.datetime.now()
                oktime.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)
                timeok=&apos;本轮缺货持续时间:%s&apos; % (oktime-outoftime)
                print(timeok)
                tile=&apos;%s%s&apos; % (&apos;上货提醒&apos;,timeok)
                textmod={&apos;text&apos;:tile,&apos;desp&apos;:url}
                textmod = parse.urlencode(textmod)
                urlsc=&apos;https://sc.ftqq.com/%s.send&apos; % (sckey)
                req1=request.Request(url=&apos;%s%s%s&apos; % (urlsc,&apos;?&apos;,textmod),headers=header)
                page1=request.urlopen(req1).read()
            flag=flag+1
            print(&apos;有货&apos;)
            if flag&lt;3:
                tile=&apos;%s%s&apos; % (&apos;上货提醒&apos;,flag)
                textmod={&apos;text&apos;:tile,&apos;desp&apos;:url}
                textmod = parse.urlencode(textmod)
                urlsc=&apos;https://sc.ftqq.com/%s.send&apos; % (sckey)
                req1=request.Request(url=&apos;%s%s%s&apos; % (urlsc,&apos;?&apos;,textmod),headers=header)
                page1=request.urlopen(req1).read()
except:
    print(&apos;脚本异常,退出&apos;)</code></pre><p><strong>2、使用方法</strong><br>运行以下命令：</p>
<pre><code>python vpswx.py</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>利用Nginx反向代理来简单镜像HTTP(S)网站的方法</title>
    <url>/1676/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一个反代教程：Linux Centos下Nginx反代教程，现在发个<code>Debian</code>下反代<code>HTTP</code>(<code>S</code>)网站的教程。</p>
<h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><p><strong>系统要求：</strong><code>Debian 7</code></p>
<pre><code>echo &quot;deb http://packages.dotdeb.org wheezy all&quot; &gt;&gt; /etc/apt/sources.list
apt-get update
apt-get install nginx
# 安装会提示输入两次 Y 来继续安装。</code></pre><p>安装完毕之后输入<code>nginx -v</code> ，查看<code>nginx</code>的版本，确定是否安装完成。</p>
<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>找到下面这个文件，然后修改。</p>
<pre><code>vi /etc/nginx/sites-available/default</code></pre><p>按照下面的示例修改完毕后就重启<code>Nginx</code>：</p>
<pre><code>service nginx restart</code></pre><p>然后访问你的域名看一看是否成功镜像，需要注意的一点是，如果被镜像的网站设置了防盗链，那么静态文件(<code>js</code>/<code>css</code>/图片)可能无法显示，这就没办法了。</p>
<p><strong>1、HTTP示例</strong><br>一般情况下只需要更改这几个参数。</p>
<pre><code>server_name 你的域名;
sub_filter 欲被镜像的域名 你的域名;
proxy_set_header Referer http://欲被镜像的域名
proxy_set_header Host 欲被镜像的域名
proxy_pass http://欲被镜像的域名</code></pre><p>以下示例是以<code>go.doubi.date</code>镜像<code>www.baidu.com</code>为例。自行替换其中的参数：</p>
<p>第二段是屏蔽搜索引擎收录，比如镜像自己的网站，如果不屏蔽会导致收录流失。</p>
<pre><code>server
    {
        listen 80;
        server_name go.doubi.date;

        if ($http_user_agent ~* (baiduspider|360spider|haosouspider|googlebot|soso|bing|sogou|yahoo|sohu-search|yodao|YoudaoBot|robozilla|msnbot|MJ12bot|NHN|Twiceler)) {
        return  403;
        }

        location / {
        sub_filter www.baidu.com go.doubi.date;
        sub_filter_once off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Referer http://www.baidu.com
        proxy_set_header Host www.baidu.com
        proxy_pass http://www.baidu.com
        proxy_set_header Accept-Encoding &quot;&quot;;
        }
}</code></pre><p><strong>2、HTTPS示例</strong><br>当你要镜像的网站不开放<code>HTTP</code>或者强制<code>HTTPS</code>的时候，你就需要加上<code>SSL</code>来转成<code>HTTPS</code>了。<br>假设<code>SSL</code>证书文件位置是：<code>/root/ssl.crt</code>。<br>假设<code>SSL</code>密匙文件位置是：<code>/root/ssl.key</code>。<br>第二段的<code>301</code>码是，强制走<code>HTTPS</code>，如果不需要可以去掉。<br>第三段是屏蔽搜索引擎收录，比如镜像自己的网站，如果不屏蔽会导致收录流失。<br>同时下面这两个选项的记得把<code>http://</code>改成<code>https://</code>。</p>
<pre><code>proxy_set_header Referer https://www.baidu.com
proxy_pass https://www.baidu.com


server
    {
        listen 80;
        listen 443 ssl;
        ssl on;
        ssl_certificate /root/ssl.crt;
        ssl_certificate_key /root/ssl.key;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout  10m;
        server_name go.doubi.date;
        add_header Strict-Transport-Security &quot;max-age=31536000&quot;;

        if ( $scheme = http ){
            return 301 https://$server_name$request_uri;
        }

        if ($http_user_agent ~* (baiduspider|360spider|haosouspider|googlebot|soso|bing|sogou|yahoo|sohu-search|yodao|YoudaoBot|robozilla|msnbot|MJ12bot|NHN|Twiceler)) {
        return  403;
        }

        location / {
        sub_filter www.baidu.com go.doubi.date;
        sub_filter_once off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Referer https://www.baidu.com
        proxy_set_header Host www.baidu.com
        proxy_pass https://www.baidu.com
        proxy_set_header Accept-Encoding &quot;&quot;;
        }
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>利用SSH客户端修改Linux VPS的ROOT密码</title>
    <url>/1446/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人买来<code>VPS</code>发现默认的密码太长，又不好记，想要个简单的密码，可是后台又改不了，只能通过<code>SSH</code>客户端改密码了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>加油你要努力跳出去</title>
    <url>/667/</url>
    <content><![CDATA[<p>努力努力。</p>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
  </entry>
  <entry>
    <title>利用wpsupercache和cdn加速你的wp网站</title>
    <url>/710/</url>
    <content><![CDATA[<p>今天终于抽出时间搞完了cdn和缓存的配置</p>
<p>并发从之前20并发就可以搞死到现在500并发测试也可以勉强扛过去，确实cdn和缓存是个好东西，但是我有点慌流量。</p>
<p>supercache缓存除了首页之外的文件 然后插件里面配置cdn 利用上传工具静态文件全部上传七牛，然后七牛cdn加速对象存储，完成。</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>博客将不定期赠送DigitalOcean $50优惠码</title>
    <url>/2115/</url>
    <content><![CDATA[<p><strong>说明：</strong>博客玩了这么久了，还没发过一次福利，现在先发下<code>DigitalOcean $50</code>优惠码，以后会发放更多的福利，<code>Do</code>码差不多每隔几天都会送一次，有需求的可以关注下。</p>
<h2 id="码子说明"><a href="#码子说明" class="headerlink" title="码子说明"></a>码子说明</h2><ul>
<li>优惠码仅适用于新账户，即需要一个新的<code>paypal</code>账户或信用卡将新注册的账户激活后就可以使用优惠码。</li>
<li>使用优惠码后账户可获得<code>$50</code>的余额，走<code>AFF</code>链接会获取<code>$50+$10</code>余额，该链接下面会提供，余额有效期为<code>1</code>年。</li>
</ul>
<h2 id="领取说明"><a href="#领取说明" class="headerlink" title="领取说明"></a>领取说明</h2><ul>
<li>为了让更多人得到，优惠码不会直接放出来，而是通过评论的方式，有需求的在下方评论说下，顺便发个邮件到<code>moerats@live.com</code>邮箱，内容就是评论时填的名称，到时候我会一个个将优惠码回过去的。</li>
<li>只有在送码的时候发送邮箱才有效，平常博主会无视。</li>
<li>送码会很频繁，具体时间会在下方公布，且每人每次只给一个，每次<code>5</code>个以上，具体看情况。</li>
<li>没需求的，或者领过的，或者没有新的<code>paypal</code>账户的，可以尽量将码子让给其它人。</li>
</ul>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>如果你想直接使用优惠码，就去官网注册，官网地址：<a href="https://www.digitalocean.com，必须从此链接进去注册。" target="_blank" rel="noopener">https://www.digitalocean.com，必须从此链接进去注册。</a></p>
<pre><code>1、登陆DigitalOcean账号。
2、打开页面：https://cloudsupport.digitalocean.com/s/createticket。
3、下拉框，选择Billing。
4、第二个下拉框，选择Promo and Credit。
5、Subject:
I have a promo code from Github.
6、Search for a Related Droplet:
不填
7、Describe the problem you’re having in great detail:
Promo Code:
*#FCK#jd^@GITHUB-xxxxxxxx</code></pre><h2 id="送码预告"><a href="#送码预告" class="headerlink" title="送码预告"></a>送码预告</h2><pre><code>1月4日已结束！7日已结束！12号已结束！17号已结束！18号已结束！21号已结束！28号已结束！2月18已结束！3月2号已结束！</code></pre><h2 id="赞助列表"><a href="#赞助列表" class="headerlink" title="赞助列表"></a>赞助列表</h2><pre><code>#感谢赞助过的大佬
2018年由萌咖赞助，附上地址：
萌咖博客：https://moeclub.org
萌咖杂货店：https://shop.moeclub.org/，该杂货铺售卖很多小商品，有兴趣可以看看。

2019年由博主和秋叶花博客一起赞助，附上地址：
秋叶花博客：addmoe.com</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>博客已搬到ImpactVPS，顺便说下网站快速搬家的方法</title>
    <url>/1860/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前博客是放在<code>Vultr</code>日本服务器上，不过由于网络等一些因素，不少人反馈需要<code>FQ</code>才能访问，为了尽量减少这种情况，只能选择搬家了，刚好手上还有个闲置的<code>ImpactVPS</code>小鸡，先搬到这里再说，毕竟这家还是比较稳定的。这里顺便说下快速搬家方法。</p>
<p>00:00</p>
<p><strong>加载中……</strong> 请稍等……</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>博客使用的是<code>lnmp</code>环境，所以在这里主要说这个，其它环境或者虚拟主机的方法其实都差不多，照葫芦画瓢就可以了，而且搬家之前网站域名解析什么都先不要动。</p>
<p>1、首先在新的<code>VPS</code>服务器上搭建环境，比如<code>lnmp</code>等，且最好与之前网站的环境一致，包括数据库密码等。</p>
<p>2、然后在之前的服务器上将网站根目录打包，并放在网站根目录，使用命令参考：</p>
<pre><code>cd /home/wwwroot/xx.com
tar zcvf blog.tar.gz /home/wwwroot/xx.com</code></pre><p>3、在新的服务器上下载旧服务器打包的文件并解压，使用命令参考：</p>
<pre><code>wget http://xx.com/blog.tar.gz &amp;&amp; tar zxvf blog.tar.gz  &amp;&amp; rm -rf blog.tar.gz</code></pre><p>4、然后在新服务器上使用<code>lnmp vhost add</code>命令添加域名，一般<code>lnmp</code>等都有自动签发<code>SSL</code>证书功能，使用这个的话，就必须先解析域名并生效，这样网站容易造成短时间无法访问的情况。所以使用自签<code>SSL</code>的，最好在访问量最少的时候操作，如果使用的是自己准备的<code>SSL</code>证书的就先不要换域名解析。并将证书放到原位置再进行操作。</p>
<p>如果之前在旧服务器上有编辑过域名<code>xx.com.conf</code>配置文件的，再去新服务器重新编辑下，或者直接用之前的文件替换掉。</p>
<p>5、在新服务器上将备份文件移动到根目录，使用命令参考：</p>
<pre><code>mv /root/home/wwwroot/xx.com/{.,}* /home/wwwroot/xx.com/</code></pre><p>6、最后添加数据库并上传数据，然后修改电脑上<code>hosts</code>文件检查是否搬家成功，文件所在目录<code>C:\Windows\System32\drivers\etc</code>，在里面加上一行：</p>
<pre><code>#前面为域名，后面为新服务器的IP
www.southcat.net 22.33.44.55</code></pre><p>保存后，重新打开域名，这时候虽然没改域名解析，但你在本地电脑等于解析到了新服务器，这时候你可以仔细检查，觉得没问题了就将域名解析到新的<code>VPS</code>服务器，等待片刻，博客就不知不觉的转过来了。</p>
<p>数据库可以去<code>http://ip/phpmyadmin</code>手动备份。也可以使用命令去旧服务器备份下来，再去新服务器上传，可参考：使用Mysqldump备份和还原MySQL数据库。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>双边网络加速工具：UDPspeeder使用教程，可以加速全流量(包括TCP/UDP/ICMP)</title>
    <url>/1785/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>UDPspeeder</code>是一个网络加速工具，作用和<code>BBR</code>，<code>KCP</code>差不多，据说速度和<code>kcp</code>差不多，但不会像<code>kcp</code>会有断流现象。当然也会很烧流量，有兴趣的可以试试。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>双边网络加速工具，软件本身的功能是加速<code>UDP</code> ，不过，配合任意<code>udp</code>协议的<code>DaiL</code>可以加速全流量(包括<code>TCP</code>/<code>UDP</code>/<code>ICMP</code>)。通过合理配置，可以加速游戏，降低游戏的丢包和延迟，也可以加速下载和看视频这种大流量的应用。</p>
<p>跟<code>kcptun</code>/<code>finalspeed</code>/<code>BBR</code>等现有方案比，主要优势是可以加速<code>UDP</code>和<code>ICMP</code>，现有方案几乎都只能加速<code>TCP</code>。</p>
<p>另外，可以和udp2raw一起使用，在加速的同时把<code>UDP</code>伪装成<code>TCP</code>，防止大流量<code>UDP</code>被运营商<code>QOS</code>或屏蔽。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><strong>1、加速原理图</strong><br><img src="https://www.southcat.net/usr/picture/UDPspeeder(1).PNG" alt="请输入图片描述" title="请输入图片描述"><br><strong>2、测试效果图</strong><br><img src="https://www.southcat.net/usr/picture/UDPspeeder(2).PNG" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/UDPspeeder(3).PNG" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="原理简介"><a href="#原理简介" class="headerlink" title="原理简介"></a>原理简介</h2><p>主要原理是通过发冗余数据来对抗网络的丢包，发送冗余数据的方式支持<code>FEC</code>(<code>Forward Error Correction</code>)和多倍发包，其中<code>FEC</code>算法是<code>Reed-Solomon</code>。</p>
<p>对于<code>FEC</code>方式的原理图：<br><img src="https://www.southcat.net/usr/picture/UDPspeeder(4).PNG" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="支持的平台"><a href="#支持的平台" class="headerlink" title="支持的平台"></a>支持的平台</h2><p>几乎任何<code>Linux</code>主机，可以是桌面版，可以是<code>android</code>手机/平板，可以是<code>openwrt</code>路由器，也可以是树莓派。</p>
<p>在<code>windows</code>和<code>mac</code>上配合虚拟机可以稳定使用（<code>speeder</code>跑在<code>Linux</code>里，其他应用照常跑在<code>window</code>里）。可以使用这个虚拟机镜像，大小只有<code>7.5mb</code>。</p>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><strong>repo：</strong> <a href="https://github.com/wangyu-/UDPspeeder/" target="_blank" rel="noopener">https://github.com/wangyu-/UDPspeeder/</a><br><strong>中文主页：</strong><a href="https://github.com/wangyu-/UDPspeeder/blob/master/doc/README.zh-cn.md" target="_blank" rel="noopener">https://github.com/wangyu-/UDPspeeder/blob/master/doc/README.zh-cn.md</a><br><strong>编译好的binary下载：</strong> <a href="https://github.com/wangyu-/UDPspeeder/releases" target="_blank" rel="noopener">https://github.com/wangyu-/UDPspeeder/releases</a></p>
<h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><p><strong>1、VPS服务器配置</strong><br>先下载<code>UDPSpeeder</code>服务端并解压，下载地址：点击进入，使用命令：</p>
<pre><code>#目前最新编译好的二进制文件版本20180522.0
wget https://github.com/wangyu-/UDPspeeder/releases/download/20180522.0/speederv2_binaries.tar.gz
tar zxvf speederv2_binaries.tar.gz</code></pre><p>此时假设你服务器<code>ip</code>为<code>44.55.66.77</code>，有一个服务监听在<code>udp 7777</code>端口上，比如<code>55R</code>，运行如下命令：</p>
<pre><code>#此为游戏场景的推荐设置
./speederv2_amd64 -s -l0.0.0.0:4096 -r127.0.0.1:7777   -k &quot;passwd&quot;  -f2:4 --timeout 1</code></pre><p>如果关闭<code>SSH</code>客户端，<code>UDPSpeeder</code>会停止运行，同样建议配合<code>nohup</code>或<code>screen</code>保持后台运行，查看教程：使用screen来实现多任务不断线操作命令。更多推荐配置查看：点击查看。</p>
<p><strong>2、Win客户端配置</strong><br>客户端下载地址和上面一样，点击进入。下载<code>speederv2_windows.zip</code>文件，并解压到<code>C</code>盘<code>C:\Users\Administrator</code>文件夹。</p>
<p>然后点击<code>Win+R</code>，然后输入<code>cmd</code>，运行命令：</p>
<pre><code>speederv2.exe -c -l0.0.0.0:3333 -r44.55.66.77:4096 -k &quot;passwd&quot;  -f2:4 --timeout 1</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>可以在线查看WordPress网站使用的主题和插件的网站</title>
    <url>/1601/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候看到别人的网站就很喜欢别人的主题，想知道别人所使用的主题插件，这里一般都可以通过源代码查看，但相对于可以直接查看的网站来说麻烦多了，这里分享3个可以在线查看<code>WordPress</code>网站使用的主题和插件的网站。</p>
<p><strong>1、whatwpthemeisthat</strong><br>该站是直接从<code>WordPress</code>资源库调用的数据，一般没有上传到官方平台的是看不到的。</p>
<pre><code>http://whatwpthemeisthat.com/</code></pre><p><strong>2、WPThemeDetector</strong><br>该站差不多可以检测出<code>WordPress</code>站任何主题和插件，属于比较全面的。</p>
<pre><code>http://www.wpthemedetector.com/


http://whattheme.com/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>可以满速下载百度云文件的工具：百度网盘下载器 v1.5.0</title>
    <url>/1905/</url>
    <content><![CDATA[<p><strong>说明：</strong>这个软件就不过多介绍了，挺好用的，之前也分享了几个高速下载百度云文件的方法，参考：百度网盘不限速下载工具-dpdownload v2.1.3，利用IDM工具高速下载百度云大文件教程，博主是经常使用<code>EagleGet</code>下载器配合百度网盘直接下载助手来高速下载百度云文件，有兴趣的也可以试试。</p>
<p><strong>注意：</strong>软件暂时被作者关闭，已经不可使用，请使用百度下载助手+<code>EagleGet</code>或者<code>IDM</code>来高速下载百度网盘文件。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>【2018.01.16】<br>近期百度进行了一系列的打击措施，使用第三方下载器有可能导致账号下载功能被禁用。在收到部分用户反映这个问题后已紧急把软件关停了，防止更多人受到影响。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/PanDownload(1).gif" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>本地下载：</strong>PanDownload_v1.5.0.zip。</p>
<p><strong>1、增加连接数</strong><br>默认使用<code>16</code>连接，在设置里可以修改，最大<code>32</code>连接（通过修改<code>aria2</code>配置可设置更大，注意链接数并不是越大越好）。</p>
<p><strong>2、分享下载</strong><br>分享需要下载的文件 <code>-&gt;</code> 打开分享链接 <code>-&gt;</code> 下载 （文件数量尽量控制在10个以内，太多的话容易出验证码）。<br><img src="https://www.southcat.net/usr/picture/PanDownload(2).gif" alt="请输入图片描述" title="请输入图片描述"><br><strong>3、打包下载</strong><br>选中文件夹或多个文件 <code>-&gt;</code> 提取链接 <code>-&gt;</code> 复制下载链接到迅雷等下载器进行下载（单个文件提取到的链接速度慢）。<br><img src="https://www.southcat.net/usr/picture/PanDownload(3).gif" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>可以直接获取并下载Google Play APK的镜像站</title>
    <url>/1545/</url>
    <content><![CDATA[<p><strong>Google Play官网：</strong><code>https://play.google.com/store</code></p>
<p><strong>1、可以直接搜索应用名并下载的，但需要爬Q</strong></p>
<pre><code>http://apkleecher.com/


http://apk-dl.com/


https://apkpure.com/


http://www.apksmart.com/


https://tingyuan.me/apkdownload/


https://androidappsapk.co/apkdownloader/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>右下角浏览器：可伪装成弹窗广告的浏览器，学生和上班族必备</title>
    <url>/1730/</url>
    <content><![CDATA[<p><strong>说明：</strong>有很多学生在在机房学知识的时候，上班的在电脑前做正事的时候，都喜欢偷点懒，喜欢刷贴吧，百度，微博等等，却又怕被老师或者领导发现，一直提心吊胆，不过这个浏览器的出现可以很好的解决这个问题。使用这个浏览器的时候鼠标只要离开浏览器界面，浏览器自动会变成一个类似某些软件推送的广告一样，当你右键点击广告又会恢复成你刚才浏览的样子。是不是很神奇？</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>右下角浏览器-上班族偷偷上网的神器。</p>
<p>鼠标离开，伪装成弹窗广告；右击广告，回到刚才浏览的内容。</p>
<p>刷知乎、读公众号、看新闻、听喜马拉雅、追小说，做你想做的！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>在CentOS VPS上安装phpMyBackupPro，备份MySQL数据库</title>
    <url>/1451/</url>
    <content><![CDATA[<p>phpMyBackupPro：一款备份MySQL数据库的脚本，适用于CentOS VPS。</p>
<p><strong>要求：</strong><br>1、VPS系统为CentOS<br>2、PHP版本为4.3或更高<br>3、基于apache（可以修改为其它web服务器支持）</p>
<p><strong>安装：</strong></p>
<pre><code>wget http://downloads.sourceforge.net/project/phpmybackup/phpMyBackupPro/phpmyBackupPro 2.4/phpMyBackupPro-2.4.zip
unzip phpMyBackupPro-2.4.zip -d /opt/
chown -R apache: /opt/phpmybackup</code></pre><p><strong>编辑文件：</strong></p>
<pre><code>nano /etc/httpd/conf/phpmybackuppro.conf</code></pre><p>添加如下：</p>
<pre><code>Alias /phpmybackuppro /opt/phpmybackup/phpMyBackupPro

Options None
Order allow,deny
allow from all</code></pre><p><strong>编辑文件：</strong></p>
<pre><code>nano /etc/httpd/conf/httpd.conf</code></pre><p>在最后添加：</p>
<pre><code>Include /etc/httpd/conf/phpmybackuppro.conf</code></pre><p>保存，重启。</p>
<pre><code>/etc/init.d/httpd restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>在Debian/Ubuntu上使用rclone挂载OneDrive网盘</title>
    <url>/1926/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发了个<code>Google Drive</code>网盘挂载教程，参考：在Debian/Ubuntu上使用rclone挂载Google Drive网盘，然后博主想用同样的方法试试挂载<code>OneDrive</code>网盘，可是卡在了授权那里，然后只有请求<code>Vicer</code>大佬帮忙解决了，这里分享下挂载教程。</p>
<p><strong>提示：</strong>本教程挂载<code>OneDrive for Business</code>和个人版的方法都一样，这里以个人版为参考。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本教程只适用<code>Debian</code>/<code>Ubuntu</code>系统，如果你是<code>CentOS</code>或者其它<code>Linux</code>系统，请使用以下命令安装<code>rclone</code>：</p>
<pre><code>curl https://rclone.org/install.sh | sudo bash</code></pre><p>客户端授权、初始化配置和挂载方法和下面一样，开机自启可参考该教程→传送门。</p>
<h2 id="客户端授权"><a href="#客户端授权" class="headerlink" title="客户端授权"></a>客户端授权</h2><p>在本地<code>Windows</code>电脑上下载<code>rclone</code>，下载地址：<a href="https://rclone.org/downloads/。然后解压出来，比如我解压到`D`盘，文件夹命名`rclone`，此时点击`Win+R`，然后输入`cmd`，确定。再输入以下命令：" target="_blank" rel="noopener">https://rclone.org/downloads/。然后解压出来，比如我解压到`D`盘，文件夹命名`rclone`，此时点击`Win+R`，然后输入`cmd`，确定。再输入以下命令：</a></p>
<pre><code>cd /d d:\rclone
rclone authorize &quot;onedrive&quot;</code></pre><p>会出现以下信息：</p>
<pre><code>C:\Users\Administrator&gt;cd /d d:\rclone

d:\rclone&gt;rclone authorize &quot;onedrive&quot;
2018/01/23 20:28:56 NOTICE: Config file &quot;C:\\Users\\Administrator\\.config\\rclo
ne\\rclone.conf&quot; not found - using defaults
Choose OneDrive account type?
 * Say b for a OneDrive business account
 * Say p for a personal OneDrive account
b) Business
p) Personal
b/p&gt; p  #这里选择个人版，你想挂载Business就选择b
If your browser doesn&apos;t open automatically go to the following link: http://127.
0.0.1:53682/auth  #接下来会弹出浏览器，要求你登录账号进行授权
Log in and authorize rclone for access
Waiting for code...
Got code
Paste the following into your remote machine ---&gt;
{&quot;access_token&quot;:&quot;xxxx&quot;}  #请复制{xx}整个内容，后面需要用到
&lt;---End paste</code></pre><h2 id="安装rclone"><a href="#安装rclone" class="headerlink" title="安装rclone"></a>安装rclone</h2><p>本教程只适用<code>Debian</code>/<code>Ubuntu</code>系统，如果你是<code>CentOS</code>，请参考：<a href="https://rclone.org/install/，安装`rclone`。挂载方法和下面差不多。" target="_blank" rel="noopener">https://rclone.org/install/，安装`rclone`。挂载方法和下面差不多。</a></p>
<p><strong>1、安装rclone</strong></p>
<pre><code>wget https://www.southcat.net/usr/shell/rclone_debian.sh &amp;&amp; bash rclone_debian.sh</code></pre><p><strong>2、初始化配置</strong></p>
<pre><code>rclone config</code></pre><p>会出现以下信息：</p>
<pre><code>n) New remote
s) Set configuration password
q) Quit config
n/s/q&gt; n
name&gt; Rats  #随便填，后面要用到
Type of storage to configure.
Choose a number from below, or type in your own value
 1 / Amazon Drive
   \ &quot;amazon cloud drive&quot;
 2 / Amazon S3 (also Dreamhost, Ceph, Minio)
   \ &quot;s3&quot;
 3 / Backblaze B2
   \ &quot;b2&quot;
 4 / Box
   \ &quot;box&quot;
 5 / Cache a remote
   \ &quot;cache&quot;
 6 / Dropbox
   \ &quot;dropbox&quot;
 7 / Encrypt/Decrypt a remote
   \ &quot;crypt&quot;
 8 / FTP Connection
   \ &quot;ftp&quot;
 9 / Google Cloud Storage (this is not Google Drive)
   \ &quot;google cloud storage&quot;
10 / Google Drive
   \ &quot;drive&quot;
11 / Hubic
   \ &quot;hubic&quot;
12 / Local Disk
   \ &quot;local&quot;
13 / Microsoft Azure Blob Storage
   \ &quot;azureblob&quot;
14 / Microsoft OneDrive
   \ &quot;onedrive&quot;
15 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ &quot;swift&quot;
16 / Pcloud
   \ &quot;pcloud&quot;
17 / QingCloud Object Storage
   \ &quot;qingstor&quot;
18 / SSH/SFTP Connection
   \ &quot;sftp&quot;
19 / Webdav
   \ &quot;webdav&quot;
20 / Yandex Disk
   \ &quot;yandex&quot;
21 / http Connection
   \ &quot;http&quot;
Storage&gt; 14  #选择14，Microsoft OneDrive
Microsoft App Client Id - leave blank normally.
client_id&gt;  #留空 
Microsoft App Client Secret - leave blank normally.
client_secret&gt;  #留空 
Remote config
Choose OneDrive account type?
 * Say b for a OneDrive business account
 * Say p for a personal OneDrive account
b) Business
p) Personal
b/p&gt; p  #这里选择个人版，你想挂载Business就选择b
Use auto config?
 * Say Y if not sure
 * Say N if you are working on a remote or headless machine
y) Yes
n) No
y/n&gt; n  #选择n
For this to work, you will need rclone available on a machine that has a web browser available.
Execute the following on your machine:
    rclone authorize &quot;onedrive&quot;
Then paste the result below:
result&gt; {&quot;access_token&quot;:&quot;&quot;}  #输入之前在客户端授权的内容
--------------------
[Rats]
client_id = 
client_secret = 
token = {&quot;access_token&quot;:&quot;&quot;}
--------------------
y) Yes this is OK
e) Edit this remote
d) Delete this remote
y/e/d&gt; y  选择y
Current remotes:

Name                 Type
====                 ====
Rats                 onedrive

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; q  #选择q退出</code></pre><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><p><strong>1、挂载为磁盘</strong></p>
<pre><code>#新建本地文件夹，路径自己定，即下面的LocalFolder
mkdir /root/OneDrive
#挂载为磁盘，下面的DriveName、Folder、LocalFolder参数根据说明自行替换
rclone mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000</code></pre><p><code>DriveName</code>为初始化配置填的<code>name</code>，<code>Folder</code>为<code>OneDrive</code>里的文件夹，<code>LocalFolder</code>为<code>VPS</code>上的本地文件夹。</p>
<p>如果挂载过程中出现<code>NOTICE: One drive root &#39;test&#39;: poll-interval is not supported by this remote</code>错误，可以无视该错误。</p>
<p>挂载成功后，输入<code>df -h</code>命令查看即可！<br><img src="https://www.southcat.net/usr/picture/rclone_OD.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、卸载磁盘</strong></p>
<pre><code>fusermount -qzu LocalFolder</code></pre><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>先新建<code>systemd</code>配置文件，适用<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p>
<p>再使用命令：</p>
<pre><code>#将后面修改成你上面手动运行命令中，除了rclone的全部参数
command=&quot;mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000&quot;
#以下是一整条命令，一起复制到SSH客户端运行
cat &gt; /etc/systemd/system/rclone.service &lt;&lt;EOF
[Unit]
Description=Rclone
After=network-online.target

[Service]
Type=simple
ExecStart=$(command -v rclone) ${command}
Restart=on-abort
User=root

[Install]
WantedBy=default.target
EOF</code></pre><p>开始启动：</p>
<pre><code>systemctl start rclone</code></pre><p>设置开机自启：</p>
<pre><code>systemctl enable rclone</code></pre><p>其他命令：</p>
<pre><code>重启：systemctl restart rclone
停止：systemctl stop rclone
状态：systemctl status rclone</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>在Debian/Ubuntu上使用rclone挂载Google Drive网盘</title>
    <url>/1910/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多人喜欢用<code>VPS</code>做离线下载，不过由于有的服务器硬盘太小了，装不了太多电影资源啥的，我们就需要想办法了，之前说过可以通过挂载<code>FTP</code>来增大空间，参考：Linux VPS通过安装CurlFtpFS来挂载FTP，这里再说个挂载<code>Google Drive</code>网盘的方法，毕竟<code>Google Drive</code>有<code>15G</code>免费的空间，有的也有无限空间，都可以利用上去。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>本教程只适用<code>Debian</code>/<code>Ubuntu</code>系统，如果你是<code>CentOS</code>或者其它<code>Linux</code>系统，请使用以下命令安装<code>rclone</code>：</p>
<pre><code>curl https://rclone.org/install.sh | sudo bash</code></pre><p>初始化配置和挂载方法和下面一样，开机自启可参考该教程→传送门。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装rclone</strong></p>
<pre><code>wget https://www.southcat.net/usr/shell/rclone_debian.sh &amp;&amp; bash rclone_debian.sh</code></pre><p><strong>2、初始化配置</strong></p>
<pre><code>rclone config</code></pre><p>会出现以下信息：</p>
<pre><code>n) New remote
s) Set configuration password
q) Quit config
n/s/q&gt; n
name&gt; Rats  #配置名称，随便填
Type of storage to configure.
Enter a string value. Press Enter for the default (&quot;&quot;).
Choose a number from below, or type in your own value
 1 / 1Fichier
   \ &quot;fichier&quot;
 2 / Alias for an existing remote
   \ &quot;alias&quot;
 3 / Amazon Drive
   \ &quot;amazon cloud drive&quot;
 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)
   \ &quot;s3&quot;
 5 / Backblaze B2
   \ &quot;b2&quot;
 6 / Box
   \ &quot;box&quot;
 7 / Cache a remote
   \ &quot;cache&quot;
 8 / Dropbox
   \ &quot;dropbox&quot;
 9 / Encrypt/Decrypt a remote
   \ &quot;crypt&quot;
10 / FTP Connection
   \ &quot;ftp&quot;
11 / Google Cloud Storage (this is not Google Drive)
   \ &quot;google cloud storage&quot;
12 / Google Drive
   \ &quot;drive&quot;
13 / Google Photos
   \ &quot;google photos&quot;
14 / Hubic
   \ &quot;hubic&quot;
15 / JottaCloud
   \ &quot;jottacloud&quot;
16 / Koofr
   \ &quot;koofr&quot;
17 / Local Disk
   \ &quot;local&quot;
18 / Mega
   \ &quot;mega&quot;
19 / Microsoft Azure Blob Storage
   \ &quot;azureblob&quot;
20 / Microsoft OneDrive
   \ &quot;onedrive&quot;
21 / OpenDrive
   \ &quot;opendrive&quot;
22 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ &quot;swift&quot;
23 / Pcloud
   \ &quot;pcloud&quot;
24 / Put.io
   \ &quot;putio&quot;
25 / QingCloud Object Storage
   \ &quot;qingstor&quot;
26 / SSH/SFTP Connection
   \ &quot;sftp&quot;
27 / Union merges the contents of several remotes
   \ &quot;union&quot;
28 / Webdav
   \ &quot;webdav&quot;
29 / Yandex Disk
   \ &quot;yandex&quot;
30 / http Connection
   \ &quot;http&quot;
31 / premiumize.me
   \ &quot;premiumizeme&quot;
Storage&gt; 12  #选择12，Google Drive
Google Application Client Id - leave blank normally.
client_id&gt;  #留空 
Google Application Client Secret - leave blank normally.
client_secret&gt;  #留空
Service Account Credentials JSON file path - needed only if you want use SA instead of interactive login.
service_account_file&gt;  #留空
Choose a number from below, or type in your own value
 1 / Full access all files, excluding Application Data Folder.
   \ &quot;drive&quot;
 2 / Read-only access to file metadata and file contents.
   \ &quot;drive.readonly&quot;
   / Access to files created by rclone only.
 3 | These are visible in the drive website.
   | File authorization is revoked when the user deauthorizes the app.
   \ &quot;drive.file&quot;
   / Allows read and write access to the Application Data folder.
 4 | This is not visible in the drive website.
   \ &quot;drive.appfolder&quot;
   / Allows read-only access to file metadata but
 5 | does not allow any access to read or download file content.
   \ &quot;drive.metadata.readonly&quot;
scope&gt; 1 
ID of the root folder
Leave blank normally.
Fill in to access &quot;Computers&quot; folders. (see docs).
Enter a string value. Press Enter for the default (&quot;&quot;).
root_folder_id&gt; 
Service Account Credentials JSON file path 
Leave blank normally.
Needed only if you want use SA instead of interactive login.
Enter a string value. Press Enter for the default (&quot;&quot;).
service_account_file&gt; 
Edit advanced config? (y/n)
y) Yes
n) No
y/n&gt; n  #输入n
Remote config
Use auto config?
 * Say Y if not sure
 * Say N if you are working on a remote or headless machine
y) Yes
n) No
y/n&gt; n  #输入n
If your browser doesn&apos;t open automatically go to the following link: https://accounts.google.com/o/  #打开该地址获取code
Log in and authorize rclone for access
Enter verification code&gt;hjdd  #输入你获取到的code
Configure this as a team drive?
y) Yes
n) No
y/n&gt; n  #输入n
--------------------
[Rats]
type = drive
client_id = 85042871
client_secret = D72gPc
scope = drive
token = {&quot;access_token&quot;:&quot;y902Z&quot;}
--------------------
y) Yes this is OK
e) Edit this remote
d) Delete this remote
y/e/d&gt; y  #输入y
Current remotes:

Name                 Type
====                 ====
Rats                 drive

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; q  #输入q保存退出</code></pre><p><strong>3、挂载为磁盘</strong></p>
<pre><code>#新建本地文件夹，路径自己定，即下面的LocalFolder
mkdir /root/GoogleDrive
#挂载为磁盘，下面的DriveName、Folder、LocalFolder参数根据说明自行替换
rclone mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000</code></pre><p><code>DriveName</code>为初始化配置填的<code>name</code>，<code>Folder</code>为<code>Google Drive</code>里的文件夹，<code>LocalFolder</code>为<code>VPS</code>上的本地文件夹。</p>
<p>挂载成功后，输入<code>df -h</code>命令查看即可！<br><img src="https://www.southcat.net/usr/picture/rclone_GD.png" alt="请输入图片描述" title="请输入图片描述"><br><strong>4、卸载磁盘</strong></p>
<pre><code>fusermount -qzu LocalFolder</code></pre><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>先新建<code>systemd</code>配置文件，适用<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p>
<p>再使用命令：</p>
<pre><code>#将后面修改成你上面手动运行命令中，除了rclone的全部参数
command=&quot;mount DriveName:Folder LocalFolder --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000&quot;
#以下是一整条命令，一起复制到SSH客户端运行
cat &gt; /etc/systemd/system/rclone.service &lt;&lt;EOF
[Unit]
Description=Rclone
After=network-online.target

[Service]
Type=simple
ExecStart=$(command -v rclone) ${command}
Restart=on-abort
User=root

[Install]
WantedBy=default.target
EOF</code></pre><p>开始启动：</p>
<pre><code>systemctl start rclone</code></pre><p>设置开机自启：</p>
<pre><code>systemctl enable rclone</code></pre><p>其他命令：</p>
<pre><code>重启：systemctl restart rclone
停止：systemctl stop rclone
状态：systemctl status rclone</code></pre><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><pre><code>#解决Rclone挂载Google Drive时上传失败和内存占用高等问题
https://www.southcat.net/archives/877/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>在Github上搭建个人的Hexo博客，并绑定域名及Https访问</title>
    <url>/2086/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Hexo</code>是一个很简洁的博客程序，可将其部署到<code>Github</code>上并使用<code>Git</code>二级域名进行访问，等于为我们节省了服务器和域名成本，而且还可以绑定自己的域名访问，这里就说下具体搭建教程。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Hexo</code>是一个快速、简洁且高效的博客框架。<code>Hexo</code>使用<code>Markdown</code>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Hexo(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><p><strong>1、创建Github账户</strong><br>浏览器进入<a href="https://github.com，注册一个账号，再打开https://github.com/new创建一个项目。名称填`Github用户名.github.io`。" target="_blank" rel="noopener">https://github.com，注册一个账号，再打开https://github.com/new创建一个项目。名称填`Github用户名.github.io`。</a><br><img src="https://www.southcat.net/usr/picture/Hexo(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、安装Node.js和Git</strong><br>使用<code>SSH</code>客户端登录<code>VPS</code>，运行命令：</p>
<pre><code>#Ubuntu和Debian系统
curl -sL https://deb.nodesource.com/setup_9.x | bash -
apt-get install -y nodejs git

#Centos系统
curl -sL https://rpm.nodesource.com/setup_9.x | bash -
yum install nodejs git -y</code></pre><p><strong>3、安装Hexo</strong></p>
<pre><code>#新建文件夹存放Hexo文件，名称自己定
mkdir /Rats &amp;&amp; cd /Rats
#安装Hexo
npm install hexo-cli -g
#初始化配置
hexo init
#安装必要组件
npm install
#启动Hexo
hexo server</code></pre><p>然后打开<code>http://ip:4000</code>，就可以进入<code>Hexo</code>博客了，如果进不了，请放行服务器的<code>4000</code>端口。接下来我们就同步到<code>Github</code>上。</p>
<p><strong>4、配置Git信息</strong></p>
<pre><code>#请将下面Git用户名和邮箱修改成自己的
git config --global user.name &quot;MOERATS&quot;
git config --global user.email &quot;admin@southcat.net&quot;
#生成密匙
ssh-keygen -t rsa -C &quot;admin@southcat.net&quot;</code></pre><p>生成过程可以直接回车，此时会在<code>/root/.ssh</code>目录中生成<code>2</code>个文件，然后打开<code>id_rsa.pub</code>，并复制里面的内容。</p>
<pre><code>cat /root/.ssh/id_rsa.pub</code></pre><p>复制好后，使用浏览器进入<a href="https://github.com/settings/ssh/new，`Title`随便填，然后把刚刚复制的内容填到`Key`确认。" target="_blank" rel="noopener">https://github.com/settings/ssh/new，`Title`随便填，然后把刚刚复制的内容填到`Key`确认。</a></p>
<p>再编辑<code>_config.yml</code>文件，文件在之前新建的文件夹里，你可以使用<code>ftp</code>客户端编辑，也可以使用<code>vi</code>或<code>nano</code>编辑。</p>
<pre><code>nano /Rats/_config.yml
#编辑网站信息，自己看情况修改
title: Rat&apos;s Blog
subtitle: A blog
description: A blog
keywords: A blog
author: Rat&apos;s
language: zh-CN
timezone: Asia/Shanghai

#添加配置，在最后添加，请修改为自己的Git地址
deploy:
  type: git
  repo: https://github.com/MOERATS/MOERATS.github.io.git
  branch: master</code></pre><p><strong>5、同步到Github</strong><br>同步前，先安装一个拓展，不然会出现<code>deloyer not found:git</code>错误。</p>
<pre><code>npm install hexo-deployer-git --save</code></pre><p>再使用命令同步</p>
<pre><code>hexo g
hexo d</code></pre><p>同步的时候，会要求我们输入<code>Github</code>用户名和密码，然后我们就可以通过<code>https://xx.github.io/</code>进入博客了。</p>
<p><strong>6、发布文章</strong><br>使用命令新建文章。</p>
<pre><code>hexo new &quot;标题&quot;</code></pre><p>此时会在<code>/Rats/source/_posts</code>目录下生成个<code>markdown</code>文件，然后你就用<code>Markdown</code>编辑器进行编辑。</p>
<p>接下来就可以使用命令发布并同步到<code>Github</code>了。</p>
<pre><code>hexo d -g</code></pre><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>如果你想用<code>Github</code>二级域名访问，就无视这一步，如果你想用自己的域名访问，请继续看。</p>
<p>先解析域名的<code>CNAME</code>记录到你的<code>Git</code>二级域名。如果你想用<code>Https</code>访问，可以使用<code>CloudFlare</code>解析域名，并开启<code>CDN</code>强制<code>Http</code>转<code>Https</code>。<br><img src="https://www.southcat.net/usr/picture/Hexo(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后访问你的博客<code>Git</code>项目地址，点击<code>Create new file</code>新建文件，命名<code>CNAME</code>，内容写上你的域名，不要<code>http</code>等。<br><img src="https://www.southcat.net/usr/picture/Hexo(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>这时候就可以通过自己的域名访问博客了。</p>
<pre><code>#你可以用ftp添加CNAME文件，也可以使用命令，注意后面的路径
echo &quot;www.southcat.net&quot; &gt; /Rats/source/CNAME</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>在Linux上快速搭建Git服务器教程</title>
    <url>/1823/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Git</code>是一个分布式的版本控制系统，也就意味着它可以在有网络环境或者没有网络环境的时候使用。而通常情况下会搭建一个服务端，所有用户的更改统一发布到服务端上。</p>
<h2 id="服务器上的Git"><a href="#服务器上的Git" class="headerlink" title="服务器上的Git"></a>服务器上的Git</h2><p>一般情况下如果想与他人合作，就需要一个远程的<code>Git</code>仓库。尽管技术上可以从个人的仓库里推送和拉取修改内容，但我们不鼓励这样做，因为一不留心就很容易弄混其他人的进度。另外，你也一定希望合作者们即使在自己不开机的时候也能从仓库获取数据—拥有一个更稳定的公共仓库十分有用。因此，更好的合作方式是建立一个大家都可以访问的共享仓库，从那里推送和拉取数据。我们将把这个仓库称为 “Git 服务器”；代理一个<code>Git</code>仓库只需要花费很少的资源，几乎从不需要整个服务器来支持它的运行。</p>
<p><strong>更多参考：</strong>服务器上的 Git</p>
<h2 id="Git的安装"><a href="#Git的安装" class="headerlink" title="Git的安装"></a>Git的安装</h2><pre><code># CentOS REHL
# yum install git

# Ubuntu
# sudo apt-get install git

# Windows
访问：http://git-scm.com/download/</code></pre><h2 id="部署Git"><a href="#部署Git" class="headerlink" title="部署Git"></a>部署Git</h2><p>本文主要介绍通过<code>SSH</code>的方式访问<code>Git</code>的部署。</p>
<p><strong>1、在客户端生成公钥</strong><br>每个需要使用<code>Git</code>服务器的客户端都需要生成这个公钥，然后将它们全部上传到服务器。<br>使用命令：</p>
<pre><code>$ ssh-keygen</code></pre><p>或者指定密钥算法和用户标识：</p>
<pre><code>$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code></pre><p>然后在你的用户文件夹下，会生成一个<code>.ssh</code>文件夹，里边有两个文件：<code>id_rsa</code>（私钥，不要泄漏）<code>id_rsa.pub</code>（公钥，复制到服务器上）</p>
<pre><code>cat ~/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAklOUpkDHrfHY17SbrmTIpNLTGK9Tjom/BWDSU
GPl+nafzlHDTYW7hdI4yZ5ew18JH4JW9jbhUFrviQzM7xlELEVf4h9lFX5QVkbPppSwg0cda3
Pbv7kOdJ/MTyBlWXFCR+HAo3FXRitBqxiX1nKhXpHAZsMciLq8V6RjsNAQwdsdMFvSlVK/7XA
t3FaoJoAsncM1Q9x5+3V0Ww68/eIFmb1zuUFljQJKprrX88XypNDvjYNby6vw/Pb0rwert/En
mZ+AW4OZPnTPI89ZPmVMLuayrD2cE86Z/il8b+gw3r3+1nKatmIkjn2so1d01QraTlMqVSsbx
NrRFi9wrf+M7Q== schacon@agadorlaptop.local</code></pre><p><strong>2、服务端搭建</strong><br>新建<code>git</code>用户：</p>
<pre><code># useradd git
# su - git
$ mkdir ~/.ssh
$ chmod 700 ~/.ssh
$ cd ~/.ssh
$ touch authorized_keys
$ chmod 600 authorized_keys</code></pre><p>请注意，<code>.ssh</code>文件夹的权限为<code>700</code>，<code>authorized_keys</code>文件的权限为<code>600</code>，一定要这样设置，不然无法生效。<br>将公钥添加到<code>authorized_keys</code>，一行一个。</p>
<pre><code>$ cat /tmp/id_rsa.john.pub &gt;&gt; ~/.ssh/authorized_keys
$ cat /tmp/id_rsa.josie.pub &gt;&gt; ~/.ssh/authorized_keys
$ cat /tmp/id_rsa.jessica.pub &gt;&gt; ~/.ssh/authorized_keys</code></pre><p>创建裸仓库：</p>
<pre><code>$ mkdir ~/project.git
$ cd ~/project.git
$ git --bare init</code></pre><p>将<code>git</code>用户设置为不可使用<code>shell</code>：</p>
<pre><code># sudo vim /etc/passwd</code></pre><p>最后一行应该类似于：</p>
<pre><code>git:x:1000:1000::/home/git:/bin/bash</code></pre><p>将<code>/bin/bash</code>改为<code>/usr/bin/git-shell</code>（使用<code>which git-shell</code>查看路径）</p>
<pre><code>git:x:1000:1000::/home/git:/usr/bin/git-shell</code></pre><h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><pre><code>git clone git@server:/home/git/project.git</code></pre><p>如果目录在<code>git</code>的用户目录下，可以省略<code>/home/git</code></p>
<pre><code>git clone git@server:project.git</code></pre><p>如果配置正常，应该可以直接拉下来了。如果不正常，一般是会让输入密码或者提示权限不足，请重新看一下本教程，确认无误。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>在Linux系统上安装Docker和Docker Compose教程</title>
    <url>/1841/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多时候我们搭建一些网站的时候，都会首先想到要安装一些面板，<code>lnmp</code>，<code>lamp</code>之类的，其实很多时候不一定需要这样，只需要使用<code>Docker/Docker Compose</code>安装就行了，而且还很快，很方便。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Docker</code>是一个开源的引擎，可以轻松的为任何应用创建一个轻量级的、可移植的、自给自足的容器。<code>Docker Compose</code>是在使用<code>Docker</code>容器部署分布式应用时的工具，可以定义哪个容器运行哪个应用。使用<code>Compose</code>，你只需定义一个多容器应用的<code>yml</code>文件，然后使用一条命令即可部署运行所有容器。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Docker</strong><br>使用以下命令：</p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Docker Compose</strong><br>使用以下命令：</p>
<pre><code>curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
#验证是否安装成功
docker-compose --version
#返回以下信息即安装成功
docker-compose version 1.17.0, build 1719ceb</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>在Ubuntu/Debian下安装uTorrent，可离线下载BT种子磁力</title>
    <url>/1858/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>BT</code>下载的教程，博客已经有不少了，之前使用过<code>windows</code>客户端的<code>uTorrent</code>，觉得挺好用的，<code>win</code>下载地址：<a href="http://blog.utorrent.com/releases/windows/，有时候下载有点慢，不过在`VPS`上使用该软件下载的时候，文件和`Win`一样，配合锐速速度反而还快了许多，可能在`VPS`上有加成吧。这里就发个`Linux`安装教程，相信会有人使用到的。" target="_blank" rel="noopener">http://blog.utorrent.com/releases/windows/，有时候下载有点慢，不过在`VPS`上使用该软件下载的时候，文件和`Win`一样，配合锐速速度反而还快了许多，可能在`VPS`上有加成吧。这里就发个`Linux`安装教程，相信会有人使用到的。</a></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>uTorrent</code>是一个小巧强劲，全功能的免费<code>BitTorrent</code>客户端。支持<code>UPnP</code>，支持流行的<code>BT</code>扩展协议，磁力链接(<code>Magnet Links</code>)，<code>IPv6</code>，用户来源交换，<code>DHT</code>和<code>uTP</code>，以及<code>RSS</code>下载器等丰富特性。可以多任务同时下载，设置文件下载优先级，根据计划任务调整占用的带宽，全局/单个任务的速度限制，快速断点续传机制等等。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/uTorrent_linux.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>以下将会安装<code>Linux</code>版<code>uTorrent – uTserver alpha 3.3</code>，在<code>Debian 8</code>上测试通过。</p>
<p>与<code>Windows utorrent</code>界面一样的<code>WebUI</code>，支持<code>IPv6</code>，已知磁力下载和<code>RSS</code>功能有点问题。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装依赖</strong></p>
<pre><code>apt-get update
apt-get install libssl-dev screen</code></pre><p><strong>2、下载utserver</strong><br><code>utserver</code>地址：<a href="http://www.utorrent.com/intl/en/downloads/linux" target="_blank" rel="noopener">http://www.utorrent.com/intl/en/downloads/linux</a><br>例如<code>Debian</code>：</p>
<pre><code>wget -O utserver.tar.gz http://download-hr.utorrent.com/track/beta/endpoint/utserver/os/linux-x64-debian-7-0</code></pre><p><strong>3、解压及拷贝文件</strong></p>
<pre><code>tar xf utserver.tar.gz
mkdir /opt/utserver/
cp -r utorrent-server-alpha-v3_3/* /opt/utserver/
ln -s /opt/utserver/utserver /usr/bin/</code></pre><p><strong>4、创建下载文件夾</strong></p>
<pre><code>mkdir /home/Downloads
chmod 777 /home/Downloads</code></pre><p><strong>5、在screen中运行utserver</strong></p>
<pre><code>screen -dmS ut utserver -settingspath /opt/utserver/


uTorrent地址：http//your_ip:8080/gui/
默认用戶名：admin
默认密码：沒有 留空即可</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>在Ubuntu/CentOS/Debian系统下，使用CPU挖Monero (XMR)币</title>
    <url>/1872/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近挖矿教程发了不少，参考：MinerGate：在Windows、Mac、Ubuntu、安卓手机上挖矿教程，CentOS 7下莱特币（Litecoin）挖矿教程，现在再发个<code>Ubuntu/CentOS/Debian</code>系统的挖矿教程，这里最好使用独立服务器挖，<code>VPS</code>尽量别尝试，不然会被商家停止<code>or</code>删除。要是你的<code>VPS</code>多，不在乎，那就限制<code>CPU</code>后再挖，参考：Linux VPS通过安装CPULimit来限制CPU使用率，这里就说下教程。</p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><strong>1、获取钱包地址</strong><br>钱包地址获取途径有很多，这里建议去<code>https://hitbtc.com</code>注册个账号，然后进入后台点击<code>Account</code>然后往下找到<code>Monero</code>货币并获取钱包地址，即<code>Wallet address</code>。<br><img src="https://www.southcat.net/usr/picture/Ubuntu_xmr(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、Payment-ID获取</strong><br>在服务器上运行以下命令：</p>
<pre><code>openssl rand -hex 32</code></pre><p><img src="https://www.southcat.net/usr/picture/Ubuntu_xmr(2).png" alt="请输入图片描述" title="请输入图片描述"><br>即可获取<code>Payment-ID</code>也就是支付<code>ID</code>。</p>
<p><strong>3、安装挖矿程序</strong><br>这里建议使用<code>Ubuntu</code>系统，听说效率更高。</p>
<pre><code>#Ubuntu系统，在Ubuntu 14.04测试成功
add-apt-repository ppa:ubuntu-toolchain-r/test
apt update
apt install gcc-5 g++-5 make
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 1 --slave /usr/bin/g++ g++ /usr/bin/g++-5
curl -L http://www.cmake.org/files/v3.4/cmake-3.4.1.tar.gz | tar -xvzf - -C /tmp/
cd /tmp/cmake-3.4.1/ &amp;&amp; ./configure &amp;&amp; make &amp;&amp; sudo make install &amp;&amp; cd -
update-alternatives --install /usr/bin/cmake cmake /usr/local/bin/cmake 1 --force
apt install libmicrohttpd-dev libssl-dev libhwloc-dev
git clone https://github.com/fireice-uk/xmr-stak-cpu xmr-stak
cd xmr-stak
cmake .
make install

#CentOS系统
yum install centos-release-scl cmake3 hwloc-devel libmicrohttpd-devel openssl-devel
yum install devtoolset-4-gcc*
scl enable devtoolset-4 bash
git clone https://github.com/fireice-uk/xmr-stak-cpu xmr-stak
cd xmr-stak
cmake3 .
make install

#Debian系统，在Debian 8测试成功
echo &quot;deb http://ftp.us.debian.org/debian unstable main contrib non-free&quot; &gt;&gt; /etc/apt/sources.list.d/unstable.list
apt-get update
apt-get install -t unstable gcc-5 g++-5 make
update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 1 --slave /usr/bin/g++ g++ /usr/bin/g++-5
curl -L http://www.cmake.org/files/v3.4/cmake-3.4.1.tar.gz | tar -xvzf - -C /tmp/
cd /tmp/cmake-3.4.1/ &amp;&amp; ./configure &amp;&amp; make &amp;&amp; make install &amp;&amp; cd -
update-alternatives --install /usr/bin/cmake cmake /usr/local/bin/cmake 1 --force
apt install libmicrohttpd-dev libssl-dev libhwloc-dev
git clone https://github.com/fireice-uk/xmr-stak-cpu xmr-stak
cd xmr-stak
cmake .
make install</code></pre><p><strong>4、设置CPU、钱包、Payment-ID</strong><br>在<code>/root/xmr-stak/bin/config.txt</code>设置<code>CPU</code>、钱包、<code>Payment-ID</code>。</p>
<pre><code>#修改CPU信息
cpu_threads_conf部分，建议CPU核数的50%
#修改钱包、Payment-ID、矿工号和Email地址
wallet_address后面的。
#修改pool_address
改为自己服务器近的。
#修改httpd_port
改为自己喜欢的端口，然后使用IP:端口就可以查看运行情况</code></pre><p>也可用以下代码替换：</p>
<pre><code>&quot;cpu_threads_conf&quot; : 
[
     { &quot;low_power_mode&quot; : false, &quot;no_prefetch&quot; : true, &quot;affine_to_cpu&quot; : 0 },
     { &quot;low_power_mode&quot; : false, &quot;no_prefetch&quot; : true, &quot;affine_to_cpu&quot; : 2 },
     { &quot;low_power_mode&quot; : false, &quot;no_prefetch&quot; : true, &quot;affine_to_cpu&quot; : 4 },
     { &quot;low_power_mode&quot; : false, &quot;no_prefetch&quot; : true, &quot;affine_to_cpu&quot; : 6 },
],

&quot;use_slow_memory&quot; : &quot;warn&quot;,
&quot;nicehash_nonce&quot; : false,
&quot;aes_override&quot; : null,
&quot;use_tls&quot; : false,
&quot;tls_secure_algo&quot; : true,
&quot;tls_fingerprint&quot; : &quot;&quot;,
&quot;pool_address&quot; : &quot;xmr-us-east1.nanopool.org:14444&quot;,
&quot;wallet_address&quot; : &quot;钱包地址.Payment-ID.矿工编号/Email&quot;,  #矿工编号可以随便填
&quot;pool_password&quot; : &quot;x&quot;,
&quot;call_timeout&quot; : 10,
&quot;retry_time&quot; : 10,
&quot;giveup_limit&quot; : 0,
&quot;verbose_level&quot; : 3,
&quot;h_print_time&quot; : 60,
&quot;daemon_mode&quot; : false,
&quot;output_file&quot; : &quot;&quot;,
&quot;httpd_port&quot; : 1024,
&quot;prefer_ipv4&quot; : true,</code></pre><p><code>Monero</code>矿池有很多，官网<code>http://moneropools.com/</code>中列举了很多个矿池，可以选择想加入的矿池。我这里选择的是<code>xmr.nanopool.org</code>。</p>
<p><strong>5、开始挖矿</strong><br>运行命令：</p>
<pre><code>cd /root/xmr-stak/bin
screen -S mine
./xmr-stak-cpu</code></pre><p>即可后台开始挖矿。</p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><pre><code>#如何更改捐赠比例
编辑xmr-stak下的donate-level.h文件，把
constexpr double fDevDonationLevel = 2.0 / 100.0;
改为
constexpr double fDevDonationLevel = 0.5 / 100.0;
也可以改为其他比例。

#Linux下挖矿出现MEMORY ALLOC FAILED: mmap failed错误
运行命令：
sysctl -w vm.nr_hugepages=128
然后编辑文件/etc/security/limits.conf, 在倒数第二行或者之前加入下面两行：
soft memlock 262144
hard memlock 262144
然后重启或者注销并重新登录。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>在Ubuntu上安装Monit来监控服务器和环境</title>
    <url>/1646/</url>
    <content><![CDATA[<p><strong>说明：</strong>相信很多人都遇到过 “<code>502</code>错误”、 “<code>2002</code>数据库无法连接” “<code>ERR_NAME_NOT_RESOLVED</code>” 等问题吧，一般来说是<code>Apache Httpd</code>、<code>Nginx</code>、<code>PHP</code>、<code>MySQL</code>等软件崩溃或者不稳定出现了相关问题。这时候我们可以利用<code>Monit</code>来监控服务器和环境，当出现意外的时候还可以自动实现重启。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1、更新软件源缓存</p>
<pre><code>apt update</code></pre><p>2、安装<code>Monit</code></p>
<pre><code>apt install monit -y</code></pre><h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>1、关闭<code>monint</code></p>
<pre><code>service monit stop</code></pre><p>2、安装<code>html2text</code>以自动解析最细版本：</p>
<pre><code>apt install html2text -y</code></pre><p>3、自动更新</p>
<pre><code>MONITVER=$(wget -q https://mmonit.com/monit/dist/binary/ -O - | html2text | grep DIR | tail -n 1 | tr -d / | awk &apos;{print $2}&apos;)
cd /tmp
wget https://mmonit.com/monit/dist/binary/$MONITVER/monit-$MONITVER-linux-x64.tar.gz
tar -xf monit-*
cd monit-*
sudo cp bin/monit /usr/bin/monit
sudo ln -s /etc/monit/monitrc /etc/monitrc</code></pre><p>4、重启<code>monint</code></p>
<pre><code>service monit restart</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>1、备份原始配置</p>
<pre><code>mv /etc/monit/monitrc /etc/monit/monitrc.bak</code></pre><p>2、创建<code>SSL</code>证书 ，实现<code>HTTPS</code>安全传输，演示用的是<code>OpenSSL</code>的自签，一路回车就行　：</p>
<pre><code>mkdir -p /var/certs/
openssl req -new -x509 -days 365 -nodes -out /var/certs/monit.pem -keyout /var/certs/monit.pem

chmod 0700 /var/certs/monit.pem</code></pre><p>3、创建新配置<br>创建一份新的<code>/etc/monit/monitrc</code>文件，内容：</p>
<pre><code> set daemon 60 #check services every 60 seconds
  set logfile /var/log/monit.log
  set idfile /var/lib/monit/id
  set statefile /var/lib/monit/state

#Event queue
  set eventqueue
      basedir /var/lib/monit/events # set the base directory where events will be stored
      slots 100                     # optionally limit the queue size

#Mail settings

#http settings
 set httpd port 52822 address 0.0.0.0  # 配置端口为adapters
    ssl enable #启用 SSL
    pemfile  /var/certs/monit.pem #生成的SSL地址
    allow 0.0.0.0/0.0.0.0 # 允许访问的IP
    allow monit.southcat.net        # 绑定的域名
    allow rats:&quot;www.southcat.net&quot;      # 账号为rats ，密码为www.southcat.net

#allow modular structure
    include /etc/monit/conf.d/*
    include /etc/monit/conf-enabled/*</code></pre><p>4、给予权限</p>
<pre><code>chmod 0700 /etc/monit/monitrc</code></pre><p>5、检查配置是否正确 ，运行</p>
<pre><code>monit -t</code></pre><p>如果反馈下面的语句就是正常的：</p>
<pre><code>Control file syntax OK</code></pre><p>6、重启服务</p>
<pre><code>systemctl restart monit</code></pre><h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p>当问<code>https://yourip:52822</code>输入用户名：<code>rats</code> 密码：<code>www.southcat.net</code> 就可以访问管理页面了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>备案掉了 可能会关站</title>
    <url>/2475/</url>
    <content><![CDATA[<p>今天终于被注销了 提前半个月腾讯就给我下通知了 这次可能会重新备案 或者是迁移到hexo 具体看情况吧 hexo目前还不大满意 而且腾讯的服务器还没到期不能浪费 备案的话就会关站一段时间</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>基于内核的单边加速Tcp_china和Tcp_TA安装教程</title>
    <url>/1569/</url>
    <content><![CDATA[<p><strong>说明：</strong>目前用的单边加速熟知的有BBR和锐速，这次从91yun看到新的基于内核修改的单边教程<code>Tcp_china</code>和<code>tcp_TA</code>就搬运过来先。听说比BBR效果要好。</p>
<p><strong>注意：</strong>适用于<code>kvm</code>，并且锐速，<code>BBR</code>，<code>Tcp_china</code>和<code>tcp_TA</code>不能共存，只能装一样。</p>
<h2 id="tcp-china"><a href="#tcp-china" class="headerlink" title="tcp_china"></a>tcp_china</h2><p><strong>Github地址：</strong><a href="https://github.com/madeye/tcp_china" target="_blank" rel="noopener">https://github.com/madeye/tcp_china</a></p>
<p>1、系统为<code>Ubuntu 14.04</code>、<code>Ubuntu 16.04</code>，其它系统未经测试，且未换4.9以上内核时，执行命令：</p>
<pre><code>apt-get update &amp;&amp; apt-get install gcc make git -y &amp;&amp; git clone https://github.com/madeye/tcp_china &amp;&amp; cd tcp_china &amp;&amp; make &amp;&amp; insmod tcp_china.ko &amp;&amp; lsmod | grep tcp_china</code></pre><p>2、看到<code>tcp_china</code>时说明已经加载成功了。<br><img src="https://www.southcat.net/usr/picture/tcp-china.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="tcp-TA"><a href="#tcp-TA" class="headerlink" title="tcp_TA"></a>tcp_TA</h2><p><strong>Github地址：</strong><a href="https://github.com/giltu/KernelPCC" target="_blank" rel="noopener">https://github.com/giltu/KernelPCC</a></p>
<p>1、系统为<code>Ubuntu 14.04</code>、<code>Ubuntu 16.04</code>，其它系统未经测试，且未换4.9以上内核时，执行命令：</p>
<pre><code>apt-get update &amp;&amp; apt-get install git gcc make -y &amp;&amp; git clone https://github.com/giltu/KernelPCC &amp;&amp; cd KernelPCC &amp;&amp; make &amp;&amp; insmod tcp_TA.ko &amp;&amp; lsmod | grep tcp_TA</code></pre><p>2、看到有<code>tcp_TA</code>时表示加载成功了。<br><img src="https://www.southcat.net/usr/picture/tcp-ta.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>多功能VestaCP全家桶套件一键安装脚本，文件管理器已破解</title>
    <url>/1647/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>VestaCP</code>面板就不过多介绍了，之前说过很多，还是挺好用的，<code>VDVESTA</code>是一个小型的<code>shell</code>脚本，为您的<code>CentOS Server Release 7 x86_64</code>自动定制并安装<code>VESTACP</code>。且文件管理器已破解。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/duy13/VDVESTA" target="_blank" rel="noopener">https://github.com/duy13/VDVESTA</a></p>
<p><strong>系统要求：</strong>CentOS Server 7 x86_64</p>
<p>运行以下命令：</p>
<pre><code>curl -L https://github.com/duy13/VDVESTA/raw/master/vdvesta.sh -o vdvesta.sh ; bash vdvesta.sh</code></pre><p><img src="https://www.southcat.net/usr/picture/VestaCP%20shell.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="脚本界面"><a href="#脚本界面" class="headerlink" title="脚本界面"></a>脚本界面</h2><pre><code>欢迎来到VDVESTA：
一个shell脚本自动定制并安装您的CentOS Server Release 7 x86_64的VESTACP。
感谢您的使用！

你愿意+安装vDDoS代理保护[Y | n]：
vDDoS Proxy Protection install =&gt; y
您要安装哪个Web Server版本[apache | nginx]：
Web服务器版本=&gt; apache
要安装哪个PHP Server版本[5.4 | 5.5 | 5.6 | 7.0 | 7.1]：
PHP Server版本=&gt; 7.1
你想要自动配置PHP [Y | n]：
自动配置PHP =&gt; y
您要安装哪个MariaDB Server版本[5.5 | 10.0 | 10.1]：
MariaDB Server版本=&gt; 10.1
你想要+安装文件管理器[Y | n]：
文件管理器install =&gt; y
你想要+安装Zend优化加操作码缓存[Y | n]：
Zend操作码缓存install =&gt; y
你愿意+安装Memcached [Y | n]：
Memcached install =&gt; y
你想要+安装限制主机（限制CPU，RAM，IO您的主机帐户）[Y | n]：
限制主机install =&gt; y
你想配置内核限制DDOS [Y | n]：
内核限制DDOS =&gt; y
您想将VestaCP 8083端口更改为2083 [Y | n]：
将端口VestaCP 8083更改为2083 =&gt; y
你想要+安装Spamassassin＆Clamav [y | N]：
安装Spamassassin＆Clamav =&gt; n
你愿意+安装Fail2ban [y | N]：
安装Fail2ban =&gt; n
输入你的主机名[vdvesta.local]：
Hostname =&gt; vdvesta.local
输入您的邮箱[admin@vdvesta.local]：
Email =&gt; admin@vdvesta.local</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>多服务器，云探针，云监控：ServerStatus美化版一键安装脚本</title>
    <url>/1668/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>ServerStatus</code>中文版是一个酷炫高逼格的云探针、云监控、服务器云监控、多服务器探针~记得很久之前发过部署教程：ServerStatus酷炫高逼格的中文云探针，不过对于很多人来说，安装是很麻烦的，这里分享下由<code>CokeMine</code>博主基于逗比修改的<code>ServerStatus</code>美化版一键安装脚本，可以很方便的让我们上手。</p>
<pre><code>提示：探针源码已替换成ServerStatus美化版。</code></pre><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/ServerStatus_mh.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>CentOS 7</code>、<code>Debian 7+</code>、<code>Ubuntu 14.04 +</code></p>
<p>使用命令下载脚本：</p>
<pre><code>wget https://raw.githubusercontent.com/CokeMine/ServerStatus-Hotaru/master/status.sh &amp;&amp; chmod +x status.sh</code></pre><p>下载脚本后，根据需要安装客户端或者服务端：</p>
<pre><code># 客户端管理菜单
bash status.sh c

# 服务端管理菜单
bash status.sh s</code></pre><p><img src="https://www.southcat.net/usr/picture/ServerStatusfwd.png" alt="请输入图片描述" title="请输入图片描述"><br>运行脚本后会出现脚本操作菜单，选择并输入<code>1</code>就会开始安装。一开始会提示你输入网站服务器的域名和端口，如果没有域名可以直接回车代表使用<code>ip:8888</code>。</p>
<h2 id="简单步骤"><a href="#简单步骤" class="headerlink" title="简单步骤"></a>简单步骤</h2><p>首先安装服务端，安装过程中会提示：</p>
<pre><code>是否由脚本自动配置HTTP服务(服务端的在线监控网站)[Y/n]

#如果你不懂，那就直接回车，如果你想用其他的HTTP服务自己配置，那么请输入n并回车。
#注意，当你曾经安装过服务端，同时没有卸载Caddy(HTTP服务)，那么重新安装服务端的时候，请输入n并回车。</code></pre><p>然后添加或修改初始示例的节点配置，注意用户名每个节点配置都不能重复，其他的参数都无所谓了。</p>
<p>然后安装客户端，根据提示填写服务端的<code>IP</code>和前面添加/修改对应的节点用户名和密码（用于和服务端验证），然后启动就好了。</p>
<h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><pre><code>#客户端操作
启动：service status-client start
停止：service status-client stop
重启：service status-client restart
状态：service status-client status

#服务端操作
启动：service status-server start
停止：service status-server stop
重启：service status-server restart
状态：service status-server status

#Caddy操作
启动：service caddy start
停止：service caddy stop
重启：service caddy restart
查看状态：service caddy status
Caddy配置文件：/usr/local/caddy/Caddyfile

#其它文件夹或操作
安装目录：/usr/local/ServerStatus
网页文件：/usr/local/ServerStatus/web
配置文件：/usr/local/ServerStatus/server/config.json
客户端查看日志：tail -f tmp/serverstatus_client.log
服务端查看日志：tail -f /tmp/serverstatus_server.log</code></pre><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><pre><code>网络实时流量单位为：G=GB/s，M=MB/s，K=KB/s
服务器总流量单位为：T=TB，G=GB，M=MB，K=KB
如果要修改网页标题或者网页顶部公告内容，打开/usr/local/ServerStatus/web/index.html文件修改即可，很显眼。</code></pre><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><pre><code>原始脚本：https://github.com/ToyoDAdoubi/ServerStatus-Toyo
修改脚本：https://github.com/CokeMine/ServerStatus-Hotaru
模板来源：https://www.hostloc.com/thread-494384-1-1.html</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>大疆无人机通过开启FCC增大遥控距离的方法</title>
    <url>/2192/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在无人机爱好者有很多，网上攻略也不多，这里就发个大疆无人机通过修改<code>DJI GO</code>配置文件来增强遥控信号，从而增大飞机飞行高度，一般比<code>FCC</code>强<code>4</code>倍，还是很给力的。</p>
<pre><code>注意：以下内容仅作技术交流，请勿用于实际用途，并且请按照当地法律法规操作无线电，否则后果自负！

提示：如果有不懂的或者该方法失效了，可以去该论坛提问，地址：www.pilotbbs.com，里面会有大神帮助你。</code></pre><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一般我们在大疆官网无人机参数描绘中，咱们常常能看到<code>FCC</code>、<code>CE</code>、<code>SRRC</code>这三个分类：<br><img src="https://www.southcat.net/usr/picture/FCC_4(1).png" alt="请输入图片描述" title="请输入图片描述"><br>那么首要咱们需要知道的是，<code>FCC</code>、<code>CE</code>、<code>SRRC</code>这三个分类是什么？其实简单点说，<code>FCC</code>为美国标准，<code>CE</code>为欧盟标准，而<code>SRRC</code>是国内标准。具体的可以自行搜索，无疑，咱们多见的是<code>FCC</code>和<code>CE</code>这两个标准，其中<code>SRRC</code>以及<code>CE</code>都是<code>0.09W</code>发射功率，<code>FCC</code>是<code>0.4W</code>发射功率，<code>FCC BOOST</code>更是达到了<code>1.5W</code>发射功率。一般来讲除了美国以外，其他国家都用的<code>CE</code>标准。</p>
<p>当然这些最主要的是，不一样规范标准下，飞机飞行距离却有很大的差距，开启<code>FCC</code>官方数据可以飞行<code>7 Km</code>，<code>CE</code>标准只能<code>4 Km</code>，这还能不能爽飞了！</p>
<p>对此，有一位俄罗斯大神破解了大疆的配置文件，通过在指定路径增加一个配置文件，我们就可以在<code>ce</code>、<code>fcc</code>和<code>boost</code>发射功率之间切换了。<br><img src="https://www.southcat.net/usr/picture/FCC_4(2).png" alt="请输入图片描述" title="请输入图片描述"><br>每个配置文件参数如下：<br><img src="https://www.southcat.net/usr/picture/FCC_4(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/FCC_4(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/FCC_4(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/FCC_4(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>首先下载配置文件，下载地址：点击下载。</p>
<p>再导入配置文件：</p>
<pre><code>1、DJI GO安卓用户：修改文件名为“.DJI.configs”（注意，不加引号，只复制引号内名称），将“.DJI.Configs”文件导入到如下路径：/Android/data/dji.pilot/files/。

2、DJI GO4安卓用户：修改文件名为“.DJI.configs”，将“.DJI.Configs”文件导入到如下路径：\Android\data\dji.go.v4\files。

3、IOS用户：修改文件名为“.DJI.configs”，将“.DJI.Configs”文件用iTunes或者第三方助手拖入DJI GO或者DJI GO 4根目录内即可。</code></pre><p>下图为成功开启<code>FCC</code>后的线条，<code>4KM</code>横线在纵坐标<code>100</code>以上表示开启成功。<br><img src="https://www.southcat.net/usr/picture/FCC_4(7).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/FCC_4(8).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>下图为御姐改双电开启<code>FCC</code>拉距测试。<br><img src="https://www.southcat.net/usr/picture/FCC_4(9).jpg" alt="请输入图片描述" title="请输入图片描述"><br>用御姐改双电测试开启<code>FCC</code>可达<code>14KM</code>（无干扰区域），图传信号稳定。不建议大家修改成<code>boost</code>模式，功率太大增加遥控器耗电。</p>
<p>下图为精灵<code>4P2.0</code>开启<code>5.8G</code>频段的<code>FCC</code>。<br><img src="https://www.southcat.net/usr/picture/FCC_4(10).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>看见有人问哪些无人机能开<code>FCC</code>，基本上大疆系列都能开，比如<code>精灵3s</code>、<code>精灵3p</code>、<code>精灵3se</code>、<code>精灵3 4k</code>、<code>精灵4a</code>、<code>精灵4p</code>、<code>精灵4p 2.0</code>、<code>御air</code>、<code>御pro</code>、<code>御2</code>、<code>悟2</code>、<code>悟1</code>、<code>M600P</code>等。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>多种功能强大的BT离线下载程序Docker镜像及安装</title>
    <url>/2465/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近看到很多小伙伴对离线下载啥的，兴趣蛮大，博主以前也水了不少了<code>BT</code>下载相关的脚本和安装，不过都没<code>Docker</code>简单，这里就找了一些用的人比较多，也经常在维护的<code>BT</code>离线程序的<code>Docker</code>镜像，包括<code>Aria2</code>、<code>utorrent</code>、<code>Deluge</code>、<code>Transmission</code>、<code>Rutorrent</code>、<code>Qbittorrent</code>，算是比较全了，这里就分享下。</p>
<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>首先安装下面程序之前，需要在服务器上安装<code>Docker</code>环境，使用命令：</p>
<pre><code>#CentOS 6系统
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu系统
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><h2 id="安装Aria2"><a href="#安装Aria2" class="headerlink" title="安装Aria2"></a>安装Aria2</h2><p><strong>镜像来源：</strong><a href="https://hub.docker.com/r/onisuly/aria2-with-webui" target="_blank" rel="noopener">https://hub.docker.com/r/onisuly/aria2-with-webui</a></p>
<p>先安装<code>Docker</code>，然后执行以下命令：</p>
<pre><code>docker run --restart=always --name aria2-ariang -d \
-p 6060:80 \
-p 6800:6800 \
-e SECRET=moerats \
-v ~/aria2/down:/data \
-v ~/aria2/conf:/conf \
onisuly/aria2-with-webui</code></pre><p>安装完成后，相关信息如下：</p>
<pre><code>AriaNg地址：http://ip:6060
aria2连接端口：6800
aria2连接密匙：moerats
下载/配置目录：~/aria2</code></pre><p><code>CentOS</code>系统安装后，可能还需要开启相应的端口，大致如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 6060 -j ACCEPT
iptables -A INPUT -p tcp --dport 6800 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=6060/tcp --permanent
firewall-cmd --zone=public --add-port=6800/tcp --permanent
firewall-cmd --reload</code></pre><p>如果你不想用了，可以使用以下命令卸载：</p>
<pre><code>#删掉容器
ContainerID=`docker ps|grep onisuly/aria2-with-webui|awk &apos;{print $1}&apos;`
docker kill ${ContainerID}
docker rm ${ContainerID}
docker rmi `docker images|grep onisuly/aria2-with-webui|awk &apos;{print $3}&apos;`
#删掉下载文件夹
rm -rf ~/aria2</code></pre><h2 id="安装utorrent"><a href="#安装utorrent" class="headerlink" title="安装utorrent"></a>安装utorrent</h2><p><strong>镜像来源：</strong><a href="https://hub.docker.com/r/ekho/utorrent" target="_blank" rel="noopener">https://hub.docker.com/r/ekho/utorrent</a></p>
<p>先安装<code>Docker</code>，然后执行以下命令：</p>
<pre><code>docker run --restart=always --name utorrent -d \
-p 8080:8080 \
-p 6881:6881 \
-v ~/utorrent:/utorrent/data \
ekho/utorrent</code></pre><p>安装完成后，相关信息如下：</p>
<pre><code>utorrent地址：http://ip:8080/gui
访问用户名：admin
访问密码：为空
下载目录：~/utorrent</code></pre><p><code>CentOS</code>系统安装后，可能还需要开启相应的端口，大致如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
iptables -A INPUT -p tcp --dport 6881 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8080/tcp --permanent
firewall-cmd --zone=public --add-port=6881/tcp --permanent
firewall-cmd --reload</code></pre><p>如果你不想用了，可以使用以下命令卸载：</p>
<pre><code>#删掉容器
ContainerID=`docker ps|grep ekho/utorrent|awk &apos;{print $1}&apos;`
docker kill ${ContainerID}
docker rm ${ContainerID}
docker rmi `docker images|grep ekho/utorrent|awk &apos;{print $3}&apos;`
#删掉下载文件夹
rm -rf ~/utorrent</code></pre><h2 id="安装Deluge"><a href="#安装Deluge" class="headerlink" title="安装Deluge"></a>安装Deluge</h2><p><strong>镜像来源：</strong><a href="https://hub.docker.com/r/linuxserver/deluge" target="_blank" rel="noopener">https://hub.docker.com/r/linuxserver/deluge</a></p>
<p>先安装<code>Docker</code>，然后执行以下命令：</p>
<pre><code>docker run --restart=always --name deluge -d \
--net=host \
-v ~/deluge/config:/config \
-v ~/deluge/downloads:/downloads \
linuxserver/deluge</code></pre><p>安装完成后，相关信息如下：</p>
<pre><code>deluge地址：http://ip:8112
访问密码：deluge
配置/下载目录：~/deluge</code></pre><p><code>CentOS</code>系统安装后，可能还需要开启相应的端口，大致如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8112 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8112/tcp --permanent
firewall-cmd --reload</code></pre><p>进入界面后，记得点击上方的<code>Preferences</code>，将下载目录设置为<code>/downloads</code>。</p>
<p>如果你不想用了，可以使用以下命令卸载：</p>
<pre><code>#删掉容器
ContainerID=`docker ps|grep linuxserver/deluge|awk &apos;{print $1}&apos;`
docker kill ${ContainerID}
docker rm ${ContainerID}
docker rmi `docker images|grep linuxserver/deluge|awk &apos;{print $3}&apos;`
#删掉下载文件夹
rm -rf ~/deluge</code></pre><h2 id="安装Transmission"><a href="#安装Transmission" class="headerlink" title="安装Transmission"></a>安装Transmission</h2><p><strong>镜像来源：</strong><a href="https://hub.docker.com/r/linuxserver/transmission" target="_blank" rel="noopener">https://hub.docker.com/r/linuxserver/transmission</a></p>
<p>先安装<code>Docker</code>，然后执行以下命令：</p>
<pre><code>docker run --restart=always --name transmission -d \
-e TRANSMISSION_WEB_HOME=/transmission-web-control/ \
-e USER=moerats \
-e PASS=moerats \
-p 9091:9091 \
-p 51413:51413 \
-p 51413:51413/udp \
-v ~/transmission/config:/config \
-v ~/transmission/downloads:/downloads \
-v ~/transmission/watch:/watch \
linuxserver/transmission</code></pre><p>安装完成后，相关信息如下：</p>
<pre><code>transmission地址：http://ip:9091
访问用户名：moerats
访问密码：moerats
配置/下载目录：~/transmission</code></pre><p><code>CentOS</code>系统安装后，可能还需要开启相应的端口，大致如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 9091 -j ACCEPT
iptables -A INPUT -p tcp --dport 51413 -j ACCEPT
iptables -A INPUT -p udp --dport 51413 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=9091/tcp --permanent
firewall-cmd --zone=public --add-port=51413/tcp --permanent
firewall-cmd --zone=public --add-port=51413/udp --permanent
firewall-cmd --reload</code></pre><p>如果你不想用了，可以使用以下命令卸载：</p>
<pre><code>#删掉容器
ContainerID=`docker ps|grep linuxserver/transmission|awk &apos;{print $1}&apos;`
docker kill ${ContainerID}
docker rm ${ContainerID}
docker rmi `docker images|grep linuxserver/transmission|awk &apos;{print $3}&apos;`
#删掉下载文件夹
rm -rf ~/transmission</code></pre><h2 id="安装Rutorrent"><a href="#安装Rutorrent" class="headerlink" title="安装Rutorrent"></a>安装Rutorrent</h2><p><strong>镜像来源：</strong><a href="https://hub.docker.com/r/linuxserver/rutorrent" target="_blank" rel="noopener">https://hub.docker.com/r/linuxserver/rutorrent</a></p>
<p>先安装<code>Docker</code>，然后执行以下命令：</p>
<pre><code>docker run --restart=always --name rutorrent -d \
-p 2222:80 \
-p 5000:5000 \
-p 51413:51413 \
-p 6881:6881/udp \
-v ~/rutorrent/config:/config \
-v ~/rutorrent/downloads:/downloads \
linuxserver/rutorrent</code></pre><p>安装完成后，相关信息如下：</p>
<pre><code>rutorrent地址：http://ip:2222
配置/下载目录：~/rutorrent</code></pre><p><code>CentOS</code>系统安装后，可能还需要开启相应的端口，大致如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 2222 -j ACCEPT
iptables -A INPUT -p tcp --dport 5000 -j ACCEPT
iptables -A INPUT -p tcp --dport 51413 -j ACCEPT
iptables -A INPUT -p udp --dport 6881 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=2222/tcp --permanent
firewall-cmd --zone=public --add-port=5000/tcp --permanent
firewall-cmd --zone=public --add-port=51413/tcp --permanent
firewall-cmd --zone=public --add-port=6881/udp --permanent
firewall-cmd --reload</code></pre><p>如果你不想用了，可以使用以下命令卸载：</p>
<pre><code>#删掉容器
ContainerID=`docker ps|grep linuxserver/rutorrent|awk &apos;{print $1}&apos;`
docker kill ${ContainerID}
docker rm ${ContainerID}
docker rmi `docker images|grep linuxserver/rutorrent|awk &apos;{print $3}&apos;`
#删掉下载文件夹
rm -rf ~/rutorrent</code></pre><h2 id="安装Qbittorrent"><a href="#安装Qbittorrent" class="headerlink" title="安装Qbittorrent"></a>安装Qbittorrent</h2><p><strong>镜像来源：</strong><a href="https://hub.docker.com/r/linuxserver/qbittorrent" target="_blank" rel="noopener">https://hub.docker.com/r/linuxserver/qbittorrent</a></p>
<p>先安装<code>Docker</code>，然后执行以下命令：</p>
<pre><code>docker run --restart=always --name qbittorrent -d \
-p 6881:6881 \
-p 6881:6881/udp \
-p 8080:8080 \
-v ~/qbittorrent/config:/config \
-v ~/qbittorrent/downloads:/downloads \
linuxserver/qbittorrent</code></pre><p>安装完成后，相关信息如下：</p>
<pre><code>qbittorrent地址：http://ip:8080
用户名：admin
密码：adminadmin
配置和/下载目录：~/qbittorrent</code></pre><p><code>CentOS</code>系统安装后，可能还需要开启相应的端口，大致如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
iptables -A INPUT -p tcp --dport 6881 -j ACCEPT
iptables -A INPUT -p udp --dport 6881 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8080/tcp --permanent
firewall-cmd --zone=public --add-port=6881/tcp --permanent
firewall-cmd --zone=public --add-port=6881/udp --permanent
firewall-cmd --reload</code></pre><p>如果你不想用了，可以使用以下命令卸载：</p>
<pre><code>#删掉容器
ContainerID=`docker ps|grep linuxserver/qbittorrent|awk &apos;{print $1}&apos;`
docker kill ${ContainerID}
docker rm ${ContainerID}
docker rmi `docker images|grep linuxserver/qbittorrent|awk &apos;{print $3}&apos;`
#删掉下载文件夹
rm -rf ~/qbittorrent</code></pre><p>这里顺便推荐个磁力链接聚合搜索<code>magnetW</code>，有兴趣的可以下载<code>Windows/Mac</code>端应用程序，下载地址→传送门。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>大疆高亮屏(CrystalSky)开启FCC，变成航拍娱乐2in1</title>
    <url>/2314/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近有些同学问我高亮屏(<code>CrystalSky</code>)如何开启<code>FCC</code>，看在很多人需要，就在这出一篇教程。高亮屏操作起来说简单也简单，说麻烦也很麻烦，只是之前一直不想去折腾，不过目前网上几乎看不到这种教程，所以就参考了国外一些安全人员研究的基础上，融合了个人的一些经验发一篇开启<code>FCC</code>教程及其它玩法。</p>
<pre><code>注意：以下内容仅作技术交流，请勿用于实际用途，并且请按照当地法律法规操作无线电，否则后果自负！

提示：如果有不懂的或者该方法失效了，可以去该论坛提问，地址：www.pilotbbs.com，里面会有大神帮助你。</code></pre><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>本教程共分<code>6</code>部分：</p>
<ul>
<li>第<code>1</code>部分简单介绍下目前市面上的大疆高亮屏(<code>CrystalSky</code>)。</li>
<li>第<code>2</code>部分用简单的方法开启<code>FCC</code>。</li>
<li>第<code>3</code>部分<code>Root</code>后安装软件开启<code>FCC</code>。</li>
<li>第<code>4</code>部分高亮屏如何变身娱乐与航拍<code>2in1</code>平板。</li>
<li>第<code>5</code>部分高亮屏安装荔枝等软件。</li>
<li>第<code>6</code>部分进阶玩法。</li>
</ul>
<p><strong>1、高亮屏的简单介绍及前期准备工作</strong><br>高亮屏有<code>5.5</code>和<code>7.85</code>两个版本的尺寸，它的核心系统是安卓，这个想必大多数人都知道。在操作之前，我们需要开启开发者模式。高亮屏开启开发者模式的方法和安卓手机一样，点设置-关于-版本号-连续点击<code>7</code>次，开启开发者模式，然后到开发者模式里面打开<code>USB</code>调试模式。至此，准备工作已完成。</p>
<p><strong>2、简单方法开启FCC</strong><br>高亮屏还是那个高亮屏，能不能开启<code>FCC</code>主要还是看无人机型号，如果你的无人机是<code>Spark</code>、<code>御1</code>系列、<code>精灵4</code>、<code>精灵4p</code>、<code>精灵4A</code>、<code>悟2</code>、那么就可以。<code>精灵4p2.0</code>安卓用户有其他的方法，可以看下面一条内容。</p>
<p>首先下载<code>NLD</code>安全小组修改的<code>GO4</code>软件到内存卡或者拷贝到自带内存里面，文件下载：</p>
<pre><code>#下载地址：https://www.southcat.net/usr/fcc/CrystalSky_ADB.zip
#解压密码：www.oyeeh.vip，感谢oyeeh站长同学帮忙收集并打包好。</code></pre><p>该软件与官方<code>GO4</code>共存(文中所提的软件均是网上收集并已打包好)</p>
<p>如果安装后，高亮屏上有<code>NLD</code>软件，那个恭喜你，搞定了。直接用这个软件连接无人机去飞即可，连接无人机后默认自动开启<code>FCC</code>。如果提示不能安装，或者安装后不显示，那么就需要<code>Root</code>了。咱们接着看第<code>3</code>步教程。</p>
<p><strong>3、Root后安装软件开启FCC</strong><br>这里还是用简单的方法，<code>Windows</code>用户下载一个<code>KingRoot</code>，下载连接自行百度。用其他的<code>Root</code>工具应该也可以，大家可以自行尝试，选择自己喜欢的工具。</p>
<pre><code>1)下载安装好后，将高亮屏打开连接电脑，选择usb调试模式。
2)打开Root工具，将高亮屏（CrystalSky）进行Root操作。
3)点击安装NLD软件，如果安装的GO4程序正常使用，接下来的内容不用看了。</code></pre><p>如果不能显示，则需要进行以下操作：</p>
<pre><code>1)在高亮屏上安装并启动terminal，原文也提供了这个工具，输入：su -c“pm enable dji.pilot.pad”
2)打开ES文件浏览器，给予ROOT权限，进入到该目录：/data/data/dji.system.launcher/shared_prefs/。
3)拷贝dji.system.launcher.xml到内存卡的/Download/mnt/sdcard/Download/目录。
4)用ES文件管理器打开刚才拷贝的文件
&lt;?xmlversion=&apos;1.0&apos;encoding=&apos;utf-8&apos;standalone=&apos;yes&apos; ?&gt;
&lt;map&gt;
    &lt;int name=&quot;KEY_APP1_INDEX&quot; value=&quot;1&quot; /&gt;
    &lt;int name=&quot;KEY_APP2_INDEX&quot; value=&quot;0&quot; /&gt;  &lt;stringname=&quot;KEY_MUTEX_PREF_PKG&quot;&gt;dji.pilot.pad&lt;/string&gt;
    &lt;long name=&quot;KEY_BOOT_CNT&quot; value=&quot;165&quot; /&gt;
    &lt;int name=&quot;KEY_F1_INDEX&quot; value=&quot;0&quot; /&gt;    &lt;stringname=&quot;KEY_TRAFFIC_USED_TIMESTAMP&quot;&gt;2018-06-14&lt;/string&gt;
    &lt;int name=&quot;KEY_FREEZE_ROTATION&quot; value=&quot;0&quot; /&gt;
    &lt;long name=&quot;KEY_TRAFFIC_USED_TOTAL&quot; value=&quot;7363457756&quot; /&gt;
    &lt;int name=&quot;KEY_F2_INDEX&quot; value=&quot;4&quot; /&gt;
&lt;longname=&quot;KEY_TRAFFIC_USED_TODAY&quot;value=&quot;127043018&quot; /&gt;
&lt;/map&gt;
要增加或者修改的语句是： 
&lt;stringname=&quot;KEY_MUTEX_PREF_PKG&quot;&gt;dji.pilot.pad&lt;/string&gt;
或许是
&lt;stringname=&quot;KEY_MUTEX_PREF_PKG&quot;&gt;dji.go.v4&lt;/string&gt;
增加或者修改为：
&lt;stringname=&quot;KEY_MUTEX_PREF_PKG&quot;&gt;dji.pilot.pad&lt;/string&gt;，修改好后保存。
5)将刚才修改好的文件导入到/Download/data/data/dji.system.launcher/shared_prefs/，覆盖之前自带的。
6)现在重启高亮屏</code></pre><p>如果重启后还是不能显示，请再继续以下操作：</p>
<pre><code>1)在高亮屏上复制/data/data/dji.system.launcher/shared_prefs/dji/system.launcher.xml到/mnt/sdcard/Download/目录。
2)电脑上打开ADB工具，将该文件拖出来到adb文件夹目录：adb pull/mnt/sdcard/Download/dji.system.launcher.xml
3)&lt;string name=&quot;KEY_MUTEX_PREF_PKG&quot;&gt;dji.pilot.pad&lt;/string&gt;，或者将dji.pilot.pad改写为dji.go.v4 ，如果里面生成的是dji.pilot.pad。
4)修改好后，再用ADB工具推送进高亮屏里：adb push dji.system.launcher.xml /mnt/sdcard/Download/。
5)用ES文件浏览器将这个xml 文件拷贝到如下目录：/Download/data/data/dji.system.launcher/shared_prefs/。
6)重启高亮屏</code></pre><p><strong>4、变身娱乐与航拍2in1平板</strong><br>安装<code>Nova</code>桌面，即可瞬间变成一个集娱乐和航拍于一体的娱乐性平板，出门再也不用又带高亮屏又带<code>Pad</code>啦。官方默认应该只能安装<code>20</code>个软件限制，具体的数值记不清了，大家可以自行安装测试。</p>
<p><strong>5、高亮屏上安装荔枝软件</strong></p>
<pre><code>1)在正常安装荔枝(LitChi)不能使用的情况下，我们先root，然后我们安装flashfire0.73.apk，将“open_gapps-arm-5.1-pico-20180706.zip”（这是谷歌框架文件）拷贝到内存卡或者高亮屏自带的内存里。只要你知道具体位置就行，方便等下好找。
2)打开flashfire0.73.apk，请求Root权限，点允许。点击软件右下角+号，再点击flash zip，找到你刚才拷贝到内存卡的“open_gapps-arm-5.1-pico-20180706.zip”，选择刷入。弹出的对话框中选择Auto-mount(自动安装)和Mount/system read/write(使系统可读写)。
3)刷入过程中，高亮屏会重启。重启完成后，谷歌框架已经刷好，可能还会提示你无法使用谷歌服务。
4)在谷歌服务器上注册你的设备。下载Device ID_v1.3.2.apk，高亮屏上安装后该软件会给出你这台设备的ID编号，用电脑或者高亮屏上打开如下链接：https://www.google.com/android/uncertified/ ，登陆自己的谷歌账号后输入你的设备ID，进行设备注册即可。谷歌认证的过程可能是几分钟，也可能是1天或者更长的时间，耐心等待就是了。</code></pre><p>至此，你已经可以正常使用荔枝(<code>LitChi</code>)了。不过如果你需要使用<code>Google</code>地图，那么就需要翻<code>Q</code>了，这个本文不讨论。</p>
<p><strong>6、进阶玩法</strong><br>如果你不会用软件<code>Root</code>的，可以手动用脚本<code>Root</code>，该方法不需要<code>Linux</code>或者<code>MAC</code>环境，直接在<code>Windows</code>环境下直接使用：</p>
<pre><code>1)首先高亮屏开启开发者选项
2)打开大容量存储模式
3)进入adb shell文件夹，双击“start_shell.bat”
./cd csroot
adb devices
copy.sh
adb shell
cd /data/local/tmp
lordroot
mkdevsh
4)此时关闭大容量存储模式！
5)重启高亮屏！</code></pre><p>进入应用程序，打开<code>SuperSU</code>，安装<code>supersu</code>，确定，重启！</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>大疆IOS设备用户开启FCC/Boost/32信道等最新详细教程</title>
    <url>/2315/</url>
    <content><![CDATA[<p><strong>说明：</strong>目前大疆无人机已经出了很多品种，能开<code>FCC</code>的比如有：<code>精灵3s</code>、<code>精灵3p</code>、<code>精灵3se</code>、<code>精灵3 4k</code>、<code>精灵4a</code>、<code>精灵4p</code>、<code>精灵4p 2.0</code>、<code>御air</code>、<code>御pro</code>、<code>御2</code>、<code>悟2</code>、<code>悟1</code>、<code>M600P</code>、<code>晓Spark</code>等。博主之前发了几个<code>FCC</code>教程，查看：无人机开启FCC教程、识别是否开启了FCC、关于FCC的科普及答疑等，基本很详细了，不过有些方法存在失效的问题，所以这里博主就专门针对苹果<code>IOS</code>设备再发一篇详细的最新开启<code>FCC</code>及<code>Boost</code>等教程。至于安卓设备的最新开启方法过几天再发，有兴趣的可以关注下。</p>
<pre><code>#科普防骗知识
1、比如闲鱼上很多无良商家拿本文这个APP去卖，实际上只有7天时间，7天后就闪退。
2、还有说御2最新固件安卓机用户支持开启fcc的都是骗子，大家注意谨防上当受骗。</code></pre><p>本文主要讨论，<code>IOS</code>设备如何在未越狱的情况下安装修改的<code>DJI GO4 APP</code>，开启<code>FCC</code>、<code>Boost</code>、<code>32</code>信道。这里分享<code>2</code>种方法，每一种复杂程度不一样，第一种新号，没双重验证，第二种是开启了双重验证的方法。大家视情况自行决定。</p>
<pre><code>注意：以下内容仅作技术交流，请勿用于实际用途，并且请按照当地法律法规操作无线电，否则后果自负！

提示：如果有不懂的或者该方法失效了，可以去该论坛提问，地址：www.pilotbbs.com，里面会有大神帮助你。</code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><pre><code>#本文所需要的APP下载地址，且APP以后会经常增加到最新版，随时关注
百度网盘：https://pan.baidu.com/s/1kss2DOAdMgI6AxXzLIBDgA 
提取码：b3jb 
#并且软件为俄罗斯大神Daniil Zobov破解，第一版为4.2.22，最新版为4.3.9。
#这个签名是用的个人证书，只能使用7天，7天后就要重新签名，不然会闪退。或者购买苹果个人开发者证书，1年只需要签名一次。</code></pre><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>我们可以用<code>SuperImpactor</code>来安装，官网地址：点击访问，下载安装后，点击<code>install</code>选择你需要的<code>DJI GO4 MOD</code>版。<br><img src="https://www.southcat.net/usr/picture/IOS_FCC21.png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/IOS_FCC22.png" alt="请输入图片描述" title="请输入图片描述"><br>然后输入自己的<code>appleid</code>，也可以新申请一个。演示的为新申请的，没有二次验证。下面用<code>impactor</code>的是有二次验证的账号。<br><img src="https://www.southcat.net/usr/picture/IOS_FCC23.png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/IOS_FCC24.png" alt="请输入图片描述" title="请输入图片描述"><br>点击<code>install</code>，第一次会提示出错，我们关掉。然后继续点击<code>Install</code>，耐心等待<code>10</code>分钟左右。返回手机或者平板查看是否安装上。如果发现手机上没有相关软件，而软件又提示完成，那么重启下手机或者平板即可。那么可以重启下手机看看。软件<code>7</code>天快到期时，点击<code>resign</code>重新签名即可<br><img src="https://www.southcat.net/usr/picture/IOS_FCC25.png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/IOS_FCC26.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>我们用<code>Impactor</code>(也叫冲击钻)，官网地址：点击访问，为了让广大飞友容易上手，修改版<code>APP</code>的补丁文件独家汉化并内置了，不用担心看不懂，也不用再导入什么配置文件了。教程每一步我也截图了，这里就发下。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>好用且功能强大的LAMP一键安装包</title>
    <url>/1619/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>LAMP</code>一键安装包是一个用<code>Linux Shell</code>编写的可以为<code>CentOS/Debian/Ubuntu</code>系统的<code>VPS</code>或服务器安装 <code>LAMP</code>(<code>Linux</code>+<code>Apache</code>+<code>MySQL</code>/<code>MariaDB</code>/<code>Percona</code>+<code>PHP</code>)生产环境的<code>Shell</code>程序。包含一些可选安装组件如：<code>ZendGuardLoader</code>、<code>ionCube Loaders</code>、<code>XCache</code>、<code>OPcache</code>、<code>memcached</code>、<code>Redis</code>、<code>GraphicsMagick</code>、<code>ImageMagick</code>、<code>Swoole</code>等。同时还有一些辅助脚本如：虚拟主机管理、<code>Apache</code>、<code>MySQL</code>/<code>MariaDB</code>/<code>Percona</code>、<code>PHP</code> 及 <code>PhpMyAdmin</code>的升级等。</p>
<p><strong>安装建议：</strong>根据自己的<code>CMS</code>建站系统要求，选择合适的软件版本安装即可。</p>
<h2 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h2><p><strong>系统支持：</strong><code>CentOS 6+</code>/<code>Debian 7+</code>/<code>Ubuntu 12+</code><br><strong>内存要求：</strong>≥512MB<br><strong>硬盘要求：</strong>至少<code>2GB</code>以上的剩余空间</p>
<h2 id="支持组件"><a href="#支持组件" class="headerlink" title="支持组件"></a>支持组件</h2><ul>
<li>支持<code>PHP</code>自带几乎所有组件</li>
<li>支持<code>MySQL</code>、<code>MariaDB</code>、<code>Percona</code> <code>Server</code>数据库</li>
<li>支持<code>Redis</code>（可选安装）</li>
<li>支持<code>XCache</code>（可选安装）</li>
<li>支持<code>Swoole</code>（可选安装）</li>
<li>支持<code>Memcached</code>（可选安装）</li>
<li>支持<code>ImageMagick</code>（可选安装）</li>
<li>支持<code>GraphicsMagick</code>（可选安装）</li>
<li>支持<code>ZendGuardLoader</code>（可选安装）</li>
<li>支持<code>ionCube Loader</code>（可选安装）</li>
<li>自助升级<code>Apache</code>，<code>PHP</code>，<code>phpMyAdmin</code>，<code>MySQL</code>/<code>MariaDB</code>/<code>Percona  
Server</code>至最新版本</li>
<li>命令行新增虚拟主机（使用<code>lamp</code>命令），操作简便</li>
<li>支持一键卸载</li>
</ul>
<h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p><strong>1、事前准备：</strong>安装<code>wget</code>、<code>screen</code>、<code>unzip</code>，创建<code>screen</code>会话。</p>
<pre><code>yum -y install wget screen unzip #CentOS
apt-get -y install wget screen unzip #Debian/Ubuntu</code></pre><p><strong>2、下载、解压、赋予执行权限</strong></p>
<pre><code>wget -O lamp.zip https://github.com/teddysun/lamp/archive/master.zip
unzip lamp.zip
cd lamp-master/
chmod +x *.sh</code></pre><p><strong>3、安装LAMP一键安装包</strong></p>
<pre><code>screen -S lamp
./lamp.sh</code></pre><h2 id="组件安装"><a href="#组件安装" class="headerlink" title="组件安装"></a>组件安装</h2><p>关于本脚本支持的所有组件，都可以在脚本交互里可选安装。</p>
<h2 id="使用提示"><a href="#使用提示" class="headerlink" title="使用提示"></a>使用提示</h2><pre><code>lamp add #创建虚拟主机
lamp del #删除虚拟主机
lamp list #列出虚拟主机</code></pre><h2 id="如何升级"><a href="#如何升级" class="headerlink" title="如何升级"></a>如何升级</h2><pre><code>./upgrade.sh    #Select one to upgrade
./upgrade.sh apache    #Upgrade Apache
./upgrade.sh db    #Upgrade MySQL/MariaDB/Percona
./upgrade.sh php    #Upgrade PHP
./upgrade.sh phpmyadmin    #Upgrade phpMyAdmin</code></pre><h2 id="如何卸载"><a href="#如何卸载" class="headerlink" title="如何卸载"></a>如何卸载</h2><pre><code>./uninstall.sh</code></pre><h2 id="程序目录"><a href="#程序目录" class="headerlink" title="程序目录"></a>程序目录</h2><ul>
<li>MySQL 安装目录:<code>/usr/local/mysql</code></li>
<li>MySQL 数据库目录：<code>/usr/local/mysql/data</code>（默认，安装时可更改路径）</li>
<li>MariaDB 安装目录:<code>/usr/local/mariadb</code></li>
<li>MariaDB 数据库目录：<code>/usr/local/mariadb/data</code>（默认，安装时可更改路径）</li>
<li>Percona 安装目录:<code>/usr/local/percona</code></li>
<li>Percona 数据库目录：<code>/usr/local/percona/data</code>（默认，安装时可更改路径）</li>
<li>PHP 安装目录:<code>/usr/local/php</code></li>
<li>Apache 安装目录：<code>/usr/local/apache</code></li>
</ul>
<h2 id="命令一览"><a href="#命令一览" class="headerlink" title="命令一览"></a>命令一览</h2><ul>
<li><p><code>MySQL</code>或<code>MariaDB</code>或<code>Percona</code>命令</p>
<p>/etc/init.d/mysqld (start|stop|restart|status)</p>
</li>
<li><p><code>Apache</code>命令</p>
<p>/etc/init.d/httpd (start|stop|restart|status)</p>
</li>
<li><p><code>Memcached</code>命令（可选安装）</p>
<p>/etc/init.d/memcached (start|stop|restart|status)</p>
</li>
<li><p><code>Redis</code>命令（可选安装）</p>
<p>/etc/init.d/redis-server (start|stop|restart|status)</p>
</li>
</ul>
<h2 id="网站根目录"><a href="#网站根目录" class="headerlink" title="网站根目录"></a>网站根目录</h2><ul>
<li>默认的网站根目录：<code>/data/www/default</code></li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>如何制做一个属于你的“.chn”物联网域名</title>
    <url>/622/</url>
    <content><![CDATA[<p>最近物联网域名.chn很火，很有意思的一点是这个域名竟然需要安装插件才能访问。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li>服务器一台</li>
<li>服务器安装好宝塔，并安装web环境</li>
</ol>
<h2 id="搭建反代服务"><a href="#搭建反代服务" class="headerlink" title="搭建反代服务"></a>搭建反代服务</h2><p>宝塔创建你的网站使用你想使用的域名,比如chn.ppt。</p>
<p>然后我们点击网站页面的设置添加反代</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/08/QQ%E6%88%AA%E5%9B%BE20190826212603.png" alt=""></p>
<h2 id="编辑Host"><a href="#编辑Host" class="headerlink" title="编辑Host"></a>编辑Host</h2><p>我们需要对服务器的host进行设置以达到浏览器输入chn.ppt指向你的服务器IP的效果</p>
<p>linux如下：</p>
<p>linux下host文件目录为 <code>/etc/host</code></p>
<p>使用<code>vi /etc/host</code> 进行编辑或是使用宝塔的文件管理进行编辑</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/08/QQ%E6%88%AA%E5%9B%BE20190826212956.png" alt=""></p>
<p>添加一行 <code>IP 对应域名</code> 其他系统可以百度一下。</p>
<h2 id="代理访问"><a href="#代理访问" class="headerlink" title="代理访问"></a>代理访问</h2><p>接下来我们需要一个代理来进行访问你的域名，.chn初步推测就是或者方法.你可以使用几个开源的代理软件（酸酸，酸酸乳）。或是你可以使用 <code>php proxy（chn所谓的插件）</code> 来进行访问。</p>
<p>php proxy可以使用 <a href="https://github.com/joshdick/miniProxy" target="_blank" rel="noopener">https://github.com/joshdick/miniProxy</a></p>
<p>创建网站下载源码修改文件 <a href="https://github.com/joshdick/miniProxy/blob/master/miniProxy.php" target="_blank" rel="noopener">miniProxy.php</a> 修改为index.php然后访问即可</p>
<p>例如: <a href="http://chn.southcat.net/index.php?chn.ppt" target="_blank" rel="noopener">http://chn.southcat.net/index.php?chn.ppt</a></p>
<p>这里没有进行解析，如果你使用代理软件的话可以在连接代理之后直接访问即可，安装方法自行搜索</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>好看的WordPress主题：Kratos 2.5.8主题修改美化版，支持PJAX</title>
    <url>/1913/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Kratos</code>主题是<code>WP</code>里面比较好看的主题，刚刚发现了一款基于<code>Kratos 2.5.8</code>主题的修改美化版，且支持<code>PJAX</code>、代码高亮、全局音乐播放器等众多功能，很不错就分享下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Kratos_pic.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="修改项"><a href="#修改项" class="headerlink" title="修改项"></a>修改项</h2><pre><code>二次元风格
顶部Banner优化
添加博客小人spig，且可在主题设置中关闭（可在Kratos/js/spig.js中修改小人的提示内容）
无图片的文章特色图片(新式布局)随机化（Kratos/images/thumb/下的20张图片）
置顶文章加上了文字和图标标记
在post-meta中加入作者信息
在分享按钮中添加分享到QQ空间选项
评论区评论嵌套样式修改（参考Ravenclaw主题样式）
添加评论框中&quot;扑街&quot;图片
更换表情面板为DIYgay的OwO，支持更多表情
底部社交组件中添加EMAIL
底部添加建站时间统计
修改鼠标指针样式
添加复制站点内容时的弹窗提示
添加了登录/注册页面样式
添加友链模板
非Admin用户评论中可使用img标签
支持文章内容的+展开/-收缩
后台编辑器功能增强
表情/图片样式的调整
后台用户页面显示用户最近一次登录IP
添加雪花效果，添加更多设置项目(可在主题设置中找到)
文章右下角添加最后修改时间(PC页面)
重写打赏功能，将打赏页改为弹窗（参考Ravenclaw主题样式）
不再强制文章中图片width:100%显示，可调整图片显示大小
菜单栏样式修改
去掉部分功能与代码
右下角添加搜索，去除搜索小工具
手机页面的优化-良好阅读体验
支持站点显示图片背景(PC)
管理员登录站点后一些地方的调整
集成回复可见功能
登陆注册页的背景可在设置直接更改了
集成用户注册可用的邮箱域名限制功能
主页/文章页/单独页面可分别设置侧边栏位置（左/右/NONE）
重构PC页顶部菜单，不再借助superfish实现
侧边栏-最近评论小工具优化
评论回复通知邮件中的表情符号:xxx:将会转义为表情图片
侧边栏-个人简介小工具优化
用户可上传本地头像，不依赖Gravatar
集成登录限制功能
可设置直接输入密码注册，无需邮件链接激活
添加文章归档模板
修复WordPress中文标签错误(多出现在Windows主机)
美化用户注册提示邮件，密码重置邮件(同时修复WP密码重置错误问题)
Nav Bar 支持半透明
评论者站点链接改为新窗口打开
FontAwesome/Bootstrap/jQuery可直接自定义链接(免费CDN 2333)
(FontAwesome也可以使用下面的：
https://cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.min.css
https://cdn.jsdelivr.net/npm/font-awesome@4.7.0/css/font-awesome.min.css
https://cdnjs.loli.net/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css)
评论者UA显示
*支持PJAX
*代码高亮
*允许从URL导入媒体至媒体库
*默认关闭PJAX，需在主题设置启用
*Sitemap
*全局音乐播放器
*更新bilibili为H5播放器</code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><pre><code>主题的设置全部在[外观]菜单下。
二维码什么的那些图片反正都在images文件夹里面，有些设置里面找不到的话直接去替换就行了。
CSS什么的都是照我自己的使用情况改的 所以有些地方可能需要你自己动手。
主题若是有bug或者有建议可以去gayhub提交。</code></pre><h2 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h2><pre><code>Crayon Syntax Highlighter
easy2hide
Limit login attempts
Poi Player
TinyMCE Advanced
User Domain Whitelist/Backlist
WP Statistics
WP Super Cache
WP-DBManager
WP-Optimize
WP-UserAgent</code></pre><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><strong>PJAX版下载：</strong>Github下载、本地下载<br><strong>非PJAX版下载：</strong>Github下载、本地下载</p>
<h2 id="使用及演示"><a href="#使用及演示" class="headerlink" title="使用及演示"></a>使用及演示</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>如何将本地代码PUSH到github</title>
    <url>/410/</url>
    <content><![CDATA[<p>下载GIT客户端 Github创建你的新项目  复制项目地址</p>
<h1 id="把本地代码提交到git"><a href="#把本地代码提交到git" class="headerlink" title="把本地代码提交到git"></a>把本地代码提交到git</h1><h2 id="进入到：本地目录代码文件目录"><a href="#进入到：本地目录代码文件目录" class="headerlink" title="进入到：本地目录代码文件目录"></a>进入到：本地目录代码文件目录</h2><p>单击 右键 打开git bush 类似于Win的cmd <img src="https://southcat.net/wp-content/uploads/2019/04/QQ%E6%88%AA%E5%9B%BE20190429203106-300x190.png" alt=""> 下边操作之前需要设置用户 首先,你需要执行下面两条命令,作为git的基础配置,作用是告诉git你是谁,你输入的信息将出现在你创建的提交中.</p>
<p>git config –global user.name “你的名字或昵称”<br>git config –global user.email “你的邮箱”</p>
<p>然后执行：</p>
<p>git init<br>git add .<br>git commit -m “first commit” （first commit 本次提交的内容）<br>git remote add origin <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> （地址换成你建的项目的地址，不知道的话看下边 项目地址是哪个的图）<br>git push -u origin master （这一句执行的时候 可能需要输入你的 git 账号 和密码）</p>
<p>输入密码等待提交完成后 就可以进入Github查看刚推送的代码了</p>
<h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><p>如果执行</p>
<p>git remote add origin <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p>
<p>出现作错误，</p>
<p>fatal: remote origin already exists</p>
<p>则执行以下语句：</p>
<p>　　git remote rm origin</p>
<p>再往后执行git remote add origin <em><a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>__ 即可。</em> 在执行git push origin master时，报错：</p>
<p>　　error:failed to push som refs to…….</p>
<p>则执行以下语句：</p>
<p>　　git pull origin master</p>
<p>先把远程服务器github上面的文件拉先来，再push 上去。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>如何查看无人机是否开启了FCC，及开启方法</title>
    <url>/2254/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前博主发过几篇无人机开启<code>FCC</code>的教程，查看：大疆无人机通过开启FCC增大遥控距离，通过群里很多玩家的提问来看，大多数都不知道怎么样才算开启成功了，所以博主就单独拿该问题来发篇文章。</p>
<p>目前市面上常见的大疆无人机分为这几类，<code>精灵3</code>系列，<code>精灵4</code>系列，<code>御</code>系列，<code>悟</code>系列，高端玩家<code>M600P</code>系列。每一系列开启<code>FCC</code>后的状态不同，方法也有所差异，这里就介绍下如何判断自己是否开启了<code>FCC</code>。</p>
<pre><code>注意：以下内容仅作技术交流，请勿用于实际用途，并且请按照当地法律法规操作无线电，否则后果自负！

提示：如果对于FCC不懂的，可以去该论坛提问，地址：www.pilotbbs.com，里面会有大神帮助你。</code></pre><h2 id="精灵3系列"><a href="#精灵3系列" class="headerlink" title="精灵3系列"></a>精灵3系列</h2><p><strong>1、判断方法</strong><br>因为<code>精灵3</code>系列（包括<code>3s</code>、<code>3p</code>、<code>3se</code>、<code>3 4k</code>等），图传采用<code>Lightbridge</code>图传方案或<code>WIFI</code>图传，不像御系列，是采用<code>OcuSync</code>的高清数字图传系统。因此不能通过看<code>4KM</code>线条在纵坐标<code>100</code>以上来判断。那你说了，没法看，我怎么知道我开启成功了呢？简单，通过飞行测试。你在没开启的情况下，可以飞多远，然后同方向、同高度进行飞行测试，飞行距离比之前远的很明显就是开启成功。</p>
<p><strong>2、开启方法</strong><br><code>精灵3s</code>、<code>3 4k</code>由于采用的是<code>WIFI</code>图传，因此开启方法有专用的工具，该工具会在群内分享，可以通过下方留的<code>QQ</code>群加群。不会用的可以在群里问下。<code>精灵3</code>系类其它飞机，建议是采用降级固件的方案，因为最新的固件就算你开启了<code>FCC</code>效果也不明显，实际测试过。降级过后再配合开启<code>FCC</code>，就可以像精灵<code>3</code>系列刚出来一样爽飞了。当然，你说有多爽，我觉得能问出这句话的，建议你买御哈苏，毕竟新机器，钱也到位了。御哈苏的图传比御姐升级了不少，除了价格贵，其他都挺好。</p>
<h2 id="精灵4系列"><a href="#精灵4系列" class="headerlink" title="精灵4系列"></a>精灵4系列</h2><p><strong>1、判断方法</strong><br><code>精灵4</code>系列（包括<code>4a</code>、<code>4p</code>），开启<code>FCC</code>不能看图传状态，不过开启<code>32</code>信道是可以明显的看出来的。信道数量增加到了<code>32</code>，会数数的应该都懂。那么如何判断是否开启<code>FCC</code>，方法也是通过飞行测试。</p>
<p><strong>2、开启方法</strong><br>不论安卓还是苹果都可以用低版本的<code>APP</code>来导入配置文件开启<code>FCC</code>，具体的方法可以查看教程→传送门。目前不论安卓还是苹果，最新<code>APP</code>均已支持开启<code>FCC</code>，有需要依然可以通过下方留的<code>QQ</code>群加群。最新苹果<code>APP</code>不仅可以开启<code>FCC</code>，还可以同时开启<code>32</code>信道，信号和图传都得到了加强，效果很好。</p>
<h2 id="御系列及精灵4P-2-0"><a href="#御系列及精灵4P-2-0" class="headerlink" title="御系列及精灵4P 2.0"></a>御系列及精灵4P 2.0</h2><p><strong>1、判断方法</strong><br>大疆<code>御系列</code>无人机包括(<code>air</code>、<code>pro</code>、<code>御2</code>)，其中<code>air</code>是<code>WIFI</code>图传，和其他两款不同。<code>精灵4P 2.0</code>因为采用了和<code>御2</code>一样的图传技术，因此我们放在一起讨论。其中<code>AIR</code>是通过看信道判断，没开启的情况下，可以看到<code>12</code>、<code>13</code>两个信道，开启后，就没有这两个信道了。其他的都是存在的。</p>
<p>下图为<code>air</code>没开启<code>FCC</code>的状态，还有<code>12</code>和<code>13</code>两个信道。<br><img src="https://www.southcat.net/usr/picture/PD_FCC(1).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<p>下图为<code>air</code>开启了<code>FCC</code>的状态，<code>12</code>和<code>13</code>信道没有了。<br><img src="https://www.southcat.net/usr/picture/PD_FCC(2).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<p><code>御姐</code>和<code>御2</code>系列、<code>精灵4p 2.0</code>无人机都可以通过看<code>4M</code>的线条在纵坐标<code>100</code>以上来判断，没开启的话<code>4KM</code>的线条在<code>100</code>以下。下图为开启<code>FCC</code>成功的状态。<br><img src="https://www.southcat.net/usr/picture/PD_FCC(3).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、开启方法</strong><br>愿意自己捣腾的用户可以使用低版本的<code>APP</code>来导入配置文件开启<code>FCC</code>或者<code>BOOST</code>，教程查看→传送门，但是低版本<code>APP</code>不支持<code>御2</code>、<code>精灵4p 2.0</code>等机型。</p>
<h2 id="M600P系列"><a href="#M600P系列" class="headerlink" title="M600P系列"></a>M600P系列</h2><p><strong>1、判断方法</strong><br>和<code>精灵3</code>系列的相同，只有通过飞行测试感受出来。</p>
<p><strong>2、开启方法</strong><br>因为使用的是<code>DJI GO</code>，目前最新的<code>DJI GO</code>还没有直接破解的，开启方法较为复杂，建议加群咨询大神们。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>安装h5ai后，文件读取不出来的解决方法</title>
    <url>/1702/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前使用宝塔面板搭建了一个用<code>h5ai</code>程序的下载站，过程一路顺利，没出现啥问题，今天把下载站搬家到本博客的服务器上后，却出现了文件读取不出来的问题，使用的是军哥的<code>lnmp</code>环境，相信很多人也会出现这个问题，其实在之前的<code>h5ai</code>安装教程里就说过这个问题，参考：一款不错的PHP目录列表程序：h5ai安装教程，这里再单独搬出来说下。</p>
<p>文件读取不了的可能原因就是<code>php</code>已禁用<code>scandir</code>函数了，请修改<code>php.ini</code>解决，以军哥<code>lnmp</code>为例，文件位置<code>/usr/local/php/etc</code>。</p>
<pre><code>disable_functions=passthru,exec,system,chroot,scandir,...</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>宝塔面板遇到No space left on device错误的解决方法</title>
    <url>/1947/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主好几次用宝塔面板，都遇到了磁盘爆满的情况，然后登陆的时候提示<code>IOError: [Errno 28] No space left on device</code>等错误信息，导致登录面板不显示，进不去了，估计很多人会遇到，这里就简单说下解决方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>一般遇到这种情况都是回收站没清空，或者<code>Mysql</code>数据库及网站的日志文件过大导致的，所以我们只要删除就可以了。</p>
<p>1、宝塔回收站文件夹为<code>/www/Recycle_bin</code>，运行命令：</p>
<pre><code>rm -rf /www/Recycle_bin/*</code></pre><p>2、如果不是因为回收站的话，那就使用<code>FTP</code>软件登录<code>VPS</code>自行删除大文件日志。</p>
<pre><code>/www/server/data  #数据库日志文件夹
/www/wwwlogs  #网站日志文件夹</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>宝塔面板1分钱可购买3年的异常监控推送和小程序插件</title>
    <url>/2375/</url>
    <content><![CDATA[<p><strong>说明：</strong>宝塔最新活动，针对宝塔小程序和异常推送的插件，原价<code>525.6</code>元/<code>3</code>年，现在<code>0.01</code>元/<code>3</code>年，然后出了个组团活动，貌似需要<code>10</code>个人才能<code>1</code>分钟获得插件，不然退款，组团人数越多，奖励越高，也有一定几率奖励专业版，前<code>3</code>的话，所有组团队员都有专业版，反正<code>1</code>分钱不多，有需求的就上车吧！</p>
<h2 id="活动界面"><a href="#活动界面" class="headerlink" title="活动界面"></a>活动界面</h2><p><img src="https://www.southcat.net/usr/picture/btzs.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="购买地址"><a href="#购买地址" class="headerlink" title="购买地址"></a>购买地址</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>宝塔面板免费版详细的使用教程及专业版插件测评</title>
    <url>/2263/</url>
    <content><![CDATA[<p><strong>说明：</strong>在现如今<code>VPS</code>服务器的普及下，很多站长都愿意购买<code>VPS</code>服务器而不是购买虚拟主机来跑网站和项目，一来是<code>VPS</code>服务器可以根据自己的需要来安装相关的插件及服务，二来是现阶段的服务器价格也能满足我们的成本负担。不过我们在使用<code>Linux</code>服务器建站的时候，纯粹使用<code>SSH</code>客户端操作的时候很麻烦，特别是对小白很不友好。所以很多玩服务器的朋友还是习惯使用<code>Web</code>面板来部署环境，这样我们可以非常轻松简单的管理网站。</p>
<p>现阶段发展起来的<code>Web</code>免费以及付费的面板我们罗列出来大大小小至少能有<code>20-30</code>个，比如我们国内较为熟悉的<code>WDCP</code>、<code>宝塔</code>、<code>AMH</code>、<code>Lnmp</code>以及国外用户使用较多的<code>VestaCP</code>都还是不错的。本文就主要说下宝塔，该面板差不多是博主认为使用最方便，功能也是很全的，目前来说有免费版和专业版(其实也就是免费使用收费插件)，对于一般人来说，免费版够用了，当然专业版也有它的价值，比如可以免费使用很多好的插件，这里就详细的说下免费版使用教程及专业版插件测评，顺便说下使用方法让更多刚开始学会建站的小白了解下。</p>
<h2 id="安装面板"><a href="#安装面板" class="headerlink" title="安装面板"></a>安装面板</h2><p>现阶段的宝塔面板已经更新到<code>6.2</code>版本，由于还处于不稳定状态，所以博主推荐安装<code>5.9</code>版本，系统建议选择<code>CentOS</code>。</p>
<p><code>Linux</code>面板<code>5.9</code>(稳定版)安装命令：</p>
<pre><code>#请使用纯净系统安装，也就是没安装过网站环境，比如PHP、Nginx、Mysql等
#CentOS系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu/Deepin系统：
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh
#Fedora系统
wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; bash install.sh</code></pre><p>先使用<code>SSH</code>客户端(这里推荐<code>Xshell</code>)登录<code>VPS</code>服务器，再把上面的安装脚本复制进去<code>Enter</code>运行，一分钟左右即可安装完成宝塔面板。安装完成后会直接在<code>SSH</code>客户端显示后台信息。<br><img src="https://www.southcat.net/usr/picture/BTCP(1).png" alt="请输入图片描述" title="请输入图片描述"><br>如果我们后续未修改密码却忘记了密码的话，可以在<code>SSH</code>客户端使用命令<code>bt default</code>来查看安装后的默认后台信息。</p>
<h2 id="免费版使用教程"><a href="#免费版使用教程" class="headerlink" title="免费版使用教程"></a>免费版使用教程</h2><p><strong>1、网站环境搭建</strong><br>我们安装宝塔面板后根据信息登录后台，最开始是没有网站环境的，只有个面板而已，然后宝塔会提示让我们选择环境。<br><img src="https://www.southcat.net/usr/picture/BTCP(2).png" alt="请输入图片描述" title="请输入图片描述"><br>这里就根据你所安装的程序对环境版本的要求来进行选择了，博主一直使用<code>Lnmp</code>，所以就只选了<code>Nginx 1.12</code>、<code>PHP 7.1</code>、 <code>Mysql 5.5</code>，然后开始点击一键安装，直到安装完成，时间看你的机器性能，性能好就安装快，反之就慢。</p>
<p>安装好了后，在首页就能让我们知道很多有用的信息，比如版本信息、在线时间、网站、数据库数量、服务器状态(进程管理/端口管理)软件、网络等等，总之很人性化。<br><img src="https://www.southcat.net/usr/picture/BTCP(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、添加域名</strong><br>如何进行网站搭建呢？首先肯定是需要你在你的域名服务商将域名的<code>A</code>记录解析到安装宝塔的<code>VPS</code>服务器了，然后再选择面板左侧网站-添加站点，后面有其他修改默认页面（<code>404</code>等页面）等功能，我们可以按需设置即可。<br><img src="https://www.southcat.net/usr/picture/BTCP(4).png" alt="请输入图片描述" title="请输入图片描述"><br>然后设置好后，我们点击该域名的设置按钮，可以看到如下功能：<br><img src="https://www.southcat.net/usr/picture/BTCP(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<pre><code>站点设置：域名管理，可以管理主机名。
子目录绑定：可以为当前站点绑定其他域名作为子目录域名。
网站目录：可以自己修改网站的入口。
流量限制：利用nginx相关参数来对当前站点进行限制。
伪静态：我们可以自行修改或者添加程序所需的伪静态配置，而且上面包含很多程序常用的伪静态配置。
默认文档：默认文档为当前站点的默认首页，我们可以按需设置。
配置文件：配置文件为当前站点的默认配置信息，请谨慎修改。
SSL：当前宝塔是SSL证书已经非常成熟，我们可以自己填写自己的证书，也可以使用免费的Let&apos;s Encrypt证书，或者宝塔账号实名后，使用宝塔自己签发的证书。
PHP版本：我们可以根据需要在此处切换PHP的版本。
Tomcat：采用Java环境时，可以配置Tomcat。
301重定向：我们可以对当前站点开启301重定向到其他站点。
反向代理：反向代理在采用Nginx环境时可以使用，我们可以利用Nginx的特性，来代理其他网站。
防盗链：防盗链采用Nginx规则，来对域名的URL后缀设置仅允许访问的规则，避免流量被盗用。
响应日志：响应日志可以看到当前网站是所有记录信息。</code></pre><p><strong>3、文件管理</strong><br>域名添加并设置好了后，就需要上传网站源码了，选择面板左侧网站-文件，这是强大好用的文件管理器，支持鼠标右键，支持复制粘贴/删除/上传等常用功能，可以直接替换<code>FTP</code>的功能使用。<br><img src="https://www.southcat.net/usr/picture/BTCP(6).png" alt="请输入图片描述" title="请输入图片描述"><br>通常网站根目录在<code>/www/wwwroot</code>中，进入域名文件夹上传自己所需的网站源码即可。</p>
<p><strong>4、数据库管理</strong><br>宝塔对数据库大部分操作都已经实现了，同时有导入导出功能(这个功能是利用了<code>mysqldump</code>来对数据库进行操作)，使用起来还是很方便的。<br><img src="https://www.southcat.net/usr/picture/BTCP(7).png" alt="请输入图片描述" title="请输入图片描述"><br>当然如果我们需要改动数据库文件的话，可以通过上面的<code>phpMyAdmin</code>入口进入到数据库<code>WEB</code>管理界面(这里需要事先安装好<code>phpMyAdmin</code>)，对数据库进行一系列操作，记得提前在面板中同步一下数据库。<br><img src="https://www.southcat.net/usr/picture/BTCP(12).png" alt="请输入图片描述" title="请输入图片描述"><br>这里基本上建站只需要做到以上<code>4</code>个步骤就可以了，接下来就说下其余的功能。</p>
<p><strong>5、监控</strong><br>宝塔的监控项目可以对系统的详细监控，比如系统负载、<code>CPU</code>、内存，<code>IO</code>等，更清楚的查看服务器全天候运行状况，默认保留30天。<br><img src="https://www.southcat.net/usr/picture/BTCP(8).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>6、安全</strong><br><code>SSH</code>管理、防火墙、面板操作日志都在这里，我们可以对服务器整个操作进行记录跟踪。在这里更改<code>SSH</code>端口防止被爆破扫描，或者直接关闭<code>SSH</code>登录，开启防火墙端口等操作。<br><img src="https://www.southcat.net/usr/picture/BTCP(9).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>7、宝塔计划任务</strong><br>在所有服务器中，计划任务非常重要，因为服务器随时会面临各种问题，而计划任务的备份就是你最后的救星，所以我们应该妥善设置好自己的服务器计划任务来对数据保驾护航。</p>
<p>任务类型包含以下部分：<code>Shell</code>脚本、备份网站、备份数据库、日志切割、释放内存、访问<code>URL</code>。<br><img src="https://www.southcat.net/usr/picture/BTCP(10).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>8、软件管理</strong><br>软件管理里面对宝塔上付费以及免费的软件都能在这里进行购买、安装、配置、卸载操作。<br><img src="https://www.southcat.net/usr/picture/BTCP(11).png" alt="请输入图片描述" title="请输入图片描述"><br>宝塔面板在追求便利和快速的同时，也保留了配置文件的编辑功能，官网提供了很多程序的默认路径，这对我们进行修改提供了很多帮助，所以无论你是小白还是大神，都能简单的使用宝塔面板。</p>
<h2 id="专业版及收费插件测评"><a href="#专业版及收费插件测评" class="headerlink" title="专业版及收费插件测评"></a>专业版及收费插件测评</h2><p>博主近几天获得了永久专业版，就顺便体验了下收费插件(专业版是永久免费使用，免费版需要按月付费)，这里就详细的测评下功能，如果你对某些插件有兴趣的，可以注册个宝塔账号→注册链接，使用该链接注册并绑定宝塔的直接赠送半年的宝塔小程序，然后单独购买一个月的插件体验下。如果你有钱的话，功能也需要，可以试着买专业版，永久使用收费插件。</p>
<p>目前专业版可以免费使用以下几个收费插件：<br><img src="https://www.southcat.net/usr/picture/BTCP(13).png" alt="请输入图片描述" title="请输入图片描述"><br>这些插件大多都是其他软件含有的功能，如果我们能使用免费版，大多可以自己安装其他软件来实现上面的功能，但是有句话说得好，存在必有存在的价值，如果一个面板对所有能用到的程序进行整合的话，也未尝不是一件好事情。</p>
<p>现阶段的宝塔面板最稳定的就是<code>5.9</code>版本，在<code>6.0</code>版本中，整个界面已经趋于扁平化，不像<code>5.9</code>这样的<code>Bootstrap</code>风格非常明显，由于<code>6.0</code>版本还未趋于成熟，所以我们采用<code>5.9</code>的版本来为大家做详细测试。</p>
<p>专业版首页如下：<br><img src="https://www.southcat.net/usr/picture/BTCP(14).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>专业版插件页面：<br><img src="https://www.southcat.net/usr/picture/BTCP(15).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>1、网站防篡改程序</strong></p>
<pre><code>官方介绍：事件型防篡改程序，可有效保护网站重要文件不被木马篡改。
目前网页防篡改的实现技术主要有：外挂轮询技术、核心内嵌技术、事件触发技术等，网页防篡改主流产品现在市场上也比较多，由于宝塔面板进行了整合，所以我们详细测试下宝塔的防篡改功能。</code></pre><p>为了测试防篡改效果，我们先从软件市场的一件部署中部署一个<code>Wordpress</code>博客程序，并且通过<code>Host</code>回源的方法来对域名进行解析。<br><img src="https://www.southcat.net/usr/picture/BTCP(16).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BTCP(17).png" alt="请输入图片描述" title="请输入图片描述"><br>在添加站点并按照<code>Wordprss</code>要求安装好博客后，我们在插件中开启这个网站的防篡改开关。<br><img src="https://www.southcat.net/usr/picture/BTCP(18).png" alt="请输入图片描述" title="请输入图片描述"><br>然后我们利用自带的文件管理去修改<code>.php</code>文件，注意，防篡改保护的文件类型在上图的保护菜单中可以自定义设置。</p>
<p>这里我们尝试修改一下<code>wp-config.php</code>，该文件为整个博客的数据库配置文件。<br><img src="https://www.southcat.net/usr/picture/BTCP(19).png" alt="请输入图片描述" title="请输入图片描述"><br>将其修改为<code>123</code>后，进行保存操作。刷新后，打开整个博客的其他页面均可正常浏览，我们回到防篡改插件中查看修改记录，可以发现如下的篡改日志记录：<br><img src="https://www.southcat.net/usr/picture/BTCP(20).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>宝塔自带的文件管理方式就和我们常见的<code>FTP</code>方式一样，通过在线文件管理，我们可以很方便的对程序代码进行修改，由于篇幅问题，我们就测试了一下防篡改的文件保护功能，对于防篡改，还有其他很多的防护点可以进行测试，刚才通过上面测试我们可以发现，对程序的修改操作已经进行了拦截，在我们部署的很多程序中，挂马和篡改是现阶段网站遇到的最大问题，其他很多程序也有防篡改功能，但是实质上，我们还是乐意将程序整合在一起，通过一个入口来管理所有的插件，这样的操作方式是最简单也是最方便的。</p>
<p><strong>2、网站监控报表</strong></p>
<pre><code>官方介绍：网站监控报表可以实时精确统计网站流量、ip、uv、pv、请求、蜘蛛等数据。</code></pre><p>对于网站监控，在我们建站初期，都喜欢采用譬如：<code>CNZZ</code>、站长之家、<code>51La</code>、百度统计等监控方式来查看网站的访问量，这些程序大多都采用嵌入页面的方式来对网站进行<code>PV</code>和<code>IP</code>的记录，但是前不久，某一个监控程序爆出了监控被劫持的事情，采用该监控的网站会出现恶意广告，并且宝塔官方采用从面板底层对我们部署的站点进行监控，无需在网站中设置任何代码，只要安装好该插件，即可对网站中存在的<code>Web</code>站点进行监控。</p>
<p>刚才我们测试防篡改的时候，添加了一个<code>test.com</code>站点，我们测试中对该站点的操作已经被网站监控报表记录了下来，当然，我们采用的是<code>Host</code>回源方式，其他人根本无法访问到改地址，这个记录全是我这边测试出来的结果。<br><img src="https://www.southcat.net/usr/picture/BTCP(21).png" alt="请输入图片描述" title="请输入图片描述"><br>我们点击详情，可以查看到改站点的详细记录。<br><img src="https://www.southcat.net/usr/picture/BTCP(22).png" alt="请输入图片描述" title="请输入图片描述"><br>里面可以详细记录：监控概览、流量统计、蜘蛛统计、错误日志、访问客户端以及网站日志的详细情况，对于我们的站点监控，该项目已经能够非常详细明了的进行监控操作。整个菜单部分截图如下：<br><img src="https://www.southcat.net/usr/picture/BTCP(23).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BTCP(24).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BTCP(25).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BTCP(26).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BTCP(27).png" alt="请输入图片描述" title="请输入图片描述"><br>对于我们整合面板来说，网站监控报表提供的功能已经足够我们日常使用。</p>
<p><strong>3、Apache防火墙&amp;Nginx防火墙</strong></p>
<pre><code>官方介绍：有效防止sql注入/xss/一句话木马等常见渗透攻击。宝塔网站防火墙依赖luaJIT组件，部分环境版本可能要重装后才能使用。
主要功能：
1、常规过滤，包括GET(URI、URI参数)、POST、Cookie、User-Agent、Header、IP黑白名单、URI黑白名单等。
2、禁止国外站点访问，开启后，该站点只允许国内用户访问(包括香港、澳门、台湾)。
3、URI加密保护，常用于对网站后台的保护。
4、URI专用规则，快速修补漏洞。
5、CDN模式，如果您的站点使用了CDN，请开启CDN模式，否则防火墙可能影响网站的正常访问。</code></pre><p>由于当前当前面板安装的是<code>Lnmp</code>构架，所以我们对<code>Nginx</code>防火墙进行在线测试。<br><img src="https://www.southcat.net/usr/picture/BTCP(28).png" alt="请输入图片描述" title="请输入图片描述"><br>全局配置中是对当前宝塔面板所有程序进行控制，举个例子，我们需要对全部站点进行<code>CC</code>防护，就能在全局配置中进行设置操作，如果需要对某一个站点进行操作的话，我们点击站点配置即可对单独站点进行配置操作。<br><img src="https://www.southcat.net/usr/picture/BTCP(29).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BTCP(30).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BTCP(31).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BTCP(32).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>4、宝塔负载均衡</strong></p>
<pre><code>官方介绍：宝塔负载均衡是基于Nginx的负载均衡。</code></pre><p>关于负载均衡的解释：</p>
<pre><code>由于目前现有网络的各个核心部分随着业务量的提高，访问量和数据流量的快速增长，其处理能力和计算强度也相应地增大，使得单一的服务器设备根本无法承担。在此情况下，如果扔掉现有设备去做大量的硬件升级，这样将造成现有资源的浪费，而且如果再面临下一次业务量的提升时，这又将导致再一次硬件升级的高额成本投入，甚至性能再卓越的设备也不能满足当前业务量增长的需求。

针对此情况而衍生出来的一种廉价有效透明的方法以扩展现有网络设备和服务器的带宽、增加吞吐量、加强网络数据处理能力、提高网络的灵活性和可用性的技术就是负载均衡。</code></pre><p>这里就不说具体使用方法了，宝塔官方说的很清楚了，查看→传送门。</p>
<p>该功能对于<code>Nginx</code>来说，反向代理和负载均衡本身就是其最大的功能模块，但是由于手动配置的繁琐性，导致该功能的运用很少，宝塔将繁琐的命令改为图形界面的配置方式来说，大大增加了我们的可用性，使得我们普通人也能对复杂的<code>Nginx</code>进行负载均衡配置。</p>
<p><strong>5、MySQL主从复制</strong></p>
<pre><code>官方介绍：轻松实现MySQL主从复制、主主复制。</code></pre><p>关于主从复制的解释：</p>
<pre><code>MySQL主从复制就是两台数据库的相互复制，就是分一个主机器一个备节点的机器，当主机器插入一条记录之后，备节点的机器也会插入一条记录，是不是感觉很很神奇呢？当时我听到这个的时候，哇，还有这种神器啊，那么再也不用担心数据压力100%，在实际的环境中大多数数据库都是并发比较大，所以需要通过一些技术做数据库的主从复制。</code></pre><p>对于<code>MySQL</code>主从复制来说，百度能查到很多教程，在<code>MySQL</code>官方文档中也能获取到相关文档，但是我们知其然而不知其所以然，由于涉及到很多复杂的命令，除非专业的运维人员才能搞定，对于我们简单的使用者来说，我们只是需要简单的<code>MySQL</code>数据库复制，而不想涉及到过多的专业命令，所以这个宝塔<code>MySQL</code>主从复制插件非常适合我们使用。</p>
<p>详细的使用方法查看→传送门。</p>
<p>对于该功能最蛋疼的是，我们采用的<code>MySQL</code>主从面板需要购买两个授权版本，这样才能在两个服务器上进行主从复制操作。</p>
<p><strong>6、宝塔任务管理器</strong></p>
<pre><code>官方介绍：轻松管理进程、启动项、用户、服务、计划任务、会话。</code></pre><p>宝塔任务管理器就有点类似于<code>Shell</code>界面下的<code>top</code>命令，但是宝塔任务管理器又新增了很多管理功能，可以对、进程、启动项、服务、网络、用户、计划任务、会话等信息进行管理。</p>
<p>进程描述：追踪每个进程的CPU/内存/磁盘使用情况，点击进程名称可查看该进程更详细的信息。<br><img src="https://www.southcat.net/usr/picture/BTCP(46).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>启动项描述：列出所有随系统启动的项目，包括<code>init</code>服务，用户自定义启动脚本。<br><img src="https://www.southcat.net/usr/picture/BTCP(47).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>服务描述：每个服务有对应的运行级别设置，若在对应的运行级别设为开启，则表示系统将在对应运行级别启动该服务。<br><img src="https://www.southcat.net/usr/picture/BTCP(48).png" alt="请输入图片描述" title="请输入图片描述"><br>下面列出每个运行级别代表的状态：</p>
<pre><code>Level-0: 关机
Level-1: 单用户模式
Level-2: 无网络的多用户模式
Level-3: 命令行模式下的完全的多用户模式(服务器通常在此模式下运行)
Level-4: 系统未使用
Level-5: 图形GUI模式(部分安装了GUI的系统会自动进入此模式)
Level-6: 重启</code></pre><p>网络描述：快速查看当前服务器网络状态。<br><img src="https://www.southcat.net/usr/picture/BTCP(49).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>用户描述：可以在此处看到系统中存在的所有用户，并可以进行相关管理操作。<br><img src="https://www.southcat.net/usr/picture/BTCP(50).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>计划任务描述：解析<code>crond</code>服务中的所有计划任务，用户可查看任务周期、内容，或删除指定任务。<br><img src="https://www.southcat.net/usr/picture/BTCP(51).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>会话描述：列出当前通过<code>SSH</code>成功登陆系统的会话。<br><img src="https://www.southcat.net/usr/picture/BTCP(52).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>7、宝塔微信小程序</strong></p>
<pre><code>官方介绍：宝塔小程序提供服务器监控及安全扫码登录面板</code></pre><p>宝塔微信小程序目前只支持宝塔<code>Linux</code>面板，可以关联绑定多台服务器，单台服务器也可以授权多个微信用户绑定，拥有服务器监控功能以及安全扫码登录面板功能，方便用户随时查看服务器状态。绑定方法查看→传送门。</p>
<p>目前该功能貌似没卵用，也就看下服务器状态而已，不过官方介绍说后续会逐渐增加更多的面板管理功能给我们使用。到时候再看了。</p>
<p><strong>8、宝塔数据同步工具</strong></p>
<pre><code>官方介绍：基于Rsync开发的数据同步工具。</code></pre><p>在<code>Linux</code>下，我们传输文件使用最多的就是<code>SCP</code>和<code>Rsync</code>两个插件，我更喜欢使用<code>SCP</code>来进行传输，但是在很多场景下，我们传输的内容非常多，或者说，我们需要对文件进行增量传输，这时候，<code>Rsync</code>的优势就体现了出来，所以这个程序也就是利用<code>Rsync</code>功能写的一个小工具，可以让我们图形界面的来使用<code>Rsync</code>同步工具。</p>
<p>详细使用方法查看→传送门</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>宝塔面板LNMP开启Brotli压缩，可提高网站加载速度</title>
    <url>/2416/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Brotli</code>是<code>Google</code>推出的开源压缩算法，通过变种的<code>LZ77</code>算法、<code>Huffman</code>编码以及二阶文本建模等方式进行数据压缩，与其他压缩算法相比，它有着更高的压缩效率，性能也比我们目前常见的<code>Gzip</code>高<code>17-25%</code>，可以帮我们更高效的压缩网页中的各类文件大小及脚本，从而提高加载速度，提升网页浏览体验。博主目前也给开启了<code>Brotli</code>压缩，体验还行吧，这里就说下宝塔面板的开启方法。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、下载Brotli</strong></p>
<pre><code>cd /www/server
#下载brotli
git clone https://github.com/google/ngx_brotli.git
cd ngx_brotli
#更新brotli
git submodule update --init</code></pre><p><strong>2、编译Nginx</strong></p>
<pre><code>提示：手动编译只测试过Nginx 1.15，部分版本好像会提示缺少模块，建议使用后面的宝塔脚本编译方法。</code></pre><p>先查看目前的<code>Nginx</code>版本信息，使用命令：</p>
<pre><code>nginx -V</code></pre><p>大概会输出以下信息：</p>
<pre><code>[root@rats ~]# nginx -V
nginx version: nginx/1.15.10
built by gcc 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC) 
built with OpenSSL 1.1.1b  26 Feb 2019
TLS SNI support enabled
configure arguments: --user=www --group=www --prefix=/www/server/nginx --with-openssl=/www/server/nginx/src/openssl ... --with-ld-opt=-ljemalloc</code></pre><p><code>nginx</code>版本为<code>1.15.10</code>，<code>configure arguments:</code>后面的为你<code>nginx</code>的编译参数，下面会用到。</p>
<p>然后重新下载<code>nginx</code>，并开始编译，使用命令：</p>
<pre><code>#下载nginx，这里下载的1.15.10版本，如果是其它版本，把下载链接的1.15.10改成你的版本号即可
wget http://nginx.org/download/nginx-1.15.10.tar.gz
#解压并删除压缩包
tar -xvzf nginx-*.tar.gz &amp;&amp; rm -rf nginx-*.tar.gz
#进入nginx目录
cd nginx*
#生成Makefile，./configure后面的参数直接复制上面看到的，然后在后面额外加一个--add-module=/www/server/ngx_brotli
./configure --user=www --group=www --prefix=/www/server/nginx ... --add-module=/www/server/ngx_brotli
#编译nginx
make &amp;&amp; make install</code></pre><p>不出意外的话，就编译完成了，然后继续使用命令查看信息：</p>
<pre><code>nginx -V</code></pre><p>返回参数后面多了个<code>--add-module=/www/server/ngx_brotli</code>就编译成功了。<br><img src="https://www.southcat.net/usr/picture/Brotli(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>除了手动编译外，还一种更加方便，且出错率很低的方法，使用宝塔自带的<code>Nginx</code>安装脚本进行编译安装，大致步骤：</p>
<pre><code>1、编辑nginx安装脚本，路径/www/server/panel/install/nginx.sh，找到Install_Configure(){...}或Install_Nginx(){...}字段，然后找出你要安装的nginx版本号，在下面一行的./configure --user=www ...后面添加--add-module=/www/server/ngx_brotli即可，记得之间间隔一个英文空格。

2、在ssh客户端使用命令开始编译，根据自己的版本，将后面数字改为1.10、1.12、1.14、1.15、1.17、1.8、openresty等
sh /www/server/panel/install/nginx.sh install 1.16

3、安装好了使用nginx -V查看是否含有模块即可。</code></pre><p><strong>3、开启Brotli压缩</strong><br>接下来点击面板左侧软件商店-<code>Nginx</code>设置-配置修改，在<code>http</code>段内添加以下内容来启用<code>Brotli</code>压缩。</p>
<pre><code>brotli on;
brotli_comp_level 6;
brotli_min_length 512;
brotli_types text/plain text/javascript text/css text/xml text/x-component application/javascript application/x-javascript application/xml application/json application/xhtml+xml application/rss+xml application/atom+xml application/x-font-ttf application/vnd.ms-fontobject image/svg+xml image/x-icon font/opentype;
brotli_static always;</code></pre><p>最后点击<code>Nginx</code>设置里的重载配置生效即可。</p>
<p><code>Brotli</code>全部参数详解：</p>
<pre><code>brotli on;              #启用
brotli_comp_level 6;    #压缩等级，默认6，最高11，太高的压缩水平可能需要更多的CPU
brotli_buffers 16 8k;   #请求缓冲区的数量和大小
brotli_min_length 20;   #指定压缩数据的最小长度，只有大于或等于最小长度才会对其压缩。这里指定20字节
brotli_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml text/html application/json image/svg application/font-woff application/vnd.ms-fontobject application/vnd.apple.mpegurl image/x-icon image/jpeg image/gif image/png image/bmp;   #指定允许进行压缩类型
brotli_static always;   #是否允许查找预处理好的、以.br结尾的压缩文件，可选值为on、off、always
brotli_window 512k;     #窗口值，默认值为512k</code></pre><p>全部配置好了，就可以使用谷歌浏览器查看下是否开启成功，看到<code>br</code>字段即为成功。<br><img src="https://www.southcat.net/usr/picture/Brotli(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>密码本</title>
    <url>/448/</url>
    <content><![CDATA[<p>地址</p>
<p>账号</p>
<p>密码</p>
<p><a href="alphavps.bg" title=" alphavps">alphavps</a></p>
<p><a href="mailto:8341638@qq.com">8341638@qq.com</a></p>
<p>Zhc010321?</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>小内存VPS一键安装Typecho/WordPress/Zblog/Kodexplorer及整站备份等</title>
    <url>/2235/</url>
    <content><![CDATA[<p><strong>说明：</strong>刚刚有大佬针对小内存<code>VPS</code>写了个脚本，可以一键安装很多博客程序、<code>Rinetdbbr</code>等，最低在<code>64M</code>内存上测试通过，这里就分享下，如果你有小内存<code>VPS</code>或者想体验下的都可以试试。</p>
<h2 id="脚本特性"><a href="#脚本特性" class="headerlink" title="脚本特性"></a>脚本特性</h2><ul>
<li>小内存<code>VPS</code>一键安装<code>Caddy</code>、<code>PHP7</code>、<code>Sqlite3</code>环境（支持<code>VPS</code>最小内存<code>64M</code>）。</li>
<li>一键绑定域名自动生成<code>SSL</code>证书开启<code>https</code>（<code>ssl</code>自动续期）。</li>
<li>支持<code>IPv6</code>（<code>AAAA</code>记录）如果本地网络不支持<code>IPv6</code>可以通过<code>cloudflare CDN</code>转换为<code>IP4</code>。</li>
<li>一键安装<code>Typecho</code>、<code>Wordpress</code>、<code>Zblog</code>、<code>Kodexplorer</code>、<code>Laverna</code>、一键整站备份。</li>
<li>一键安装<code>V2ra*</code>、<code>Rinetdbbr</code>。</li>
</ul>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【19.5.20】
鉴于脚本没设置伪静态，在使用上容易出现问题，这里补充一下Caddy伪静态规则。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/dylanbai8/Onekey\_Caddy\_PHP7_Sqlite3" target="_blank" rel="noopener">https://github.com/dylanbai8/Onekey\_Caddy\_PHP7_Sqlite3</a></p>
<p><strong>支持系统：</strong><code>Centos 7+</code>、<code>Debian 8+</code>。如果你内存实在太小，建议使用<code>mini</code>系统。且使用前请提前解析好域名，不然签发<code>SSL</code>会失败。</p>
<p>使用命令：</p>
<pre><code>wget -N --no-check-certificate git.io/c.sh &amp;&amp; chmod +x c.sh &amp;&amp; bash c.sh</code></pre><p>此时会很快的给你安装好<code>Caddy</code>、<code>PHP7</code>、<code>Sqlite3</code>环境。</p>
<h2 id="程序安装"><a href="#程序安装" class="headerlink" title="程序安装"></a>程序安装</h2><p>安装好环境后，再使用以下命令安装所需要的程序。</p>
<pre><code>#一键安装typecho博客
bash c.sh -t

#一键安装wordpress博客
bash c.sh -w

#一键安装zblog博客
bash c.sh -z

#一键安装kodexplorer可道云
bash c.sh -k

#一键安装laverna印象笔记
bash c.sh -l

#一键整站备份（一键打包/www网站目录、含数据库）
bash c.sh -a

#一键安装v2ra*
bash c.sh -v

#一键安装rinetd bbr端口加速
bash c.sh -b</code></pre><p>安装好后，有些程序还需要设置下伪静态。</p>
<h2 id="伪静态设置"><a href="#伪静态设置" class="headerlink" title="伪静态设置"></a>伪静态设置</h2><pre><code>提示：这里暂时只说Typecho和Wordpress，如果你发现其它程序也会出现404，可以反馈下。</code></pre><p><code>Caddy</code>配置文件路径<code>/etc/dylanbai8/caddy/Caddyfile</code>。</p>
<p>编辑配置文件：</p>
<pre><code>nano /etc/dylanbai8/caddy/Caddyfile</code></pre><p>在最后一个<code>}</code>上面添加以下代码：</p>
<pre><code>#Wordpress伪静态
rewrite {
  if {path} not_match ^\/wp-admin
  to {path} {path}/ /index.php?{query}
}

#Typecho伪静态
rewrite {
    if {path} not_match ^\/admin
    to {path} {path}/ /index.php?{query}
 }


systemctl restart caddy</code></pre><h2 id="程序卸载"><a href="#程序卸载" class="headerlink" title="程序卸载"></a>程序卸载</h2><pre><code>#卸载caddy
bash c.sh -unc

#卸载php+sqlite
bash c.sh -unp

#卸载v2ra*
bash c.sh -unv

#卸载rinetdbbr
bash c.sh -unb</code></pre><h2 id="相关命令-目录"><a href="#相关命令-目录" class="headerlink" title="相关命令/目录"></a>相关命令/目录</h2><pre><code>启动：systemctl start caddy
停止：systemctl stop caddy
重启：systemctl restart caddy

Caddy配置文件位置：/etc/dylanbai8

网站目录：/www</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>小涴熊漫画CMS：一款不错的开源免费的漫画连载系统，带采集API</title>
    <url>/2362/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近想搞个漫画站玩玩，就找了个不错的系统<code>小涴熊漫画CMS</code>，开源免费，基于<code>ThinkPHP 5.1</code>及<code>Redis</code>缓存，自带火车头<code>api</code>方便我们采集发布，功能就不多说了，可以看下面的截图，差不多漫画系统都差不多。作者更新也积极，貌似还计划加入会员系统等其他功能，这里就发一下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/xwxmhcms(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/xwxmhcms(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/xwxmhcms(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/xwxmhcms(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/hiliqi/xiaohuanxiong" target="_blank" rel="noopener">https://github.com/hiliqi/xiaohuanxiong</a></p>
<p><strong>环境要求：</strong><code>PHP 5.6-7.2</code>、<code>MySQL &gt;= 5.7</code>、<code>Redis</code>、<code>Redis</code>扩展</p>
<p><strong>1、安装环境</strong><br>这里依旧走简单路线，使用宝塔面板做演示，使用命令：</p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP 7.2</code>、<code>Nginx</code>、<code>Mysql 5.7+</code>、<code>Redis</code>。</p>
<p>接下来再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Redis</code>扩展。</p>
<p><strong>2、安装程序</strong><br>我们先点击左侧网站，添加域名；然后再点击左侧数据库-添加数据库。</p>
<p>运行命令：</p>
<pre><code>#进入网站根目录，将路径修改成自己的再运行
cd /www/wwwroot/www.southcat.net
#拉取源码
git clone https://github.com/hiliqi/xiaohuanxiong
#将源码移动到根目录
mv hanman/{,.}* ./
#授权用户组
chown -R www:www ./ </code></pre><p><strong>3、设置伪静态</strong><br>点击域名设置-网站目录，运行目录选择<code>public</code>，并把防跨站的勾去掉并重启<code>PHP</code>。然后点击伪静态，输入以下代码：</p>
<pre><code>if (!-e $request_filename) {  
      rewrite  ^(.*)$  /index.php?s=/$1  last;  
      break;  
    } </code></pre><p>然后打开<code>http://url/install</code>开始安装程序。</p>
<p>如果要开启<code>404</code>，而不让<code>cms</code>报错信息显示出来，需要修改<code>config/app.php</code>文件：</p>
<pre><code>#去掉第一排的//即可
&apos;exception_tmpl&apos;         =&gt; Env::get(&apos;app_path&apos;) . &apos;index/view/pub/404.html&apos;,
&apos;exception_tmpl&apos;         =&gt; Env::get(&apos;think_path&apos;) . &apos;tpl/think_exception.tpl&apos;,</code></pre><h2 id="采集"><a href="#采集" class="headerlink" title="采集"></a>采集</h2><p>通常情况下，漫画站图片资源分两种，一种本地化，一种盗链方式，这里建议将图片本地化，这样能保证网站资源稳定性，并且该程序还提供了火车头采集器的<code>API</code>，能够很简单的对接火车头采集器进行漫画和章节图片的采集。</p>
<p>首先我们需要一个火车采集器，官网→传送门，不过分为免费版和收费版，但免费版由于某些功能限制，没法满足图片本地化需求，所以暂时不适用，如果你有钱可以买一个收费版的，不过没钱也没事，可以直接使用火车头<code>V7.6</code>企业破解版，大概目前最新的一个破解版，也可以满足该程序的采集需求，具体怎么下载，就自行百度，很多网站提供下载链接。</p>
<pre><code>注意：由于火车头V7和V8没有url编码解码功能，所以不能采集带有中文链接的漫画网站，但V9版本可以，有钱可以直接上。</code></pre><p>采集<code>api</code>说明：</p>
<pre><code>采集api地址：域名/api/index/save。
请求方式：post
表单字段及说明：
book_name 漫画名
nick_name 漫画别名
tags 分类，多个分类用|隔开
author 作者名字
src 采集源
end 状态，1代表完结，0代表连载中
cover_url 封面图远程地址
chapter_name 章节名
images 由图片标签组成的字符串，示例：
&lt;img src=&quot;http://www.m.com/1.jpg&quot;&gt;&lt;img src=&quot;http://www.m.com/2.jpg&quot;&gt;&lt;img src=&quot;http://www.m.com/3.jpg&quot;&gt;
api_key 用于身份验证，要和后台配置的api密钥相同
summary 漫画简介</code></pre><p>详细的采集参数说明可以查看→传送门。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>小内存VPS安装Caddy+PHP 7+Sqlite 3环境，并快速搭建Typecho博客</title>
    <url>/2136/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们一般搭建博客的方法就是使用<code>lnmp</code>、<code>lamp</code>等一键包，或者宝塔等面板来搭建<code>Web</code>环境，不过都只适合大点内存的<code>VPS</code>服务器，小点的比如<code>96M</code>、<code>128M</code>服务器就不行了，这时候我们就可以通过安装其它环境来搭建网站环境了，这里博主就说下<code>Caddy</code>+<code>PHP7</code>+<code>Sqlite3</code>安装教程，<code>3</code>分钟就可以搭建一个<code>Typecho</code>博客，并成功运行在<code>96M</code>的<code>VPS</code>服务器上，至于<code>96M</code>以下的服务器就不测试了，毕竟很少见了。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>教程只写<code>Debian 8、9</code>，建议选择<code>mini</code>版。如果你是<code>96M</code>或者<code>128M</code>的<code>KVM</code>建议增加点<code>Swap</code>，教程查看：VPS添加Swap虚拟内存。</p>
<p><strong>1、安装PHP 7和Sqlite 3</strong></p>
<pre><code>#Debian 8系统
#添加源
echo &quot;deb http://packages.dotdeb.org jessie all&quot; | tee --append /etc/apt/sources.list
echo &quot;deb-src http://packages.dotdeb.org jessie all&quot; | tee --append /etc/apt/sources.list
#添加key
wget --no-check-certificate https://www.dotdeb.org/dotdeb.gpg
apt-key add dotdeb.gpg
#更新系统
apt-get update -y
#安装PHP 7和Sqlite 3
apt-get install php7.0-cgi php7.0-fpm php7.0-curl php7.0-gd php7.0-mbstring php7.0-xml php7.0-sqlite3 sqlite3 -y

#Debian 9系统
#更新系统
apt-get update -y
#安装PHP 7和Sqlite 3
apt-get install php7.0-cgi php7.0-fpm php7.0-curl php7.0-gd php7.0-mbstring php7.0-xml php7.0-sqlite3 sqlite3 -y</code></pre><p><strong>2、安装Caddy</strong><br>这里直接使用逗比的一键脚本。</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p><strong>3、下载Typecho</strong></p>
<pre><code>mkdir /typecho &amp;&amp; cd /typecho
#以下为最新稳定版
wget http://typecho.org/downloads/1.1-17.10.30-release.tar.gz
tar zxvf 1.1*
mv ./build/* ./
rm -rf 1.1* buil*
chmod -R 755 ./*
chown www-data:www-data -R ./*</code></pre><p><strong>4、配置Caddy</strong></p>
<pre><code>#以下全部内容是一个整体，是一个命令，修改示例域名后全部复制粘贴到SSH软件中并一起执行
echo &quot;http://southcat.net {
    redir https://www.southcat.net{uri}
    }
    https://www.southcat.net {
    gzip
    tls admin@southcat.net
    root /typecho
    fastcgi / /run/php/php7.0-fpm.sock php
    rewrite {
        if {path} not_match ^\/admin
        to {path} {path}/ /index.php?{query}
     }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>参数说明：</p>
<pre><code>#第一个{}参数为重定向，将http://southcat.net重定向到了https://www.southcat.net，根据实际情况修改
#tls为自动签发Let&apos;s证书，邮箱随便填，使用自签发证书的请先解析好域名，如果想使用自己的证书，则将tls一行改成tls
/root/xxx.crt /root/xxx.key即可，后面为证书路径。</code></pre><p>最后启动<code>Caddy</code></p>
<pre><code>#如果启动失败，请查看下系统是否自带Apache2，然后运行apt remove apache2卸载掉
/etc/init.d/caddy start</code></pre><p>然后可以访问域名进行安装了。<br><img src="https://www.southcat.net/usr/picture/caddy_ty.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="Caddy说明"><a href="#Caddy说明" class="headerlink" title="Caddy说明"></a>Caddy说明</h2><pre><code>启动：/etc/init.d/caddy start
停止：/etc/init.d/caddy stop
重启：/etc/init.d/caddy restart
查看状态：/etc/init.d/caddy status
查看Caddy启动日志：tail -f /tmp/caddy.log
安装目录：/usr/local/caddy
Caddy配置文件位置：/usr/local/caddy/Caddyfile
Caddy自动申请SSL证书位置：/.caddy/acme/acme-v01.api.letsencrypt.org/sites/xxx.xxx(域名)/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>屏蔽QQ内置浏览器举报功能(已经失效)</title>
    <url>/438/</url>
    <content><![CDATA[<p>明白人自然会用</p>
<pre><code>&lt;script src=&quot;https://open.mobile.qq.com/sdk/qqapi.js?_bid=152&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
mqq.ui.setTitleButtons({
right : {
title : &quot;投诉&quot;,
hidden: true
}
})
&lt;/script&gt;</code></pre><p>只是简易的屏蔽   还是可以从网页入口直接举报，这个方法只能挡一些无脑举报的。各位还是尽量使用防洪吧 第二种玩法</p>
<pre><code>&lt;script&gt;mqq.ui.setTitleButtons({right:{iconID:8,callback:function(){window.location.href=&apos;https://southcat.net/archives-2/&apos;;}}});&lt;/script&gt;</code></pre><p>将<code>https://southcat.net/archives-2/</code>修改为你的网址 第三种 弹窗</p>
<pre><code>&lt;script src=&quot;https://open.mobile.qq.com/sdk/qqapi.js?_bid=152&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt; 
mqq.ui.setTitleButtons({ 
right : { 
title : &quot;投诉&quot;, 
hidden: true 
} 
}) 
&lt;/script&gt; &lt;script&gt;mqq.ui.setTitleButtons({right:{iconID:8,callback:function(){window.location.href=&apos;mqqapi://card/show_pslcard?&amp;uin=8341638&apos;; 
alert(&quot;想举报我?小伙子你路走窄了!&quot;);
}
}
});
&lt;/script&gt;</code></pre>]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>年前被骗属实sm</title>
    <url>/686/</url>
    <content><![CDATA[<h2 id="骗子信息"><a href="#骗子信息" class="headerlink" title="骗子信息"></a>骗子信息</h2><p>QQ:2964178932<br>同伙qq（暂且归为同伙）：1157807384</p>
<p>电话：13177680232</p>
<p>地址：江西赣州（暂时确认）</p>
<p>被骗账号：56522117</p>
<h2 id="经过"><a href="#经过" class="headerlink" title="经过"></a>经过</h2><p>是这样的，因为换QQ了（为了逼格高一点）以前用的账号昵称也改成了新的账号，昨天突然有个人加我要买我的账号，出价还比较高，但是账号上绑定的东西比较多于是就拒绝了，之后看我拒绝了他问我有没有别的账号，我就把我一个闲置的账号发过去了56522117就这个账号。之前55买的账号，然后他开了400的价格，当时我还思考了一下这么高的价格八成是骗子，但是我tm竟然相信了，我?。<br>一开始我说先200绑定之后剩下200，但是他说找中介，我寻思着找就找吧，他找了一个中介，然后交易很顺利，到了第二天中介退群了，他退群了，我?，我手机上正好还绑定着安全中心就把密码改了密保手机也改了，没想到他给改回去了，然后我再去找他，他就已经是各种撇清关系了，开始以没睡觉为理由各种拖。 于是我就nmsl 就屏蔽了。 这就当给你?买⚰️去了，??。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p>emm。。。。ios没有长截图等着过段时间整理出来</p>
<p>大过年被骗也属实难受，以后必走平台</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>建立你的私人在线影库：Plex云盘搭建及使用教程</title>
    <url>/1891/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Plex</code>的全称为<code>Plex Media Server</code>，主要功能是存储+索引+转码+在线播放，它不仅仅是简单的存储，它还能分析影片的信息从而从<code>IMDB</code>等数据库补全影片介绍等信息，并且进行索引以方便搜索，要知道影片的格式有很多种，很多情况下播放设备无法兼容，所以它还能实时转码，播放渠道从网页到全平台的客户端应有尽有。当然，<code>Plex</code>除了能存片，还能存图存歌等等。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/plex-media-server(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装方法参考：<a href="https://www.plex.tv/downloads/。" target="_blank" rel="noopener">https://www.plex.tv/downloads/。</a></p>
<p>运行一下命令：</p>
<pre><code>#CentOS系统
yum -y update &amp;&amp; yum -y install wget
wget https://downloads.plex.tv/plex-media-server/1.12.1.4885-1046ba85f/plexmediaserver-1.12.1.4885-1046ba85f.x86_64.rpm
yum install plexmediaserver*.rpm

#Debian/Ubuntu系统
apt-get -y update &amp;&amp; apt-get -y upgrade
wget https://downloads.plex.tv/plex-media-server/1.5.5.3634-995f1dead/plexmediaserver_1.5.5.3634-995f1dead_amd64.deb
dpkg -i plexmediaserver*.deb</code></pre><p><code>Docker</code>安装方法请参考官方<code>GitHub</code>的说明：<a href="https://github.com/plexinc/pms-docker。" target="_blank" rel="noopener">https://github.com/plexinc/pms-docker。</a></p>
<p>设置<code>Plex</code>开机启动</p>
<pre><code>systemctl enable plexmediaserver.service
systemctl start plexmediaserver.service</code></pre><p>安装完成后进入<code>http://IP:32400/</code>就行了。如果无法访问，先检查运行状态。</p>
<pre><code>systemctl status plexmediaserver</code></pre><p>如果显示<code>active</code>，则一般是防火墙问题，关掉或打开端口即可。</p>
<pre><code>#CentOS 7
systemctl stop firewalld.service
systemctl disable firewalld.service

#其它系统
iptables -I INPUT -p tcp --dport 32400 -j ACCEPT
service iptables save                              
service iptables restart</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>如果第一次进入应用界面，会显示“找不到服务器。 下载并安装<code>Plex Media Server</code>，它会显示在这里”。因为初次使用是不允许远程访问<code>Plex</code>的，这里我们可以使用以下<code>2</code>种办法来解决这个问题。</p>
<h3 id="SSH转发端口"><a href="#SSH转发端口" class="headerlink" title="SSH转发端口"></a>SSH转发端口</h3><p>先在电脑左下角程序搜索框输入<code>PowerShell</code>，然后双击<code>Windows PowerShell</code>工具，运行命令：</p>
<pre><code>ssh root@服务器IP -L 8888:localhost:32400</code></pre><p>输入正确的密码后，再去浏览器里打开<code>localhost:8888/web</code>进入即可。</p>
<h3 id="隧道转发"><a href="#隧道转发" class="headerlink" title="隧道转发"></a>隧道转发</h3><p>这里只列举常用的putty和xshell，其它自行模式，大致流程如下：</p>
<pre><code>xshell：点击plex服务器属性-隧道-添加，监听端口8888，目标端口32400
putty：具体操作大概是connection–ssh–Tunnels，设置source port为8888，destination为127.0.0.1:32400</code></pre><p>先使用<code>ssh</code>连接服务器，然后再去浏览器里打开<code>localhost:8888/web</code>进入即可。<br><img src="https://www.southcat.net/usr/picture/plex-media-server(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/plex-media-server(4).png" alt="请输入图片描述" title="请输入图片描述"><br>第一次链接成功后，下次就不需要用<code>SSH</code>转发进入了，直接通过<code>http://IP:32400/</code>访问就可以了。</p>
<p>然后点击左侧添加资料库，选择存放电影或者音乐的文件夹，就可以显示出来观看了，还可以添加频道等，更多操作自己慢慢研究<br><img src="https://www.southcat.net/usr/picture/plex-media-server(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>很好用的DHT磁力链接搜索引擎快速安装方法</title>
    <url>/1608/</url>
    <content><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>纸上烤鱼是从浩瀚的<code>DHT</code>网络（<code>UDP</code>）中获取磁力链接（<code>magnet</code>）信息的搜索引擎，主要分为爬虫、网站、数据库、索引，爬虫基于<code>socket</code>、<code>bencode</code>库，网站基于<code>flask</code>库，数据库为<code>mysql</code>，索引为<code>sphinx</code>，请勿用于非法用途。</p>
<p><code>SSBC</code>安装方法可参考：手撕包菜SSBC DHT磁力链一键安装包。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/wenguonideshou/zsky" target="_blank" rel="noopener">https://github.com/wenguonideshou/zsky</a><br><strong>系统环境：</strong><code>centos7</code> <code>python2.7</code>。<br><strong>主机要求：</strong>至少<code>1G</code>内存、<code>100G</code>硬盘，<code>1G SWAP</code>，具有公网<code>IP</code>的国外主机/服务器</p>
<p>安装命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/zsky.sh &amp;&amp; sh zsky.sh</code></pre><h2 id="相关操作"><a href="#相关操作" class="headerlink" title="相关操作"></a>相关操作</h2><pre><code>修改simdht_worker.py里的max_node_qsize的大小调节爬取速度（队列大小）
执行python manage.py init_db创建表/平滑升级表结构
执行python manage.py create_user 建管理员
执行python manage.py changepassword修改管理员密码
执行systemctl start gunicorn启动网站
执行systemctl start mariadb启动数据库
执行systemctl status mariadb查看数据库运行状态
执行systemctl restart mariadb重新启动数据库
执行systemctl status gunicorn查看gunicorn运行状态
执行systemctl restart gunicorn 重新启动网站
执行systemctl restart indexer手动重新索引
执行systemctl start searchd开启搜索进程
执行systemctl status searchd查看搜索进程运行状态
执行systemctl restart searchd 重新启动搜索进程</code></pre><h2 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h2><pre><code>Q:如何绑定多个域名？
A：在/etc/nginx/nginx/nginx.conf文件内修改，多个域名用空格隔开，修改完成后执行nginx -s reload生效

Q：如何修改站点名？
A：修改manage.py里的常量sitename

Q：如何修改地图里的域名？
A：修改manage.py里的常量domain

Q：如何修改后台地址？
A：修改manage.py中的以下语句中的url=后面的地址： admin = Admin(app,name=&apos;管理中心&apos;,base_template=&apos;admin/my_master.html&apos;,index_view=MyAdminIndexView(name=&apos;首页&apos;,template=&apos;admin/index.html&apos;,url=&apos;/fucku&apos;))

Q：如何屏蔽违禁词
A：在sensitivewords.txt这个文件里面添加违禁词，一行一个，支持.*?等正则符号，添加完成后systemctl restart gunicorn生效

Q：如何实现远程主机反向代理本机的程序？
A：修改本机的/etc/systemd/system/gunicorn.service其中的127.0.0.1:8000修改为0.0.0.0:8000然后执行systemctl daemon-reload，然后执行systemctl restart gunicorn，本机不开启nginx，远程主机开启nginx、配置反向代理、绑定域名即可，nginx的配置文件参考程序内的nginx.conf 。

Q：如何限制/提高爬取速度？
A：修改simdht_worker.py里的max_node_qsize=后面的数字，越大爬取越快，越小爬取越慢

Q：如何修改数据库密码？
A：执行mysqladmin -uroot -p password 123456!@#$%^ //将提示输入当前密码，123456!@#$%^是新密码

Q：修改数据库密码后怎么修改程序里的配置？
A：修改manage.py里的mysql+pymysql://root:密码@127.0.0.1、修改manage.py里的DB_PASS、修改simdht_worker.py里的DB_PASS、修改sphinx.conf里的sql_pass

Q：怎么确定爬虫是在正常运行？
A：执行ps -ef|grep -v grep|grep simdht如果有结果说明爬虫正在运行

Q：更新manage.py/模板后怎么立即生效？
A：执行systemctl restart gunicorn重启gunicorn

Q：为什么首页统计的数据小于后台的数据？
A：在数据量变大后，索引将占用CPU 100%，非常影响用户访问网站，为了最小程度减小此影响 默认设置为每天早上5点更新索引，你想现在更新爬取结果的话，手动执行索引systemctl restart indexer，需要注意的是，数据量越大 索引所耗费时间越长

Q：如何查看索引是否成功？
A：执行systemctl status indexer可以看到索引记录

Q：觉得索引速度慢，如何加快？
A：修改sphinx.conf里面的mem_limit = 512M，根据你的主机的内存使用情况来修改，数值越大索引越快，最大可以设置为2048M

Q：如何确定搜索进程是否正常运行
A：执行systemctl status searchd，如果是绿色的running说明搜索进程完全正常

Q：如何备份数据库？
A：执行mysqldump -uroot -p zsky&gt;/root/zsky.sql导出数据库 //将提示输入当前密码，数据库导出后存在/root/zsky.sql

Q：数据库备份后，现在重新安装了程序，如何导入旧数据？
A：执行mysql -uroot -p zsky&lt;/root/zsky.sql   //假设你的旧数据库文件是/root/zsky.sql，将提示输入当前密码，输入后耐心等待

Q：如何迁移到新主机？
A：备份数据库（方法见上面）→ 程序拷贝到新主机 → 安装程序 → 导入数据库（方法见上面）→ 重新索引

Q：我以前使用的搜片大师/手撕包菜，可以迁移过来吗？
A：程序在开发之初就已经考虑到从这些程序迁移过来的问题，所以你不用担心，完全可以无缝迁移。

Q：网站经常收到版权投诉，有没有好的解决办法？
A：除了删除投诉的影片数据外，你可以使用前端Nginx、后端gunicorn+爬虫+数据库+索引在不同主机上的模式，甚至多前端模式，这样 即使前端被主机商强行封机，也能保证后端数据的安全。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>微力同步：一款可以在多个设备上同步文件的应用程序</title>
    <url>/2242/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主今天发现了个同步神器<code>微力同步</code>，可以在多个设备上同步文件，支持<code>Mac</code>，<code>Windows</code>、<code>Linux</code>、安卓(<code>Android</code>)和苹果(<code>iOS</code>)，以及<code>NAS</code>系统集成等。和博主之前介绍的Syncthing同步工具对比来说，在使用上面方便不少，同步速度也很快，而且官方还提供<code>Linux</code>的一键脚本，这里就分享下。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>微力同步是一款高效的数据传输工具，简单易用的多平台文件同步软件，惊人的传输速度是不同于其他产品的最大优势，微力同步 的智能<code>P2P</code>技术加速同步，会将文件分割成若干份仅<code>KB</code>的数据同步，而文件都会进行<code>AES</code>加密处理，确保数据的安全性，所有数据都存在自己管理的机器硬盘上，安全性有了更高的保障。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>官方网站：</strong><a href="http://www.verysync.com/" target="_blank" rel="noopener">http://www.verysync.com/</a><br><strong>软件下载：</strong><a href="http://verysync.com/download" target="_blank" rel="noopener">http://verysync.com/download</a></p>
<p><strong>1、Linux系统</strong><br>适用于<code>Centos</code>、<code>Debian</code>、<code>Ubuntu</code>等使用<code>systemd</code>的系统。</p>
<pre><code>curl https://raw.githubusercontent.com/verysync/verysync-linux-installer/master/go-installer.sh &gt; go-installer.sh
chmod +x go-installer.sh
./go-installer.sh</code></pre><p>安装完成后就可以用浏览器打开<code>http://IP:8886</code>管理微力内容了，如果<code>CentOS</code>打不开，开启端口就可以了。</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8886 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8886/tcp --permanent
firewall-cmd --reload</code></pre><p>然后我们可以在设置里修改端口，访问用户名密码等。<br><img src="https://www.southcat.net/usr/picture/WeiLitb(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、Windows系统</strong><br>直接通过上方给的软件下载地址，下载微力同步软件，直接解压并双击运行<code>verysync.exe</code>即可。</p>
<p><strong>3、其它安装</strong><br><code>MacOS</code>直接下载软件后，将微力同步拖入到应用目录即完成安装。<br><code>iOS</code>直接在商店搜索微力同步或<code>verysync</code>，再点击安装即可。<br><code>Android</code>直接下载<code>APK</code>应用后安装即可。<br><code>NAS Synology</code>群晖安装参考→传送门。<br><code>NAS</code> 西数<code>WDCloud</code>安装参考→传送门。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先点击左上角加号→标准文件夹，选择你需要同步的文件夹。<br><img src="https://www.southcat.net/usr/picture/WeiLitb(2).png" alt="请输入图片描述" title="请输入图片描述"><br>然后再获取共享链接或者密匙。<br><img src="https://www.southcat.net/usr/picture/WeiLitb(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<pre><code>#共享文件夹权限说明
只读密钥 如果其它电脑通过该只读密钥进行链接，进行文件修改和添加将不会同步到其它电脑上，数据不会影响拥有读写权限密钥的设备，一般用于分享给朋友或同事，又不希望对方能修改或删除我们的文件。

读写密钥 如果其它电脑通过该密钥进行链接，对目录进行添加，删除，或修改文件，操作将同步到所有链接到该目录的所有电脑上。一般用于自己资料的同步，修改和删除，所有的操作应用到所有电脑上。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>微软OneDrive网盘免费升级到25T容量教程</title>
    <url>/2431/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前老有人提到<code>OneDrive 5T</code>不够用，这里博主就分享个免费升级<code>25T</code>的方法，也是微软很早就出的一个政策，部分订阅的<code>OneDrive</code>网盘使用量超过<code>90%</code>的可免费申请提高容量到<code>25T</code>，博主也是很早就申请了，这里就大概说下，有需求的可以升级下。</p>
<h2 id="申请需知"><a href="#申请需知" class="headerlink" title="申请需知"></a>申请需知</h2><p>支持升级到<code>OneDrive 25T</code>的订阅如下：</p>
<pre><code>Office 365 企业版 E3
Office 365 企业版 E5
OneDrive for Business 计划 2
SharePoint Online 计划 2
Office 365 企业版 E3
Office 365 企业版 E5
Office 365 A1
Office 365 A3
Office 365 A5
Office 365 美国政府版 G3
Office 365 美国政府版 G5
Office 365 非营利版 E3
Office 365 非赢利组织版 E5
Microsoft 365 企业版 E3
Microsoft 365 企业版 E5
Microsoft 365 A3
Microsoft 365 A5
Microsoft 365 美国政府版 G3
Microsoft 365 美国政府版 G5
Microsoft 365 非营利组织版 E3
Microsoft 365 非营利组织版 E5</code></pre><p>升级规则如下：</p>
<pre><code>如果用户已使用5TB存储空间的至少90%容量，Microsoft最多会将OneDrive中的默认存储空间增加到每用户25 TB（如有需要，管理员可以设置更低的每用户存储空间限制）。

对于已使用25 TB OneDrive存储空间的至少90%的任何用户，将向各个用户分配25TB SharePoint团队网站作为额外的云存储空间。此额外存储空间以额度方式提供给组织。</code></pre><h2 id="申请方法"><a href="#申请方法" class="headerlink" title="申请方法"></a>申请方法</h2><pre><code>提示：以下申请操作都需要全局管理员操作，如果需求大，也可以给自己其它的账号也升级到25T。</code></pre><p>首先让自己或其中一个子账号的<code>5T</code>网盘使用量超过<code>90%</code>，占比还不够的可以通过复制粘贴的形式快速占到<code>90%</code>以上。<br><img src="https://www.southcat.net/usr/picture/onedrive_25(1).png" alt="请输入图片描述" title="请输入图片描述"><br>这里估计有人会觉得复制粘贴很慢，其实要是网络好的话，随便上传个几十<code>M</code>的文件复制粘贴，十几分钟就可以做到从<code>0</code>到<code>4.5T</code>。</p>
<p>然后管理员登录后台→传送门，点击左侧支持-新建服务请求。<br><img src="https://www.southcat.net/usr/picture/onedrive_25(2).png" alt="请输入图片描述" title="请输入图片描述"><br>然后在帮助框写上类似下面一句话。<br><img src="https://www.southcat.net/usr/picture/onedrive_25(3).png" alt="请输入图片描述" title="请输入图片描述"><br>然后填上管理员邮箱，附件上传几张该账号容量超过<code>90%</code>的截图，包括账户信息。<br><img src="https://www.southcat.net/usr/picture/onedrive_25(4).png" alt="请输入图片描述" title="请输入图片描述"><br>最后发送即可，截图不规范的，中途可能会有工作人员打电话要你重新发图片给他。</p>
<p>最后等一天，成功的邮件就会发给你，然后这时候你就照着邮件给的方法自行升级到<code>25T</code>。<br><img src="https://www.southcat.net/usr/picture/onedrive_25(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="升级方法"><a href="#升级方法" class="headerlink" title="升级方法"></a>升级方法</h2><p>1、我们先安装最新的<code>SharePoint Online Management Shell</code>→下载地址。<br>2、点击电脑左下角开始按钮，搜索<code>PowerShell</code>，然后单击<code>Windows PowerShell</code>，此时会弹出一个命令框。</p>
<pre><code>提示：如果用PowerShell操作失败的，可以使用SharePoint Online Management Shell操作。</code></pre><p>先检查下<code>SharePoint Online</code>是否安装成功，使用命令：</p>
<pre><code>Get-Module -Name Microsoft.Online.SharePoint.PowerShell -ListAvailable | Select Name,Version

#如果输出以下信息则安装成功
Name                                   Version
----                                   -------
Microsoft.Online.SharePoint.PowerShell 16.0.9021.0</code></pre><p>接下来依次输入命令：</p>
<pre><code>#adminUPN为管理员邮箱，orgName为你设置的组织名
$adminUPN=&quot;admin@moerats.onmicrosoft.com&quot;
$orgName=&quot;moerats&quot;
#该步会弹出一个窗口，会要求你输入邮箱密码
$userCredential = Get-Credential -UserName $adminUPN -Message &quot;Type the password.&quot;
Connect-SPOService -Url https://$orgName-admin.sharepoint.com -Credential $userCredential
#这里默认修改为25T，将后面的地址改成你要修改的OneDrive网盘地址，地址仿照下面的即可
Set-SPOSite -Identity https://moerats-my.sharepoint.com/personal/moerats_admin_onmicrosoft_com -StorageQuota 26214400</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>快速清理Docker垃圾文件，释放硬盘空间</title>
    <url>/1457/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们在使用一段时间的<code>Docker</code>后，会发现堆积了大量无用的垃圾文件，比如停止的容器，限制不要的镜像，杂乱的存储，这时候我们就需要经常清理，让<code>Docker</code>环境如同初装一样纯净。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>1、此命令会清空所有的<code>Docker</code>文件</p>
<pre><code>docker kill $(docker ps -aq)
docker rm $(docker ps -aq)
docker rmi $(docker images -q)
docker volume rm $(docker volume ls -q)


docker rm $(docker ps -aq)
docker rmi $(docker images -q)
docker volume rm $(docker volume ls -q)</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>手撕包菜SSBC DHT磁力链一键安装包</title>
    <url>/1577/</url>
    <content><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>1、抛弃<code>django</code>自带的<code>web server</code>，使用更适用于生产环境的<code>Nginx+Gunicorn</code>。<br>2、增加绑定域名的功能。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>[2017.07.05]<br>在冰剑的增加入库黑名单功能的基础上，修复了爬虫爬一段时间就挂掉的<code>bug</code>，再也不用使用爬虫自动重启脚本了，即可以跳过下面第<code>2</code>个步骤。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Centos7</code>纯净版，主机内存最好1G或以上且有<code>swap</code>。<br><strong>使用方法：</strong>解析域名到主机<code>IP</code>上。<br><strong>提示：</strong>本方法还不算是完全的一键安装，适合喜欢折腾的人，如果想一个脚本就全部安装完成的请参考：手撕包菜SSBC改进版之一键部署开心版。</p>
<p><strong>1、安装脚本</strong><br>使用<code>ssh</code>登录<code>vps</code>运行：</p>
<pre><code>wget --no-check-certificate https://www.southcat.net/usr/down/ssbc/ssbc1.4.sh &amp;&amp; sh ssbc1.4.sh</code></pre><p><strong>2、定时重启爬虫</strong><br>下载脚本并给执行权限：</p>
<pre><code>wget --no-check-certificate https://www.southcat.net/usr/down/ssbc/ssbc-reboot.sh &amp;&amp; chmod +x ssbc-reboot.sh</code></pre><p>增加计划任务：</p>
<pre><code>crontab -e</code></pre><p>按<code>i</code>进入编辑模式：</p>
<pre><code>0,30 * * * * sh /root/ssbc-reboot.sh</code></pre><p>意思是每小时的0分和30分自动执行<code>ssbc-reboot.sh</code>这个文件，然后按<code>Esc</code>键退出编辑模式，然后按着<code>shift</code>并同时连按2次<code>z</code>，即回到<code>shell</code>界面。</p>
<p><strong>3、上传程序</strong><br>中文模板下载地址：手撕包菜中文模板2017-02-25.zip</p>
<p>下载模板后解压然后用<code>WinSCP</code>等<code>ftp</code>工具上传到<code>/root/ssbc-master/web/</code>目录，再执行命令：</p>
<pre><code>ln -s /usr/lib/python2.7/site-packages/django/contrib/admin/static/admin /root/ssbc-master/web/static/admin
killall gunicorn
cd /root/ssbc-master/
nohup gunicorn ssbc.wsgi:application -b 127.0.0.1:8000 --reload&gt;/dev/zero 2&gt;&amp;1&amp;</code></pre><p>冰剑新增功能：增加入库黑名单机制。下载地址：手撕包菜爬虫增加入库黑名单 修复崩溃bug 201707.rar，下载后可直接使用，内附使用说明书。</p>
<h2 id="常见问题及解决"><a href="#常见问题及解决" class="headerlink" title="常见问题及解决"></a>常见问题及解决</h2><pre><code>1.必须centos7吗？
非常建议使用centos7，centos6可能会有意想不到的错误
2.如何设置首页关键字？
登录管理员后台，点击Rec keywordss，右上角新增
3.怎么查看入库的文件？
登录管理员后台，点击 Hashs 
4.怎么查看每天入库了多少文件，以便清楚入库效率？
登录管理员后台，点击 Status reports 
5.如何确认web服务器、采集、入库正在运行？
运行 ps -ef|grep python|grep -v grep
结果里面有
gunicorn ssbc.wsgi:application -b 127.0.0.1:8000 --reload 
python simdht_worker.py  
python index_worker.py
即表示正在运行。
——————————————————————————————————————
去除搜索页 右下角广告
[root@localhost ssbc-master]# cd web/static/js
[root@localhost js]# vi ssbc.js   找到如下3行，在前面添加//进行注释，保存
//        document.write(&apos;&lt;script src=&quot;http://v.6dvip.com/ge/?s=47688&quot;&gt;&lt;\/script&gt;&apos;);
//            document.writeln(&quot;&lt;script language=\&quot;JavaScript\&quot; type=\&quot;text/javascript\&quot; src=\&quot;http://js.6dad.com/js/xiaoxia.js\&quot;&gt;&lt;/script&gt;&quot;);
//           document.writeln(&quot;&lt;script language=\&quot;JavaScript\&quot; type=\&quot;text/javascript\&quot; src=\&quot;http://js.ta80.com/js/12115.js\&quot;&gt;&lt;/script&gt;&quot;);
——————————————————————————————————————
如何修改扩展名归类？
workers/metautils.py文件中有如下代码：
def get_category(ext):
    ext = ext + &apos;.&apos;
    cats = {
        u&apos;video&apos;: &apos;.avi.mp4.rmvb.m2ts.wmv.mkv.flv.qmv.rm.mov.vob.asf.3gp.mpg.mpeg.m4v.f4v.&apos;,
        u&apos;image&apos;: &apos;.jpg.bmp.jpeg.png.gif.tiff.&apos;,
        u&apos;document&apos;: &apos;.pdf.isz.chm.txt.epub.bc!.doc.ppt.&apos;,
        u&apos;music&apos;: &apos;.mp3.ape.wav.dts.mdf.flac.&apos;,
        u&apos;package&apos;: &apos;.zip.rar.7z.tar.gz.iso.dmg.pkg.&apos;,
        u&apos;software&apos;: &apos;.exe.app.msi.apk.&apos;
    }

意思是：扩展名为.exe、.app、.msi、,.apk的文件都属于software类型。
如果你把u&apos;software&apos;: &apos;.exe.app.msi.apk.&apos; 改为 u&apos;software&apos;: &apos;app.msi.apk.&apos;，那么exe将会被归为other类型。
所以在这里修改归类设置。
——————————————————————————————————————
如何禁止某些格式/分类的文件入库？
workers/metadata.py文件中有如下代码：
info[&apos;extension&apos;] = metautils.get_extension(bigfname).lower()
info[&apos;category&apos;] = metautils.get_category(info[&apos;extension&apos;])
所以如果你要排除扩展名为.exe的文件，或者类型为software，可以在上面代码后面加上
##########这是增加的过滤-开始############
#按扩张名过滤，禁止扩展名为.exe的入库
if info[&apos;extension&apos;] == &apos;exe&apos;:
    return # 直接返回，跳过下面的入库
#按文件类型过滤，禁止类型为software的入库
if info[&apos;category&apos;] == &apos;software&apos;:
    return
#禁止类型为other的入库
if info[&apos;category&apos;] == &apos;other&apos;:
    return
##########这是增加的过滤-结束############
——————————————————————————————————————
如何重建索引？
第一步：
删除/data目录
第二步：
进入数据库，把search_hash表中所有记录的tagged字段置为0。
UPDATE search_hash SET tagged=0
然后启动sphinx、index_worker.py。
——————————————————————————————————————
MySQL server has gone away提示怎么办？
ssbc 运行一段时间后，大概半个小时，就莫名奇妙停止不爬了。 错误提示如下：
MySQL server has gone away
通过错误提示可以看出，其实是ssbc与mysql(maridb)断开连接了，导致程序异常，当然就插入不了数据了。
有3种解决办法：
方法1是写个脚本，定时重启爬虫。
方法2是修改下代码，当mysql断开连接时，再次重连mysql就可以拉。
方法3是修改Mysql配置，将闲置时间wait_timeout设置长一点。
——————————————————————————————————————
哪里设置爬虫线程？让爬虫爬快/慢点？
在workers/simdht_worker.py里面把MAX_QUEUE_LT、MAX_QUEUE_PT、max_node_qsize设大/小一点。
如何关闭调试模式？设置404页面？
请参考 http://www.githubs.cn/post/19
——————————————————————————————————————
如何在搜索结果页面添加迅雷链接？
在web/views.py文件加入以下代码生成迅雷链接:
import base64
xunleiurl = &apos;AAmagnet:?xt=urn:btih:&apos; + d[&apos;info&apos;][&apos;info_hash&apos;] + &apos;ZZ&apos;
d[&apos;xunlei_url&apos;] = &apos;thunder://&apos; + base64.b64encode(xunleiurl)
可以在模板中用“ { {xunlei_url}} ”调用。位置要放在return render(request, &apos;info.html&apos;, d)的前面。
——————————————————————————————————————
SSBC如何搬家？
数据库用mysqldump导出sql，在新服务器上运行一键包，再导入刚才的sql。
——————————————————————————————————————
提示duplicate id &apos;xxxx&apos;解决办法
进入数据库，执行语句
update search_hash set tagged=True where id=xxxx;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>挂一个不靠谱还不负责的主机商krakenservers</title>
    <url>/1671/</url>
    <content><![CDATA[<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>手撕包菜SSBC改进版之一键部署开心版</title>
    <url>/1642/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一篇<code>SSBC</code>安装教程：手撕包菜SSBC DHT磁力链一键安装包，虽然步骤挺简单的，不过也会有人不知道怎么安装，而前天发现<code>loc</code>有大佬制作了一键脚本，挺方便的，这里就说下。</p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>原来论坛大佬对<code>ssbc</code>做了改进，具体是黑名单不入库，自动重启等。<br>我只是整理了下，感谢论坛那个大佬。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>要求：</strong><code>centos</code>, <code>root</code>权限。</p>
<pre><code>wget --no-check-certificate https://raw.githubusercontent.com/banwagong-news/scripts/master/ssbc-setup.sh &amp;&amp; bash ssbc-setup.sh</code></pre><p>常见问题及具体说明请看：手撕包菜SSBC DHT磁力链一键安装包。</p>
<p>相关内容请看：很好用的DHT磁力链接搜索引擎快速安装方法。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>[挖坑笔记]Centos7折腾Jupyter Notebook</title>
    <url>/515/</url>
    <content><![CDATA[<p>最近学Python 偶然间发现了Jupyter Notebook这个神奇的工具 于是给自己挖了个坑</p>
<h2 id="Anaconda版本安装"><a href="#Anaconda版本安装" class="headerlink" title="Anaconda版本安装"></a>Anaconda版本安装</h2><p>Anaconda已经自动为你安装了Jupter Notebook及其他工具，还有python中超过180个科学包及其依赖项。 你可以通过进入Anaconda的<a href="https://www.anaconda.com/distribution/#linux" target="_blank" rel="noopener" title="官方下载页">官方下载页</a>面自行选择下载</p>
<pre><code>wget https://repo.anaconda.com/archive/Anaconda3-2019.03-Linux-x86_64.sh
bash Anaconda3-2019.03-Linux-x86_64.sh</code></pre><p>如果提示<code>bunzip2: command not found</code>那么我们安装下bunzip2即可</p>
<pre><code>yum install -y bzip2</code></pre><p>常规来说，安装了Anaconda发行版时已经自动为你安装了Jupyter Notebook的，但如果没有自动安装，那么就在终端（Linux或macOS的“终端”，Windows的“Anaconda Prompt”，以下均简称“终端”）中输入以下命令安装：</p>
<pre><code>conda install jupyter notebook</code></pre><p>如果提示<code>conda command not found</code>那么我们执行下下面的代码即可</p>
<pre><code>source ~/.bash_profile</code></pre><h2 id="使用PIP安装"><a href="#使用PIP安装" class="headerlink" title="使用PIP安装"></a>使用PIP安装</h2><p>我自己还没折腾明白先不写了</p>
<h2 id="运行Jupyter-Notebook"><a href="#运行Jupyter-Notebook" class="headerlink" title="运行Jupyter Notebook"></a>运行Jupyter Notebook</h2><h3 id="默认端口启动"><a href="#默认端口启动" class="headerlink" title="默认端口启动"></a>默认端口启动</h3><pre><code>jupyter notebook</code></pre><h4 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h4><pre><code>[root@iZj6c60t3bjdrsrm8ojftuZ ~]# jupyter notebook
[I 21:17:23.827 NotebookApp] Writing notebook server cookie secret to /run/user/0/jupyter/notebook_cookie_secret
Traceback (most recent call last):
  File &quot;/root/anaconda3/bin/jupyter-notebook&quot;, line 11, in &lt;module&gt;
    sys.exit(main())
  File &quot;/root/anaconda3/lib/python3.7/site-packages/jupyter_core/application.py&quot;, line 266, in launch_instance
    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)
  File &quot;/root/anaconda3/lib/python3.7/site-packages/traitlets/config/application.py&quot;, line 657, in launch_instance
    app.initialize(argv)
  File &quot;&lt;/root/anaconda3/lib/python3.7/site-packages/decorator.py:decorator-gen-7&gt;&quot;, line 2, in initialize
  File &quot;/root/anaconda3/lib/python3.7/site-packages/traitlets/config/application.py&quot;, line 87, in catch_config_error
    return method(app, *args, **kwargs)
  File &quot;/root/anaconda3/lib/python3.7/site-packages/notebook/notebookapp.py&quot;, line 1630, in initialize
    self.init_webapp()
  File &quot;/root/anaconda3/lib/python3.7/site-packages/notebook/notebookapp.py&quot;, line 1407, in init_webapp
    self.http_server.listen(port, self.ip)
  File &quot;/root/anaconda3/lib/python3.7/site-packages/tornado/tcpserver.py&quot;, line 151, in listen
    sockets = bind_sockets(port, address=address)
  File &quot;/root/anaconda3/lib/python3.7/site-packages/tornado/netutil.py&quot;, line 174, in bind_sockets
    sock.bind(sockaddr)
OSError: [Errno 99] Cannot assign requested address</code></pre><p>解决方案：添加启动参数</p>
<pre><code>jupyter notebook --ip=0.0.0.0 --no-browser --allow-root</code></pre><p>出现如下信息说明启动成功</p>
<pre><code>[root@iZj6c60t3bjdrsrm8ojftuZ ~]# jupyter notebook --ip=0.0.0.0 --no-browser --allow-root
[I 21:20:12.204 NotebookApp] JupyterLab extension loaded from /root/anaconda3/lib/python3.7/site-packages/jupyterlab
[I 21:20:12.204 NotebookApp] JupyterLab application directory is /root/anaconda3/share/jupyter/lab
[I 21:20:12.205 NotebookApp] Serving notebooks from local directory: /root
[I 21:20:12.206 NotebookApp] The Jupyter Notebook is running at:
[I 21:20:12.206 NotebookApp] http://(iZj6c60t3bjdrsrm8ojftuZ or 127.0.0.1):8888/?token=d547f7ee68511fe93f6697ece677ce730fc67ba2c7d0343e
[I 21:20:12.206 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 21:20:12.210 NotebookApp] 

    To access the notebook, open this file in a browser:
        file:///run/user/0/jupyter/nbserver-30440-open.html
    Or copy and paste one of these URLs:
        http://(iZj6c60t3bjdrsrm8ojftuZ or 127.0.0.1):8888/?token=d547f7ee68511fe93f6697ece677ce730fc67ba2c7d0343e</code></pre><p>访问<code>http://(iZj6c60t3bjdrsrm8ojftuZ or 127.0.0.1):8888/?token=d547f7ee68511fe93f6697ece677ce730fc67ba2c7d0343e</code>即可访问您的页面（注意修改地址）。 使用过程中不要关闭终端如果想要关闭后继续运行可以使用screen</p>
<pre><code>screen -S jupyter  #创建一个jupyter的窗口
jupyter notebook --ip=0.0.0.0 --no-browser --allow-root  ##执行命令
ctrl+a+z  #将程序放到后台退出</code></pre>]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>推荐一个高精度ip地址位置在线查询的网站</title>
    <url>/1546/</url>
    <content><![CDATA[<p><strong>说明：</strong>可能很多人需要查询某人的ip地理位置，但是找不到方法或者工具，这里推荐一个高精度的，差不多误差很小了。</p>
<pre><code>https://www.opengps.cn/Data/IP/LocHighAcc.aspx</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>推荐2个国外免费且稳定的域名DNS解析服务商</title>
    <url>/1758/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在国内越来越多的免费<code>DNS</code>解析服务商需要实名了，比如前些日子的<code>CloudXNS</code>，导致我们很多不想实名的需要把域名搬家了，博主不想折腾了，就搬回了域名所在的注册商<code>namesilo</code>上了，解析速度还是不错的，这里推荐<code>2</code>个国外免费的<code>DNS</code>解析服务商，特点是解析速度快且稳定。</p>
<h2 id="HE-NET"><a href="#HE-NET" class="headerlink" title="HE.NET"></a>HE.NET</h2><p><code>HE.net</code>是国外比较著名的<code>DNS</code>服务商，算是老牌顶级的<code>DNS</code>托管商了，稳定性是不容质疑的，可设置<code>A</code>、<code>AAAA</code>、<code>CNAME</code>、<code>CAA</code>、<code>MX</code>、<code>NS</code>、<code>TXT</code>、<code>SRV</code>、<code>SSHFP</code>、<code>SPF</code>、<code>RP</code>、<code>NAPTR</code>、<code>HINFO</code>、<code>LOC</code>、<code>PTR</code>等记录，同时支持<code>IPv4</code>和<code>IPv6</code> ，解析速度快，功能强大。<br><img src="https://www.southcat.net/usr/picture/DNSTJ(2).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>官网地址：</strong><a href="https://dns.he.net/" target="_blank" rel="noopener">https://dns.he.net/</a></p>
<h2 id="Cloudflare"><a href="#Cloudflare" class="headerlink" title="Cloudflare"></a>Cloudflare</h2><p><code>CloudFlare</code>主要是一家提供免费网站<code>CDN</code>加速服务的网站，不过也提供了免费<code>DNS</code>解析功能，可设置<code>A</code>、<code>CNAME</code>、<code>MX</code>、<code>TXT</code>、<code>SPF</code>、<code>AAAA</code>、<code>NS</code>、<code>SRV</code>、<code>LOC</code>等记录，支持泛解析、纯域名<code>CNAME</code>解析，<code>TTL</code>可设置<code>5</code>分钟-<code>1</code>天。<br><img src="https://www.southcat.net/usr/picture/DNSTJ(1).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>官网地址：</strong><a href="https://www.cloudflare.com/" target="_blank" rel="noopener">https://www.cloudflare.com/</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>推荐3款流行的Linux VPS主机FTP文件管理软件</title>
    <url>/1531/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多时候我们用<code>SSH</code>登录<code>vps</code>后用<code>vi</code>命令编辑文件的时候，都不知道怎么编辑，这时候就只能借助<code>FTP</code>文件管理软件来手动编辑了，而且还可以直接从本地上传图片，文件，快速删除<code>vps</code>文件很方便。这里推荐3款最流行的<code>FTP</code>文件管理软件。</p>
<p><strong>1、WinSCP工具</strong><br>这款<code>FTP</code>工具本人就经常使用，很轻巧，方便，界面还不错！</p>
<p><strong>官方网站</strong>：<a href="https://winscp.net" target="_blank" rel="noopener">https://winscp.net</a><br><img src="https://www.southcat.net/usr/picture/WinSCP.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、FlashFXP工具</strong><br>这款<code>FTP</code>工具就不多说了，很多人都在用，功能很全，也好用。</p>
<p><strong>官方网站：</strong><a href="https://www.flashfxp.com/" target="_blank" rel="noopener">https://www.flashfxp.com/</a><br><img src="https://www.southcat.net/usr/picture/FlashFXP.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>3、FileZilla工具</strong><br>这款<code>FileZilla</code>是国人开发的一款开源的<code>FTP</code>客户端软件，界面上和我们使用的<code>FLASHFXP</code>差不多，功能都很全面。</p>
<p><strong>官方网站：</strong><a href="https://filezilla-project.org/" target="_blank" rel="noopener">https://filezilla-project.org/</a><br><img src="https://www.southcat.net/usr/picture/FileZilla.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>搬瓦工：洛杉矶CN2/CN2 GIA/香港线路/多机房切换/速度快/稳定</title>
    <url>/1654/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多人想搭建网站玩玩，而且还不想备案，所以这里就需要用到国外的<code>VPS</code>了，这里只推荐个在国内很有名的国外主机商<code>搬瓦工</code>，稳定性在国外算是数一数二，速度也很快，而且支持支付宝付款，很方便，强烈推荐。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Bandwagonhost</code>就是大家熟知的<code>搬瓦工</code>，<code>IT7</code>旗下的站点，实力你懂的，一直提供廉价<code>VPS</code>主机，用户口碑较好，很人性化，后台有系统自带<code>BBR</code>，速度也很不错，稳定性也可以，最方便的是提供了支付宝付款，出了<code>KVM</code>架构后，<code>OPENVZ</code>就没啥性价比了，所以这里只推荐<code>KVM</code>架构的，有兴趣的可以试试。</p>
<h2 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h2><p><strong>提示：</strong>所有套餐使用优惠码<code>BWH3HYATVBJW</code>可节省<code>6%</code>。现在<code>IP</code>被<code>Q</code>后每<code>5</code>周可以免费换一次<code>IP</code>。更换地址：点击进入，请先登陆再打开该地址。</p>
<p><strong>线路选择：</strong></p>
<pre><code>#部分线路选择，MC机房目前只能在7机房套餐后台切换
DC9-CN2 GIA：洛杉矶机房，全部走中国电信CN2，国内线路访问都快而且稳定，价格最贵
DC8-C3-CN2 GT：洛杉矶C3机房，电信联通比较友好，但是联通速度不稳定
DC3-QN-CN2 GT：洛杉矶QN机房CN2线路，总体负载比较低，电信联通均衡
DC2-QNET：洛杉矶QN机房普通线路，有概率是CN2
DC4-MCOM：洛杉矶MC机房，联通友好</code></pre><p>总体来说<code>CN2 GIA</code>线路最优，其次是<code>CN2</code>线路，然后就是<code>7</code>机房套餐的<code>CN2</code>(这个只能后台切换<code>CN2</code>，不过流量会缩减到之前的<code>1/3</code>)。如果你要追求延迟，那就选择香港线路，基本和国内差不多。</p>
<p>搬瓦工产品总入口：点击查看，里面可以看到瓦工所有在售产品，显示<code>out of stock</code>即为暂时卖完，<code>Order Now</code>就是有货，可以买。</p>
<pre><code>提示：以下为博主整理的可长期购买到的产品，建议优先GIA，其次CN2。</code></pre><p><strong>1、KVM架构，CN2线路</strong><br>CPU：1核<br>内存：1024MB<br>硬盘：20GB SSD<br>流量：1000GB/月<br>价格：$49.99/年<br>链接：点击购买</p>
<p>CPU：1核<br>内存：2048MB<br>硬盘：40GB SSD<br>流量：2000GB/月<br>价格：$27.99/季（$99.99/年）<br>链接：点击购买</p>
<p>CPU：2核<br>内存：4096MB<br>硬盘：80GB SSD<br>流量：3000GB/月<br>价格：$19.99/月（$199.99/年）<br>链接：点击购买</p>
<p>CPU：2核<br>内存：8GB<br>硬盘：160GB SSD<br>流量：5000GB/月<br>价格：$39.99/月（$399.99/年）<br>链接：点击购买</p>
<p><strong>2、KVM架构，7机房可切换</strong><br>CPU：3核<br>内存：2048MB<br>硬盘：40GB SSD<br>流量：2000GB/月<br>价格：$27.99/季（$99.99/年）<br>链接：点击购买</p>
<p>CPU：4核<br>内存：4096MB<br>硬盘：80GB SSD<br>流量：3000GB/月<br>价格：$19.99/月（$199.99/年）<br>链接：点击购买</p>
<p>CPU：5核<br>内存：8GB<br>硬盘：160GB SSD<br>流量：4000GB/月<br>价格：$39.99/月（$399.99/年）<br>链接：点击购买</p>
<p><strong>3、大带宽CN2 GIA</strong></p>
<pre><code>该配置为2.5G口起步的商业级GIA-CN2线路了，没错2.5G起步，最高10G大带宽。</code></pre><p>CPU：2核<br>内存：1GB<br>空间：20GB SSD<br>流量：1000GB/月<br>价格：$35.99/季（$119.99/年）<br>链接：点击购买</p>
<p>CPU：3核<br>内存：2GB<br>空间：40GB SSD<br>流量：2000GB/月<br>价格：$69.99/季（$229.99/年）<br>链接：点击购买</p>
<h2 id="测试ip"><a href="#测试ip" class="headerlink" title="测试ip"></a>测试ip</h2><pre><code>洛杉矶：104.194.78.3
凤凰城：198.35.46.2
费利蒙：23.252.104.22
纽约：74.121.150.2
德国：162.211.228.3</code></pre><h2 id="购买教程"><a href="#购买教程" class="headerlink" title="购买教程"></a>购买教程</h2><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>魔改Google BBR一键安装脚本</li>
<li>锐速破解版linux一键自动安装包</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>搭建一个基于有赞开发的要饭网站</title>
    <url>/2227/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在的要饭网站越来越多，好像很多都是用的烟雨要饭源码，而本文所使用的系统前端是仿烟雨的，所以界面是差不多的，该系统基于<code>Python</code>开发的，使用的有赞支付接口，这里发下搭建教程，有兴趣的可以搭建一个玩玩，说不定真有土豪打赏。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/yaofan(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>提前注册好有赞(注册链接)，注册好有赞之后，再注册有赞云(注册链接)个人开发者。</p>
<p>再创建可授权店铺: <code>微商城店铺</code>或者<code>有赞微小店</code>都可以(建议使用<code>有赞微小店</code>)。前者面向商家提供功能完善的线上商城，后者面向个人提供分销商品和自营工具可免费使用。</p>
<p>创建完店铺后，再登录到有赞云控制台创建自用型应用并授权刚创建的店铺。</p>
<p>授权完成后，进入有赞云后台，点击应用设置，获取<code>client_id</code>、<code>client_secret</code>、<code>店铺id</code>。</p>
<p>最后需要开启有赞推送消息，开启之后有赞才会在支付成功之后回调信息到你的服务器，先进入开启地址(点击开启)，开启推送服务，推送网址格式为：<code>http://xx.com/order_msg</code>，推送配置勾选：交易消息<code>V3</code>-交易支付<br><img src="https://www.southcat.net/usr/picture/yaofan(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/abbeyokgo/youzan_yaofan" target="_blank" rel="noopener">https://github.com/abbeyokgo/youzan_yaofan</a></p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>Nginx</code>、<code>Mysql</code>、<code>phpmyadmin</code>。</p>
<p><strong>2、拉取源码</strong><br>使用命令：</p>
<pre><code>#拉取源码，并命名为yaofan
git clone https://github.com/abbeyokgo/youzan_yaofan.git yaofan</code></pre><p><strong>3、安装依赖</strong></p>
<pre><code>cd /root/yaofan
pip install -r requirement.txt</code></pre><p><strong>4、新建数据库</strong><br>点击面板左侧数据库，点击<code>phpmyadmin</code>进入数据库管理界面，新建<code>yaofan</code>数据库。</p>
<p><strong>5、编辑源码</strong><br>编辑<code>app/youzan/yz_config.py</code>，填入之前获取到的<code>client_id</code>、<code>client_secret</code>、<code>店铺id</code>。</p>
<p>修改目录<code>config.py</code>，将<code>sqlite</code>一行用#注释掉，并将<code>mysql</code>前面的#给消除掉，修改如下：</p>
<pre><code># SQLALCHEMY_DATABASE_URI = &apos;sqlite:///&apos; + os.path.join(basedir, &apos;data.sqlite&apos;)
SQLALCHEMY_DATABASE_URI = &apos;mysql+pymysql://user:password@localhost/db&apos;</code></pre><p><code>user</code>、<code>password</code>、<code>db</code>依次填你的数据库用户名，密码，数据库名称。</p>
<p><strong>6、初始化数据库</strong></p>
<pre><code>python run.py deploy</code></pre><p><strong>7、运行</strong></p>
<pre><code>gunicorn -w4 -b 0:35000 run:app</code></pre><p>然后就可以访问<code>http://ip:35000</code>，如果访问不了，请在宝塔的安全里开启端口。</p>
<p>觉得没问题了，那就使用<code>screen</code>在后台运行，教程参考：使用screen来实现多任务不断线操作命令。</p>
<p><strong>8、绑定域名</strong><br>点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:35000</code>，再启用反向代理即可。</p>
<p><strong>9、设置开机启动</strong><br>修改源码目录的<code>supervisord.conf</code>，主要修改源码目录和端口号<br>运行：</p>
<pre><code>echo &apos;supervisord -c 源码目录/supervisord.conf&apos; &gt;&gt; /etc/rc.d/rc.local
chmod +x /etc/rc.d/rc.local


#修改成上海时间
cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>支持BT磁力链接/离线下载/边下边播：Peerflix Server一键脚本</title>
    <url>/1741/</url>
    <content><![CDATA[<h2 id="脚本特点"><a href="#脚本特点" class="headerlink" title="脚本特点"></a>脚本特点</h2><ul>
<li>支持<code>BT</code>下载</li>
<li>支持磁力链接下载</li>
<li>支持上传<code>BT</code>文件</li>
<li>支持离线下载</li>
<li>支持边下边播(格式限制：<code>mp4</code>/<code>wbem</code>/<code>ogg</code>)</li>
<li>可视化界面<code>Web UI</code></li>
</ul>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/peerflix.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>CentOS</code>、<code>Debian</code>、<code>Ubuntu</code>。</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/pserver.sh &amp;&amp; chmod +x pserver.sh &amp;&amp; bash pserver.sh</code></pre><p>安装完成之后，就会提醒你，输入要开放的端口（默认<code>9000</code>）。</p>
<pre><code>请输入 Peerflix Server 监听端口 [1-65535]
(默认端口: 9000):
========================
端口 : 9000
========================

Cloud torrent 已启动 !
浏览器访问，地址： http://VPS_IP:9000</code></pre><p>启动后，访问<code>http://VPS_IP:9000</code>即可看到<code>Web UI</code>界面了。</p>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><pre><code>bash pserver.sh
# 可以直接输入这个命令，会自动判断是否需要安装/启动/停止Peerflix Server

bash pserver.sh install
# 安装 Peerflix Server

bash pserver.sh start
# 启动 Peerflix Server

bash pserver.sh stop
# 停止 Peerflix Server

bash pserver.sh tail
# 查看 Peerflix Server 日志

bash pserver.sh uninstall
# 卸载 Peerflix Server</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><p>Cloud Torrent：支持BT下载/磁力下载/边下边播<br>BT种子/磁力链接下载工具：Aria2一键安装管理脚本<br>Debian系统下安装Transmission+h5ai实现离线BT下载</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>搭建一款属于你的在线Markdown笔记编辑器</title>
    <url>/2108/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Markdown-notepad</code>是一款免费，小巧的<code>Markdown</code>笔记编辑器，内置多标签支持，自动保存，插入图片免上传，屏幕截图粘贴等等，功能丰富，是一个很棒的在线工具。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Markdown-notepad(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Markdown-notepad(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>多标签，可以同时打开多个文件、编辑和预览。</li>
<li>自动保存与恢复，无需手工保存，即便关闭甚至终止浏览器也不会丢失数据。</li>
<li>插入本地图片无需上传，不像其他编辑器，插入本地图片需事先上传到服务器再引用其地址。</li>
<li>直接粘贴屏幕截图，使用键盘<code>PrtScn</code>屏幕截图，然后<code>Ctrl+V</code>直接粘贴。</li>
<li>支持快捷键。</li>
<li>支持全屏模式。</li>
<li>支持<code>Github</code>风格。</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/zzzhan/markdown-notepad" target="_blank" rel="noopener">https://github.com/zzzhan/markdown-notepad</a><br><strong>源码下载：</strong>Markdown-notepad.zip，本源码博主修改了点地方，请直接从此处下载。</p>
<p>你可以直接下载源码，解压出来，在电脑上打开<code>index.html</code>文件直接使用。或者将源码文件下载后解压到网站根目录，并打开链接地址使用。</p>
<p>这里只说下用<code>Caddy</code>简单搭建下，适用于<code>CentOS 6+</code>、<code>Debian 6+</code>、<code>Ubuntu 14.04+</code>纯净系统，也就是无<code>Web</code>环境。</p>
<p><strong>安装Caddy</strong></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p><strong>下载源码</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get install unzip -y
#CentOS系统
yum install unzip -y
#下载源码
wget https://www.southcat.net/usr/down/markdown-notepad.zip &amp;&amp; unzip markdown-notepad.zip</code></pre><p><strong>配置Caddy</strong></p>
<pre><code>#如果你想用IP登录，使用以下命令，注意端口80可以自己修改，登录地址为ip:port
echo &quot;:80 {
 root /root/markdown-notepad
 gzip
 browse
}&quot; &gt; /usr/local/caddy/Caddyfile

#如果你想域名登录，使用以下命令，记得修改域名
echo &quot;http://southcat.net {
 root /root/markdown-notepad
 gzip
 browse
}&quot; &gt; /usr/local/caddy/Caddyfile

#如果你想使用域名https登录，使用以下命令
echo &quot;https://southcat.net {
 root /root/markdown-notepad
 tls admin@southcat.net
 gzip
 browse
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>由于<code>https</code>使用的证书为自签发，请先解析好域名，如果想使用自己的证书，则将<code>tls</code>一行改成<code>tls /root/xxx.crt /root/xxx.key</code>即可，后面为证书路径。</p>
<p><strong>启动Caddy</strong></p>
<pre><code>/etc/init.d/caddy start</code></pre><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul>
<li><code>Ctrl+O</code>：打开本地或远程文件</li>
<li><code>Ctrl+S</code>：保存文件</li>
<li><code>Ctrl+T</code>：新建文件(标签)</li>
<li><code>Ctrl+W</code>：关闭文件(标签)</li>
<li><code>F5</code>：<code>Markdown</code>预览</li>
</ul>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul>
<li>Markdown-Temp：一款不错的在线Markdown编辑器</li>
<li>Yosoro：一款萌萌哒的Markdown云笔记软件，支持上传到OneDriver</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>新型功能强大的VPS虚拟主机控制面板：BrainyCP安装教程</title>
    <url>/2138/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>BrainyCP</code>是一款由乌克兰人开发的虚拟主机管理系统，免费且强大可匹配<code>cPanel</code>，也有专人维护进行不定期持续的更新，为虚拟主机托管面板提供了一个选择。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>由于此款面板较新，语言目前仅支持俄语等，博主看见还是有人需要这个面板，为了让人使用方便，汉化大佬林叶展弟弟将其汉化。语言文件绝对路径：<code>/etc/brainy/langs/</code></p>
<h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p><img src="https://www.southcat.net/usr/picture/BrainyCP(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="支持"><a href="#支持" class="headerlink" title="支持"></a>支持</h2><p><strong>Skype：</strong>skype:live:support_39390?chat<br><strong>文档：</strong><a href="http://docs.brainycp.com/" target="_blank" rel="noopener">http://docs.brainycp.com/</a><br><strong>官方博客：</strong><a href="https://brainycp.com/blog" target="_blank" rel="noopener">https://brainycp.com/blog</a><br><strong>社区论坛：</strong><a href="http://community.brainycp.com/" target="_blank" rel="noopener">http://community.brainycp.com/</a><br><strong>常见问题：</strong><a href="https://brainycp.com/blog/overall/chastozadavaemye-voprosy-o-paneli-brainycp" target="_blank" rel="noopener">https://brainycp.com/blog/overall/chastozadavaemye-voprosy-o-paneli-brainycp</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/BrainyCP(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BrainyCP(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BrainyCP(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BrainyCP(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Centos6</code>/<code>7</code>，内存<code>512 M</code>。<br><strong>演示：</strong><a href="https://brainycp.com/demo" target="_blank" rel="noopener">https://brainycp.com/demo</a></p>
<p><strong>安装代码：</strong></p>
<pre><code>yum -y install wget
wget http://core.brainycp.com/install.sh
sh install.sh</code></pre><p>记住面板用户名和密码和的你的<code>SSH</code>同步。</p>
<h2 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h2><p>好像汉化后，由于面板问题，导致添加用户有问题，如果介意的，可以不用汉化，直接使用谷歌浏览器翻译使用。</p>
<p><strong>1、修改面板语言</strong><br>下载文件：ru.zip，并从文件管理器打开：<code>/etc/brainy/langs/ru/</code>，将其解压并覆盖。</p>
<p><strong>2、修改文件管理器语言</strong><br>下载文件：i18n_Files.zip，并从文件管理器分别打开：<code>/etc/brainy/plugins/elFinder_backups/js/i18n/</code>和<code>/etc/brainy/plugins/elFinder-2.1.9/js/i18n/</code>，将其解压并覆盖。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>既来之则安之</title>
    <url>/630/</url>
    <content><![CDATA[<p>一切因果都是源于自己的决定，既来之则安之。</p>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
  </entry>
  <entry>
    <title>极精简论坛Flarum搭建教程</title>
    <url>/1638/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一个轻量级论坛程序搭建教程：轻量级论坛Carbon Forum搭建教程，今天又看到个很不错的论坛程序<code>Flarum</code>看着很简洁很舒服，就再发个教程。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Flarum.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Flarum</code>是一个免费的开源的论坛软件，很精简，有如下几个特点：</p>
<ul>
<li>简单, 她拥有响应的用户界面，惊叹触摸设备使用体验。</li>
<li>快速, 只有 ～130KB js，瞬间加载完成。</li>
<li>可扩展的, 你可以调整她的使用场景。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>PHP 5.6+</code>、<code>MySQL 5.5+</code>、<code>Nginx</code>。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP 5.6</code>、<code>Nginx</code>、<code>Mysql 5.5+</code>。</p>
<p>接下来再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>扩展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、脚本添加，脚本地址：https://www.southcat.net/archives/722/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p><strong>2、安装Composer</strong></p>
<pre><code>curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer</code></pre><p><strong>3、安装程序</strong><br>我们先点击左侧网站，添加域名，并设置好<code>Mysql</code>数据库用户名和密码信息。</p>
<p>然后从宝塔文件夹管理器访问根目录，删掉所有文件，再使用命令：</p>
<pre><code>#进入网站根目录，将路径修改成自己的再运行
cd /www/wwwroot/www.southcat.net
composer create-project flarumchina/flarumchina . --stability=beta
#授权
chown -R www:www ./
chmod -R 775 assets storage</code></pre><p><strong>4、添加伪静态</strong><br>点击站点设置-伪静态设置，添加以下代码：</p>
<pre><code>location / {
    try_files $uri $uri/ /index.php?$query_string;
}

location /api {
    try_files $uri $uri/ /api.php?$query_string;
}

location /admin {
    try_files $uri $uri/ /admin.php?$query_string;
}

location /flarum {
    deny all;
    return 404;
}

location ~ .php$ {
    fastcgi_split_path_info ^(.+.php)(/.+)$;
    fastcgi_pass unix:/tmp/php-cgi.sock;
    fastcgi_index index.php;
    include fastcgi.conf;
}</code></pre><h2 id="其它操作"><a href="#其它操作" class="headerlink" title="其它操作"></a>其它操作</h2><pre><code>#底部加统计
vendor/flarum/core/views/app.blade.php
#去掉网络字体
vendor/flarum/core/src/Http/WebApp/WebAppView.php</code></pre><h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><pre><code>1、markdown支持：http://discuss.flarum.org.cn/d/221
2、中文语言包：http://flarum.org/docs/languages/
3、中文github及程序下载：https://github.com/justjavac/Flarum
4、中文语言包下载：https://github.com/Flarum-Chinese/flarum-ext-simplified-chinese/releases
5、SMTP相关：https://github.com/flarum/core/issues/258
6、论坛类程序推荐：https://www.v2ex.com/t/268523
7、中文优化版：http://discuss.flarum.org.cn/d/402
8、插件整理：http://discuss.flarum.org.cn/d/306</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>本博客基于Handsome主题的一些小修改教程</title>
    <url>/2104/</url>
    <content><![CDATA[<p><strong>说明：</strong>博客用<code>Handsome</code>主题一年多了，体验还不错，特别适合做个人博客，而博主基于原主题做了下小小的修改，使其更加好看点，鉴于经常有人问博主修改方法，这里就在博客里说一下，顺便也说一下博客没有使用的修改方案，给同样使用<code>Handsome</code>主题的做下参考。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、首页文章版式圆角化</strong><br>本项修改的是首页文章版式，包括图片使其四个角由方形变成圆角形状。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#圆角大小可修改15px数值(别复制该行)
/*首页文章版式圆角化*/
.panel{
    border: none;
    border-radius: 15px;
}

.panel-small{
    border: none;
    border-radius: 15px;
}

.item-thumb{
    border-radius: 15px;  
}</code></pre><p><strong>2、首页文章图片获取焦点放大</strong><br>本项修改的是首页文章图片，将鼠标放到首页头图后使其放大。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#放大的时间和大小自行修改以下数值(别复制该行)
/*首页文章图片获取焦点放大*/
.item-thumb{
    cursor: pointer;  
    transition: all 0.6s;  
}

.item-thumb:hover{
      transform: scale(1.05);  
}

.item-thumb-small{
    cursor: pointer;  
    transition: all 0.6s;
}

.item-thumb-small:hover{
    transform: scale(1.05);
}</code></pre><p><strong>3、首页头像转动并放大</strong><br>本项修改的是首页头像，将鼠标放至头像后使其转动并放大。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#转动快慢和头像大小自行修改数值(别复制该行)
/*首页头像自动旋转*/
.thumb-lg{
    width:130px;
}

.avatar{
    -webkit-transition: 0.4s;
    -webkit-transition: -webkit-transform 0.4s ease-out;
    transition: transform 0.4s ease-out;
    -moz-transition: -moz-transform 0.4s ease-out; 
}

.avatar:hover{
    transform: rotateZ(360deg);
    -webkit-transform: rotateZ(360deg);
    -moz-transform: rotateZ(360deg);
}

#aside-user span.avatar{
    animation-timing-function:cubic-bezier(0,0,.07,1)!important;
    border:0 solid
}

#aside-user span.avatar:hover{
    transform:rotate(360deg) scale(1.2);
    border-width:5px;
    animation:avatar .5s
}</code></pre><p><strong>4、首页头像放大并自动旋转</strong><br>本项修改的是首页头像，效果就是将首页头像放大，并使其自动旋转。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#旋转速度请修改3s数值(别复制该行)
/*首页头像放大并自动旋转*/
.thumb-lg{
    width:130px;
}

@-webkit-keyframes rotation{
    from {
        -webkit-transform: rotate(0deg);
    }
    to {
        -webkit-transform: rotate(360deg);
    }
}

.img-full{
    -webkit-transform: rotate(360deg);
    animation: rotation 3s linear infinite;
    -moz-animation: rotation 3s linear infinite;
    -webkit-animation: rotation 3s linear infinite;
    -o-animation: rotation 3s linear infinite;
}</code></pre><p><strong>5、文章标题居中</strong><br>本项修改的是文章标题，使其居中。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>/*文章标题居中*/
.panel h2{
    text-align: center; 
}
.post-item-foot-icon{
    text-align: center;
}</code></pre><p><strong>6、首页文章版式阴影化</strong><br>本项修改的是首页文章版式，包括图片使其四周加上一层绚丽的阴影。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>#阴影颜色修改rgba后面的值(别复制该行)
/*panel阴影*/
.panel{
   box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
    -moz-box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
}

.panel:hover{
    box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
    -moz-box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
}

.panel-small{
    box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
    -moz-box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
}

.panel-small:hover{
    box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
    -moz-box-shadow: 1px 1px 5px 5px rgba(255, 112, 173, 0.35);
}

#如果也想使盒子四周也有阴影，加上以下代码
.app.container {
    box-shadow: 0 0 30px rgba(255, 112, 173, 0.35);
}</code></pre><p><strong>7、自定义滚动条滑块</strong><br>本项修改针对浏览器最右边的滚动条滑块，使其改变样式。将以下代码添加至后台主题设置 自定义<code>CSS</code>。</p>
<pre><code>/*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/
::-webkit-scrollbar{
    width: 3px;
    height: 16px;
    background-color: rgba(255,255,255,0);
}

/*定义滚动条轨道 内阴影+圆角*/
::-webkit-scrollbar-track{
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
    border-radius: 10px;
    background-color: rgba(255,255,255,0);
}

/*定义滑块 内阴影+圆角*/
::-webkit-scrollbar-thumb{
    border-radius: 10px;
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
    background-color: #555;
}</code></pre><p><strong>8、评论表情修改</strong><br>本项修改评论表情，将原始表情替换成泡泡和阿鲁，只需要替换主题文件里的<code>OwO.min.js</code>和<code>OwO.json</code>文件就可以了。文件下载：HS_OwO.zip。<code>OwO.min.js</code>在<code>handsome/assets/js/features</code>文件夹，<code>OwO.json</code>在<code>handsome/usr</code>文件夹。</p>
<p><strong>9、鼠标点击特效</strong><br>将以下代码放在主题的<code>handsome/component/footer.php</code>中的<code>&lt;/body&gt;</code>之前即可。</p>
<pre><code>#字体自行修改
&lt;script type=&quot;text/javascript&quot;&gt; 
/* 鼠标特效 */
var a_idx = 0; 
jQuery(document).ready(function($) { 
    $(&quot;body&quot;).click(function(e) { 
        var a = new Array(&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot; ,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;); 
        var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]); 
        a_idx = (a_idx + 1) % a.length; 
        var x = e.pageX, 
        y = e.pageY; 
        $i.css({ 
            &quot;z-index&quot;: 999999999999999999999999999999999999999999999999999999999999999999999, 
            &quot;top&quot;: y - 20, 
            &quot;left&quot;: x, 
            &quot;position&quot;: &quot;absolute&quot;, 
            &quot;font-weight&quot;: &quot;bold&quot;, 
            &quot;color&quot;: &quot;#ff6651&quot; 
        }); 
        $(&quot;body&quot;).append($i); 
        $i.animate({ 
            &quot;top&quot;: y - 180, 
            &quot;opacity&quot;: 0 
        }, 
        1500, 
        function() { 
            $i.remove(); 
        }); 
    }); 
}); 
&lt;/script&gt;</code></pre><p><strong>10、评论框特效</strong><br>下载特效<code>JS</code>文件：commentTyping.js，将其放在网站目录某个地方，然后编辑主题文件<code>handsome/component/footer.php</code>，在<code>&lt;/body&gt;</code>后面添加以下代码。</p>
<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;(JS文件路径)&quot;&gt;&lt;/script&gt;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>构建在线ASCII视频流服务</title>
    <url>/454/</url>
    <content><![CDATA[<h2 id="什么是ASCII视频流服务？"><a href="#什么是ASCII视频流服务？" class="headerlink" title="什么是ASCII视频流服务？"></a>什么是ASCII视频流服务？</h2><p>其实这个名字是咱胡乱起的，具体叫啥我也不清楚，咱也不敢问但效果如顶部视频  </p>
<h2 id="如何搭建这么一个服务？"><a href="#如何搭建这么一个服务？" class="headerlink" title="如何搭建这么一个服务？"></a>如何搭建这么一个服务？</h2><p>需要用到的工具：</p>
<ul>
<li><a href="https://ffmpeg.zeranoe.com/builds/" target="_blank" rel="noopener">ffmpeg</a></li>
<li><a href="https://github.com/hit9/img2txt" target="_blank" rel="noopener">hit9/img2txt</a></li>
<li>PHP和Python的运行环境 <strong>1.执行以下命令将视频中的某个片段（或全部）截取为图像</strong></li>
</ul>
<p><code>ffmpeg -i ceshi.mp4 -r 5 -ss 00:00:05 -t 00:00:15 %03d.png</code> ceshi.mp4的第5秒后的15秒以每秒5帧的速度保存为图像，图像名格式为001.png 002.png …… 就像这样 <img src="https://southcat.net/wp-content/uploads/2019/05/QQ%E6%88%AA%E5%9B%BE20190526211227-300x158.png" alt="img"> <strong>2.使用修改过的hit9/img2txt将图像转换为ASCII画.</strong> 原版hit9/img2txt只能单张转换，这里使用修改后的版本，可以批量转换并保存为txt。修改后的版本：<a href="https://github.com/southcat/img2txt/blob/gh-pages/img2txt.py" target="_blank" rel="noopener">https://github.com/southcat/img2txt/blob/gh-</a><a href="https://github.com/southcat/img2txt/blob/gh-pages/img2txt.py" target="_blank" rel="noopener">pages/img2txt.py</a> clone下来后修改<code>img2txt.py</code><a href="https://github.com/HFO4/img2txt/blob/gh-pages/img2txt.py#L246" target="_blank" rel="noopener">第246行</a>的目录为上一步存放图像的目录，然后执行：</p>
<pre><code> pip install img2txt.py 
python img2txt.py h</code></pre><p>稍等片刻，ASCII字符文件会存放到与<code>img2txt.py</code>同级的<code>pic</code>目录下</p>
<h4 id="3-部署在线服务"><a href="#3-部署在线服务" class="headerlink" title="3.部署在线服务"></a>3.部署在线服务</h4><p><a href="https://github.com/flyqieqq/telnetcxk" target="_blank" rel="noopener">https://github.com/flyqieqq/telnetcxk</a> 将代码clone到本地然后替换掉pic文件夹的内容为你的。 然后<code>composer install</code> 安装依赖库 然后运行<code>php /路径/start.php start</code> 然后在你的电脑安装telnet客户端 cmd输入telnet 你的地址 2333 如果觉得速度过快修改源码<code>start_server.php</code>中第16行 <code>usleep(100000)</code>即可 端口修改第五行</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>查看Linux系统性能配置常用命令脚本</title>
    <url>/1444/</url>
    <content><![CDATA[<p><strong>1、系统查看命令</strong></p>
<pre><code># uname -a # 查看内核/操作系统/CPU信息
# head -n 1 /etc/issue # 查看操作系统版本
# cat /proc/cpuinfo # 查看CPU信息
# hostname # 查看计算机名
# lspci -tv # 列出所有PCI设备
# lsusb -tv # 列出所有USB设备
# lsmod # 列出加载的内核模块
# env # 查看环境变量</code></pre><p><strong>2、资源/硬盘占用情况</strong></p>
<pre><code># free -m # 查看内存使用量和交换区使用量
# df -h # 查看各分区使用情况
# du -sh &lt;目录名&gt; # 查看指定目录的大小
# grep MemTotal /proc/meminfo # 查看内存总量
# grep MemFree /proc/meminfo # 查看空闲内存量
# uptime # 查看系统运行时间、用户数、负载
# cat /proc/loadavg # 查看系统负载</code></pre><p><strong>3、磁盘和分区情况</strong></p>
<pre><code># mount | column -t # 查看挂接的分区状态
# fdisk -l # 查看所有分区
# swapon -s # 查看所有交换分区
# hdparm -i /dev/hda # 查看磁盘参数(仅适用于IDE设备)
# dmesg | grep IDE # 查看启动时IDE设备检测状况</code></pre><p><strong>4、网络查看</strong></p>
<pre><code># ifconfig # 查看所有网络接口的属性
# iptables -L # 查看防火墙设置
# route -n # 查看路由表
# netstat -lntp # 查看所有监听端口
# netstat -antp # 查看所有已经建立的连接
# netstat -s # 查看网络统计信息</code></pre><p><strong>5、进程查看</strong></p>
<pre><code># ps -ef # 查看所有进程
# top # 实时显示进程状态</code></pre><p><strong>6、用户查看</strong></p>
<pre><code># w # 查看活动用户
# id &lt;用户名&gt; # 查看指定用户信息
# last # 查看用户登录日志
# cut -d: -f1 /etc/passwd # 查看系统所有用户
# cut -d: -f1 /etc/group # 查看系统所有组
# crontab -l # 查看当前用户的计划任务</code></pre><p><strong>7、系统服务情况</strong></p>
<pre><code># chkconfig –list # 列出所有系统服务
# chkconfig –list | grep on # 列出所有启动的系统服务


# rpm -qa # 查看所有安装的软件包</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>查看OpenVZ VPS所在服务器的VPS数量</title>
    <url>/1464/</url>
    <content><![CDATA[<p><strong>SSH下，使用如下命令</strong></p>
<pre><code>grep devices /proc/cgroups</code></pre><p>或者</p>
<pre><code>cat /proc/cgroups</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>测试下文章  后台出问题了</title>
    <url>/730/</url>
    <content><![CDATA[<p>后台无法修改菜单了 过来看下什么原因. 编辑测试下缓存</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>测试置顶</title>
    <url>/2471/</url>
    <content><![CDATA[<p>测试</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>火狐插件：百度网盘直接下载+百度云/115右键离线下载</title>
    <url>/1778/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一个获取百度直链的方法，参考：百度网盘直接下载助手 Tampermonkey（油猴）脚本，挺好用的，这里再分享<code>2</code>个关于网盘的插件，不过只适用于<code>Firefox</code>浏览器。</p>
<p><strong>1、哔度娘网盘</strong><br>这个插件作用就是屏蔽掉度娘网盘网页端下载文件夹或大文件时强制弹出的启动客户端弹窗，直接启动浏览器下载，这个时候等于获取了直链，就可以用其它下载工具下载了。<br><strong>插件地址：</strong>点击进入</p>
<p><strong>2、网盘离线下载</strong><br>这个插件由火狐吧出品，百度云、<code>115</code>网盘右键离线下载<code>http</code>、<code>ftp</code>、<code>ed2k</code>、磁力链接，方便快捷。<code>PS</code>：已支持高亮选中后下载。<br><strong>插件地址：</strong>点击进入</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>申请西南学院EDU教育邮箱，可免费获取无限容量的Google Drive网盘</title>
    <url>/2347/</url>
    <content><![CDATA[<p><strong>说明：</strong>看到很多人想要无限容量的<code>Google Drive</code>网盘，于是博主就想起了前年注册的美国西南学院(<code>Southwestern College</code>)，然后重新申请个<code>edu</code>邮箱试试，居然发现过了，所以就分享下该方法，申请成功后可以免费使用<code>Google G Suite</code>应用，而且用起来还蛮稳，有需求的就快上车。</p>
<h2 id="申请步骤"><a href="#申请步骤" class="headerlink" title="申请步骤"></a>申请步骤</h2><p>1、先准备个美国身份证，这个就可以借助工具随机生成一个，生成地址：点击进入，然后将个人信息保存下来。</p>
<p>2、注册一个<code>OpenCCC</code>帐户，注册地址：点击进入，注册过程最好全程挂梯子，最后会要你设置账户和密码。</p>
<pre><code>提示：博主在注册第2步，Permanent Address选项填的无家可归，不知道对申请有不有加成，反正最后是通过了。</code></pre><p>3、登录<code>OpenCCC</code>帐户，登录地址：点击进入，再到下面选择<code>Southwestern College</code>。<br><img src="https://www.southcat.net/usr/picture/gdedu(1).png" alt="请输入图片描述" title="请输入图片描述"><br>接下来点击<code>Start Application</code>开始填写申请信息。<br><img src="https://www.southcat.net/usr/picture/gdedu(2).png" alt="请输入图片描述" title="请输入图片描述"><br>申请完成后，可能会收到一封被列为非加州居民的邮件，不过可以不用管，然后等待几个小时，如果申请成功学校会将账户邮箱发给你，你再去激活。</p>
<p>最后直接登录学校门户网站就可以看到<code>Google G Suite</code>应用，包括无限容量的<code>Google Drive</code>网盘。<br><img src="https://www.southcat.net/usr/picture/gdedu(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>这是博主前几天申请成功的邮件，差不多一次就过了。<br><img src="https://www.southcat.net/usr/picture/gdedu(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>当然这个申请都是看运气的，如果你没有申请成功，那可以重新再试一下，反正博主觉得成功几率挺大的。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>留一个莫西干朋克风格的发型</title>
    <url>/496/</url>
    <content><![CDATA[<p>此文为证</p>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
  </entry>
  <entry>
    <title>百度主动推送脚本及教程</title>
    <url>/1554/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>主动推送是最为快速的提交方式，可以将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录，从而可以最大限度保护原创文章，以下分享的是<code>php</code>推送方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>脚本下载地址：</strong>BaiDutuisong</p>
<p>1、进入百度站长之家，去链接提交那里找到你网站的主动推送<code>api</code>地址，替换脚本<code>rat.php</code>文本里的<code>api</code>地址<br><img src="https://www.southcat.net/usr/picture/seo(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/seo(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>2、将<code>rat.html</code>和<code>rat.php</code>文件一起放入到网站根目录，通过访问<code>http://yourdomain.com/rat.html</code>来提交网站地址即可！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>电信校园卡 30G全国流量+500分钟+主流软件定向免流 每月仅需12.5元</title>
    <url>/2428/</url>
    <content><![CDATA[<p><strong>说明：</strong>中国北京电信推出的校园卡，<code>200</code>用一年，<code>300</code>用两年，非常实惠，均是全国流量和通话，包含各种软件定向免流，目前已推出在线办理的方式，各地均可在线申请办理，有需求的可以上车了。</p>
<h2 id="套餐详情"><a href="#套餐详情" class="headerlink" title="套餐详情"></a>套餐详情</h2><ul>
<li>资费：<code>200</code>包<code>1</code>年/<code>300</code>包<code>2</code>年，相当于<code>16.6</code>元/月或<code>12.5</code>元/月，一年/两年内不用再充话费。</li>
<li>‌流量：<code>30G</code>全国通用流量，超出后<code>1</code>元<code>800M</code>。</li>
<li>短信：<code>20</code>条免费短信。</li>
<li>通话：<code>500</code>分钟免费主叫，全国接听免费。</li>
<li>此外，还可通过短信免费订购额外的<code>5GB</code>全国流量，请关注“校园卡助手”公众号回复“北京电信<code>0</code>元<code>5GB</code>”获取短信开通教程。</li>
</ul>
<p>其中定向流量支持以下软件：</p>
<pre><code>新闻：网易新闻、今日头条
音乐：网易云音乐、虾米音乐
浏览器：UC、手机百度看书：网易云阅读、书旗、网易蜗牛
视频：虎牙直播、优酷、爱奇艺、天翼视讯 、PPTV、好看视频 、西瓜视频 、抖音、快手
游戏：坦克连、率土之滨、大话西游、倩女幽魂、终结者2、荒野行动、迷雾世界、梦幻西游、阴阳师
其他：网易公幵课、百度贴吧、高德地图、百度地图、有道云笔记、网易云课堂、网易邮箱大师、百度手机助手、中国大学mooc</code></pre><p><strong>注意：</strong>当定向流量+通用流量总量达<code>40G</code>会断网，可通过客服<code>10000</code>恢复使用，恢复使用后定向流量失效，通用流量可继续使用。</p>
<h2 id="申请地址"><a href="#申请地址" class="headerlink" title="申请地址"></a>申请地址</h2><p>申请地址：点击申请，该地址为电信官方地址，请放心申请，或者直接扫下面活动截图里面的二维码申请。</p>
<p><strong>注意：</strong>申请时，身份证上传识别错误的话，请把照片照得更清晰点。如果出现其它任何系统错误，基本上都可以靠更换浏览器、更换网络、更换手机解决。</p>
<h2 id="订单查询"><a href="#订单查询" class="headerlink" title="订单查询"></a>订单查询</h2><p>订单查询：点击查询，如果你注册了账号的就账号登陆，没有注册的就使用收货号码+验证码登陆。</p>
<h2 id="活动截图"><a href="#活动截图" class="headerlink" title="活动截图"></a>活动截图</h2><h2 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h2><pre><code>#归属地哪里？全国都可以用吗？
归属地北京，全国都可以用，都是全国通话，全国流量

#激活期限是多久，如果没有激活，可以申请退款吗？
自申请日起20天内必须激活，否则卡报废。如果超出期限或者不想激活了，只要你的卡没有激活，无论是什么问题什么原因，直接拨打4008981189转售后客服申请退款，钱在15个工作日内会原路返回你的支付账户。但一经激活，不再退款。

#一个人可以开几张？
工信部规定，一个身份证只能同时持有5张中国电信卡，如果你名下有n张电信卡，那么你还可以办理5-n张

#可以改套餐吗？
套餐有效期内不能改

#一年或者两年后可以续约么吗？
关注“校园卡助手”，发送“北京电信续约”，即可获取官方续约地址，套餐到期的最后一个月可续约。

#怎么激活？
在“北京电信”公众号或电信掌上营业厅进行激活，邮寄的快件中也含有激活说明。

#如果我想帮父母申请一张，该怎么操作呢？
考虑到父母对在线激活功能比较陌生，流量族推荐使用您本人的身份证申请，邮寄地址填您父母的。激活时只需要卡号及卡背后的ICCD数字，当您父母收到卡后把背后的ICCD数字拍给您，您通过“北京电信”公众号或电信掌上营业厅进行激活，申请激活后大概几分钟后就可正常使用，激活的特征是：能打电话、能上网。

#激活后我需要做什么呢？
第1步：随便打通一个电话20秒（亲戚朋友的号码都可以），不然以下操作将不可进行
第2步：关注“校园卡助手”公众号回复“北京电信0元5GB”获取0元5GB全国流量短信开通教程
第3步：发送短信ktvolte到10001，隔几分钟后会来短信，按提示回复确认即可成功开通VOLTE高清通话，开通后进你手机的移动网络设置，开启VOLTE功能，此功能的核心在于可以边打电话边上网。

#本卡可以在平板上使用吗？
本卡是正规北京电信套餐，只要能插SIM卡的设备均可正常使用。

#开热点给其他设备上网免流吗？
任何运营商的任何套餐、任何卡开热点给其他设备上网，都不免流。

#购买后需要每个月再充话费吗？
本卡是预付费卡，申请的时候会要求付款200/300元，然后每个月以赠费的形式充入账户，抵扣月费，不需要再充话费。本卡的申请链接是电信官方链接，付款也是付给电信官方，请放心付款。

#当流量达到40GB会断网吗？
40G关停规则：当月累计总流量达到40G暂停当月上网服务，次月自动开通，如当月联系客服申请继续使用，流量包内剩余国内流量可继续使用，定向流量自动失效，流量包内流量用完后所有流量按套外资费(1元800M/天，可自动叠加）收取。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>百度网盘不限速下载工具-dpdownload v2.1.3</title>
    <url>/1681/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>百度云不限速下载器，经测试速度基本满速，比之前用的<code>IDM</code>下载器快很多。度盘下载器，第三方百度网盘高速下载工具度盘下载器<code>2</code>，也就是<code>dpdownload</code>第二代产品，由原作者双霖等人开发，<code>2.0</code>版界面全新设计。并且采用了<code>Aria 2</code>技术，下载自动切换线路，支持设置超高线程爆速下载。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>【2017.10.29】<br>度盘下载器，更新版本至<code>V2.1.3</code>，下载地址：dpdownload v2.1.3。更新日志：点击进入</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>博主是<code>50M</code>电信，从下图测试来看，基本满速状态。<br><img src="https://www.southcat.net/usr/picture/dupan.png" alt="请输入图片描述" title="请输入图片描述"><br><strong>注意：</strong>软件要调用百度网盘的<code>API</code>，所以需要登录自己的帐号，而且杀毒软件可能会报毒，请信任即可！</p>
<p><strong>本地下载地址：</strong>dpdownload v2.0.5</p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>问：打开软件需要登录，请问是登录什么账号呢？<br>答：因为我们需要获取您百度网盘里边的账号，所以需要您登录。也就是说这里登录的是您自己的百度账号。<br>问：解压之后的程序，用起来很不方便，每次要进入文件夹去点。可以拖到桌面使用吗？<br>答：直接拖到桌面是不可以的，他会因为缺少文件而无法运行。但是您可以在主程序（dp_Main.exe)上点击鼠标右键选择“发送到”-“桌面快捷方式”。这样就可以在桌面上生成一个图标，以后点击该图标即可。<br>问：下载大文件为什么没有速度？<br>答：文件越大，可能需要等待更长的时间才会开始下载。请耐心等待。<br>问：文件夹怎么进入？<br>答：文件夹双击即可进入。<br>问：如何返回上一级文件夹？<br>答：在软件主页按钮右边显示的即是当前各级文件夹的名字，单击对应文件夹返回即可。<br>问：可以同时下载多个文件吗？<br>答：可以，只是建议文件数量不要过多，否则可能引起系统资源不足导致出现故障。<br>问：可以直接下载文件夹吗？<br>答：可以，请更新到2.1及以后的版本，即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>百度网盘分享文件密码暴力破解器</title>
    <url>/2132/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主今天要分享的工具就不用过多介绍了，破解密码的效率很高，也很准确，很多都是秒破解，有<code>PC</code>端和安卓端。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/bdpasstest.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能特色"><a href="#功能特色" class="headerlink" title="功能特色"></a>功能特色</h2><p>1、支持以下分享链接。格式如下面：</p>
<pre><code>http://pan.baidu.com/share/init?surl=xxx
https://pan.baidu.com/share/init?surl=xxx
http://pan.baidu.com/s/1xxx
https://pan.baidu.com/s/1xxx</code></pre><p>2、程序的线程是多线程的！另外多线程的可以看运气哦！<br>3、添加日志文件，在运行目录下，如果要找到正确密码搜搜<code>errno&quot;:0</code>。<br>4、终支持停止线程，可以继续上一次的密码测试。<br>5、针对<code>404</code>（封<code>IP</code>）的解决是：自动停止密码测试。<br>6、调用别人的<code>API</code>快速拿到密码，看你是否需要。</p>
<h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p><strong>安卓端下载：</strong><a href="https://github.com/zgcwkj/TestBaiduPassword" target="_blank" rel="noopener">https://github.com/zgcwkj/TestBaiduPassword</a><br><strong>PC端下载：</strong>本地下载</p>
<p>演示视频、程序源码、可运行的程序：</p>
<pre><code>链接:https://pan.baidu.com/s/17BQQsnihlgcvNafW4IpFHA 密码:cskm</code></pre><p><strong>注意：</strong>经测试访问太多会导致<code>IP</code>被加黑，大约几十分钟左右，还请各位在测试的时候三思！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>百度网盘直接下载助手 Tampermonkey（油猴）脚本</title>
    <url>/1560/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人下载百度云文件时候，需要下载客户端才能下载，这样很麻烦，就分享这个<code>Tampermonkey</code>（油猴）脚本，可以直接下载百度网盘和百度网盘分享的文件,避免下载文件时调用百度网盘客户端,获取网盘文件的直接下载地址，很方便。</p>
<p><strong>脚本官方地址：</strong><a href="https://greasyfork.org/zh-CN/scripts/23635" target="_blank" rel="noopener">https://greasyfork.org/zh-CN/scripts/23635</a></p>
<p><strong>安装：</strong>在浏览器拓展里安装<code>Tampermonkey</code>该插件后可直接进入官方地址安装脚本后重启浏览器即可</p>
<p><strong>使用方法：</strong><br>1、在自己的百度网盘选中文件，点击<code>下载助手</code>按钮，选择合适的方法直接下载文件。<br><img src="https://www.southcat.net/usr/picture/baiduyunxz(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>2、在分享页面的按钮显示在右上角，直接点击<code>下载助手</code>即可。<br><img src="https://www.southcat.net/usr/picture/baiduyunxz(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>提示：</strong>脚本失效后，记得去油猴面板更新脚本即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>短网址程序YOURLS安装及配置教程与设置中文</title>
    <url>/1900/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>YOURLS</code>是一款使用<code>PHP</code>+<code>Mysql</code>开发的短链接程序，相比公共短网址好处是数据掌握在自己手中，可控性更高。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/YOURLS.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、下载</strong><br><code>YOURLS</code>免费开源，可以在<code>Github</code>下载最新版本（<a href="https://github.com/YOURLS/YOURLS/releases），解压后放到站点根目录，并将`config-sample.php`更名为`config.php`。" target="_blank" rel="noopener">https://github.com/YOURLS/YOURLS/releases），解压后放到站点根目录，并将`config-sample.php`更名为`config.php`。</a></p>
<pre><code>mv user/config-sample.php user/config.php</code></pre><p><strong>2、配置MySQL数据库</strong><br>需要先新建一个<code>MySQL</code>数据库，并设置好账号、密码（略过），然后修改<code>user/config.php</code>配置文件，填写正确的<code>MySQL</code>信息，配置信息如下。</p>
<pre><code>#数据库用户名
define( &apos;YOURLS_DB_USER&apos;, &apos;yourls&apos; );

#数据库密码
define( &apos;YOURLS_DB_PASS&apos;, &apos;xxxxxxxx&apos; );

#数据库名
define( &apos;YOURLS_DB_NAME&apos;, &apos;yourls&apos; );

#数据库连接地址
define( &apos;YOURLS_DB_HOST&apos;, &apos;localhost&apos; );

#数据库表前缀，一般保持默认
define( &apos;YOURLS_DB_PREFIX&apos;, &apos;yourls_&apos; );</code></pre><p><strong>3、设置用户名密码</strong></p>
<pre><code>#修改配置文件
vi user/config.php
#设置用户名和密码，可设置多个用户
$yourls_user_passwords = array(
        &apos;username&apos; =&gt; &apos;password&apos;,
        // &apos;username2&apos; =&gt; &apos;password2&apos;,
        // You can have one or more &apos;login&apos;=&gt;&apos;password&apos; lines
        );</code></pre><p><strong>4、其它设置</strong></p>
<pre><code>#设置站点域名
define( &apos;YOURLS_SITE&apos;, &apos;http://ozh.in&apos; );
#GMT时间偏移
define( &apos;YOURLS_HOURS_OFFSET&apos;, &apos;-5&apos; );
#是否私有
define( &apos;YOURLS_PRIVATE&apos;, &apos;true&apos; );
#设置cookie，可访问https://api.yourls.org/services/cookiekey/1.0/生成
define( &apos;YOURLS_COOKIEKEY&apos;, &apos;qQ4KhL_pu|s@Zm7n#%:b^{A[vhm&apos; );
#mysql连接方式
define（&apos;YOURLS_DB_DRIVER&apos;，&apos;mysqli&apos;）;</code></pre><p><strong>5、设置伪静态</strong><br><code>YOURLS</code>默认已经内置<code>Apache .htaccess</code>规则，如果是<code>Apache</code>服务器且开启了伪静态支持一般不用在设置，如果您使用的<code>Nginx</code>，请添加下面的规则，并重载<code>Nginx</code>。</p>
<pre><code>location / {
    try_files $uri $uri/ /yourls-loader.php?$args;
}</code></pre><p><strong>6、设置中文</strong><br><code>YOURLS</code>默认是中文界面，不方便操作，看到有网友提供了汉化，访问yourls-zh_CN下载汉化包，并解压到<code>user/languages</code>目录，然后修改<code>user/config.php</code>。</p>
<pre><code>#语言包放到languages
[root@aliyun-hz languages]# ll
total 68
-rw-r--r-- 1 www www   210 Apr 23  2017 index.html
-rw-r--r-- 1 www www    51 Mar 24  2013 README.md
-rw-r--r-- 1 www www 22123 Mar 24  2013 zh_CN.mo
-rw-r--r-- 1 www www 32783 Mar 24  2013 zh_CN.po
#修改配置文件启用中文
vi user/config.php
#启用中文
define( &apos;YOURLS_LANG&apos;, &apos;zh_CN&apos; );</code></pre><p><strong>7、访问测试</strong><br>完成以上配置后访问<code>http://domain.com/admin</code>完成初安装，然后输入步骤<code>3</code>中设置的账号、密码就可以登录了。</p>
<p><strong>8、安装插件</strong><br>插件查看：<a href="https://github.com/YOURLS/awesome-yourls，请参照每个插件的安装方法进行安装。" target="_blank" rel="noopener">https://github.com/YOURLS/awesome-yourls，请参照每个插件的安装方法进行安装。</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>终于找到了幕后黑手</title>
    <url>/679/</url>
    <content><![CDATA[<p>mysql一直崩溃，搞了半天没解决问题，切换版本也没有，最后竟然是日志占满磁盘了，这睿智宝塔也不设置个限制</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>祝大家2019年元旦快乐，顺便送点DO $50优惠码</title>
    <url>/2328/</url>
    <content><![CDATA[<p><strong>说明：</strong>这个小博客建立快<code>2</code>年了，建立的时候是准备拿来当记事本的，把自己玩过的写个教程，等到下次再用的时候，直接复制粘贴就行了。然后时间长了后，就多了点访客，这时候自然是比较高兴的，于是水劲上身了，到处找文章研究发教程，就这样坚持了很长时间，直到现在。</p>
<p>虽然博主技术不好，但还是会尽量坚持水下去的，毕竟可以学点知识，顺便教下比博主更白的小白，对于评论的一些问题，博主知道的都会回一下，不知道的就抱歉了，自行搜索。</p>
<p>顺便说下广告的事，毕竟找博主挂广告的也有点，这里博主是不接广告的，就连谷歌广告也不会挂。基本上博客服务器就靠自己挂的几个<code>AFF</code>续命吧。</p>
<p>好了废话不多说了，最后祝大家<code>19</code>年元旦快乐，这里就送<code>19</code>个<code>DigitalOcean $50</code>优惠码，以后也会经常送的，而且频率会很高。</p>
<p>需要<code>Do</code>码的直接在这篇文章留言，顺便发个邮件到<code>moerats@live.com</code>邮箱，内容就是留言填的名称，到时候我会一个个回过去的。</p>
<pre><code>##送完了，过几天继续。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>终于暂时干掉了PHP-fpm和Wordpress内存溢出问题</title>
    <url>/696/</url>
    <content><![CDATA[<p>至今没有排查出问题 起码对比之前有所改善 之前手动f5就能刷死 现在还能简单扛住20并发 更高没试过</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>经历</title>
    <url>/499/</url>
    <content><![CDATA[<h1 id="第一次看她一眼就小鹿乱撞"><a href="#第一次看她一眼就小鹿乱撞" class="headerlink" title="第一次看她一眼就小鹿乱撞"></a>第一次看她一眼就小鹿乱撞</h1><h1 id="开始了吗？"><a href="#开始了吗？" class="headerlink" title="开始了吗？"></a>开始了吗？</h1><h1 id="撞死了吗？"><a href="#撞死了吗？" class="headerlink" title="撞死了吗？"></a>撞死了吗？</h1><h1 id="结束了吗？"><a href="#结束了吗？" class="headerlink" title="结束了吗？"></a>结束了吗？</h1><h1 id="一辈子吗？"><a href="#一辈子吗？" class="headerlink" title="一辈子吗？"></a>一辈子吗？</h1><h1 id="经历呢。"><a href="#经历呢。" class="headerlink" title="经历呢。"></a>经历呢。</h1>]]></content>
      <categories>
        <category>人生</category>
      </categories>
  </entry>
  <entry>
    <title>给h5ai开启二维码、搜索、选择功能</title>
    <url>/1818/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在越来越多的人使用<code>h5ai</code>了，毕竟精巧，美观等，之前介绍过<code>h5ai</code>安装方法，参考：一款不错的PHP目录列表程序：h5ai安装教程，其实有的人虽然用上了，可是却不知道里面还有很多功能都没使用上，这里就说下开启其中几种适用的功能方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>以下均在配置文件<code>/www.xx.com/_h5ai/private/conf/options.json</code>修改</p>
<p><strong>1、开启选择功能</strong></p>
<pre><code>&quot;select&quot;: {
        &quot;enabled&quot;: false,
        &quot;clickndrag&quot;: true,
        &quot;checkboxes&quot;: true
    },</code></pre><p>将<code>false</code>修改为<code>true</code>，即：</p>
<pre><code>&quot;select&quot;: {
        &quot;enabled&quot;: true,
        &quot;clickndrag&quot;: true,
        &quot;checkboxes&quot;: true
    },</code></pre><p>该功能可方便我们进行批量下载。</p>
<p><strong>2、开启搜索功能</strong></p>
<pre><code>&quot;search&quot;: {
        &quot;enabled&quot;: false,
        &quot;advanced&quot;: true,
        &quot;debounceTime&quot;: 300,
        &quot;ignorecase&quot;: true
    },</code></pre><p>将<code>false</code>修改为<code>true</code>，即：</p>
<pre><code>&quot;search&quot;: {
        &quot;enabled&quot;: true,
        &quot;advanced&quot;: true,
        &quot;debounceTime&quot;: 300,
        &quot;ignorecase&quot;: true
    },</code></pre><p>开启后我们可以更快的找到文件了。</p>
<p><strong>3、开启二维码功能</strong></p>
<pre><code>&quot;info&quot;: {
        &quot;enabled&quot;: false,
        &quot;show&quot;: false,
        &quot;qrcode&quot;: true,
        &quot;qrFill&quot;: &quot;#999&quot;,
        &quot;qrBack&quot;: &quot;#fff&quot;
    },</code></pre><p>将<code>false</code>修改为<code>true</code>，即：</p>
<pre><code>&quot;info&quot;: {
        &quot;enabled&quot;: true,
        &quot;show&quot;: true,
        &quot;qrcode&quot;: true,
        &quot;qrFill&quot;: &quot;#999&quot;,
        &quot;qrBack&quot;: &quot;#fff&quot;
    },</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>给博客网站添加鼠标点击水波动画效果</title>
    <url>/1804/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近挺喜欢给博客添加各种特效，之前整理过几个，参考：给Typecho、Emlog等博客网站添加鼠标点击文字特效，给Typecho博客网站评论框配置炫酷的打字效果，刚刚又找了个鼠标点击水波动画效果的<code>js</code>文件，这里说下使用方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>下载特效<code>JS</code>文件：ripple.js，将其放在网站目录某个地方，然后编辑主题文件<code>footer.php</code>：</p>
<pre><code>#在&lt;/body&gt;后面添加如下一句代码
&lt;script type=&quot;text/javascript&quot; src=&quot;(这个脚本的路径)&quot;&gt;&lt;/script&gt;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>给h5ai增加查看需要输入用户名和密码</title>
    <url>/1556/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般<code>h5ai</code>安装后都是不需要用户名和密码就可以直接查看目录的，这样很不好，所以我们需要手动添加些代码，使其需要输入用户名和密码才能查看。</p>
<p>使用<code>WinSCP</code>软件登录<code>vps</code>进入<code>h5ai</code>目录找到<code>_h5ai/public/index.php</code>并编辑</p>
<p>1、在头部<code>&lt;?php</code>的下一行，增加</p>
<pre><code>auth();</code></pre><p>2、在底部增加</p>
<pre><code>function auth ()
{
        $valid_passwords = array (&quot;账号&quot; =&gt; &quot;密码&quot;);
        $valid_users = array_keys($valid_passwords);

        $user = $_SERVER[&apos;PHP_AUTH_USER&apos;];
        $pass = $_SERVER[&apos;PHP_AUTH_PW&apos;];

        $validated = (in_array($user, $valid_users)) &amp;&amp; ($pass == $valid_passwords[$user]);

        if (!$validated) {
          header(&apos;WWW-Authenticate: Basic realm=&quot;My Realm&quot;&apos;);
          header(&apos;HTTP/1.0 401 Unauthorized&apos;);
          die (&quot;Not authorized&quot;);
        }
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>给Typecho、Emlog等博客网站添加鼠标点击文字特效</title>
    <url>/1789/</url>
    <content><![CDATA[<p><strong>说明：</strong>鼠标点击文字特效很多博客都有，相信也有很多人需要，这里就分享个方法，适合大部分博客，包括<code>Typecho</code>，<code>Emlog</code>等。有兴趣的可以试试。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/wenzi_dianji.gif" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>将代码放在主题的<code>footer.php</code>中的<code>&lt;/body&gt;</code>之前即可。</p>
<pre><code>&lt;script type=&quot;text/javascript&quot;&gt; 
/* 鼠标特效 */
var a_idx = 0; 
jQuery(document).ready(function($) { 
    $(&quot;body&quot;).click(function(e) { 
        var a = new Array(&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot; ,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;); 
        var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]); 
        a_idx = (a_idx + 1) % a.length; 
        var x = e.pageX, 
        y = e.pageY; 
        $i.css({ 
            &quot;z-index&quot;: 999999999999999999999999999999999999999999999999999999999999999999999, 
            &quot;top&quot;: y - 20, 
            &quot;left&quot;: x, 
            &quot;position&quot;: &quot;absolute&quot;, 
            &quot;font-weight&quot;: &quot;bold&quot;, 
            &quot;color&quot;: &quot;#ff6651&quot; 
        }); 
        $(&quot;body&quot;).append($i); 
        $i.animate({ 
            &quot;top&quot;: y - 180, 
            &quot;opacity&quot;: 0 
        }, 
        1500, 
        function() { 
            $i.remove(); 
        }); 
    }); 
}); 
&lt;/script&gt;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>给Typecho博客网站评论框配置炫酷的打字效果</title>
    <url>/1787/</url>
    <content><![CDATA[<p><strong>说明：</strong>今天逛友链博客的时候，发现其评论框打字特效挺好看的，于是就给自己也添加了这个特效，之后发现和之前分享过的给WordPress网站评论框配置炫酷的打字效果这篇文章，除了缺少震动其它特效一模一样，不过也不错了，这里分享下方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/pinglun_texiao.gif" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>下载特效<code>JS</code>文件：commentTyping.js，将其放在网站目录某个地方，然后编辑主题文件<code>footer.php</code>：</p>
<pre><code>#在&lt;/body&gt;后面添加如下一句代码
&lt;script type=&quot;text/javascript&quot; src=&quot;(这个脚本的路径)&quot;&gt;&lt;/script&gt;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>给博客网站添加Hitokoto - 一言经典语句功能</title>
    <url>/1761/</url>
    <content><![CDATA[<p><strong>说明：</strong>相信很多人都听说过一言，也有很多博主想给自己的博客网站添加这个功能，可是都不知道咋弄，这里说个很简单的方法，手动添加一言功能，还可以<code>diy</code>句子的内容。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>一言网(<code>Hitokoto.cn</code>)创立于<code>2016</code>年，隶属于萌创<code>Team</code>，目前网站主要提供一句话服务。</p>
<p>动漫也好、小说也好、网络也好，不论在哪里，我们总会看到有那么一两个句子能穿透你的心。我们把这些句子汇聚起来，形成一言网络，以传递更多的感动。如果可以，我们希望我们没有停止服务的那一天。</p>
<p>简单来说，一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。<br>或是感动，或是开心，有或是单纯的回忆。来到这里，留下你所喜欢的那一句句话，与大家分享，这就是一言存在的目的。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、部署接口</strong><br>在网站根目录新建<code>hitokoto</code>文件夹，然后在文件夹里新建<code>index.php</code>文件，并编辑，代码如下：</p>
<pre><code>&lt;?php
$path = dirname(__FILE__);
$file = file($path.&quot;/hitokoto.txt&quot;);
$arr  = mt_rand( 0, count( $file ) - 1 );
$content  = trim($file[$arr]);
if (isset($_GET[&apos;charset&apos;]) &amp;&amp; !empty($_GET[&apos;charset&apos;])) {
    $charset = $_GET[&apos;charset&apos;];
    if (strcasecmp($charset,&quot;gbk&quot;) == 0 ) {
        $content = mb_convert_encoding($content,&apos;gbk&apos;, &apos;utf-8&apos;);
    }
} else {
    $charset = &apos;utf-8&apos;;
}
header(&quot;Content-Type: text/html; charset=$charset&quot;);
if ($_GET[&apos;format&apos;] === &apos;js&apos;) {
    echo &quot;function hitokoto(){document.write(&apos;&quot; . $content .&quot;&apos;);}&quot;;
} else {
    echo $content;
}</code></pre><p>之后在文件夹内再新建并编辑<code>hitokoto.txt</code>文件，添加你喜欢的句子，也就是一言语句，记得一行一句话。</p>
<p>这时候用浏览器访问<code>http://yourdomain.com/hitokoto/</code>就可以看到输出内容了，接下来我们开始部署到博客上。</p>
<p><strong>2、部署到博客</strong><br>其实部署很简单，将下面两行代码添加到博客主题文件你想显示一言的位置即可：</p>
<pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;https://yourdomain.com/hitokoto/?format=js&amp;charset=utf-8&quot;&gt;&lt;/script&gt;
&lt;div id=&quot;hitokoto&quot;&gt;&lt;script&gt;hitokoto()&lt;/script&gt;&lt;/div&gt;</code></pre><p>部署完成之后，前台刷新应该就可以看到效果了，每次刷新都会随机展示一言经典句子。</p>
<h2 id="一言语句"><a href="#一言语句" class="headerlink" title="一言语句"></a>一言语句</h2><pre><code>有你在的日子才是我的日常。
夹在我女友与前女友与青梅竹马间的果然是修罗场！
既然如此，就再努力一次吧。别在这里愁眉不展，也不要再自欺欺人，重新来过！
比自己,比梦想更重要的东西永远都存在着...
嘛，那又怎么样呢？
自身不先改变的话，一切都不会改变。
比起有一百个朋友，不如有个比一百人还要重要的真心朋友。
我有在反省，但我不后悔。
要超越过去与悲伤，用坚强和笑容去开拓明天。
男人许下的诺言就一定要遵守。
没有回忆就去创造回忆，没有道路就去开辟道路。
我敬你是条汉子！
不相信自己的人，连努力的价值都没有。
微风摇曳着窗帘，夕阳斜射入教室，在那里鼓起勇气告白的少年。即使现在也能清晰地回想起她的声音「当朋友，不行吗？」
就算是沉落地面的太阳，只要夜晚过了一定会再度升起，不管有什么痛苦或难过的事，跟今天截然不同的明天也一定会到来。
我的腿让我停下，可是心却不允许我那么做。
生活就像超级女生，走到最后的都是纯爷们。
我要拼，装上假牙也要拼！
想要成为无论多么悲伤的时候，也能够漂亮微笑的人吧。
人们只是用好人来称呼对自己有用的人而以，不存在对所有人都有用的人。
烈焰中舞动的火花，将赐予邪恶异性交往以天罚。
无论乌云有多浓厚，星星也一定还在，只是暂时看不到了而已。
不相信人咬不到肚脐的，咬破肚脐去死如何？
人一生会遇到约万人，两个人相爱的概率是.。所以你不爱我，我不怪你。
不管看到什么样的过去，都请不要迷失自己，不管你变成什么样子，我都是你的同伴。
心，可是很重的。
我爱上的人，称我为怪叔叔。
慕君之心，至死方休。
虚伪的眼泪，会伤害别人，虚伪的笑容，会伤害自己。
若隐若现才是艺术！
生我何用？不能欢笑。灭我何用？不减狂骄。
就是因为你不好，才要留在你身边，给你幸福。
呐，我们好像是，被宇宙和地球拆散的恋人似的。
你会梦游，我会磨牙，我们晚上一起去吓人吧！
或许只需一滴露水，便能守护这绽放的花朵。
自己永远是孤单的，但你可以让其他人变得不孤单。
和哥哥的便当比起来夜空的薯片就像大便一样！只会给我大便的大便夜空是笨蛋～笨蛋～
我手中的魔法，是守护挚爱的力量，是坚定这个信念所必须的力量，我一定会拯救你的，无论在何时、何地。
要改变别人的心真是件很难办的事，不过改变自己要容易一点。
风筝的线你随时可以放开，只是别盼望我会回来。
Nothing is true, everything is permitted.
与你的生命等价的东西，这个世界上根本没有。
君子可寓意于物，但不可留意于物。
最好的感觉，是有人懂你的欲言又止。
看似美好的东西，往往藏着陷阱。
爱,其实很简单，困难的是去接受它。
喜欢大胸只是本能，喜欢贫乳才是审美。
二次元什么的我本来是不感冒的，直到我的膝盖中了一箭。
你才是⑨！你全家都是⑨！
努力是不会背叛自己的，虽然梦想有时会背叛自己。
面对就好，去经历就好。
我从小就害怕虫子。
做不到的话，不过就是一死 。但是，赢了就能活下去，要是不战斗就赢不了。
既然认准这条路，何必去打听要走多久。
研表究明，汉字的序顺并不定一能影阅响读，比如当你看完这句话后，才发这现里的字全是都乱的。
少年心意，一如明月松间的青石流水，那些年里看到了，却不懂。
明明只是活着，哀伤却无处不在⋯⋯
少罗嗦，你还不如虫子呢！
天空是连着的，如果我们也能各自发光的话，无论距离有多远，都能看到彼此努力的身影。
别人恋爱不成功，你连暗恋都不成功！
H什么的最讨厌了！
如果你都不知道自己想去哪里，那去哪里都是一样的。
越是困难，越要抬起头，地上可找不到任何希望！
人与人在偶然之中创造相遇与别离。
所以，他们的祭典还没结束。
既不回头，何必不忘；既然无缘，何必誓言；今日种种，似水无痕。
正因为听不见和看不到，所以风子才会做这样的事情。
你为了你的正义，我为了我的正义。
可是就算我们通一千次短信，我们各自的心，大概也只会相互靠近一厘米吧。
用我一生，换你十年天真无邪。
不忘初心，方得始终。
我的终点，与幸福同在。
什么都无法舍弃的人，什么都无法改变 。
错的不是我， 错的是世界。
有些人，一旦遇见，便一眼万年；有些心动，一旦开始，便覆水难收。
有光的地方必有影，有影的地方也必定有光，绝望的颜色越是浓重，一定会有光芒耀眼的希望。
已经无法回到过去了。也不知道将来会是什么模样。
我知道的，面码⋯⋯自己已经死掉这点事，还是知道的⋯⋯
苦到头未必是甜的，而甜到头一定是苦的 。
文能提笔控萝莉，武能床上定人妻。进可欺身压正太，退能提臀迎众基。
就算只有六十亿分之一的机会，我们还是会邂逅。
无法飞翔的翅膀也是有意义的，因为它是曾经翱翔于天空所留下的珍贵回忆。
不会停的雨的确存在，但是撑起伞来就行了，接下来抬起头前进，这样一来，偶尔会出现下着太阳雨的日子，经过阳光的反射闪闪发亮的雨滴，一定非常美丽。
人总是会变的，不要害怕改变哦。
即使从梦中醒来，还会有回忆留下。
想了解喜欢的人，可是，却不能理解。
只要有想见面的人，自己就不再是孤单一人。
一定是红线下得太乱，才不小心把我和你绑在一起了……却没系稳。
挡着在我们面前的是巨大庞然的人生，阻隔在我们中间的是广阔无际的时间，对于他们，我们无能为力⋯⋯
这是眼泪吗？原来眼泪是这么的温暖，我一直以为，哀伤的东西都是冰冷的。
时间并不存在，存在的只有此刻。
梦想是否无聊并不是别人来决定的，不管是什么样的梦想，自己拼命努力去追寻才是最重要的。
等待，不是为了你能回来，而是找个借口不离开。
世界这么大，人生这么长，总会有那么一个人，让你想要温柔的对待。
嗯，一个人也要加油，我是坚强的孩子。
我想让自己强大起来，因为至少我已经有幸和想要保护的人相遇了。
老是低着头，幸福可是会离你而去的喔。
我觉得，我这辈子最灿烂的笑容，大概都奉献给我电脑屏幕了。
如果还有来生 ，我无论如何都要来到你身边，我已经没有了其他想要追求的东西，因为没有比你更重要的了。
将愿望倾入不愿忘却的回忆中⋯⋯
胸不平何以平天下，乳不巨何以聚人心。
你最无暇的时光是哪段，你又把它奉献给了谁？
男人变态有什么错！
失去的东西虽然拿不回来，但是，忘记的事情是可以想起来的。
生生生生暗生始，死死死死冥死终。
我的小伙伴们都惊呆了！
刁蛮少女贵千金，比武招亲动芳心。盼能与君长相依，结伴江湖侠侣行。
控兄是我的个性的同时，也是勋章！
哭泣并不能改变任何事情。
既不回头，何必不忘；既然无缘，何须誓言；今日种种，似水无痕；明夕何夕，君已陌路。
欺骗世界，欺骗最初的你。
只有破碎的心才有伤人的棱角。
我只对现实世界绝望过，却未对自己绝望过！
从小好女色的男人的想像力比不上狗。
我并不羡慕别人的人生，这就是所谓幸福。
All for one, one for all.
神曲的存在并不是为了享受音乐，而是品味那段最珍贵的回忆。
有些事情本身我们无法控制，只好控制自己。
日子过的象流水一般。它静静的从我们身边缓缓流过，不带半分声响。那些我们当年执着的人，执着的事，执着之后，却变成一种负担。
不要把你所遭遇的苦难看得太大，更不要把你所拥有的幸福看得太少。
就是因为抱有不现实的理想，所以才总是做出如此极端的事情！
给我一个电话亭，我要拯救地球。
这个城市大得让人到处能一见钟情，却没法重逢。
一直注视着你，似近似远，总是触碰不到。
不要祈求生活公平，只需要适应它。
男人就应该保持冷静，沸腾的水只会被蒸发掉。
如果我会变成恶魔，那就随他吧。我会接受放逐，一切只为了保护她。
如果你执意追寻着我的幻影，总有一天会被真正的我打败。
魔装少女就是本少爷！
天空本是一种风景，可是遇见你之后，它变成了一种心情。
我是一个经常笑的人，可我不是经常开心的人。
只是相谈就会开心起来，沉浸在温柔的眼神当中，竭尽全力的思念，悄悄地奉献。
你愿意陪我走到地狱的底端吗？
重要的不是你做了多少事，而是你放了多少心思进去。
今后无论发生什么事也好，这个左手上的⋯⋯都是同伴的记号！
不要哀求，学会争取；若是如此，终有所获。
无论是丢下还是被丢下，都是一样痛苦的。
新闻联播的牛X之处在于就算你一直在换台，也能完整的看完一条新闻。
我们所过的每个平凡的日常，也许就是连续发生的奇迹。
喜欢上你，爱上你，真是太好了，谢谢。
共道人间惆怅事，不知今夕是何年。
没有动漫的世界，就是没有的光明的大地！
所谓的言语，只有当对方听进去了才开始有意义啊。
臣妾做不到啊~
因为无法再见面，所以要笑着说再见。
与其被自己的本性牵着走而痛苦，倒不如试着改变自己。
你永远是我唯爱旅行中名为秘密的起点站。
为毛我的眼里常含泪水，因为我老是中枪。
我们一路奋战，不是为了改变世界，而是为了不让世界改变我们。
如果你愿意的话，让我带您去吧，这座小镇，愿望实现的地方⋯⋯
美丽的不是这个世界，而是看世界的你的眼神。
我们走过风走过雨，就是没能走进彼此的内心。
以前高中时，羡慕大学考试只要及格就行；现在大学了，怀念高中考试及不及格都行⋯⋯
人生最糟糕的事，一个是饿肚子，一个是孤独。
从一开始，我就不那么喜欢你。
旅行唯有出发前最愉快，狗儿唯有叫声最吓人，女人唯有背影最美丽。
人的记忆本来就是暧昧的，不值得信任。
既然忘不掉，就把它留在心中，让时间去冲淡它。
就算风吹散了冰雪，想念也会留存下来。
生活中若没有朋友，就像生活中没有阳光一样。
上帝说要有光，于是萝莉就掀起了裙子。
什么都无所谓只想在你身边，什么都无所谓只想和你说话，什么都无所谓所以请你不要逃避。
我很好奇！
忘记本身就是一件不可能的事。
能够轻易就放弃的梦想，有存在的价值么？
彼此相互推卸不幸是没有结果的。
如果分手的恋人还能做朋友，要不从没爱过，要不还在爱着。
宅，是一种生活状态；死宅，是一种人生境界⋯⋯
烦恼这东西，是只有活着的人，才有的特权哦。
( ⊙ o ⊙ )啊，你在看这条一言
半夜还在Coding的人也是蛮拼的吧...
如果你是我该多好，那你就会知道我有多难过，多喜欢你。
风停之后再扬帆，船绝不会前行。
当你想做一件事，却无能为力的时候，是最痛苦的。
请不要忘记，那给你带来感动的，名为二次元的理想乡。
如果聚集负的感情，世界就会陷入负的洪流；反之聚集正的感情，世界就会循着正道而行。
自己的感觉，不说出来，别人也不会懂，如果不懂，就应该互相沟通。
故乡的云。上古的玉。随手的诗。十九岁的你。
黑暗不能驱除黑暗，只有光明可以做到；仇恨不能驱除仇恨，只有爱可以做到。
我不是萝莉控，是妹控啊！
相信十年后的八月，我们还会相遇。
（根据相关法律法规，相关内容已被屏蔽。）
看到的感受到的永远都不会消失永远都不会忘记，与各种各样的相遇一同永存。
沒有永远下不停的雨。
一天吐槽太多次的话，梗也是会用完的。
只是，想要做些什么而已。 觉得不做些什么就会死掉而已。
想要试着去相互接近，但最后还是无法敞开心扉，结果就是擦肩而过⋯⋯
今天你最后遇见的那个人有在微笑吗？
弱小和无知不是生存的障碍，傲慢才是。
别人说的记在脑袋里，而自己的，则放在心里。
煩い！煩い！煩い！
我们开始一起攀登，这长长的，长长的坡道。
不要，我现在暂时留在他身边，直到那转瞬即逝的日子到来。
“你没车没房没卡,拿什么和我谈恋爱？”“......我有高达......”
十步做一死，千里不留行，事了拂衣去，深藏功与名~
我一直以为人是慢慢变老的，其实不是，人是一瞬间变老的。
每个凉宫都会遇到属于她的John Smith。
仍是那么熟悉的味道，只是用墓土和骨灰作成的身体，已经不再有体温。
比起悲伤来说，无法分享快乐这件事，要更加的寂寞吧。
我能够允许你逃避过去，不过至少从现在或者明天开始都不要再逃避。
一天最大任务莫过于，好好睡觉，好好醒来。
我的眼睛，就是为了寻找你而存在的。
美好的人眼裡映出的世界也是美好的。
没有期盼就不会出现奇迹。
倘若只是为了驱赶心中的寂寞，找谁都可以的。
有被杀的觉悟，才有资格开枪。
虽有遗憾，并无后悔。
越是锐利的小刀切完东西后就越容易变钝。
桑丘，让他们管我叫疯子吧，我还疯得不够，所以得不到他们的赞许。
我想要握紧的并不是匕首或是什么，只不过是他的掌心而已。
如果你死了，那什么也改变不了，可如果你还活着，那就能改变一些事情。
透过孩子的眼神，让我相信这个世界上还有着纯真。
我和我的小伙伴们都惊呆了！
除了爱你，我什么都可以。
观察铅笔和橡皮，哪个是攻哪个是受，请写出它们晚上的对话。
我年轻，我傲娇。
下一次重逢，将是何年何月？天空必将见证。
我是要成为海贼王的男人！
我愿意给你自己所有的快乐，你愿意分担我一半的难过吗？
有一种无奈叫做，你明明是只候鸟，却喜欢上只能给你冬天的人。
廉价的自尊、粗劣的傲气，无论哪个后生小辈都很重视这些东西。
你的心可以属于耶稣，但你的屁股永远属于陆战队！
雨，何时停？
那天放学的时候人很多。楼道很挤，你的手不小心碰到了我的手背，这是我漫长而又短暂的初恋。
心之所愿，无所不成。
XX什么的，最讨厌了！
工程穷三代，考古毁一生。
你知道雪为什么是白色的吗？因为她忘记了本来的颜色。
最终让你难以忘怀的，并不是某个谁，而是当初为之倾心，不顾一切的自己。
用番茄Lu过…比香蕉好←那是你没领悟到香蕉的正确用法
我们的夏天仍未结束。
愿我等之誓言，超越姓名与身份而永存。
无法逃避的是自我，而无法挽回的是过去。
败者死于绝望，胜者死于渴望。
情深不寿，强极则辱，谦谦君子，温润如玉。
我的一生，无怨无悔！
那双紧握不放的手⋯⋯抓住的是希望⋯⋯亦或是絕望⋯⋯
知道活着的痛苦处的人就能对人温柔，这和软弱是不一样的。
生活就像愤怒的小鸟，失败后总有几只猪在笑。
忘记一个人，并非不再想起，而是偶尔想起，心中却不再有波澜。
我没有梦想，但是我能保护！
树上的鸟儿成双对，对面的冤家你想掐死谁。
能够原谅女人的，才是男人。
我会继续等着你，就算是一万二千年。
Yesterday is a history, tomorrow is a mystery, but today is a gift.
年华无多时，恋爱吧男子！
贫乳是社会地位的象征。是具有稀有价值的！
今天的早餐是：早苗的面包、秋子的果酱和观铃的果汁~
承君此诺，必守一生。
历史虽然会一再重演，但人类却无法回到过去。
即使如此，我也有我想保护的世界！
患了中二病，等于有了一种信仰。
呐，知道么，樱花飘落的速度，是每秒五厘米哦~
如果我拥有如同小狗一样的尾巴的话，肯定会高兴得遮掩不住地摇来摇去吧。
男人从小的时候就是无药可救的。
懂得认输是非常重要的，不尝到失败的不甘，也就不会明白跌倒后怎么爬起来，更不可能再向前迈进。
树大必有枯枝，人多必有白痴。
请叫我女王大人~
不能哭！唱歌吧！继续唱下去吧！不是为了赞美神，是为了向神挑战而唱！
前天是小兔子，昨天是小鹿，今天是你。
只要微笑就可以了。
我觉得你很幸福，因为你可以选择爱我或不爱我，而我只能选择爱你或更爱你。
我们都在命运之湖上荡舟划桨，波浪起伏着而我们无法逃脱孤航。但是假使我们迷失了方向，波浪将指引我们穿越另一天的曙光。
繁花落尽，明月映着谁老去……
我会跟她结婚，并不是因为她是计算机，而是因为她就是她。同样的，我会喜欢你，也是因为你就是你。
旅行的意义在于找到自己，而非浏览他人。
扎古不论怎么化妆都不可能变成高达的。
只要一息尚存，就还有希望。
你制定的计划是.txt还是.exe?
重要的是无论我们选择哪条路，都要担负起选择的责任。
如果不能忠于自己的心，胜负又有什么价值呢？
一个人吃饭，太寂寞了。
我在未来等你。
爱迪生说过：“要把BOSS打倒就要准备足够的等级。”
大地母亲在忽悠着你。
我一直都在你身边 ，一直都在。
智商是硬伤。
问君能有几多愁？恰似一部新番没看头。
应该可以了吧，我已经很努力了，应该可以抵达终点了⋯⋯
谎言不一定是谎言，被发现的谎言，才算是谎言。
就算鼻血流尽，也不能放弃妄想。
世界并不完美，却因此而美丽。
无论在哪里遇到你，我都会喜欢上你。
没有谁能够永远坚强下去的，每个人都会有疲累的无法站起的时候。世间的故事，就是为了这一刻而存在的哦。
那种亲密的人突然陌生，希望完全落空的感觉，就好像喝口凉水居然被烫到。
一直保持微笑是有诀窍的，那就是，在想哭的时候放声大哭。
恋ではなく、爱でもなく、もっとずっと 深く重い。
邂逅本身，就是一种奇迹啊。
过去的事情可以不忘记，但一定要放下。
要相信同伴，拯救同伴。
如果能够重生的话，我想，我想成为水母。想成为只是在海里自由地摇摇摆摆的水母。
我相信十年后的八月，我们还能再相遇。
想你想到手都断了…
当朋友是不需要什么资格的。
像平常的你一样引发奇迹吧-
我的内心就和厕纸一样单纯！
如果我是那雨滴的话，那么，我能够像把不曾交汇的天空与大地连接起来那样，把某人的心串联起来吗？
只要能努力，就应当去努力；只要还能前进，就要向前走去。
梦总是有会醒来的时候，不会醒的梦总有一天会变成悲伤。
胜而不灭，霸而不辱，这才是真正的征服。
私だって今日こそ... 遠野くんに告白するんだ。
活着就是为了改变世界。
我不会接受我不要的未来，哪怕是命中注定。
我的船上没有手下，只有伙伴。
生尽欢，死无憾。
岁的阿升你好，我是岁的美加子，我现在也还是非常、非常的喜欢阿升哦！
勇气，就是即便害怕也会去做。
人经历风浪是会变得更强，可是船不同，日积月累的只有伤痛。
君生我未生，我生君已老。 君恨我生迟，我恨君生早。
代表月亮消灭你！
我们的心就像那天空一样，永不分离。
时间可以治愈？如果时间也病了怎么办？
真可悲，你什么都不知道，在这个世界上没有什么是不重要的！
不管怎么样，未来都是可以改变的。
有些事情我不看透，不是我笨，只是我太善良。
成熟不是人的心变老，是泪在打转还能微笑。
我除了投三分，就什么都没有了⋯⋯
最近困扰我的是小小的分别，总会带来一丝寂寞。短暂的相遇和分别那一分一秒的时间都让我想要无比珍惜。
小孩子看了根本把持不住！
对不起，风太大，我没有听清楚⋯⋯
不敢正视你的眼睛，是怕我每一个眼神都在告白。
在回忆里留下微笑是为了不让你哭泣...
能哭的地方只有厕所和爸爸的怀里。
拿着刀并且可以让人们变得幸福的只有料理人。
我只是做了我能做的事，没有时间想将来。
为错误停驻是件可悲的事。
你不会死的，因为我会保护你.
阳光灼热，数不尽夏日繁华；蝉鸣幽幽，道不完苦辣酸甜。
我们在年少时并不知道，有些乐章一旦开始，唱的就是曲终人散。
哼！悔改吧，你们这群死宅，人家可是身价四千万的大小姐。
“像你这样的白痴是怎么活过来的？”“因为我很自信。
要是因为烦恼很痛苦，就选择了轻松的选项，将来一定会后悔。
隐约雷鸣，阴霾天空，即使天无雨，我亦留此地。
即使无法掌握未来，也请不要忘了明天。
我如朝露降人间，和风樱花随春谢。四十九年一朝梦，一期荣华一杯酒。
我在人生的道路上迷失了。
就算一次也好，我想在这颗星球上尽情奔跑。
因为我喜欢你，喜欢得想吃掉你啊！
只要有你，我便无所不能。
隐约雷鸣，阴霾天空，但盼风雨来，能留你在此。
取少量学生放入试管，加入过量作业，生成学霸溶液和不溶于水的学渣。过滤，在学渣中加入过量浓试卷，学渣迅速溶解且产生气泡，学霸则无明显现象。
其实，恋爱这种东西，当你看上人家的那一刹那就已经失败了。
一年、两年、三年⋯⋯十年、百年、千年⋯⋯即使用永恒的时间来等待，我也想再见你一面。
这是傻瓜的血脉使然啊。
在我年轻的时候，不知道什么是恐惧，可偏偏是你的温柔，让我害怕。
羁绊是那不可切断的深切联系。即使分离，心与心也紧紧的连在一起。
一句话，不足以讲述一个故事，却可以让我们回味那些个动人的瞬间。
你需要找出面对明天的力量。
与众不同的生活方式很累人呢，因为找不到借口。
安心地睡吧，就算你将遗忘一切，我也会永远记得。我将为你而生、为你而死。
和我定下契约，成为魔法少女吧！
是金子一定会发光，是银子一定会花光，是裙子一定会走光，是节操一定要丢光。
你的那双手呢，是为了紧紧抓住什么而存在的哦。
人は一生、中二病なんだ。
低头不是认输，是要看清自己的路；昂头不是骄傲，是要看清自己的天空。
一个人走在路上，形单影只/回首望去，大家都留在远方/回过头来继续前行，这便是所谓坚强
你还是这么冷漠啊。不过，仅此而已的话，我是不会泄气的。
龙儿是我的，谁都不准碰！
错误可不是为了别人才改的过来的，要为了自己才能改正。
只要你还记得我，我就会一直在你的身边。
既然我无法停留，那么就飞到我再也不能飞的那一天吧。
愿风指引着你的道路，愿你的刀刃永远锋利。
流浪去吧，总会在世界的一角找到愿意懂你的人。
就算你已经不在，就算你身边的人已经不再是我，我也会坚强的活下去，为了你。
我对普通的人类没有兴趣，你们只要是有外星人、未来人、异世界人、超能力者, 就尽管来找我吧！以上！
堕入黑暗裏的可怜影子啊，停止伤害他人的行为吧，犯下罪行的灵魂⋯⋯想死一次么？
花开花落，再灿烂的星光也会消失。
要么忙着生存要么赶着去死，人总要做点什么。
不能逃避，不能逃避，不能逃避，不能逃避⋯⋯
记性太好，有时候是一种负担。容易忘记往事的人，是幸福的。
你有学校也有朋友，但对我来说，我的生活中就只有你。
世界上没有偶然，有的只是必然。
我裤子都脱了你就给我看这个！！！
我们也许再也不会见面了吧，因此我绝对不会忘了你的声音，你的眼眸，与你一起看到过的所有的景色，以及，与你一起度过的那个耀眼的夏天。
用你的笑容去改变这个世界，别让这个世界改变了你的笑容。
我的愿望是—幸福地活着，幸福地死去。
我不会让任何人看到我软弱的一面。
人能够在心里郁积那么多的事情，而他们又会忘记那么多的事情，真是不可思议⋯⋯
有时语言就像把利刃，使用不当，就会成为凶器。
一定没有问题的！
我不渴望什么在别的城市迎来的春天，只要和你在一起的春天就好，只要和你在一起就好⋯⋯
你再怎么称赞我，我也不会高兴的，你这个混蛋~
我到底要以怎么样的速度生活才能与你再次相遇？
如果没什么好事发生的话，就把没有发生坏事的每一天当作好事吧。
你还欠我一句对不起，可我不会再说没关系了。
窃人者，自失其宝。
就连一直都无容身之地的我⋯⋯也不是可以任意舍弃的生命。
我决定以人类的一个方法来感激你，我打算以身相许！
在你最冷的时候，有人不顾自己寒冷抱着你，这就是幸福。
正义不会因为无人歌颂而变成非议。
魔非魔，道非道，善恶在人心。欲非欲，情非情，姻缘由天定。
也许我们都没有长大，只是世界变小了。
记得当时年纪小，你爱卖萌我爱笑。
缘起，在人群中，我看见你。缘灭，我看见你，在人群中。
(」・ω・)」うー！(／・ω・)／にゃー！
女人的武器不是眼泪，而是微笑。
此时此刻一切都是静寂的，只剩下我与你的世界，这就是爱？
选择道路的时候怎么犹豫都没有关系，但决定之后就一定要坚持到底！
面对无知的嘲笑，我只能为他们默哀。
空山新雨后，兵长一米六。
明天，不是你想要就能有的。
每当对这个世界感到绝望的时候，买一包泡面，然后告诉自己：我们的泡面是有酱包的。
万书皆下品，唯有萌最高！
如果你不能击败你的敌人，那么就加入他们。
当世界背叛你的那天到来时，我会为你背叛全世界。
真相只有一个！
用我的左手将你那个不可理喻的幻想粉碎掉！
我问你：你是我的Master吗？
人不能一个人活下去，不需要任何人的孤独和需要人但得不到的孤独是不一样的。
悲伤教会了我喜悦。
一起去看星星吧。
在走廊上跌倒会流鼻血，在人生中跌倒会流眼泪。
天下哪有真情在？只要够萌咱都爱！
就算是自私⋯⋯我也希望那些人能够永远都有笑容⋯⋯
比希望更炙热，比绝望更深邃，这就是爱啊。
去死两次！
我是最强的！
没有什么过不去，只是再也回不去。
找不到路，就自己走一条出来。
Hello World!
梦+想=梦想，这个等式是不成立的。
无论你在哪里，就算我看不见你，我也会一直注视着你。
你是我的，那是曾经。我是你的，直到现在。
成功率不到%，那剩下的用勇气来补足吧！
我发过誓，再也不装作没察觉，再也不逃避。
握不住的沙，不如扬了它。
人生在世何其痛苦，所以咖啡至少该甜一点。
恋爱什么的，无非就是大脑的电波式活动造成的bug的一种~
但是，这一次你将不再孤独。
算了，和你说话感觉就像是大姨妈来了。
我们不应该根据背负的罪孽来选择道路，而应在选择的道路上背负自己的罪孽。
求你，保护那孩子，消除灾厄，抹除祸事。哪怕⋯⋯那是我自己⋯⋯
那是，未满秒的邂逅。
要让一群人团结起来，需要的不是英明的领导，而是共同的敌人。
求求你，不要对我这么温柔！
地球只有一个，而欧派有两个。
(눈_눈)
你在颓废的时候别人都在努力哦~
梦想是什么，梦想是现实的延续；现实是什么，现实是梦想的终结。
如果我不会飞，那我就只是一只普通的猪。
只要你在，我便无所不能。
少女祈祷中⋯⋯
再强的敌人在最后一集的主角面前也是渣渣。
我爱的人也爱着我，对我来说这简直是个奇迹。
这一路上有你的陪伴，我不再孤单。
姑娘们啊，要在该认真的地方全力认真，当你不想认真的时候不妨笑笑。
越是试着忘记，越是记得深刻。
过分的神圣，往往比恶魔更加恶质。
一支穿云箭，千军万马来相见。
离别并不痛苦，因为我们都微笑着。
来，让叔叔检查一下身体。
不记得了也好，忘却也是一种幸福。
这世上所有的不利状况，都是当事者的能力不足导致的。
别低头，王冠会掉。别流泪，贱人会笑。
能力越大，责任就越大，你避不了的。
我喜欢你们！超喜欢的！大家和我交往吧！绝对会让你们幸福的！
以盐水作配菜，糖水做主食，就有种奢侈的感觉呢。
给，一辈子朋友劵。
真正的危机不是机器人像人一样思考，而是人像机器一样思考。
我们擦身而过，是为了相识或者遗忘。
燃烧吧，我的小宇宙！
不习惯的事越来越多，但我仍在前进⋯⋯就算步伐很小，我也在一步一步的前进。
孙大圣，快收了神通吧！
会长和往常一样挺着小小的胸部一副自以为了不起的样子套用某本书的内容说道⋯⋯
世界上没有一个人能代替另一个人。
就算是对我抱有敌意的人，也是被某个人深爱着而降生在这个世界上的。
红茶的温度和女人心在任何时代都是难以琢磨呢。
你若盛开，清风自来。
所谓的人类，可是连短短的十分钟也等不起的。
我们都很擅长口是心非，但又希望对方能有所察觉。
リア充死ね！
乔巴，一个男人，有时候是不能逃避战斗的，尤其是当伙伴的梦想被人嘲笑的时候。
时间是伟大的作家，总会写下完美的结局。
我们虽然距离很远很远，非常非常的远，但是思念或许真的可以穿越时间和距离。
受尽苦难而不厌，此乃阿修罗之道。
江湖可能因为少了谁而失色，却不会因为少了谁后就不再是江湖。
在茫茫人海中，同样是高中生，同乘点分的电车，看着同一片海⋯⋯那个瞬间不就是如奇迹般的邂逅吗。
到底该怎么做，你才会重新喜欢我呢？
做出一副温柔的样子来折磨人不是更令人难受吗？
救救我啊奥特曼，哪怕你只能撑三分钟⋯⋯
无知而又纯洁的岁月是任何人都曾拥有的，世界上没有一成不变的事物，所以只要以其他方式找到自己的快乐就行了。
那么，问题来了…
念念不忘，必有回响。
不疯不魔不成活
Write the Code. Change the World.
Across the Great Wall, we can reach every corner in the world.
好，支持，威武，有希望了！（）#(滑稽)
一个人，连尊严是什么都不知道，那将是可悲至极。
no time no long.
人之所以活得累，是因为放不下架子，撕不开面子，解不开情节。
真心等你的人，他总会真心等下去，不愿意等你的人，总是一转身就牵了别人的手。
人的一生要疯狂一次，无论是为一个人，一段情，一段旅途，或一个梦想。
如果说我懂的道理比别人多一点，那是因为我犯的错误比别人多一点。
人生最精彩的不是实现梦想的瞬间，而是坚持梦想的过程。
就算不快乐也不要皱眉，因为你永远不知道谁会爱上你的笑容。
//佛祖保佑，永无BUG
如果你愿意一层一层地剥开我的心，你会发现，里面有二尖瓣、三尖瓣、隔缘肉柱、乳头肌，但就是没有你。
发生了什么事情，好像很激烈的样子=_=||
天行健，君子以自强不息。
无论发生什么，都请不要后悔与我的相遇⋯⋯
Time waits for no one.
Connecting the world...
没有光明是不幸的吗？需要光明才是真正的不幸。
绝望是虚假的，但希望亦是如此。
悲哀的不是不能复仇，而是不能在仇恨中活出自己。
我们只得，一边失去，一边生存。
人的生存只有俩种：“美丽的活着”，亦或“为美丽的人活着”。
如果我闭上双眼看到的是黑暗，那么当我睁开眼睛的时候是否会是一片光明？
使人成熟的是经历，而不是岁月。
每个人出生的时候都是原创，可悲的是很多人渐渐都成了盗版。
让未来过去，让过去过去。
我只能目送着幸福的末班车远去---不是我没赶上，而是压根儿都挤不上去。
我希望躺在向日葵上，即使沮丧，也能朝着阳光。
记忆就像是握在手中的水，不管你握紧还是摊开都会慢慢的消失。
智者把放下当前进，愚者把放下当绝望。
一个人幸运的前提，是他有能力改变自己。
人生如天气，可预料，但往往出乎意料。
再长的路，一步步也能走完；再短的路，不迈开双脚也无法到达。
你要相信，没有到不了的明天。
你可以不去选择，但永远不能放弃选择。
不炫耀，因为不自卑。
走你正在走的路，不要怕没人与你分享。
你在乎谁，就给了谁一把刀；你让谁靠近你，就等于打开了自己的铠甲。
你扔下的石头，绊倒的往往是你自己。
强者并非赢家,赢家方为强者
I promise you，if I am still alive，I will wait for you，here。
如果我身边最重要的人始终要离开我，我宁愿一辈子从来都没有拥有过。
如果不真正放下过去，就不会有明天。
不悔梦归处，只恨太匆匆。
我们总是在开始时毫无所谓，在结束时痛彻心非。
繁华只是散场的开始。
好好生活，狠狠做梦。活得真诚，笑的简单。
没什么是不可以的！
一般来说，时间会把悲伤冲淡，可是在人的生命中，会有那么一两个特殊的存在，他们的逝去，你永远也不会习惯。
等来年，秋风起。
心要滚动一下，才能变成石子。
宽厚不是容忍，宽厚是把你放在我的心里，我也像你这样活一遍，我就知道了什么是因果。
心怀定见，六辔在手。
真相常流失于涕泪交加中。
川流不息，无始无终，这不也是人生。
自由就是脑子里没有障碍。
一息尚存,不容稍懈。
所谓不朽，就是在后人心中引起共鸣。
他心中有愤怒么？有的，但他却从愤怒出发，向远处走去了。
未来不迎，当下不杂，既往不恋。
小时侯，幸福是很简单的事；长大了，简单是很幸福的事！
一个积极的小想法，可以让很多美好的事情发生。
心之向往，身亦能至。
Yesterday you said tomorrow.
人类并不是那么会改变，可是时间却一点一点的流逝。
走路太骚必摔跤，得瑟过劲会闪腰。
不约，不约，叔叔我们不约~
放弃也是需要勇气的。
时间带着明显的恶意，缓缓在我的头顶流逝。
不要因为结束而哭泣，微笑吧，为你的曾经拥有。
你走！
hhhhhhhhhhhhh
比任何人都要了解自己，比任何人都要关爱自己。喜欢上这样的人，并没有什么奇怪的呢。
没有事是绝对的。但这句话不已经是绝对的了吗？
这是最好的时代，也是最坏的时代。
像我这种牛人，想找个人佩服一下的时候我就去照镜子。
niconiconi~
你在南方的艳阳里大雪纷飞，我在北方的寒夜里四季如春
人能够在心里郁积那么多的事情，而他们又会忘记那么多的事情，真是不可思议??
命运的红线一旦断了，就再也不会接上。
你一直这个样子，活着不累吗？你这样做到底有什么意义呢？
不要以为抹消过去，重新来过，即可发生什么改变。
所谓的「改变自己，世界就会随之改变」这种事，是不可能的。
让你觉得我看起来像笨蛋，真是抱歉！
我们虽然没有在写给对方的信中发泄对这些日常生活的不满与牢骚，但是知道在这个世界之中有另外一个人能够理解自己，使我们都变得坚强起来。
如果不了解自己是一个会许下什么愿望的人，想要得到什么，想要成为什么样子，了解自己是什么样的人。那么很有可能会迷失在人生的路上。
有一天遇上过去的自己，我一定一巴掌扇上去。
与其最后变卦，最初就别冠冕堂皇。
我想用我的全部，换取一条接近你的路。
不过真是太可惜了，好女人一定都已经名花有主了。
心，一旦离开了，就再不会回来。
我一如既往，怎么会变呢
我想成为一个温柔的人，因为曾被温柔的人那样对待，深深了解那种被温柔相待的感觉。
摇曳在心头的身影，是时间洪流中最浓烈的一抹思念。
没有什么东西是永恒的，如果非要说有的话，大概就是“失去”本身吧。
咱这对耳朵从不曾漏听任何灾祸或谎言，从危机中解救过无数同伴。说到约伊兹的贤狼，除了咱没有第二人。
他不知道说什么好，大脑自动拒绝思考。
这和游戏还是现实无关，只是因为你是我的搭档。
每个人都有属于自己的一片森林。
因此没有弱点、没有必须守护的东西、和别人没有联系的人才是最强的。
吾铸刀剑几星霜，自比干将莫邪心，天鸟遮日滂沱雨，雨过晴天犹可慰。
光顾着追天上的月亮,错过了地上的风景,也很可惜嘛！
被质疑的时候，才是证明自己的好机会啊。
总有一天一定会……有站在你身边与你展望着同样的未来的伙伴出现。
有的人虽然没有自己的梦想，无法自己奔跑，但是努力追随有梦想的人，对他们来说也就是他们自己的梦想。
创造未来的不是命运。
大人们谁都很辛苦，所以才可以喝酒。
我下定了决心。
活着本来没有什么意义 但是只要活着 就可以找到 有趣的事情。就像你发现了花 我又发现了你一样
武者之死，在侠，在义，不在己身。
行动被评价和人格被评价完全是两码事。
即使熬过了紧张的现在明天也无从得知，但是这些人知道，他们说，被现实击垮和放弃是两回事。
如果羽衣狐当了魑魅魍魉之王，老子超越魑魅魍魉之王就是了 。
当我们在事后回顾历史的时候，往往会发现，在历史的滚滚洪流之下，即使再英明的领袖也难免有头脑发昏的时候。
世界对弱者的无情，比任何盾牌都要坚固
若不知晓相同的痛楚，就无法真正理解他人，而且就算能够理解，也不可能相互体谅，这就是不变的道理
亏本王还是对同是半神的你抱有期待，没想到竟愚蠢至此。
蜘蛛的网早已于四方张开，越挣扎就越无法从这束缚中逃脱，不论是怎样的猎物。
在火烧云与习习清风的包围下，我感觉到了夏天的气息。
人类真矛盾，平时杀牛杀猪脸色都不会变，现在轮到自己了反而那么紧张。
我情愿在你的记忆里淡忘，也不愿你为我受伤。我情愿在你的记忆里淡忘，也不愿你为我受伤。
光只有救赎，是无法领导的。
就算知道方法，也绝对不能去改变过去，绝不能将存在的可能性转变为既定的现实，未来是没有人能预测的，是无法重来的，正因如此人们才能接受各种痛苦，不幸与飞来横祸，迈步前进。
出生是死亡的开始,死是现实的延续,生是梦的结束,喜欢我么?微笑是虚伪的,真实是痛苦的
被留到最后的，可不一定是希望啊。
夕阳在西边的天空渐渐散开。那下面巨大的高楼大厦鳞次栉比，不仅如此，它们周边还伫立着大大小小的建筑物。这就是怀有过野心和希望的人建造的街道。
那年，未来遥远得没有形状，我们单纯得没有烦恼。
所有的突然之前，都伴随着漫长的伏笔。
做任何事都是有风险的。
无论是现实还是虚拟，都没有多大的区别，只要知道自己活在那里。你是活着的。
这个世界再怎么广阔，也掩饰不了它狭窄的一面
因为他和自己重叠了，被明明不带感情却假意笑脸相迎，和我自己。
为什么呢，逃了那么久，好不容易找到个非守护不可的人，就是你。
到家了，一定要叫醒我，我怕我醒不过来。
在茫茫人海中相遇相知相守无论谁都不会一帆风顺，只有一颗舍得付出懂得感恩的心才能拥有一生的爱和幸福。
我是要毁掉地球没错，但是在那之前我也是你们的老师，认真地对待你们比终结地球要来得重要得多
你喜欢的人已经心有所属不是正常的吗，因为你喜欢他，所以你的眼中就只有她。人啊，总是盲目地去爱。
太天真了，人类只有从他人那里夺取自己没有的东西，才能生存下去。
即使无法实现愿望，在某个地方也会有其他小小的幸福，等待著我们吧。
或许就是这样为了生存，而一点点忘记了最初的本意。
当经历了背叛亲离，生死一线，失而复得，才明白不再逃避.
感情久了，就不是爱了，而是依赖。然后当失去时，那并不是痛，而是不舍。
一直一来都久久的注视着 若即若离 仿佛咫尺天涯 无论如何 总是伸手不及 
怎么可能有令人痛苦，悲伤的正义呢。
解开它,试试的话也许能行,但是,不尝试的话就绝对办不到。
有时候不打上一架，对方是不会明白，自己有多么的认真的！
如果将梦想作为信仰,不放弃地追求下去,一定会梦想成真的。
寂寞的人总是记住生命中出现的每一个人，正如我总是意犹未尽地想起你！
忍者的才能不在于所掌握忍术的多少，而在于永不放弃的毅力.笔直向前绝不违背自己的誓言，还有不管何时都不放弃.
八云这个词，本来是用来形容重重叠云的。
逻辑的尽头,不是理性与秩序的理想国,而是我用生命奉献的爱情。
讨厌悲伤，讨厌痛苦，讨厌麻烦。
我们所看到的星光，它们奔跑了几百万甚至几千万年才来到地球。可是发出光的星，或许早已凋亡了。
我动身踏上旅程，是为了与你道别。
就像都市里大多数人一样，一辈子也不会认识，却一直生活在一起......
自己不信任别人的话，又怎么能让别人来相信自己。
既不是情侣又不是朋友，免费帮你有违常理吧？
比起简单得到的答案，他们更相信辛苦查到的结果。
骄傲的小孩子，总是需要敲打敲打的。而挫折，是成长最好的方式。
老师很烦人，听课都想睡觉。
远的不是距离，而是次元啊。
不过算了，你爱怎样就怎样吧。照你自己的意思去做，然后使劲后悔吧。
对你的思念之情与日俱增，明白的说吧，我被你迷得神魂颠倒，璎姬，成为我的妻子吧
我不再孤独，也不再痛苦，无论哪里都能一个人走下去。
人的一生就是如此，只能一声叹息，可生命结束得也实在太仓促，没有留下一点生的余音。
我们这群孤独的人拥有不同于凡人的思维，不时会出现超乎常人的想法。
个人喜好之类，有时候只有自己才知道。
尽管在今后，我有时会变得懦弱、没用、原地踏步不前、因心爱的女孩的一句话而兴奋得忘乎所以，但我们的生活会充满诗意。
呐，士道，在狂妄的笑容背后，我也会感觉很寂寞的呢。
说得好！认识你这么久终于听到你说了一句智商上线的话。
就算背负着堕落天使的污秽，我也要在胸中怀抱着花与月，像朝着圣地前行的巡礼者那般继续走下去。
友情，恋爱，神秘，只因为有当初的约定才可以坚持到底……
我们每天的生活，都在重复着一张张地图。
最近，开始喜欢用喜欢这个词了，这是什么现象呢。
过去虽然重要…无法从头来过的，并不是只有过去！任何时刻，包括现在，每分每秒都是无法取代、不能从头来过的。而我们，就活在这样的时间里！
被隐藏的所谓真实 不管在何种场合下 大多都是残酷的
旧的伤口又受伤了，比记忆中更疼。但贴上，就可以假装只发生了一次。
回望当初，那时我一定也一直在训练自己迈步，如果有一天，能够走得更稳更远了，就去见她吧。
怀着梦想不放弃是实现梦想的第一步。
末日动荡，人性泯灭，这真是一个令人绝望的世界。
请留意兔子的巢穴，不要让它绊住您如疾风般飞驰的脚步。
哪里有人喜欢孤独，只不过不乱交朋友罢了，那样只能落得失望。
你简直是对我一往情深的跟踪狂。
和我做一切疯狂大胆不计后果的事情吧，趁我们都年轻，死去还能活，趁我们都勇敢，趁我还爱你。
本王也不知道如何安慰你的哀伤，原谅我吧。
毫无保护的地面，将会被风化，总有一天会被人遗忘的吧。
每当有什么东西出现的时候。就会有一些东西就此失去。这样一来。一来一去就等于抵消了。
天空之所以叫天空，是因为天很空……
我不认为依赖一个人有什么不对，在你的身边有许许多多的人，人与人之间总是紧密相连的，只要你伸出手我们就在你的身边。当你发现一个人很寂寞的时候，人就会变得温柔起来。
因为你心怀期待，在对方的言行中混入了自己的愿望。
他们都是内心破了个洞，重要的东西正在从破洞逐渐流失。
大家即将各自展开旅程，挥别这个没落的城镇。
Follow your heart，翻译成中文就一个字:怂。
正因为没有意义才有其存在的意义。
知识不会给予人幸福。
我不是经常说吗 ，在不被对手察觉到的情况下看清未来的走势而设下的才叫布局。
其实就在眼前，明明就在伸手可及的地方，但那距离却总让人觉得像是永远。
生死门虽繁星灿烂，但活着的人才是最重要。
从那天开始，我就一直在撒谎，活着是谎言，名字是谎言，经历也是谎言，都是谎言。我早已厌倦了这个号不改变的世界，但这谎言让人绝望到想放弃都不行了，但我得到了力量。
若是没有未来，那就把未来抢到手。
梦话还是要留到梦里说。
与其如此，不如永远像孩子一样。
若我们再次遇见，已各自生活在各个领域的大家又能否像以往般的要好？
活着的人才是最重要的。
我可是发自内心地爱着这一名为人生的游戏。所以，无论何时,我也要以玩家的身份继续下去。
我们都曾经历那样纯粹、易碎的青春，只是时光的磨砺已让我们懂得逃避与忍气吞声然后慢慢遗忘自己曾经的青春。
你只要活着，就会发现许多好事。
迷失的人迷失了，相逢的人会再相逢。
这世上的所有事情都是有始有终的，好的行为有好的结果，等待坏的行为，只能是坏的结果，人们称其为因果。
我也知道会受到大家奇怪的目光，但我并不在意。因为这是我自己决定要做的事。
掌中之物，未必在掌握之中。
人们往往会否定无法理解，无法掌握的事，不合乎自己所期盼世界的事物，就会被认定为不好的，实事求是的说不知道，明明是那么简单的事。
把逞强转换成认真，把无敌转换成美丽，把精神转换成勇气。
你是我的...太阳，火热的太阳，不放弃在明天继续升起，这是我唯一的希望。
虽然迷茫与痛苦过，但也曾天真的笑过。
赌上我的生命为你所拥有。
你不用刻意的去改变，因为无论你变成什么样子，我都会一直喜欢你，也会一直陪在你的身边的。
无论失去什么，都不要失去好心情。拥有一颗安闲自在的心，让心境清净，洁白，安静。
不是别人，是我，承认了你的价值。
用善意的心情去理解别人的话，会让世界单纯美好容易。世界如此之大，我却能幸运地遇见一些人。
要享受有趣的事情，首先就是不能违背自己的感情。
看得见的世界和看不见的世界，让我痛苦的事物总是由看不见的世界而来。
不做做看怎么知道，并不需要什么理由，只是因为想做所以去做。自己真正想做的事情不就是这样开始的吗。
活着不是为了别人而是为了自己，这是我所拥有的骄傲。
人的梦想，是不会终结的。
紧贴地面，单是偶尔跳一下都要倾尽全力的青蛙，看见轻松飞翔在天际的鸟会是什么感受呢？我的意思是飞翔在天际的鸟没有罪过，但是鸟展翅飞翔的身姿也会划伤他人
痛苦的回忆会成为明天的粮食，使我们变得坚强。
可能是我的性格过于消极吧，只要是那些忧伤而凄美的，我都喜欢。
和你在同一个时间出现在相同的地方，不是奇迹吧，不是偶然吧。我可以认为这是“命运”吧。
从一开始你就输了，因为你所说过的每一句真心话都是谎言。
因果循环的纺车，辗转织出的红线。
能与她在冬天里相会真是太好了。
不管发生什么绝对不要碰我哦，说好了哦。
温柔正确的人总是难以生存，因为这世界既不温柔，也不正确。
道歉无用！我可不是绿茶！没有再来一瓶的机会！
夜晚的意识不会变，从血脉觉醒的那刻起。 所有妖怪都在我身后，去百鬼夜行吧。
当你想要的只是你真正需要的，你就是成功的。
即便再悲伤也要勇敢活下去，这是人类的诅咒，但一定，也是一种祝福。
现在想哭就尽情的哭吧，以后有很多时候是你想哭也哭不出来的了。
因为生活很俗，每个人都需要一个虚拟的去处，每个人都想要假装和世界脱离。
要拼就要趁现在。
她希望自己永远都是女人。
人生就像一场无成果的游戏，幸福的分量是固定的，假设世上存在的幸福和不幸的总量是固定的，那这就是“有人获得幸福，势必会有人遭遇不幸”的游戏，任谁都觉得自己是世上最不幸的人，认为自己的这般不幸，肯定会有人获得了巨大的幸福。
暗弱，面对未知却不怀有敬畏之心却用好奇心来对待。
你走之后，我身边又有了很多人，只是没再对谁那么上心。
考试的话，努力学习就能通过；金钱的话，努力赚，就会有。
我曾经空空如也的手心，现在突然有了一个小小宝藏，那么快就装满了很多美好的回忆。
一个人要坚强的活下去，是很难的吧。想战胜心里的不安，也是很辛苦的吧。
人与人到底是什么样的关系，这是谁都很难回答的事情
爱情只不过是脑电波活动所产生的BUG而已
跳过过场动画，不配做游戏玩家！
世界这个东西，不是只对你一个人温柔。
只是沉浸在快乐中，期望着这样的日子可以永远持续下去
如果全世界都否定你的话，那么我就要超过他们更加的肯定你!
我的怒火不止如此，就看你是否承受的住！
付出胜利者的努力，收获胜利者的骄傲！
没有谁比谁更不幸福，只有谁比谁更不知道幸福。
就算发现过去都做错了也无法重头再来。
这里死了太多的人，他们的痛苦使我成长。无知愚昧的孩童也只有知道痛苦后才能长大成人。
对于我来说，工作的价值就在于执行过程中它给我带来的乐趣。
越是虚弱的人，越会用虚张声势来强调自己的强大。
何况所谓后悔，那不过是笨蛋打发时间用的说辞。
我只做应做之事，无须向任何人解释。
即使再平凡无奇的人生，在走过的道路上都会留下自己的痕迹。
小时候，天空分明触手可及，于是喜欢上雨，因它带来天空的气味.经常在下雨的早晨，不再换乘地铁，转身走出车站
重要的是拿出结果的能力，与种族、手段都没有关系。结果优先于一切！
己所欲者，杀而夺之，亦同天赐
西岛，他是唯一对我说过那句话的人，我不能放下他不管！
哲朗想要恳求她，但同时也感到这种心情无法传达的空虚。
与输赢没关系，这是愿望。
一开始我只要看著他就满足了，可是不知不觉间我便开始追逐著他
人生的某些障碍，你是逃不掉的。
除去不可能的,不管多么不合情理,但那就是真相……
世间凡人皆庸于懒，天下才子皆毁于傲。
存在于我世界中的物体，气味，声音，味道和触感，那就是全部，那样就足够了。
I do not know go where,but I have been on the road.
和我一起组队成为漫画家吧。
一切都一成不变。
以为是永远的事，从某种程度上来说也是现实，总有一天会结束的呢。
“大家”的意思，不是像团子一样的一团，而是像米饭那样，一粒一粒稀稀拉拉的，却总是凑在一起。
无法心想事成，是人之常情。
记忆不是一整团的，而是一个一个的抽屉，抽掉的便忘掉了。
只要自己没有想去了解对方，就不会知道别人的真正姿态。
在实现梦想之前，我要不断挑战。
明知道这次危险，还要继续，你为什么总是要这样自作主张啊！
人心是件奇妙的东西，大部分的时候，总是愉快而又平静的生活着。
如果只有一种表情的话，那就笑吧。
万物皆是生灵，又哪里有注定的贵贱善恶之分呢？
就算现在正看着你的时候，也好想要你继续那些温柔的话语，但愿让我们两的关系长久的继续下去。
无论什么人都应该飞向天空，不管什么人，都有一对看不见的翅膀
人的心声是绝对不能无视的。
其实美丽的故事都是没有结局的，只因为它没有结局所以才会美丽。
从来没有想过这个背影我会用一辈子去眺望
虽然至今为止的道路绝非一片坦途，但想到正因为活着才有机会感受到痛楚，我就成功克服了种种困难。
苹果是禁果。以前亚当和夏娃吃过后，就被逐出了伊甸园。所以它是“明辨是非的知识果实”。
你从以前开始就只会扯那些，嫉妒心又强，功利心又重，还满嘴的讥讽挖苦。但是，你的忠诚心值得尊敬，虽然我非常讨厌你，但是你不该有这种下场。
除了网球我什么也没有，网球就是我的全部。
如果你自己不行动的话，那么可能性就是零了。
如果你记得从前曾跪在那人面前，这一回，你要把脚搁到他的头上去。 
如果我知道你在骗我，那我宁愿骗自己你没有。
人哪，为了消磨时间，硬是鼓唇摇舌，笑那些并不可笑、乐那些并不可乐的事，此外便一无所长。
爱，不是寻找一个完美的人，而是学会用完美的眼光，欣赏那个并不完美的人。
有三样东西无论如何都无法容忍。命令我的家伙，反抗我的家伙，还有辜负我姐姐的笨蛋！
努力不一定能实现梦想，但是曾经努力过的事实却足以安慰自己。
我认为你很幸福，因为你可以选择爱或不爱我。而我只能选择爱或更爱你。
草菅人命的杀戮……永无止境的憎恨…不可治愈的痛苦……这就是……战争…
错过，不是错了，而是过了
今后你也会喜欢各种各样的人，正因为活着才能这样。
一无所知的世界，走下去，才有惊喜。
在珍惜着某个人时，有时候会很难过，有时候会感到寂寞，但是，有时候也会觉得非常快乐。
多年后，再回想年少时的迷茫和执着，或许原因都不记得了。
这不是自大，是自信
用善意的心情去理解别人的话,会让世界单纯美好容易.世界如此之大,我却能幸运地遇见一些人。
许多时候，让我们放不下的，其实并不是对方，而是那些逝去的共同回忆。
这里不向高处伸出手，什么时候，才能够得到啊！
有些人，才遇见一下子，就好像认识了很久似的，什么事都想和他说。
正气和狂气，理性和知性，自信和确信，在悲剧性的不合理世界，故事开始了。
有多少人是为了不让别人看出心事，装出疯疯癫癫，嘻嘻哈哈。
畏惧死亡比死亡更可怕。
没有比看不见人的恶意更恐怖的了。
我可以接受失败，但绝对不能接受未奋斗过的自己。
抚养小孩这种事一开始谁都会不知所措。
有思念你的人在的地方,就是你的归处。
假如我们拥有的东西只能给我们造成烦恼，那么我们拥有它的意义就值得怀疑。
就像罐装饮料自动售货机，你投入钱它就会为你解渴，可是你不往里面头钱它就什么也不会提供给你靠钱是买不了人的心灵的。
在瞬间之下，明白所有真相，只要开始，就不会停止……
有时我沉默，不是不快乐，只是想把心净空。
相遇了真的是太好了。
轮回的是故人，不变的是初心！
笑是对身边的事物感到一瞬间的幸福而表现出来的东西。
最爱的是什么，要等失去了以后才知道。
因为有了黑暗才焕然;黑暗，因为有了光明才神秘。
不是强者必胜，而是胜者必强，他们比我们强，仅此而已。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>给WordPress的新评论添加微信提醒</title>
    <url>/1525/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>用Wordpress建站的朋友都知道文章有评论回复是可以加上邮件提醒的，用php或smtp的方式都可以。但是能不能别人给你留言了也有微信推送提醒呢，答案是可以的。当然这里有个局限性就是仅仅提醒博主自己，需要准备的就是一个Github账号和一个微信号。<br>用到的服务就是Server酱。Server酱是什么？</p>
<pre><code>「Server酱」，英文名「ServerChan」，是一款「程序员」和「服务器」之间的通信软件。
 说人话？就是从服务器推报警和日志到手机的工具。
 开通并使用上它，只需要一分钟：
 登入：用GitHub账号登入网站，就能获得一个SCKEY（在「发送消息」页面）
 绑定：点击「微信推送」，扫码关注同时即可完成绑定
 发消息：往 http://sc.ftqq.com/SCKEY.send 发GET请求，就可以在微信里收到消息啦</code></pre><p>正如 Server酱的介绍所言，先通过 GitHub 账号登录，获取 SCKEY，然后用你自己的 SCKEY 替换下面代码中的相应字段。</p>
<pre><code>//评论微信推送
function sc_send($comment_id)
{
$text = &apos;博客上有一条新的评论&apos;;
$comment = get_comment($comment_id);
$desp = $comment-&gt;comment_content;
$key = &apos;你自己的SCKEY&apos;;
$postdata = http_build_query(
array(
&apos;text&apos; =&gt; $text,
&apos;desp&apos; =&gt; $desp
)
);

$opts = array(&apos;http&apos; =&gt;
array(
&apos;method&apos; =&gt; &apos;POST&apos;,
&apos;header&apos; =&gt; &apos;Content-type: application/x-www-form-urlencoded&apos;,
&apos;content&apos; =&gt; $postdata
)
);
$context = stream_context_create($opts);
return $result = file_get_contents(&apos;http://sc.ftqq.com/&apos;.$key.&apos;.send&apos;, false, $context);
}
add_action(&apos;comment_post&apos;, &apos;sc_send&apos;, 19, 2);</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>给WordPress、Emlog等博客网站添加下雪特效，附带Typecho下雪插件</title>
    <url>/1897/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>又到了白色相簿的季节，给博客页面加上雪花效果是再好不过的了。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/snow_xuehua.gif" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul>
<li>让页面开始下雪吧</li>
<li>较低的<code>CPU</code>消耗，移动端效果良好</li>
<li>原生<code>JavaScript</code>实现，不依赖其他类库</li>
<li>丰富的自定义项，可自定义多种选项</li>
</ul>
<h2 id="Typecho插件"><a href="#Typecho插件" class="headerlink" title="Typecho插件"></a>Typecho插件</h2><p><strong>Github地址：</strong><a href="https://github.com/journey-ad/Snow-Typecho-Plugin/" target="_blank" rel="noopener">https://github.com/journey-ad/Snow-Typecho-Plugin/</a></p>
<p>如果你用的是<code>Typecho</code>，那么只需在Github下载插件并启用即可，<code>Wordpress</code>、<code>Emlog</code>等博客教程请接着往下看！</p>
<h2 id="通用教程"><a href="#通用教程" class="headerlink" title="通用教程"></a>通用教程</h2><p><strong>1、创建画布</strong><br>在方便的位置加入以下内容</p>
<pre><code>&lt;canvas id=&quot;Snow&quot;&gt;&lt;/canvas&gt;</code></pre><p><strong>2、引入JS</strong><br>重要的数值已在注释中给出</p>
<pre><code>(function() {
    var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame ||
    function(callback) {
        window.setTimeout(callback, 1000 / 60);
    };
    window.requestAnimationFrame = requestAnimationFrame;
})();

(function() {
    var flakes = [],
        canvas = document.getElementById(&quot;Snow&quot;), //画布ID，与上一步创建的画布对应
        ctx = canvas.getContext(&quot;2d&quot;),
        flakeCount = 200,  //雪花数量，数值越大雪花数量越多
        mX = -100,
        mY = -100;

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    function snow() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        for (var i = 0; i &lt; flakeCount; i++) {
            var flake = flakes[i],
                x = mX,
                y = mY,
                minDist = 150,  //雪花距离鼠标指针的最小值，小于这个距离的雪花将受到鼠标的排斥
                x2 = flake.x,
                y2 = flake.y;

            var dist = Math.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y)),
                dx = x2 - x,
                dy = y2 - y;

            if (dist &lt; minDist) {
                var force = minDist / (dist * dist),
                    xcomp = (x - x2) / dist,
                    ycomp = (y - y2) / dist,
                    deltaV = force / 2;

                flake.velX -= deltaV * xcomp;
                flake.velY -= deltaV * ycomp;

            } else {
                flake.velX *= .98;
                if (flake.velY &lt;= flake.speed) {
                    flake.velY = flake.speed
                }
                flake.velX += Math.cos(flake.step += .05) * flake.stepSize;
            }

            ctx.fillStyle = &quot;rgba(255,255,255,&quot; + flake.opacity + &quot;)&quot;;  //雪花颜色
            flake.y += flake.velY;
            flake.x += flake.velX;

            if (flake.y &gt;= canvas.height || flake.y &lt;= 0) {
                reset(flake);
            }

            if (flake.x &gt;= canvas.width || flake.x &lt;= 0) {
                reset(flake);
            }

            ctx.beginPath();
            ctx.arc(flake.x, flake.y, flake.size, 0, Math.PI * 2);
            ctx.fill();
        }
        requestAnimationFrame(snow);
    };

    function reset(flake) {
        flake.x = Math.floor(Math.random() * canvas.width);
        flake.y = 0;
        flake.size = (Math.random() * 3) + 2;  //加号后面的值，雪花大小，为基准值，数值越大雪花越大
        flake.speed = (Math.random() * 1) + 0.5;  //加号后面的值，雪花速度，为基准值，数值越大雪花速度越快
        flake.velY = flake.speed;
        flake.velX = 0;
        flake.opacity = (Math.random() * 0.5) + 0.3;  //加号后面的值，为基准值，范围0~1
    }

    function init() {
        for (var i = 0; i &lt; flakeCount; i++) {
            var x = Math.floor(Math.random() * canvas.width),
                y = Math.floor(Math.random() * canvas.height),
                size = (Math.random() * 3) + 2,  //加号后面的值，雪花大小，为基准值，数值越大雪花越大
                speed = (Math.random() * 1) + 0.5,  //加号后面的值，雪花速度，为基准值，数值越大雪花速度越快
                opacity = (Math.random() * 0.5) + 0.3;  //加号后面的值，为基准值，范围0~1

            flakes.push({
                speed: speed,
                velY: speed,
                velX: 0,
                x: x,
                y: y,
                size: size,
                stepSize: (Math.random()) / 30 * 1,  //乘号后面的值，雪花横移幅度，为基准值，数值越大雪花横移幅度越大，0为竖直下落
                step: 0,
                angle: 180,
                opacity: opacity
            });
        }

        snow();
    };

    document.addEventListener(&quot;mousemove&quot;, function(e) {
        mX = e.clientX,
        mY = e.clientY
    });
    window.addEventListener(&quot;resize&quot;, function() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
    });
    init();
})();</code></pre><p><strong>3、添加样式Style</strong><br>背景颜色可根据自身需要改变</p>
<pre><code>#Snow{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 99999;
    background: rgba(125,137,95,0.1);
    pointer-events: none;
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>给WordPress博客网站添加“历史上的今天”功能</title>
    <url>/1769/</url>
    <content><![CDATA[<p><strong>说明：</strong>前几天发了个无需插件给博客网站添加一言功能的方法，参考：给博客网站添加Hitokoto - 一言经典语句功能，现在再发个不需要插件给<code>WordPress</code>网站添加“历史上的今天”功能的方法。这样可以很好清楚的知道，历史的同一天发过什么文章。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><pre><code>function wp_history_post_base($post_year, $post_month, $post_day){
    global $wpdb;
    $limit = 30;
    $order = &quot;latest&quot;;
    if($order == &quot;latest&quot;){ $order = &quot;DESC&quot;;} else { $order = &apos;&apos;;}
    $sql = &quot;select ID, year(post_date_gmt) as h_year, post_title, comment_count FROM 
    $wpdb-&gt;posts WHERE post_password = &apos;&apos; AND post_type = &apos;post&apos; AND post_status = &apos;publish&apos;
    AND year(post_date_gmt)!=&apos;$post_year&apos; AND month(post_date_gmt)=&apos;$post_month&apos; AND day(post_date_gmt)=&apos;$post_day&apos;
    order by post_date_gmt $order limit $limit&quot;;
    $histtory_post = $wpdb-&gt;get_results($sql);
    return $histtory_post;
}

function wp_history_post_single(){
    $wp_history_post_content_list = &apos;&lt;p&gt;%YEAR%年：&lt;a href=&quot;%LINK%&quot; title=&quot;%TITLE%&quot; rel=&quot;external nofollow&quot;&gt;%TITLE%（%COMMENTS_NUM%条评论）&lt;/a&gt;&lt;/p&gt;&apos;;
    $wp_history_post_content_title = &apos;&lt;h3&gt;历史上的今天&lt;/h3&gt;&apos;;
    $histtory_post = wp_history_post_base(get_the_time(&apos;Y&apos;), get_the_time(&apos;m&apos;), get_the_time(&apos;j&apos;));
    if($histtory_post){
        foreach( $histtory_post as $post ){
            $h_year = $post-&gt;h_year;
            $h_post_title = $post-&gt;post_title;
            $h_permalink = get_permalink( $post-&gt;ID );
            $h_comments = $post-&gt;comment_count;
            $h_post .= $wp_history_post_content_list;
            $h_post = str_replace(&quot;%YEAR%&quot;, $h_year, $h_post);
            $h_post = str_replace(&quot;%LINK%&quot;, $h_permalink, $h_post);
            $h_post = str_replace(&quot;%TITLE%&quot;, $h_post_title, $h_post);
            $h_post = str_replace(&quot;%COMMENTS_NUM%&quot;, $h_comments, $h_post);
        }
    }
    if($h_post){
        $result = $wp_history_post_content_title.$h_post;
    }
    return $result;
    wp_reset_query();
}

function wp_history_post_content($content){
    global $wpdb;
    if(is_single()){
        $content .= wp_history_post_single();
    }
    return $content;
}
add_action(&apos;the_content&apos;, &apos;wp_history_post_content&apos;);</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>给WordPress网站评论框配置炫酷的打字效果</title>
    <url>/1706/</url>
    <content><![CDATA[<p><strong>说明：</strong>这个效果很炫酷，演示网站：点击进入，觉得不错的可以试试。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><code>Github</code>项目：<a href="https://github.com/disjukr/activate-power-mode。" target="_blank" rel="noopener">https://github.com/disjukr/activate-power-mode。</a></p>
<p>本效果需要一个<code>activate-power-mode.js</code>文件，在<code>dist</code>目录，下载下来以后，上传到网站部分文件夹，比如<code>usr/js</code>。</p>
<p>接下来找到主题包的<code>comment</code>文件，在文件顶部<code>&lt;?php</code>的上面新增如下配置，链接请更换为自己的。</p>
<pre><code>&lt;script src=&quot;https://www.southcat.net/usr/js/activate-power-mode.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
    POWERMODE.colorful = true; /* make power mode colorful*/
    POWERMODE.shake = false; /* turn off shake*/
    document.body.addEventListener(&apos;input&apos;, POWERMODE);
&lt;/script&gt;

&lt;?php</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>网站被腾讯QQ/电脑管家/百度/搜狗/360等软件提示危险网站的解决方法</title>
    <url>/1680/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候网站因为一些因素，会在<code>QQ</code>聊天框出现红色危险感叹号，还会被百度，电脑管家，<code>360</code>，搜狗等安全软件和浏览器劫持，这是对我们影响很大的，不过我们可以去安全联盟免费申请恢复安全，这里说下方法。</p>
<p><strong>申请网站：</strong><a href="https://appeal.anquan.org/" target="_blank" rel="noopener">https://appeal.anquan.org/</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>自制Windows10纯净版系统64位，无广告，无插件，运行流畅</title>
    <url>/1992/</url>
    <content><![CDATA[<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>集成<code>OFFICE2016</code>，默认不安装，系统部署后可自行一键安装，如不需要，删除<code>C</code>盘下<code>GreenProgram</code>文件夹内<code>Office</code>即可。</li>
<li>基于原版<code>Windows10</code>企业版<code>LTSB2016</code>封装，非网上流传的母盘制作。</li>
<li>自动<code>kms</code>激活，并添加入计划任务，永久激活，长期使用无忧。</li>
<li>无应用商店，无小娜。操作更加接近于<code>win7</code>。补丁打到了<code>2017</code>年<code>11</code>月底。</li>
<li>只做关闭不常用且占系统资源的服务，并不删除功能。所有关闭的功能可以手动再开启。</li>
<li>默认安装全套<code>vc</code>运行库，<code>dx</code>，软件游戏运行无忧。</li>
<li>针对机械硬盘进行优化，无需上固态即可系统流畅运行。</li>
<li>集成百分浏览器（绿色版），火绒安全软件，迅雷极速版（绿色版），<code>PotPlayer</code>（绿色版），所有软件都是博主自用的优秀软件。</li>
<li>集成驱动精灵单文件版。</li>
<li>多余的我也不想说了。不要以体积论英雄，自己安装以后使用流畅才是真的。</li>
</ul>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>【2018年03月04日】</p>
<ul>
<li>更新系统内集成软件为最新版。</li>
<li>更新<code>WIN10</code>系统补丁至<code>2018</code>年<code>2</code>月底。</li>
<li>修复迅雷极速版无法边下边播。</li>
<li>删除系统部署环节的<code>KMS</code>激活和<code>OFFICE</code>安装，用户开机后可自行一键安装。</li>
<li>集成<code>55R</code>玩具，添加多张二次元壁纸。</li>
<li>更多功能自己挖掘。</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><pre><code>#WIN10安装工具合集
链接:https://pan.baidu.com/s/1LFjNlPFdVV6verTWlOSZTA 提取码:4p3t</code></pre><p>下载后请用<code>hash</code>核实文件信息，如果不符合请重新下载。</p>
<pre><code>文件: win10.gho
大小: 4269930336 字节
修改时间: 2018年3月4日, 5:48:39
MD5: EF0281381CD21749469B7FC685D0D649
SHA1: 1124F154F38760BAC33902CCFAFAA0B6B702B175
CRC32: 22647CF4

文件: win10.wim
大小: 3761981073 字节
修改时间: 2018年3月4日, 4:29:34
MD5: E4485DE2DB5112B8CEFD671A6BDF91DE
SHA1: A4A557EFAA1E0A6D91177095BD870B35B1AB0513
CRC32: 8FE7129A</code></pre><h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><ul>
<li>由于这次并没有集成万能驱动（<code>win10</code>自带的驱动已经能满足正常的日常生活需求），对于显卡驱动推荐<code>amd</code>/<code>nvida</code>官网下载，其他驱动使用桌面的驱动精灵安装。驱动精灵为单文件版，安装完成删除桌面文件即可。</li>
<li>无线网卡建议事先下载网卡驱动后再还原安装。</li>
<li><code>WIM</code>也为系统镜像文件，配合同目录下的<code>PE</code>安装器在<code>PE</code>环境下打开还原。</li>
<li>安装视频教程：<a href="https://www.bilibili.com/video/av12601535/。" target="_blank" rel="noopener">https://www.bilibili.com/video/av12601535/。</a></li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>联通扫号工具：熊猫扫号安卓版 v7.7/PC端 v5.5，已破解/永久使用</title>
    <url>/1918/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近联通互联网套餐一个接一个推出，资费也都很给力，相信大家都喜欢有个好号码，对于想手动刷新找好号的话是不存在的，这时候我们就需要个工具了，这里分享个比较火的扫号工具，熊猫扫号破解版安卓版 <code>v7.7</code>及<code>PC</code>端 <code>v5.5</code>。基本存在的套餐都可以扫。而且不用更新可以永久使用。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><strong>1、安卓端</strong><br><img src="https://www.southcat.net/usr/picture/xmsh_an.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、PC端</strong><br><img src="https://www.southcat.net/usr/picture/xmsh_pc.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安卓版-v7-7"><a href="#安卓版-v7-7" class="headerlink" title="安卓版 v7.7"></a>安卓版 v7.7</h2><ul>
<li>去除多余系统权限。</li>
<li>去除版本校验，支持永久使用无需更新。</li>
<li>去除需要连接原作者服务器的相关功能，使用本地网络扫描。</li>
<li>去除免费版只能选择一个城市的限制。</li>
<li>精简部分代码。</li>
</ul>
<p><strong>本地下载：</strong>熊猫扫号_v7.7_安卓破解版</p>
<h2 id="PC端-v5-5"><a href="#PC端-v5-5" class="headerlink" title="PC端 v5.5"></a>PC端 v5.5</h2><ul>
<li>精简部分无用代码、图片，缩小<code>exe</code>文件大小。</li>
<li>去除版本校验、有效期校验，支持永久使用无需更新。</li>
<li>去除界面部分无用按钮，去除所有<code>QQ</code>等信息。</li>
<li>新增了小米无限卡（<code>1</code>元和<code>3</code>元）套餐的扫号支持。</li>
</ul>
<p><strong>本地下载：</strong>熊猫扫号_v5.50_PC破解版</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>萌音云笔记：一个专注技术文档在线创作、阅读、分享和托管的在线云笔记</title>
    <url>/2275/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主之前分享过一个在线影视应用<code>萌音影视</code>→点击查看，现在该作者又开发了一个在线云笔记<code>萌音云笔记</code>，一个基于优雅的<code>Laravel</code>和超难用的<code>MDUI</code>制作的在线云笔记、专注技术文档在线创作、阅读、分享和托管。功能还是不错的，由于官方安装文档写的很大概，这里博主就提前把坑踩完，把教程写详细点，有兴趣的可以搭建一个玩玩。</p>
<p><strong>演示站：</strong><a href="https://note.52ecy.cn/" target="_blank" rel="noopener">https://note.52ecy.cn/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/moenote(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/moenote(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/moenote(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h2><ul>
<li>云存储：云端笔记，多端同步，随时查看随时备份，重要资料还可加密保存。</li>
<li>多用户：你可以将萌音云笔记作为私有笔记使用，也可作为公有笔记平台使用。</li>
<li>离线创作：支持断网写笔记，没有网络一样创作。</li>
<li>在线预览：支持图片、视频、音频、<code>Office</code>文档在线预览；文本文件、<code>Markdown</code>文件在线编辑。</li>
<li>笔记分享：用户可以创建私有或公有分享链接，快速分享笔记给好友。</li>
<li>多终端支持：<code>PC</code>/<code>iPhone</code>/<code>Android</code>/<code>web</code>/<code>iPad</code>/<code>Mac</code>/<code>Wap</code>等无惧断网/断电困扰，任何情况下都能轻松查阅。</li>
<li>响应式布局：全站响应式布局，移动端也能拥有良好的使用体验。</li>
<li>图片上传：拥有云笔记图床，全球cdn加速，不限外链，不限流量。</li>
<li>易于部署：使用<code>PHP</code>+<code>MySQL</code>架构，简单<code>5</code>分钟即可成功部署您的专属云笔记。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/178146582/note" target="_blank" rel="noopener">https://github.com/178146582/note</a></p>
<p><strong>环境需求：</strong><code>LNMP/AMP</code>、<code>PHP 5.6+</code>、<code>OpenSSL</code>、<code>PDO</code>、<code>Mbstring</code>、<code>Tokenizer</code>、<code>XML</code>、<code>fileinfo</code>、<code>Composer</code></p>
<p><strong>1、安装LNMP</strong><br>首先进入到<code>OneinStack</code>安装页面→传送门，选择<code>PHP</code>、<code>Nginx</code>、<code>Mysql</code>，然后复制安装命令到<code>SSH</code>客户端运行。</p>
<pre><code>#如果不知道怎么选择的，可以直接运行该命令，记得修改命令后面的moerats，即数据库密码
#该命令只安装了nginx、php 7.1、mysql 5.5、iptables
wget http://mirrors.linuxeye.com/oneinstack-full.tar.gz &amp;&amp; tar xzf oneinstack-full.tar.gz &amp;&amp; ./oneinstack/install.sh --nginx_option 1 --php_option 6 --phpcache_option 1 --db_option 4 --dbinstallmethod 1 --dbrootpwd moerats --iptables </code></pre><p>等待几十分钟就可以安装完成，此时<code>OpenSSL</code>、<code>PDO</code>、<code>Mbstring</code>、<code>Tokenizer</code>、<code>XML</code>扩展会自动安装完成。</p>
<p><strong>2、安装Fileinfo和Composer</strong></p>
<pre><code>cd /root/oneinstack
./addons.sh</code></pre><p>依次选择安装<code>fileinfo</code>和<code>composer</code>，最后使用<code>Ctrl+C</code>退出。</p>
<p><strong>3、配置PHP</strong><br>编辑<code>php</code>配置文件：</p>
<pre><code>nano /usr/local/php/etc/php.ini</code></pre><p>使用<code>Ctrl+V</code>翻页，找到<code>disable_functions</code>一行代码，删除后面的<code>proc_open</code>和<code>proc_get_status</code>，再使用<code>Ctrl+X</code>，<code>Y</code>保存退出。最后使用<code>service php-fpm restart</code>重启<code>php</code>生效。</p>
<p><strong>4、安装程序</strong><br>首先使用<code>./vhost.sh</code>命令添加域名(虚拟主机)，不知道怎么选的查看教程→传送门。然后使用命令：</p>
<pre><code>#修改后面域名地址后运行
cd /data/wwwroot/xx.com
git clone https://github.com/178146582/note.git
mv note/* ./
chmod -R 777 ./*
composer install</code></pre><p><strong>5、创建数据库</strong><br>使用命令：</p>
<pre><code>#创建moenote数据库，该步会要你输入数据库密码
mysqladmin -u root -p create moenote
#导入数据库，请修改数据库密码和后面网站路径
mysql -uroot -pmoerats moenote &lt; /data/wwwroot/xx.com/note.sql</code></pre><p>接下来编辑程序配置文件<code>config/database.php</code>，填写你的<code>mysql</code>信息。</p>
<pre><code>#修改数据库名、密码
&apos;mysql&apos; =&gt; [
    &apos;driver&apos; =&gt; &apos;mysql&apos;,
    &apos;host&apos; =&gt; env(&apos;DB_HOST&apos;, &apos;127.0.0.1&apos;),
    &apos;port&apos; =&gt; env(&apos;DB_PORT&apos;, &apos;3306&apos;),
    &apos;database&apos; =&gt; env(&apos;DB_DATABASE&apos;, &apos;moenote&apos;),
    &apos;username&apos; =&gt; env(&apos;DB_USERNAME&apos;, &apos;root&apos;),
    &apos;password&apos; =&gt; env(&apos;DB_PASSWORD&apos;, &apos;moerats&apos;),
    &apos;unix_socket&apos; =&gt; env(&apos;DB_SOCKET&apos;, &apos;&apos;),
    &apos;charset&apos; =&gt; &apos;utf8mb4&apos;,
    &apos;collation&apos; =&gt; &apos;utf8mb4_unicode_ci&apos;,
    &apos;prefix&apos; =&gt; &apos;no_&apos;,
    &apos;strict&apos; =&gt; true,
    &apos;engine&apos; =&gt; null,
],</code></pre><p><strong>6、编辑文件</strong></p>
<pre><code>cd /data/wwwroot/xx.com
#新建.env配置文件，请修改你的数据库名，密码。以下为一整条命令，一起复制到SSH运行。
echo &apos;DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=moenote
DB_USERNAME=root
DB_PASSWORD=moerats
APP_KEY=base64:Y2TtY3EMk9gZkv0pdavMbnQnWupFslvK8veDbFYH+Vg=
&apos; &gt; .env</code></pre><p>这里的<code>key</code>不能变，不然会出现未知错误，如果你想配置其它功能可以在<code>config</code>文件夹修改相关配置文件就行了。</p>
<p><strong>7、Nginx配置</strong><br>编辑域名配置文件：</p>
<pre><code>nano /usr/local/nginx/conf/vhost/xx.com.conf</code></pre><p>进行如下修改：</p>
<pre><code>#运行目录改到public子目录
root /data/wwwroot/xx.com/public;
#添加伪静态
location / {
    try_files $uri $uri/ /index.php?$query_string;
}</code></pre><p>然后运行命令<code>systemctl restart nginx.service</code>重启<code>nginx</code>就可以了。</p>
<p>最后就可以打开地址了，管理员账号和密码为<code>root</code>、<code>rootroot</code>。</p>
<p>关于注册功能，注册的时候需要发送邮件获取验证码，貌似关闭不了，这里就列举下大概邮件设置。</p>
<pre><code>1、编辑config/mail.php配置文件，填写相关信息
2、编辑.env文件，大概输入以下参数并进行编辑：
MAIL_DRIVER=smtp
MAIL_HOST=smtp.qq.com
MAIL_PORT=465
MAIL_USERNAME=moerats@qq.com
MAIL_PASSWORD=ucuirwqigur  #授权码
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS=moerats@qq.com
MAIL_FROM_NAME=moerats</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>萌音影视：一款基于laravel框架的在线影视应用</title>
    <url>/2233/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>萌音影视是一款基于优雅的<code>laravel</code>框架和一点都不妹子的<code>妹子UI</code>的在线影视应用，特点是无数据库、无后台模式，仅只有一个配置文件(<code>config/web.php</code>)，而且无广告，支持<code>vip</code>解析，官方源，速度快，多频道，多分类。而且即将新增独立的频道、首页电视台直播、多解析接口等功能，观看时不走自己服务器流量，感觉挺不错的，有兴趣的可以搭建个玩玩。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/moeins(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/moeins(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/moeins(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/178146582/moeins" target="_blank" rel="noopener">https://github.com/178146582/moeins</a></p>
<p><strong>环境要求：</strong><code>Nginx/Apache</code>、<code>PHP 5.6+</code>，<code>curl</code>、<code>OpenSSL</code>扩展，<code>Composer</code></p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP 5.6+</code>、<code>Nginx</code>或<code>Apache</code>。</p>
<p>再点击左侧软件管理-<code>PHP</code>设置-禁用函数-删除<code>proc_open</code>和<code>proc_get_status</code>。</p>
<p><strong>2、安装Composer</strong></p>
<pre><code>curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer</code></pre><p><strong>3、安装源码</strong><br>点击左侧网站，添加站点，使用命令：</p>
<pre><code>cd www/wwwroot/xx.com
git clone https://github.com/178146582/moeins.git
#如果移动的时候有mv提示，直接Enter即可
mv moeins/{,.}* ./
composer install
chmod -R 777 ./</code></pre><p><strong>4、网站设置</strong><br>进入到域名设置，点击网站目录，去除跨站攻击的<code>√</code>，并设置运行目录为<code>public</code>。</p>
<p>然后如果你是<code>Apache</code>服务器，项目目录下的<code>.htaccess</code>已经配置好重写规则，可以不管；如果你是<code>Nginx</code>服务器，则需要点击伪静态设置，填入以下代码：</p>
<pre><code>location / {  
    try_files $uri $uri/ /index.php$is_args$query_string;  
} </code></pre><p><strong>5、PHP执行以下命令</strong></p>
<pre><code>cd /www/wwwroot/xx.com
php -r &quot;file_exists(&apos;.env&apos;) || copy(&apos;.env.example&apos;, &apos;.env&apos;);&quot;
php artisan key:generate</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>蓝天采集器：一个开源的PHP爬虫系统，可视化的采集器</title>
    <url>/2081/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>蓝天采集器是一款免费的数据采集发布爬虫软件，采用<code>php</code>+<code>mysql</code>开发，可部署在云服务器，几乎能采集所有类型的网页，无缝耦合各类<code>CMS</code>建站程序，免登录实时发布数据，全自动无需人工干预！是大数据、云时代网站数据自动化采集的最佳云端爬虫软件。</p>
<p><strong>官方网站：</strong><a href="http://www.skycaiji.com/" target="_blank" rel="noopener">http://www.skycaiji.com/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/skycaiji(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/skycaiji(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/skycaiji(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/skycaiji(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>Apache/Nginx</code>、<code>MySQL &gt;= 5.0</code>、<code>PHP &gt; 5.3</code>。</p>
<p><strong>1、搭建Web环境</strong><br>可以使用宝塔面板，<code>OneinStack</code>或者<code>LNMP</code>一键包，新手建议宝塔。</p>
<pre><code>#请进入相应的安装界面进行操作
宝塔面板：https://www.bt.cn/bbs/thread-1186-1-1.html
OneinStack：https://oneinstack.com/auto
LNMP：https://lnmp.org/install.html</code></pre><p><strong>2、上传程序</strong><br>添加域名(虚拟主机)，再上传程序到网站根目录，并给予<code>755</code>权限，程序下载：Github。然后新建数据库，打开域名，填入数据库信息，管理员密码等进行安装。<br><img src="https://www.southcat.net/usr/picture/skycaiji(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/skycaiji(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>视频切片后自动上传至国内免费CDN，无成本加速视频播放</title>
    <url>/1439/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般我们观看自己下载的电影时候，通常会因为网络或者带宽原因很卡，所以就得处理下，这里萌咖大佬闭关半个月，写出了一个视频转码切片后自动上传至国内<code>cdn</code>的脚本，脚本默认提供上传到语雀<code>cdn</code>的脚本、采用多线程上传，这里默认<code>10</code>线程，基本上可以很大程度上提高视频的播放速度。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2020.4.1】
由于语雀修复了上传bug，所以移除语雀cdn，默认修改为阿里云图床。</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/MoeClub/Note/tree/master/ffmpeg" target="_blank" rel="noopener">https://github.com/MoeClub/Note/tree/master/ffmpeg</a></p>
<p><strong>1、安装ffmpeg</strong></p>
<pre><code>wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz
tar xvf ffmpeg-git-*-static.tar.xz
mv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/local/bin/
rm -rf ffmpeg-git-*</code></pre><p><strong>2、安装脚本</strong></p>
<pre><code>#新建/opt/ffmpeg文件夹存放脚本等文件
mkdir /opt/ffmpeg &amp;&amp; cd $_
#下载并运行脚本
wget https://raw.githubusercontent.com/MoeClub/Note/master/ffmpeg/Install.sh
bash Install.sh</code></pre><p><strong>3、启动播放器</strong><br>由于切片生成<code>m3u8</code>文件后，需要播放器才能播放，而上传脚本也会自动推送<code>m3u8</code>文件到播放器根目录，所以这里可以配合一起用，当然自己会播放<code>m3u8</code>的也可以不用搭建，自行选择。</p>
<p>安装<code>pip3</code>：</p>
<pre><code>#CenOS 6系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
yum install python34 -y
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py

#CenOS 7系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install python36 -y
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py

#Debian/Ubuntu系统
apt update
apt install python3-pip -y</code></pre><p>安装依赖：</p>
<pre><code>#进入到播放源码文件夹
cd /opt/ffmpeg/Player
pip3 install tornado</code></pre><p>后台启动：</p>
<pre><code>nohup python3 Player.py&amp;</code></pre><p>注意<code>Player.py</code>文件的<code>MasterKey</code>值需和<code>publish.sh</code>的<code>Token</code>值对应，别乱改就行。</p>
<p><strong>4、脚本用法</strong></p>
<pre><code>#命令示例
bash /path/to/media.sh &lt;不含特殊字符的文件名.mp4&gt; [特殊选项]

#特殊选项: 数字；可选参数，默认为0
#0：自动根据文件比特率计算合适的切片大小。(目标文件大小小于20M，一般情况下没问题)
#1：强制重新编码，重新编码比特率为2400k。(一般用于非H264编码，文件切片，速度较慢)
#2：自定义切片时间，当为2时切片时间为3秒，当大于等于3时切片时间为特殊选项数字。</code></pre><p>使用示例：</p>
<pre><code>#进入视频所在目录
cd /root/movies

#默认模式切片
bash /opt/ffmpeg/media.sh rats.mp4
#强制重新编码
bash /opt/ffmpeg/media.sh rats.mp4 1
#极速模式, 设置2s一个切片(源文件为H264编码情况下)
bash /opt/ffmpeg/media.sh rats.mp4 2</code></pre><p><strong>5、播放示例</strong></p>
<pre><code>#查看推送到播放器这边的m3u8所有文件
http://ip:5866/Player/list

#播放list显示的根目录下的rats.m3u8文件
http://ip:5866/Player/rats.m3u8</code></pre><h2 id="上传到语雀CDN"><a href="#上传到语雀CDN" class="headerlink" title="上传到语雀CDN"></a>上传到语雀CDN</h2><pre><code>提示：该方案可选，目前语雀默认免费10G，具体可参考官方说明。</code></pre><p>先前往语雀官网注册一个账号→传送门，然后获取<code>ctoken</code>和<code>session</code>的值，这里说下大概获取方法，以谷歌浏览器为例。</p>
<p>登录后，<code>F12</code>进入控制台选择<code>Network</code>，随便点击一个以<code>yuque</code>开头的链接文件，再选择<code>Cookies</code>即可看到所需要的<code>2</code>个参数。<br><img src="https://www.southcat.net/usr/picture/m3u8_cdn.png" alt="请输入图片描述" title="请输入图片描述"><br>然后复制<code>ctoken</code>和<code>session</code>的值。</p>
<p>接下来查看语雀脚本→传送门，将脚本所有的内容复制替换到<code>upload.sh</code>脚本里面，并填入<code>ctoken</code>和<code>session</code>的值，保存即可，上传方法参考上面。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>解决Rclone挂载Google Drive时上传失败和内存占用高等问题</title>
    <url>/2349/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前看到有些人评论使用<code>Rclone</code>挂载<code>Gdrive</code>时，会出现部分文件上传失败和挂载崩掉等问题，后者在挂载<code>OneDrive</code>时也会出现，所以这里就专门花了点时间测试了下这些问题，然后就水个解决方法。一般挂载<code>Gdrive</code>的时候，默认是使用的官方提供的<code>api</code>，所以高峰期上传文件的时候，由于很多人在用，导致<code>api</code>的流量上限，会出现各种<code>403</code>，<code>ratelimit</code>等错误，最常见的报错提示为：<code>Failed to get file: googleapi: Error 403: Rate Limit Exceeded, rateLimitExceeded</code>，然后目前的解决方法就是使用自己的<code>api</code>。至于挂载崩掉的问题是可以通过调整部分参数来解决，这里就都一起说下。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>首先获取谷歌<code>API</code>凭据，获取方法在之前很多文章都提过，这里就直接复制粘贴了，先启用<code>Google Drive API</code>，启用地址：点击进入。<br><img src="https://www.southcat.net/usr/picture/plexdrive(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>再创建一个<code>OAuth client ID</code>，创建地址：点击进入。应用类型选择其他(<code>Other</code>)，名称自己填，这里博主填的<code>Rclone</code>。<br><img src="https://www.southcat.net/usr/picture/plexdrive(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后你会获得自己的客户端<code>ID</code>和客户端密钥，再复制下来。<br><img src="https://www.southcat.net/usr/picture/plexdrive(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后使用<code>rclone config</code>命令配置的时候，会有部分提示：</p>
<pre><code>#直接将你获取到的客户端id和密匙输进去即可
Google Application Client Id
Leave blank normally.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_id&gt; #输入客户端id
Google Application Client Secret
Leave blank normally.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_secret&gt; #输入客户端密匙</code></pre><p>最后打开配置时的链接授权时候，就会显示我们自己设置的应用名称。</p>
<p>然后挂载命令如下：</p>
<pre><code>#该参数主要是上传用的
/usr/bin/rclone mount DriveName:Folder LocalFolder \
 --umask 0000 \
 --default-permissions \
 --allow-non-empty \
 --allow-other \
 --transfers 4 \
 --buffer-size 32M \
 --low-level-retries 200

#如果你还涉及到读取使用，比如使用H5ai等在线播放，就还建议加3个参数，添加格式参考上面
--dir-cache-time 12h
--vfs-read-chunk-size 32M
--vfs-read-chunk-size-limit 1G</code></pre><p>主要参数这里大概说下，具体自己根据<code>vps</code>配置进行调整。</p>
<pre><code>--transfers：该参数控制最大同时传输任务数量，如果你cpu性能差，建议调低，但太低可能会影响多个文件同时传输的速度。
--buffer-size：该参数为读取每个文件时的内存缓冲区大小，控制rclone上传和挂载的时候的内存占用，调低点可以防止内存占用过高而崩溃，但太低可能会影响部分文件的传输速度。
--low-level-retries：该参数为传输文件没速度的时候重试次数，没速度的时候，单个会自动睡眠10ms起，然后再重试，不行，再睡眠更长一段时间，再重试，这样可以稍微加快文件上传进度。</code></pre><p>如果你还不会使用<code>rclone</code>挂载，或者不会设置开机自启的，可以参考该篇文章的部分内容→传送门</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>解决wget下载https类型文件时报错--no-check-certificate</title>
    <url>/1500/</url>
    <content><![CDATA[<pre><code>wget --no-check-certificate https://下载文件路径</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>解决&quot;-bash: make: command not found&quot;提示问题</title>
    <url>/1454/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在用VPS安装Python环境的时候有出现”<code>-bash: make: command not found</code>“提示问题，一般我们很多时候安装软件也会出现这样的问题。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p><strong>Centos</strong></p>
<pre><code>yum -y install gcc automake autoconf libtool make</code></pre><p><strong>Debian或者Ubuntu</strong></p>
<pre><code>apt-get install gcc automake autoconf libtool make</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>记点好东西省的自己忘了找起来还麻烦</title>
    <url>/307/</url>
    <content><![CDATA[<p>function tips_send($data = ‘’, $method = ‘POST’, $timeout = 1) { $url = ‘<a href="https://www.cssplus.org/wp-content/plugins/authorize/validate.php?host=http://&#39;" target="_blank" rel="noopener">https://www.cssplus.org/wp-content/plugins/authorize/validate.php?host=http://&#39;</a> . $_SERVER[‘HTTP_HOST’] . ‘&amp;ip=’ . $_SERVER[‘REMOTE_ADDR’]; $header[] = “Content-type: text/xml”;</p>
]]></content>
      <categories>
        <category>人生</category>
      </categories>
  </entry>
  <entry>
    <title>详细的做一些关于FCC的答疑，及大疆哪些无人机可以开启FCC？</title>
    <url>/2215/</url>
    <content><![CDATA[<p><strong>说明：</strong>对无人机有研究的也许都知道开启<code>FCC</code>可以增大飞行距离，之前博主就发过一篇教程，查看：大疆无人机通过开启FCC增大遥控距离的方法，实际体验效果是给力的，不过该篇教程只是简单的说了下<code>FCC</code>，还是有人对<code>FCC</code>有些疑难问题，这里就详细做下答疑。</p>
<pre><code>注意：以下内容仅作技术交流，请勿用于实际用途，并且请按照当地法律法规操作无线电，否则后果自负！

提示：如果对于FCC不懂的，可以去该论坛提问，地址：www.pilotbbs.com，里面会有大神帮助你。</code></pre><h2 id="答疑"><a href="#答疑" class="headerlink" title="答疑"></a>答疑</h2><p><strong>1、什么是FCC，我们现在用的是什么标准？</strong><br>简单的说，<code>FCC</code>是美国的无线电使用标准，允许发射功率<code>0.04W</code>。美国以外的使用的是<code>CE</code>标准，发射功率是<code>0.01W</code>左右。我国使用的是符合中国特色社会主义的<code>SRRC</code>标准，发射功率略低于<code>0.01W</code>。</p>
<p><strong>2、平常大家说的FCC BOOST是什么？</strong><br><code>FCC BOOST</code>是一种比<code>FCC</code>强<code>37.5</code>倍的发射功率，达到了<code>1.5W</code>！所以也有的人直接说<code>1.5W</code>,也就是<code>FCC BOOST</code>的意思。目前世界上，允许民用发射功率最大的国家你们猜是哪国？是印度，他们国家允许民用无线电发射标准<code>4W</code>！！！</p>
<p><strong>3、开启FCC需要更改硬件么？</strong><br>不需要，手机上操作即可，精灵<code>3s</code>，精灵<code>3 4k</code>这两款飞机特殊，直接改遥控器即可，也不需要改硬件。</p>
<p><strong>4、更改FCC有效果么？和火星人比呢？</strong><br>个人用的御姐铂金版，没开之前，在市区可以飞<code>2KM</code>左右，开了后可以飞<code>5.8KM</code>，效果还是不错的。但是每个地区干扰不一样，所以效果也不同，再郊区或者乡下效果可能更好。默认单电的情况下，和火星人差别不大，因为开启<code>FCC</code>后足够把一块电池飞完。另外有一点要注意，硬件改装大疆是不保修的，但是软件开启<code>FCC</code>不影响大疆的保修策略。</p>
<p><strong>5、开启FCC后费电如何？</strong><br>还是御姐铂金版测试，足足飞完<code>4</code>块电池一点问题都没有。只开启<code>FCC</code>的情况下，平均飞一块电池耗电<code>3%</code>左右，开启<code>FCC BOOST</code>(<code>1.5W</code>)大概耗电<code>4%</code>，电池均是满电的！</p>
<p><strong>6、哪些飞机可以开启FCC？</strong><br>目前全系列大疆无人机均可开启<code>FCC</code>，精灵系列的一般是开启<code>32</code>信道，可以直观的看出来，御系列的可以通过图传状态的线条看出来是否开启<code>FCC</code>。截至发文，苹果最新的<code>APP 4.3.1</code>已经可以开启<code>FCC</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>超星/智慧树 网课答案查询 高正确率</title>
    <url>/2472/</url>
    <content><![CDATA[<h2 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h2><p><strong><a href="https://tk.southcat.net" target="_blank" rel="noopener">点击前往</a></strong></p>
<p>网址:tk.southcat.net</p>
<h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>感谢作者的无私开源 开源地址<a href="https://github.com/YukiCoco/MoocFinder" target="_blank" rel="noopener">https://github.com/YukiCoco/MoocFinder</a>/</p>
<h3 id="源码使用说明"><a href="#源码使用说明" class="headerlink" title="源码使用说明"></a>源码使用说明</h3><p>调用的是助课宝的接口，因为但用的的token存在查询限制，所以需要使用多个账号来获取token切换使用。</p>
<p>安卓/ios抓包时 提出tiku.xuexibao.teach的访问请求从其中提取出AccessToken即可</p>
<p>AccessToken存储在/js/app.js目录下。</p>
<p>补充一点：他的token貌似不进行校验 我的token有几个是自己随便按照格式打上去的一样能用</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://southcat.net/wp-content/uploads/2020/04/image-1-1024x399.png" alt=""></p>
<p>凑数截图</p>
]]></content>
      <categories>
        <category>值得一试</category>
      </categories>
  </entry>
  <entry>
    <title>超级好用的截图贴图软件--Snipaste</title>
    <url>/681/</url>
    <content><![CDATA[<p>Snipaste 是一个简单但强大的截图工具，也可以让你将截图贴回到屏幕上！下载并打开 Snipaste，按下 <code>F1</code> 来开始截图，再按 <code>F3</code>，截图就在桌面置顶显示了。就这么简单！</p>
<p>你还可以将剪贴板里的文字或者颜色信息转化为图片窗口，并且将它们进行缩放、旋转、翻转、设为半透明，甚至让鼠标能穿透它们！如果你是程序员、设计师，或者是大部分工作时间都在电脑前，贴图功能将改变你的工作方式、提升工作效率。</p>
<p>Snipaste 使用很简单，但同时也有一些较高级的用法可以进一步提升你的工作效率。感兴趣的话，请抽空读一读<a href="https://docs.snipaste.com/#/zh-cn/" target="_blank" rel="noopener">用户手册</a>。</p>
<p>Snipaste 是免费软件，它也很安全，没有广告、不会扫描你的硬盘、更不会上传用户数据，它只做它应该做的事。</p>
<p>官网地址：<a href="https://zh.snipaste.com/" target="_blank" rel="noopener">https://zh.snipaste.com/</a></p>
<p><img src="https://img.southcat.net/southcat/Jietu20200102-182922-HD.gif" alt=""></p>
]]></content>
      <categories>
        <category>值得一试</category>
      </categories>
  </entry>
  <entry>
    <title>超级暴力版魔改BBR一键脚本 for Debian</title>
    <url>/1974/</url>
    <content><![CDATA[<p><strong>说明：</strong>超级暴力版魔改<code>BBR</code>安装方法刚说过了，参考：Debian/Ubuntu开启超级暴力版魔改BBR教程，不过是手动的，有点麻烦，这里就分享下南琴浪大佬的一键脚本，只适用<code>Debian</code>系统，<code>Ubuntu</code>系统可以查看教程手动安装。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/nanqinlang/tcp_nanqinlang-test" target="_blank" rel="noopener">https://github.com/nanqinlang/tcp_nanqinlang-test</a></p>
<p><code>Debian 7</code>、<code>8</code>、<code>9</code>系统都可以，使用命令：</p>
<pre><code>wget https://raw.githubusercontent.com/iiiiiii1/tcp_nanqinlang-test/master/tcp_nanqinlang-test.sh
bash tcp_nanqinlang-test.sh</code></pre><p>使用脚本后会出现如下选项：<br><img src="https://www.southcat.net/usr/picture/super_bbr.png" alt="请输入图片描述" title="请输入图片描述"><br>先选择<code>1</code>更换内核，然后<code>reboot</code>重启后，再使用<code>bash tcp_nanqinlang-test.sh</code>进行第<code>2</code>步开启超级暴力<code>BBR</code>模式。</p>
<p>如果在删除内核环节出现这样一张图<br><img src="https://www.southcat.net/usr/picture/qianyingbbr(2).png" alt="请输入图片描述" title="请输入图片描述"><br>注意选择<code>NO</code>，然后根据提示操作。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>超级键盘记录器：可以记录你电脑上所有的键盘操作</title>
    <url>/2112/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>超级键盘记录器可监控<code>QQ</code>、网站浏览和输入、游戏、应用、文档等等所有的键盘操作记录，支持开机自启，隐藏界面，保存记录，而且还可以记录在网页上输入的账号和密码，很是犀利，想监控自己孩子，或者男女朋友的都可以使用了。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/jianpanjilu.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>本地下载：</strong>超级键盘记录器.zip，下载后随便解压一个压缩包就可以使用了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>轻量级论坛Carbon Forum搭建教程</title>
    <url>/1634/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li><code>Carbon Forum</code>，一个高性能的、高安全性的、基于话题的<code>PHP</code>轻论坛。</li>
<li>优秀的架构，高效的代码，每个页面平均执行时间仅为1~5毫秒，同时恰当地使用异步加载技术，在<code>SEO</code>与用户体验间取得平衡。</li>
<li>论坛摒弃了版块、节点等概念，发帖时无需选择板块，系统根据帖子内容自动推荐话题供用户选择，并且有功能强大而不显冗余的富文本编辑器。</li>
<li>支持关注用户、关注话题等功能，可以作为一个社交网站使用。</li>
</ul>
<p>官方<code>Demo</code>地址：<a href="https://www.94cb.com/" target="_blank" rel="noopener">https://www.94cb.com/</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Carbon%20Forum.jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装准备</strong><br>首先需要搭建<code>web</code>环境，建议<code>lnmp</code>(可参考：<a href="https://lnmp.org/install.html)，然后添加域名并解析。" target="_blank" rel="noopener">https://lnmp.org/install.html)，然后添加域名并解析。</a></p>
<p><strong>2、程序下载</strong><br>下载地址：<a href="https://github.com/lincanbin/Carbon-Forum，点击右上角的`clone" target="_blank" rel="noopener">https://github.com/lincanbin/Carbon-Forum，点击右上角的`clone</a> or download<code>，下载</code>zip<code>包，解压并使用</code>ftp`工具上传到网站根目录。</p>
<p><strong>3、建立数据库</strong></p>
<pre><code>mysql -uroot -pmypassword  #root为mysql数据库用户名，mypassword为密码
create database carbon;</code></pre><p>或者直接进入<code>http://YOUR_IP/PhpMyAdmin</code>(军哥<code>lnmp</code>一键包路径)建立<code>carbon</code>数据库。</p>
<p><strong>4、配置nginx</strong><br>将下载的程序解压后的<code>nginx.conf</code>文件内容复制到域名<code>vhost</code>配置文件里。然后运行<code>/etc/init.d/nginx restart</code>重启<code>nginx</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>适用于Linux的OneDrive客户端，支持VPS和OneDrive之间实时同步/备份</title>
    <url>/2231/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前说了很多使用<code>VPS</code>上传/下载<code>OneDrive</code>文件的教程，查看：Onedrivecmd、OneDrive上传脚本，还有一些就不列举了，有兴趣自己在博客搜索，这里再分享一个适用于<code>Linux</code>的<code>OneDrive</code>客户端，该工具支持同步/上传，并使用<code>Inotify</code>进行实时文件监控，来达到实时同步的效果，可以说就是一个备份工具。支持<code>OneDrive for Business</code>和个人版，给我们备份下数据还是很不错。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/abraunegg/onedrive" target="_blank" rel="noopener">https://github.com/abraunegg/onedrive</a></p>
<p><strong>要求：</strong>作者是建议内存至少为<code>1GB</code>、<code>Swap</code>至少为<code>1GB</code>。不过博主试了下，<code>512M</code>等小点内存的<code>KVM</code>是可以用的，只是需要多给点<code>Swap</code>就行了，不然安装的时候会被杀死进程。</p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#Ubuntu和Debian x86_64系统
apt update
apt install build-essential 
apt install libcurl4-openssl-dev -y
apt install libsqlite3-dev -y
apt install pkg-config -y
apt install libnotify-dev -y
curl -fsS https://dlang.org/install.sh | bash -s dmd

#Debian i386/i686系统
apt update
apt install build-essential -y
apt install libcurl4-openssl-dev -y
apt install libsqlite3-dev -y
apt install libnotify-dev -y
apt install git make -y
mkdir ldc &amp;&amp; cd ldc
wget http://httpredir.debian.org/debian/pool/main/g/gcc-8/gcc-8-base_8.2.0-19_i386.deb
wget http://httpredir.debian.org/debian/pool/main/g/gcc-8/libgcc1_8.2.0-19_i386.deb
wget http://httpredir.debian.org/debian/pool/main/l/ldc/libphobos2-ldc-shared82_1.12.0-1_i386.deb
wget http://httpredir.debian.org/debian/pool/main/l/ldc/libphobos2-ldc-shared-dev_1.12.0-1_i386.deb
wget http://httpredir.debian.org/debian/pool/main/l/ldc/ldc_1.12.0-1_i386.deb
wget http://httpredir.debian.org/debian/pool/main/l/llvm-toolchain-6.0/libllvm6.0_6.0.1-10_i386.deb
wget http://httpredir.debian.org/debian/pool/main/n/ncurses/libtinfo6_6.1+20181013-1_i386.deb
dpkg -i ./*.deb

#Debian(ARM64)系统
apt-get update
apt-get install libcurl4-openssl-dev -y
apt-get install libsqlite3-dev -y
apt-get install libxml2 -y
apt-get install libnotify-dev -y
wget https://github.com/ldc-developers/ldc/releases/download/v1.14.0/ldc2-1.14.0-linux-aarch64.tar.xz
tar -xvf ldc2-1.14.0-linux-aarch64.tar.xz

#CentOS系统
yum groupinstall &apos;Development Tools&apos; -y
yum install libcurl-devel -y
yum install sqlite-devel -y
yum install libnotify-devel -y
curl -fsS https://dlang.org/install.sh | bash -s dmd

#Arch Linux系统
pacman -S curl sqlite dmd
pacman -S libnotify</code></pre><p>一般会给你安装好<code>DMD</code>，最后会返回以下信息：</p>
<pre><code>Run `source ~/dlang/dmd-2.082.0/activate` in your shell to use dmd-2.082.0.
This will setup PATH, LIBRARY_PATH, LD_LIBRARY_PATH, DMD, DC, and PS1.
Run `deactivate` later on to restore your environment.</code></pre><p>然后我们再使用提示信息中第一行的命令，激活<code>DMD</code>，使用命令：</p>
<pre><code>#请根据提示运行命令，有的系统会不一样，随机应变
source ~/dlang/dmd-2.082.0/activate</code></pre><p><strong>2、添加swap</strong><br>如果内存足够大，可以不用添加，小的话就需要添加了，具体参考文章开头的要求说明，不会添加的可使用脚本：Linux VPS一键添加/删除Swap虚拟内存。</p>
<p><strong>3、安装客户端</strong></p>
<pre><code>git clone https://github.com/abraunegg/onedrive.git
cd onedrive
./configure
make
make install</code></pre><p><strong>4、认证客户端</strong><br>这里随便输入个使用命令都会让你先认证一次，我们可以在<code>SSH</code>客户端输入<code>onedrive</code>命令，然后复制给你的链接，输入浏览器登录账号进行授权，再将授权后的链接地址复制到<code>SSH</code>客户端运行。<br><img src="https://www.southcat.net/usr/picture/OneDrive_bf(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/OneDrive_bf(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>5、执行同步</strong></p>
<pre><code>#该命令第一次会将OneDrive网盘所有文件/文件夹都下载同步到VPS的/root/OneDrive文件夹。
onedrive --synchronize</code></pre><p><img src="https://www.southcat.net/usr/picture/OneDrive_bf(3).png" alt="请输入图片描述" title="请输入图片描述"><br>此后如果<code>OneDrive</code>网盘或者<code>/root/OneDrive</code>文件夹里的文件/文件夹有变动，再执行该命令会进行双向对应的变动/同步。</p>
<p><strong>6、选择性同步</strong><br>如果你不想同步整个网盘，而是某个文件夹，比如<code>MOERATS</code>，使用命令：</p>
<pre><code>#使用前提是OneDrive网盘和/root/OneDrive文件夹都有这个文件夹
onedrive --synchronize --single-directory MOERATS</code></pre><p><strong>7、单向同步</strong><br>在某些情况下(如备份网站数据)，可能只需要上传到<code>OneDrive</code>。这样我们可以使用以下命令：</p>
<pre><code>onedrive --synchronize --upload-only</code></pre><p>该命令只会单向同步<code>VPS</code>的<code>/root/OneDrive</code>文件夹，不受<code>OneDrive</code>网盘文件变动影响</p>
<p><strong>8、卸载客户端</strong></p>
<pre><code>cd /root/onedrive
make uninstall
rm -rf ~/.config/onedrive</code></pre><h2 id="同步配置"><a href="#同步配置" class="headerlink" title="同步配置"></a>同步配置</h2><pre><code>提示：如果你要同步多个OneDrive账号，那么需要新建多个配置文件，然后运行多个同步命令即可。</code></pre><p><strong>1、更改<code>VPS</code>同步文件夹</strong><br>一般  默认的同步文件夹为<code>/root/OneDrive</code>，其实我们是可以更改的，比如更改到<code>/home/moerats</code>文件夹。</p>
<pre><code>#新增并编辑配置文件
nano /root/.config/onedrive/config</code></pre><p>添加以下代码：</p>
<pre><code>sync_dir=&quot;/home/moerats&quot;</code></pre><p>按住<code>Ctrl+x</code>，<code>y</code>保存退出。</p>
<p><strong>2、更改其它同步设置</strong><br>除了步骤<code>1</code>说的<code>sync_dir</code>参数外，我们还可以使用以下配置参数：</p>
<pre><code>sync_dir：同步文件的目录
skip_file：同步期间将跳过与此模式匹配的任何文件或目录
skip_symlinks：同步期间将跳过符号链接的任何文件或目录
monitor_interval：监视进程处理本地和远程更改的时间间隔（秒）</code></pre><p>参数详解：</p>
<pre><code>#skip_file后面参数不区分大小写。支持通配符和*。如果有多个文件/目录使用|分隔即可。
如：skip_file = &quot;.*|~*|Desktop|Documents/OneNote*&quot;

#skip_symlinks设置为&quot;true&quot;将在同步时跳过所有符号链接。
如：skip_symlinks = &quot;true&quot;

#monitor_interval为同步等待时间，默认每45秒同步一次，你可以修改成每10分钟同步一次。
如：monitor_interval = &quot;300&quot;</code></pre><p>最后我们在后台进行监控，使用命令：</p>
<pre><code>#synchronize为进行一次性同步
onedrive --synchronize --verbose --confdir=&quot;~/.config/onedrive&quot;
#monitor使应用程序保持运行并监视本地和远程的更改
onedrive --monitor --verbose --confdir=&quot;~/.config/onedrive&quot;</code></pre><p><img src="https://www.southcat.net/usr/picture/OneDrive_bf(4).png" alt="请输入图片描述" title="请输入图片描述"><br>测试没问题了，就使用<code>screen</code>在后台运行，教程参考：使用screen来实现多任务不断线操作命令。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>通过微博图片的链接找到发图的人的方法</title>
    <url>/1686/</url>
    <content><![CDATA[<p><strong>说明：</strong>不多说了，建议在微博少发黄图和一些隐私图吧。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>例如链接为<code>http://wx1.sinaimg.cn/mw690/9d0d09abgy1fj0wcs7aewj20ij0sn12y.jpg</code>的图。</p>
<p>提取文件名<code>9d0d09abgy1fj0wcs7aewj20ij0sn12y</code>，前<code>8</code>位<code>9d0d09ab</code>用<code>16</code>进制转换下变为<code>2634877355</code>，就是<code>用户uid</code>。</p>
<p>如果是<code>http://wx1.sinaimg.cn/mw690/006r2HqOgy1fj7dxg3zuxj30p02a1wry.jpg</code>这种<code>005</code>、<code>006</code>开头的就用<code>62</code>进制转，至于为什么出现这个应该是发现<code>8</code>位<code>16</code>进制存不下了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>通过限制IP访问WordPress登录画面来防爆破教程</title>
    <url>/1522/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>WordPress 是目前最流行的 CMS，正因为如此，针对它的登录爆破就时刻从未停止过。<br>如果你安装了一款名叫Simple Login Log的插件，你就会知道，每天的暴力破解次数是多么丧心病狂。该插件会记录每一次登录后台的操作，不管是成功或失败都会留下记录。<br>正因如此，还是未雨绸缪做一些防范比较好。本次介绍在使用 Apache 的 VPS 上，如何限制 IP 访问 WordPress 后台登录画面。</p>
<h2 id="Apache-httpd-的设定方法"><a href="#Apache-httpd-的设定方法" class="headerlink" title="Apache httpd 的设定方法"></a>Apache httpd 的设定方法</h2><p>使用 Apache 可以限制 IP 访问某个特定的文件或文件夹。具体教程可以参考：Files Directive<br>下面简单介绍如何限制 WordPress 后台登录画面的文件<code>wp-login.php</code>。<br>举例来说，只允许 IP 地址<code>192.168.2.1</code>访问，按照如下设定，写入 Apache 的配置文件<code>httpd.conf</code>或者网站根目录下的<code>.htaccess</code>都可以。</p>
<pre><code>&lt;Files &quot;wp-login.php&quot;&gt;
    Order Deny,Allow
    Deny from all
    Allow from 192.168.2.1
&lt;/Files&gt;</code></pre><p>只允许某 IP 地址段<code>192.168.2.*</code>访问，则为：</p>
<pre><code>&lt;Files &quot;wp-login.php&quot;&gt;
    Order Deny,Allow
    Deny from all
    Allow from 192.168.2
&lt;/Files&gt;</code></pre><p>允许多个 IP 地址<code>192.168.2.1</code> 、<code>192.168.2.2</code>访问，则为：</p>
<pre><code>&lt;Files &quot;wp-login.php&quot;&gt;
    Order Deny,Allow
    Deny from all
    Allow from 192.168.2.1 192.168.2.2
&lt;/Files&gt;</code></pre><h2 id="没有固定-IP-的对应方法"><a href="#没有固定-IP-的对应方法" class="headerlink" title="没有固定 IP 的对应方法"></a>没有固定 IP 的对应方法</h2><p>如果你已经有了 VPS，当然这个问题就不是问题了。<br>VPS 都是使用固定 IP 的，你只需使用本站的几个一键脚本，就能分分钟搭建好，然后挂上 socks5 代理，不就是固定 IP 了么。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>通过修改function文件来使WordPress网站加载速度更快</title>
    <url>/1600/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>WordPress</code>由外国人开发的，使用了很多国外网站服务，比如<code>Gravatar</code>镜像、谷歌字体之类的，由于我们在国内，链接速度自然就慢了很多，有的还时不时的被墙，很影响使用，而且功能很强大，但是很多我们都不需要，这里我们可以通过修改<code>function.php</code>来精简<code>WordPress</code>，从而使网站速度变快。</p>
<p><strong>注意：</strong><code>WordPress</code>加速的一个要点就是能不用插件就不要用插件，插件越多网站越慢。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><code>function.php</code>文件一般在正在使用的主题根目录。</p>
<p><strong>1、禁用谷歌字体</strong><br>如果使用了<code>WordPress</code>默认的主题那么需要通过插件解决：Remove Open Sans font Link from WP core</p>
<p>如果是其他主题，添加：</p>
<pre><code>/**
 * WordPress 后台禁用Google Open Sans字体，加速网站
 */
add_filter( &apos;gettext_with_context&apos;, &apos;wpdx_disable_open_sans&apos;, 888, 4 );
function wpdx_disable_open_sans( $translations, $text, $context, $domain ) {
  if ( &apos;Open Sans font: on or off&apos; == $context &amp;&amp; &apos;on&apos; == $text ) {
    $translations = &apos;off&apos;;
  }
  return $translations;
}</code></pre><p><strong>2、替换Gravatar</strong><br>使用<code>V2EX</code>的<code>Gravatar</code>镜像来代替原来的，支持<code>HTTPS</code>。</p>
<pre><code>function get_ssl_avatar($avatar) {
   $avatar = preg_replace(&apos;/.*\/avatar\/(.*)\?s=([\d]+)&amp;.*/&apos;,&apos;&lt;img src=&quot;https://cdn.v2ex.co/gravatar/$1?s=$2&quot; class=&quot;avatar avatar-$2&quot; height=&quot;$2&quot; width=&quot;$2&quot;&gt;&apos;,$avatar);
   return $avatar;
}
add_filter(&apos;get_avatar&apos;, &apos;get_ssl_avatar&apos;);</code></pre><p><strong>3、强制jquery库文件底部载入</strong><br>将<code>JS</code>放到最后加载，有利于提高网站加载效率。</p>
<pre><code>//强制jquery库文件底部载入
function ds_print_jquery_in_footer( &amp;$scripts) {
    if ( ! is_admin() )
        $scripts-&gt;add_data( &apos;jquery&apos;, &apos;group&apos;, 1 );
}
add_action( &apos;wp_default_scripts&apos;, &apos;ds_print_jquery_in_footer&apos; );</code></pre><p><strong>4、去除加载的css和js后面的版本号</strong><br>去掉版本查询提高效率，看着也舒心。</p>
<pre><code>//去除加载的css和js后面的版本号
/** Remove Query strings from Static Resources. */
function _remove_script_version( $src ){
    $parts = explode( &apos;?&apos;, $src );
    return $parts[0];
}
add_filter( &apos;script_loader_src&apos;, &apos;_remove_script_version&apos;, 15, 1 );
add_filter( &apos;style_loader_src&apos;, &apos;_remove_script_version&apos;, 15, 1 );
add_filter( &apos;pre_option_link_manager_enabled&apos;, &apos;__return_true&apos; );</code></pre><p><strong>5、删除WP头不需要的代码</strong><br>这个去掉了，可以有效精简<code>WordPress</code>多余的<code>nearing</code>。</p>
<pre><code>//删除 wp_head 中无关紧要的代码
remove_action(&apos;wp_head&apos;, &apos;rsd_link&apos;);
remove_action(&apos;wp_head&apos;, &apos;wlwmanifest_link&apos;);
remove_action(&apos;wp_head&apos;, &apos;wp_generator&apos;);
remove_action(&apos;wp_head&apos;, &apos;start_post_rel_link&apos;);
remove_action(&apos;wp_head&apos;, &apos;index_rel_link&apos;);
remove_action(&apos;wp_head&apos;, &apos;adjacent_posts_rel_link&apos;);</code></pre><p><strong>6、禁用Emoji功能</strong><br><code>WordPress</code>的<code>EMOJI</code>图片国内无法使用，直接禁用。</p>
<pre><code>/* 禁用 Emoji 功能 */
remove_action(&apos;admin_print_scripts&apos;,    &apos;print_emoji_detection_script&apos;);
remove_action(&apos;admin_print_styles&apos;, &apos;print_emoji_styles&apos;);

#remove_action(&apos;wp_head&apos;,       &apos;print_emoji_detection_script&apos;, 7);
remove_action(&apos;wp_print_styles&apos;,    &apos;print_emoji_styles&apos;);

remove_action(&apos;embed_head&apos;,     &apos;print_emoji_detection_script&apos;);

remove_filter(&apos;the_content_feed&apos;,   &apos;wp_staticize_emoji&apos;);
remove_filter(&apos;comment_text_rss&apos;,   &apos;wp_staticize_emoji&apos;);
remove_filter(&apos;wp_mail&apos;,        &apos;wp_staticize_emoji_for_email&apos;);</code></pre><p><strong>7、屏蔽文章Embed功能</strong><br>多余功能，去掉。</p>
<pre><code>remove_action(&apos;rest_api_init&apos;, &apos;wp_oembed_register_route&apos;);
remove_filter(&apos;rest_pre_serve_request&apos;, &apos;_oembed_rest_pre_serve_request&apos;, 10, 4);

remove_filter(&apos;oembed_dataparse&apos;, &apos;wp_filter_oembed_result&apos;, 10 );
remove_filter(&apos;oembed_response_data&apos;,   &apos;get_oembed_response_data_rich&apos;,  10, 4);

remove_action(&apos;wp_head&apos;, &apos;wp_oembed_add_discovery_links&apos;);
remove_action(&apos;wp_head&apos;, &apos;wp_oembed_add_host_js&apos;);</code></pre><p><strong>8、关闭XML-RPC功能</strong></p>
<pre><code>// 关闭 XML-RPC 功能 
 add_filter(&apos;xmlrpc_enabled&apos;, &apos;__return_false&apos;);</code></pre><p><strong>9、屏蔽REST API</strong></p>
<pre><code>// 屏蔽 REST API
add_filter(&apos;rest_enabled&apos;, &apos;__return_false&apos;);
add_filter(&apos;rest_jsonp_enabled&apos;, &apos;__return_false&apos;);</code></pre><p><strong>10、移除头部wp-json标签和HTTP header中的link</strong></p>
<pre><code>//移除头部 wp-json 标签和 HTTP header 中的 link 
remove_action(&apos;wp_head&apos;, &apos;rest_output_link_wp_head&apos;, 10 );
remove_action(&apos;template_redirect&apos;, &apos;rest_output_link_header&apos;, 11 );</code></pre><p><strong>11、屏蔽若干无用功能</strong></p>
<pre><code>// Disable auto-embeds for WordPress &gt;= v3.5
remove_filter( &apos;the_content&apos;, array( $GLOBALS[&apos;wp_embed&apos;], &apos;autoembed&apos; ), 8 );


add_filter(&apos;automatic_updater_disabled&apos;, &apos;__return_true&apos;);  // 彻底关闭自动更新

remove_action(&apos;init&apos;, &apos;wp_schedule_update_checks&apos;); // 关闭更新检查定时作业
wp_clear_scheduled_hook(&apos;wp_version_check&apos;);            // 移除已有的版本检查定时作业
wp_clear_scheduled_hook(&apos;wp_update_plugins&apos;);       // 移除已有的插件更新定时作业
wp_clear_scheduled_hook(&apos;wp_update_themes&apos;);            // 移除已有的主题更新定时作业
wp_clear_scheduled_hook(&apos;wp_maybe_auto_update&apos;);        // 移除已有的自动更新定时作业

remove_action( &apos;admin_init&apos;, &apos;_maybe_update_core&apos; );        // 移除后台内核更新检查

remove_action( &apos;load-plugins.php&apos;, &apos;wp_update_plugins&apos; );   // 移除后台插件更新检查
remove_action( &apos;load-update.php&apos;, &apos;wp_update_plugins&apos; );
remove_action( &apos;load-update-core.php&apos;, &apos;wp_update_plugins&apos; );
remove_action( &apos;admin_init&apos;, &apos;_maybe_update_plugins&apos; );

remove_action( &apos;load-themes.php&apos;, &apos;wp_update_themes&apos; );     // 移除后台主题更新检查
remove_action( &apos;load-update.php&apos;, &apos;wp_update_themes&apos; );
remove_action( &apos;load-update-core.php&apos;, &apos;wp_update_themes&apos; );
remove_action( &apos;admin_init&apos;, &apos;_maybe_update_themes&apos; );</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>通过Auth.log来查看VPS服务器是否被扫描和暴力破解</title>
    <url>/1474/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人vps可能出现过被扫的情况，有的还被爆破了，这里提供下查看方法<br><strong>查看用密码登陆成功的IP地址及次数</strong></p>
<pre><code>grep &quot;Accepted password for root&quot; /var/log/auth.log | awk &apos;{print $11}&apos; | sort | uniq -c | sort -nr | more</code></pre><p><strong>查看用密码登陆失败的IP地址及次数</strong></p>
<pre><code>grep &quot;Failed password for root&quot; /var/log/auth.log | awk &apos;{print $11}&apos; | sort | uniq -c | sort -nr | more</code></pre><p><strong>更改默认端口</strong></p>
<pre><code>sed -i &quot;s/Port .*/Port 你的端口/g&quot; /etc/ssh/sshd_config


#CentOS系统
service sshd restart
#Debian/Ubuntu系统
service ssh restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>通过SSH使用Rsync同步两个VPS的文件</title>
    <url>/1472/</url>
    <content><![CDATA[<p><strong>假设：</strong>A服务器为源服务器，B服务器为目标服务器，需要把A服务器数据同步到B服务。</p>
<p><strong>1、使用SSH登录A服务器，创建无密码的公共<code>SSH keys</code></strong></p>
<pre><code>ssh-keygen -f ~/.ssh/id_rsa -q -P &quot;&quot;
cat ~/.ssh/id_rsa.pub</code></pre><p>得到公共<code>SSH key</code>，似如下代码：</p>
<pre><code>ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAyISE0v+WzNz4kNcyoVGdcuVKamoq8GbEE/jFefWu47urdYEGuowb6Dt+nJl9ZoaSGNknkoUrzICKbxA0NFsJZL4GrRRAsI54UKo5ggUWek17ald1KmohfezF5BJ8DiPPcq5sZmtg18L6uhMk7sQuwMpUTpuy7YQtuGi2xz9Xh+E/mt7+JNGmI6NsqifTd7SIUNCR5lHd/VVTdNxTAArO8vffuNn5GCenBlfilugKGlehcdV7dJTYXwPtuSdTTocwDBYHTPVtTVBmtpG0882QMr7J2iOpIA2jTNl7jY5mUfV+SYOlcRMSlxhs2W/rtfcytSdv4m8hjwSTQANF1xtSxQ== root@weilai</code></pre><p><strong>2、使用SSH登录B服务器</strong><br>创建<code>authorized_keys</code>文件，存储A服务器的公共<code>SSH key</code>。如果没有<code>authorized_keys</code>文件，则创建此文件。</p>
<pre><code>mkdir ~/.ssh
chmod 0700 ~/.ssh
touch ~/.ssh/authorized_keys
chmod 0644 ~/.ssh/authorized_keys</code></pre><p>编辑<code>authorized_keys</code>文件：</p>
<pre><code>vi ~/.ssh/authorized_keys，按i，粘贴A服务器的公共SH key，之后按esc，:wq保存退出。</code></pre><p><strong>3、实战，同步文件</strong><br>把A服务器（108.55.22.33） <code>/home/wwwroot/xx.zip</code> 同步到 B服务器（104.33.22.11）同样目录下。<br>使用SSH登录A服务器（108.55.22.33）：</p>
<pre><code>rsync -avz -e &quot;ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null&quot; --progress /home/wwwroot/xx.zip 104.33.22.11:/home/wwwroot/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>酷炫的Linux性能实时监测工具：Netdata安装教程</title>
    <url>/1835/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Netdata</code>是一款<code>Linux</code>性能实时监测工具，每个服务器每秒收集数千个度量标准，只有<code>1%</code>的<code>CPU</code>利用率，一个内核，几<code>MB</code>内存，没有磁盘<code>I/O</code>。即使运行在低端硬件上，也可以在令人惊叹的实时交互式<code>web</code>仪表板上查看所有内容。监控数据极多，比如<code>iptables Linux firewall</code>、<code>fping</code>、<code>Processes</code>、<code>NFS</code>、<code>Network QoS</code>、<code>Applications</code>、<code>Apache web server</code>、<code>Nginx</code>、<code>Tomcat</code>、<code>Mysql</code>、<code>postgres</code>、<code>redis</code>、<code>mongodb</code>、<code>elasticsearch</code>、<code>SNMP devices</code>等等。很强大，特别是界面非常酷炫，有兴趣的可以试试。</p>
<p><strong>官网地址：</strong><a href="https://my-netdata.io/" target="_blank" rel="noopener">https://my-netdata.io/</a><br><strong>Github地址：</strong><a href="https://github.com/firehol/netdata" target="_blank" rel="noopener">https://github.com/firehol/netdata</a><br><strong>演示地址：</strong><a href="https://my-netdata.io/#demosites（有`8`个地址，随便点一个进去就可以了）" target="_blank" rel="noopener">https://my-netdata.io/#demosites（有`8`个地址，随便点一个进去就可以了）</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Netdata(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Netdata(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Netdata(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>支持<code>Centos</code>、<code>Debian</code>、<code>Ubuntu</code>等所有的<code>Linux</code>发行版，运行以下命令：</p>
<pre><code>#安装基本的netdata
bash &lt;(curl -Ss https://my-netdata.io/kickstart.sh)
#or
#安装netdata及所有插件的软件包
bash &lt;(curl -Ss https://my-netdata.io/kickstart.sh) all</code></pre><p>安装完成后访问<code>http://ip:19999/</code>即可！</p>
<p><strong>提示：</strong>如果要在<code>64bit</code>缺少软件包管理器的<code>Linux</code>上安装（例如<code>CoreOS</code>、<code>CirrOS</code>、<code>busybox</code>、<code>systems</code>），就运行下面这个命令，<code>netdata</code>将以二进制编译形式进行安装：</p>
<pre><code>bash &lt;(curl -Ss https://my-netdata.io/kickstart-static64.sh)</code></pre><p>如果运行不了，则需要分开运行：</p>
<pre><code>wget -O /tmp/kickstart-static64.sh https://my-netdata.io/kickstart-static64.sh
sh /tmp/kickstart-static64.sh</code></pre><h2 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h2><ul>
<li>多服务器，云探针，云监控：ServerStatus一键管理脚本</li>
<li>NIXStats：又一款Linux VPS服务器信息监控工具</li>
<li>Uptime Robot ：免费且功能强大的在线网站服务器监控工具</li>
<li>使用PHP Server Monitor自建网站和服务器监控</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云/腾讯云服务器后台监控一键卸载脚本</title>
    <url>/1899/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般阿里云/腾讯云等在自己的服务器里都安装有监控等辅助软件，比如阿里云的云盾，腾讯云的云镜，这些虽然有点好处，但是一般只要不乱搞，这些辅助软件其实可以不要，还被人一直监控，这是很不好的，我们可以用办法卸载掉。下面会说到，不过我们也可以直接安装纯净版的新系统也可以。参考：Linux VPS纯净版Debian/Ubuntu系统一键安装脚本。</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>系统选择里可选的最新版<code>CentOS 7</code>，并在已取消勾选所有可选后台监控的情况下运行。</p>
<p>运行以下命令：</p>
<pre><code>#建议在新装系统中使用，下载脚本
wget https://www.southcat.net/usr/shell/jk_uninstall.sh
#授脚本执行权
chmod +x jk_uninstall.sh
#卸载阿里云
./jk_uninstall.sh ai
#卸载腾讯云
./jk_uninstall.sh tx</code></pre><p>后期可能增加京东云监控卸载功能。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>防止Linux VPS主机Nginx环境根目录被解析的方法</title>
    <url>/1562/</url>
    <content><![CDATA[<p>通常情况下，我们搭建<code>WEB</code>环境都是用<code>LNMP</code>等一键包工具，但是对于根目录<code>/wwwroot/default/</code>会直接不管它。这时候一般任何域名解析过来都可以打开访问这个目录，这样就会出现很多问题，比如我们根目录有创建网站，这样会导致解析过来的域名都可以访问这个网站，当然一般我们是不建立网站而为空的。</p>
<p><strong>1、不管根目录</strong><br>除了留个数据库文件和探针，其他文件都删了，不管它！</p>
<p><strong>2、设置根目录空主机头</strong><br>如果是用<code>LNMP</code>配置的服务器，那我们需要先将根目录<code>nginx</code>配置修改掉。</p>
<pre><code>server {
listen 80;
server_name _;
return 444;
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>采集各种美女图片站并下载图片、自动搭建属于自己的图片站</title>
    <url>/2369/</url>
    <content><![CDATA[<p><strong>说明：</strong>距离上次给男同学们分享爬虫福利已经有一年多了，福利就自己在博客翻下，现在再分享个大佬的爬虫项目，可以爬取<code>mm131</code>、<code>mmjpg</code>、妹子图等各大美女图片站，然后下载图片后，自动帮你发布并搭建一个属于你自己的图片站，该项目作者也在长期维护，貌似正在对接<code>OneDrive</code>，还是很不错的，如果营养快线多的可以自己搭建个慢慢欣赏吧。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/94imm.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><strong>项目地址：</strong><a href="https://git.coding.net/zxy_coding/94imm.git" target="_blank" rel="noopener">https://git.coding.net/zxy_coding/94imm.git</a></p>
<p><strong>环境要求：</strong><code>Python 3.6</code>、<code>Mysql 5.5+</code>、<code>Nginx</code>/<code>Apache</code>(非必需)，本文只说<code>CentOS 6/7</code>、<code>Debian 8/9</code>。</p>
<p>这里使用宝塔和手动<code>2</code>种方法安装，如果你需要快速上手就使用手动安装，想操作方便就宝塔，自行选择。</p>
<h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p><strong>1、使用宝塔安装</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>Mysql 5.5+</code>、<code>Nginx</code>(如果你使用域名的话，就需要安装)。</p>
<p>然后点击左侧数据库-添加数据库，设置好数据库信息。</p>
<p><strong>2、手动安装环境</strong></p>
<pre><code>提示：为了简单，这里采用Mysql 5.7+Caddy环境，这里也是，如果你需要使用到域名才安装Caddy。</code></pre><p>这里博主是用的<code>Mysql 5.7</code>，如果内存很低，<code>5.7</code>跑起来会有点吃力，建议增加点虚拟内存，可以用下<code>Swap</code>一键脚本→传送门。</p>
<p>安装<code>Mysql 5.7</code>：</p>
<pre><code>#CentOS 6系统
rpm -ivh http://repo.mysql.com/mysql57-community-release-el6.rpm
yum install mysql-community-server -y
service mysqld start
chkconfig mysqld on

#CentOS 7系统
rpm -ivh http://repo.mysql.com/mysql57-community-release-el7.rpm
yum install mysql-community-server -y
systemctl start mysqld
systemctl enable mysqld

#Debian 8系统
echo &apos;deb http://repo.mysql.com/apt/debian/ jessie mysql-5.7
deb-src http://repo.mysql.com/apt/debian/ jessie mysql-5.7&apos; &gt;/etc/apt/sources.list.d/mysql.list
wget https://repo.mysql.com/RPM-GPG-KEY-mysql
apt-key add RPM-GPG-KEY-mysql
apt update
#安装的时候会要你输入数据库密码
apt install mysql-server -y

#Debian 9系统
echo &apos;deb http://repo.mysql.com/apt/debian/ stretch mysql-5.7
deb-src http://repo.mysql.com/apt/debian/ stretch mysql-5.7&apos; &gt;/etc/apt/sources.list.d/mysql.list
wget https://repo.mysql.com/RPM-GPG-KEY-mysql
apt-key add RPM-GPG-KEY-mysql
apt update
#安装的时候会要你输入数据库密码
apt install mysql-server -y</code></pre><p>这里<code>CentOS</code>安装<code>MySQL 5.7</code>的时候会生成一个随机密码，使用命令查看：</p>
<pre><code>grep &quot;password&quot; /var/log/mysqld.log
#大致信息，******为密码
[Note] A temporary password is generated for root@localhost: ******</code></pre><p>然后<code>CentOS</code>还需要修改数据库密码：</p>
<pre><code>#登录数据库，输入你上面看到的密码
mysql -u root -p
#稍微设置密码难度下，不然修改的时候，密码必须很复杂才行
mysql&gt; set global validate_password_policy=0;
mysql&gt; set global validate_password_length=4;
#修改密码为moerats
mysql&gt; set password=password(&quot;moerats&quot;);
#退出数据库
mysql&gt; exit;

#CentOS 6重启数据库
service mysqld restart
#CentOS 7重启数据库
systemctl restart mysqld</code></pre><p>创建新的数据库，使用命令：</p>
<pre><code>#创建94imm数据库，moerats为数据库密码，自行修改
mysql -uroot -pmoerats
mysql &gt; create database 94imm;
#退出
mysql &gt; exit;</code></pre><p>此时<code>Mysql 5.7</code>算是安装完成了。</p>
<p>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><h2 id="搭建站点"><a href="#搭建站点" class="headerlink" title="搭建站点"></a>搭建站点</h2><p><strong>1、安装Python3</strong><br>为了避免下面依赖安装出错，这里就不使用软件包安装<code>Python3</code>了，直接就使用脚本安装，使用命令：</p>
<pre><code>#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</code></pre><p><strong>2、搭建站点</strong></p>
<pre><code>#下载源码
git clone https://git.coding.net/zxy_coding/94imm.git
#安装依赖
cd 94imm
pip3 install -r requirements.txt
#导入目录的数据库文件，这里数据库名94imm，用户名和密码root、moerats，请自行修改
mysql -uroot -pmoerats 94imm &lt; silumz.sql
#编辑配置文件
nano silumz/settings.py</code></pre><p>填上你的数据库信息，大致如下：</p>
<pre><code>DATABASES = {
    &apos;default&apos;: {
        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,
        &apos;NAME&apos;: &apos;94imm&apos;,
        &apos;USER&apos;: &apos;root&apos;,
        &apos;PASSWORD&apos;: &apos;moerats&apos;,
        &apos;HOST&apos;: &apos;127.0.0.1&apos;,
        &apos;PORT&apos;: &apos;3306&apos;,
    }
}</code></pre><p>再使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>编辑启动配置文件，使用命令：</p>
<pre><code>nano uwsgi.ini</code></pre><p>然后看着改，大致修改如下：</p>
<pre><code>#配置文件默认是将源码放在root目录，如果在其他目录可以自行修改
#如果你要是用ip访问，将127.0.0.1:8000改成http=0.0.0.0:8000，端口也可以改</code></pre><p>启动程序：</p>
<pre><code>uwsgi --ini uwsgi.ini</code></pre><p>此时站点地址为<code>ip:8000</code>。</p>
<p><strong>3、域名反代</strong></p>
<pre><code>提示：不需要域名的跳过该步骤</code></pre><p>宝塔面板设置：<br>然后点击左侧网站-添加站点，填上你的域名，其他默认，然后点击域名设置-反向代理，<code>url</code>设置<code>http://127.0.0.1:8000</code>即可。然后打开你的域名就可以看到站点了。</p>
<p><code>Caddy</code>设置：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！且会自动给你配置ssl证书
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:8000
}&quot; &gt; /usr/local/caddy/Caddyfile

#启动Caddy
/etc/init.d/caddy start</code></pre><h2 id="采集发布"><a href="#采集发布" class="headerlink" title="采集发布"></a>采集发布</h2><p>光搭建站点是不够的，还需要采集并自动发布图片，爬虫和发布脚本在<code>crawler</code>目录，详细脚本说明：</p>
<pre><code>crawler开头的脚本为图片采集爬虫，然后也会自动给你发布到文章，目前有6个美女站的爬虫脚本，后期可能会更多
AutoPost.py为自动发布脚本，将你本地的图片自动发布到搭建的站点中
Compress.py为图片压缩脚本，可以自动压缩图片，减少硬盘占用</code></pre><p>这里以<code>mm131</code>爬虫脚本为例，先编辑<code>crawler_mm131.py</code>爬虫脚本。</p>
<pre><code>cd crawler
nano crawler_mm131.py</code></pre><p>大致修改如下：</p>
<pre><code>#修改为你的数据库连接信息
dbhost = {
    &quot;host&quot;: &quot;127.0.0.1&quot;,
    &quot;dbname&quot;: &quot;94imm&quot;,
    &quot;user&quot;: &quot;root&quot;,
    &quot;password&quot;: &quot;moerats&quot;
}
#修改爬取的页数和图片保存路径，page为页数，img_path为路径，自行修改
for i in [{&quot;page&quot;: 1, &quot;type&quot;: &quot;xinggan&quot;, &quot;type_id&quot;: 1}, {&quot;page&quot;: 1, &quot;type&quot;: &quot;qingchun&quot;, &quot;type_id&quot;: 3},
          {&quot;page&quot;: 1, &quot;type&quot;: &quot;xiaohua&quot;, &quot;type_id&quot;: 3}, {&quot;page&quot;: 1, &quot;type&quot;: &quot;chemo&quot;, &quot;type_id&quot;: 1},
          {&quot;page&quot;: 1, &quot;type&quot;: &quot;qipao&quot;, &quot;type_id&quot;: 2}, {&quot;page&quot;: 1, &quot;type&quot;: &quot;mingxing&quot;, &quot;type_id&quot;: 1}]:
spider=Spider(page_num=i.get(&quot;page&quot;),img_path=&apos;/static/images/mm131/&apos;,thread_num=10,type_id=i.get(&quot;type_id&quot;),type=i.get(&quot;type&quot;))</code></pre><p>然后开始采集并自动发布到程序，使用命令：</p>
<pre><code>#其它爬虫使用方法也都一样
python3 crawler_mm131.py</code></pre><p>然后就可以再图片站看到你的图片了，要是不显示的话，可以尝试删除<code>cache</code>目录里的缓存文件。</p>
<p>如果你的硬盘空间很小，可以使用压缩脚本压缩下，使用命令：</p>
<pre><code>#压缩时，会要你选择图片等路径
python3 Compress.py</code></pre><p>如果压缩报错<code>No module named &#39;PIL&#39;</code>，那需要先使用命令<code>pip3 install Pillow</code>。</p>
<p>如果你要发布你本地的图片，就需要编辑<code>AutoPost.py</code>，填上你的数据库信息，再使用<code>python3 AutoPost.py</code>发布即可。</p>
<p>最后你运行爬虫脚本的时候出现<code>UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode</code>错误，那就需要先将系统的默认语言环境编码设置为<code>UTF-8</code>格式，使用命令：</p>
<pre><code>echo &apos;export LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8&apos; &gt;&gt; /etc/profile
source /etc/profile</code></pre><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><p>对于修改模板，目前模板总共有<code>3</code>套，位于<code>templates</code>文件夹下，需要先修改<code>silumz</code>下<code>settings</code>文件中的模板配置。</p>
<pre><code>#94imm为模板名
TEMPLATES = [
{
    &apos;BACKEND&apos;: &apos;django.template.backends.django.DjangoTemplates&apos;,
    &apos;DIRS&apos;: [os.path.join(BASE_DIR, &apos;templates&apos;+&quot;/&quot;+&quot;94imm&quot;)]</code></pre><p>然后将模板目录下的<code>pagination.html</code>文件放入<code>python</code>安装目录的<code>pagination</code>下。</p>
<p>一般为<code>/usr/local/lib/python3.6/site-packages/dj_pagination/templates/pagination</code></p>
<p>然后自己修改模板，模板为<code>html</code>文件，可在页面添加统计代码和广告代码。</p>
<pre><code>https://www.dablog.cn/index.php/archives/7/
https://sunsea.im/139/94imm_tips/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云：1GB内存/25GB硬盘/1TB流量/KVM/30Mbps/香港/月付24元</title>
    <url>/2297/</url>
    <content><![CDATA[<p><strong>说明：</strong>国内最大云主机服务商，阿里云发布的超级给力活动；数据中心为香港/新加坡等，带宽<code>30M</code>、流量<code>1T</code>起步，基于<code>kvm</code>虚拟架构的轻量<code>VPS</code>服务器，可以用来建站、跑程序，内网穿透、以及翻<code>Q</code>都无压力，性价比超级无敌了，有需求的赶快上车！</p>
<pre><code>#大致线路
去程：电信走日本NTT，联通移动直连
回程: CN2
香港测试IP：149.129.84.1</code></pre><h2 id="套餐"><a href="#套餐" class="headerlink" title="套餐"></a>套餐</h2><pre><code>#暂时只列举轻量1G和2G，做站的话建议2G内存或更高
vCPU：1
内存：1GB
空间：25GB SSD
流量：1TB/月(30 Mbps端口)
IPv4：1
24元/月

vCPU：1
内存：2GB
空间：50GB SSD
流量：2TB/月(30 Mbps端口)
IPv4：1
34元/月</code></pre><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><pre><code>轻量云服务器管理地址：https://swas.console.aliyun.com/#/servers

#推荐两个脚本
阿里云CentOS 7系统一键净化脚本：https://www.southcat.net/archives/625/
纯净版Debian/Ubuntu/CentOS重装脚本：https://www.southcat.net/archives/574/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>阿里云CentOS 7系统一键净化脚本，可优化并净化阿里云ECS实例</title>
    <url>/2098/</url>
    <content><![CDATA[<p><strong>说明：</strong>阿里云估计很多人用过，系统里面一堆监控什么的很恶心，对这个比较在意的可以适当处理下，可以用<code>Vicer</code>大佬的纯净版系统安装脚本，查看：Linux VPS纯净版Debian/Ubuntu/CentOS/Win一键安装脚本，不过就是没<code>CentOS 7</code>，还好的是<code>LOC</code>有大佬特意针对阿里云<code>CentOS 7</code>做了个净化脚本，可以帮我们移除一些监控等不必要的功能。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>该脚本可以移除阿里云监控程序，并使用防火墙阻止不良<code>IP</code>，以保护您的隐私。切换到其他<code>yum</code>存储库。阿里云镜像缺乏最新的软件包，使用这些旧软件包可能会导致安全漏洞。并保证在已有功能前提下实现真正的一键净化，并适配到所有<code>CentOS 7</code>机器，可以优化并净化所有自带模板的<code>CentOS 7</code>系统。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul>
<li>当然是帮你保持系统是当前最新的，目前最新系统为：<code>CentOS 7.5</code>，阿里还未提供<code>CentOS 7.5</code>的系统模板。</li>
<li>将该系统的<code>DNS</code>永久改为<code>1.1.1.1/8.8.8.8</code>，一个宣称不收集用户隐私，一个备用信仰加成，防止服务商对服务器访问内容的监控。</li>
<li><code>Yum Mirror</code>修改为<code>CentOS</code>官方源，自动适配离机房距离较近的源，全球服务器均可通用。</li>
<li>增加对云盾新<code>IP</code>段的屏蔽。</li>
<li>增加对云盾新组件的清除工作。</li>
<li>拓展源<code>epel</code>的更新。</li>
<li><code>MOTD</code>登陆提示的规范化。</li>
<li>净化完可根据提示一键更换内核安装<code>LotServer</code>。</li>
</ul>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p><strong>Github地址：</strong><a href="https://github.com/MeowLove/AlibabaCloud-CentOS7-Pure-and-safe" target="_blank" rel="noopener">https://github.com/MeowLove/AlibabaCloud-CentOS7-Pure-and-safe</a></p>
<p>使用<code>root</code>运行以下命令：</p>
<pre><code>#全新的安装
sudo curl -sSL https://raw.githubusercontent.com/MeowLove/AlibabaCloud-CentOS7-Pure-and-safe/master/download/kill/New_installation.sh | sudo bash

#快照/镜像恢复
sudo curl -sSL https://raw.githubusercontent.com/MeowLove/AlibabaCloud-CentOS7-Pure-and-safe/master/download/kill/Snapshot_image.sh | sudo bash

#更换内核并安装LotServer
sudo curl -sSL https://raw.githubusercontent.com/MeowLove/AlibabaCloud-CentOS7-Pure-and-safe/master/download/LotServer/install.sh | sudo bash</code></pre><p><strong>说明：</strong></p>
<pre><code>#全新的安装
适用于在你的服务器控制面板刚刚安装完的系统。执行这个。

#快照恢复
适用使用过全新安装净化脚本的系统，于备份后恢复时执行(即使用了服务商提供的快照/你自建镜像服务恢复了系统恢复系统后，会再次被插入服务商的源和DNS以及阿里会插入云盾等安全加固软件)。


systemctl stop firewalld.service
systemctl disable firewalld.service</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>随心搜：一个可以搜索磁力，百度及各大网盘所有资源的工具</title>
    <url>/1581/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近到处找比较老的电视剧资源，翻来翻去最后发现了这个东西，功能挺多，挺方便，想搜什么就可以搜什么，就分享下。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>随心搜是一款多功能资源搜索神器，它可以帮助你进行百度网盘搜索、磁力搜索、文库搜索、其他网盘搜索和自定义搜索，你只需要输入想要搜索的关键词，然后点击搜索，他就能帮你快速搜索到所有你想要的资源，各种资源都有。然后点击你想要的资源，就可以打开网盘的分享地址进行资源下载了。<br><img src="https://www.southcat.net/usr/picture/suixinsou.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>随心搜本地下载：</strong>随心搜3.3.3</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>零基础的萌新搭建属于自己的Typecho/WordPress等博客教程</title>
    <url>/2359/</url>
    <content><![CDATA[<p><strong>说明：</strong>一直以来老有同学问博主怎么搭建博客，最好出个教程，然后就拖到了现在，这里就发个超小白教程，适合对建站不懂又想拥有一个自己的博客的同学，有闲置的<code>VPS</code>服务器的也可以搭建玩玩，不然就很浪费了。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><pre><code>#不想折腾的，直接选择国外注册域名和国外服务器
1、一个域名
域名可以自己随便选择一个后缀，如果想好好做博客，也想百度收录快的，建议首选com、net，cn也行；不考虑到收录什么的，就随便选个适合自己的。

注册的话，国内的可以选择阿里云、腾讯云，不过需要实名；不想实名的直接选择国外Namesilo、Namecheap注册商等。

2、一个VPS服务器
这里也可以选择虚拟主机，不过用起来不灵活，限制也多，所以推荐使用VPS服务器搭建。

对于服务器选择，一般分为国内服务器和国外服务器，大致区别如下：
1)、国内服务器需要域名备案才能使用，缺点是价格贵(学生机会便宜些)，带宽低；优点是国内访问很稳定，同时也可以使用国内CDN加速。
2)、国外服务器不需要域名备案，缺点是网络可能会经常波动(钱加够的话，也许可以解决)；优点大概是比国内便宜，带宽足。
3)、香港服务器也是不需要备案的，访问速度和国内差不多，如果不想备案，可以直接选择香港服务器。</code></pre><p>准备好了域名后，先去域名商后台，找到<code>DNS</code>(解析)设置，解析域名的<code>A</code>记录到服务器的<code>ip</code>地址。</p>
<pre><code>#提示：这里可以解析主域名，比如southcat.net，也可以解析二级域名，比如ty.southcat.net、xx.southcat.net。解析的是什么域名，到时候就使用什么域名。</code></pre><p>解析好了后，等待片刻解析就生效了。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>先去<code>VPS</code>服务器后台，重装个服务器，这里建议选择<code>CentOS 7</code>系统。</p>
<p>然后使用<code>SSH</code>客户端(比如<code>Xshell</code>)登录<code>VPS</code>，使用命令：</p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后会直接在<code>SSH</code>客户端显示后台信息。<br><img src="https://www.southcat.net/usr/picture/build_blog(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<pre><code>提示：如果我们后续未修改密码却忘记了密码的话，可以在SSH客户端使用命令bt default来查看安装后的默认后台信息。</code></pre><p>然后登陆后台，这时候宝塔会提示让我们选择环境。<br><img src="https://www.southcat.net/usr/picture/build_blog(2).png" alt="请输入图片描述" title="请输入图片描述"><br>这里建议选择<code>LNMP</code>，环境为<code>Nginx 1.15</code>、<code>PHP 7.2</code>、<code>Mysql 5.5</code>，如果内存<code>1G</code>建议选择<code>Mysql 5.6</code>、<code>2G</code>选择<code>5.7</code>。选择好了后点击一键安装即可。</p>
<pre><code>提示：如果你弹不出这个环境安装提示，可以点击左侧软件管理，再手动选择安装。</code></pre><p>安装环境的时候等待时间可能会有点长，可以点击左上角红色的消息盒子查看进度，也可以通过左侧软件管理查看进度。<br><img src="https://www.southcat.net/usr/picture/build_blog(3).png" alt="请输入图片描述" title="请输入图片描述"><br>安装完成后，点击左侧软件管理-宝塔插件，安装<code>宝塔一键部署源码</code>，装好后点击设置。<br><img src="https://www.southcat.net/usr/picture/build_blog(4).png" alt="请输入图片描述" title="请输入图片描述"><br>然后选择博客一栏，会出现一些常用的博客程序。<br><img src="https://www.southcat.net/usr/picture/build_blog(5).png" alt="请输入图片描述" title="请输入图片描述"><br>根据自己的喜好选择一个博客程序，然后点击<code>一键部署</code>。</p>
<pre><code>#关于程序选择，这里建议首选Wordpress或者Typecho，大致区别如下：
Wordpress：使用人数全球最多，插件、模板都多，可定制性强，不过收费主题都有点贵。
Typecho：也就是博主现在使用的程序，轻巧，后台简洁，挺适合做个人博客，但搞其它的就不适合了。</code></pre><p>然后会要你填入域名，也就是你解析到这个服务器<code>ip</code>的域名。<br><img src="https://www.southcat.net/usr/picture/build_blog(6).png" alt="请输入图片描述" title="请输入图片描述"><br>提交后，初步算安装完成了，然后记住给你的数据库名、用户名和密码。<br><img src="https://www.southcat.net/usr/picture/build_blog(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<pre><code>提示：如果忘记了数据库信息，可以点击面板左侧-数据库进行查看。</code></pre><p>再点击左侧的网站，找到你的域名，点击设置。<br><img src="https://www.southcat.net/usr/picture/build_blog(8).png" alt="请输入图片描述" title="请输入图片描述"><br>再点击伪静态，选择自己所安装的程序名称，比如<code>Typecho</code>，再点击保存即可。<br><img src="https://www.southcat.net/usr/picture/build_blog(9).png" alt="请输入图片描述" title="请输入图片描述"><br>此时到这里基本上就算部署完成了，然后打开你的域名，填入数据库信息，管理员信息安装即可。</p>
<p>如果你还想域名有逼格点，比如浏览器那里显示一把小绿锁，那么再点击域名设置，找到<code>SSL</code>，填入邮箱，点击申请，然后再开启右上角的强制<code>HTTPS</code>。<br><img src="https://www.southcat.net/usr/picture/build_blog(10).png" alt="请输入图片描述" title="请输入图片描述"><br>此时，你在浏览器上也有了小绿锁。</p>
<p>最后由于博主使用的是<code>Typecho</code>，所以这里提示下：</p>
<pre><code>插件和模板可以去官方论坛查找，地址：http://forum.typecho.org/。

#如果要收费模板的话，这里推荐几款，均价50左右
Handsome主题：https://www.ihewro.com/archives/489/，也就是本博客主题
Yodu主题：https://qqdie.com/archives/yodu.html
Mirages主题：https://get233.com/archives/mirages-intro.html


1、数据库备份
点击左侧数据库，找到博客所使用的数据库，点击导出就行了。

2、根目录备份
一般根目录路径为/www/wwwroot/www.southcat.net，然后通过左侧的文件，找到该目录，点击全选，压缩，再下载本地即可。</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>小内存VPS一键安装Typecho/WordPress/Zblog/Kodexplorer及整站备份等</li>
<li>小内存VPS安装Caddy+PHP 7+Sqlite 3环境，并快速搭建Typecho博客</li>
<li>VPS服务器如何优化/加快网站的访问速度</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>魔改BBR一键安装脚本 for Debian/CentOS</title>
    <url>/1799/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Google BBR</code>就不过多介绍了，是一个<code>TCP</code>加速优化工具，而为了加速国内与目标服务器间的网络，让<code>BBR</code>发挥出更大（暴力）的实力，魔改就此诞生。其实之前发过<code>Vicer</code>大佬制作的魔改脚本，可惜无<code>CentOS</code>系统的，这次就弥补下不足，本脚本由<code>nanqinlang</code>大佬制作。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>项目地址：</strong><a href="https://github.com/nanqinlang-tcp/tcp_nanqinlang" target="_blank" rel="noopener">https://github.com/nanqinlang-tcp/tcp_nanqinlang</a></p>
<p><strong>系统要求：</strong>适用于<code>Debian 7+</code>、<code>CentOS 6/7</code></p>
<p>1、这个是新手简装版本，只需 运行脚本第一项+重启+运行脚本第二项。一般用户只需使用此版本，并建议使用该版本。此版本不需要编译的过程，直接安装<code>v4.10.2</code>内核。</p>
<pre><code># Debian 7+
# fool
wget https://github.com/tcp-nanqinlang/general/releases/download/3.4.1/tcp_nanqinlang-fool-1.2.1.sh
bash tcp_nanqinlang-fool-1.2.1.sh</code></pre><p>2、这个是进阶版本。提供自定义内核版本功能，只建议有用户自己指定安装的内核的版本需求的用户使用，例如你想安装<code>v4.12.10</code>版本的内核，就需要使用这个版本，且最高支持<code>4.16</code>内核。</p>
<pre><code># Debian 7+
# pro
wget https://github.com/tcp-nanqinlang/general/releases/download/3.4.5.1/tcp_nanqinlang-pro-3.4.5.1.sh
bash tcp_nanqinlang-pro-3.4.5.1.sh</code></pre><p>3、这个是<code>CentOS</code>平台的版本，尚处于测试版，请勿在重要环境使用。</p>
<pre><code># CentOS 6/7
# only 64 bit
wget https://raw.githubusercontent.com/tcp-nanqinlang/general/master/General/CentOS/bash/tcp_nanqinlang-1.3.2.sh
bash tcp_nanqinlang-1.3.2.sh</code></pre><h2 id="使用简介"><a href="#使用简介" class="headerlink" title="使用简介"></a>使用简介</h2><p>安装时会出现四个选项供以选择<br><img src="https://www.southcat.net/usr/picture/BBR_nql(1).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>1、安装内核</strong><br>选择第一个选项用于安装内核。在安装内核时，请注意区别：</p>
<pre><code>#Debian系统
下载内核安装包至/home/tcp_nanqinlang，脚本第二项运行完成后移除该文件夹。
系统中只会留下新安装的内核，原有的所有内核都会被移除。
对于pro版本，安装的内核版本由你指定，若不确定应输入哪个版本号，直接回车即可，会安装v4.10.10版本内核。
指定安装内核版本为v4.13.x时，会使用新版本内核适配的源码。
本魔改项目暂不支持v4.14及以上版本内核。
此命令执行完毕后，请根据脚本内提示确认内核是否已安装完毕。

#CentOS系统
CentOS的脚本，套路和上面Debian的大致相当，主要在于以下区别：
不会询问安装版本号，直接安装内核版本v4.12.10。
内核安装完成后，系统中会装有linux-ml-4.12.10、linux-ml-devel-4.12.10、linux-ml-headers-4.12.10三个内核。
内核安装完成后，系统中依旧会留有旧版本的linux-x.xx.xx-ml内核，这些残留的内核，会在执行第二个选项 “安装并启用算法” 后被移除。</code></pre><p>内核安装示例：<br><img src="https://www.southcat.net/usr/picture/BBR_nql(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/BBR_nql(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>确认内核更换完成后，重启你的<code>vps</code>。</p>
<p><strong>2、开启算法</strong><br>重启开机后，再次运行该脚本，选择第二项: 安装并开启算法。<br><img src="https://www.southcat.net/usr/picture/BBR_nql(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>3、检查运行状态</strong><br>选项三用于检查<code>tcp_nanqinlang</code>是否已被加载（<code>installed</code>）和启用（<code>running</code>）。</p>
<p><strong>4、卸载BBR</strong><br>不会删除已安装的内核，仅移除<code>sysctl.conf</code>中的相关设置项。然后重启机器后，魔改<code>BBR</code>才会停止运作。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol>
<li>一定要在执行完成安装内核并重启<code>vps</code>后，才能执行安装并启用算法。</li>
<li>卸载命令不会改动内核。</li>
<li>若<code>pro</code>版本的编译过程报错，请留言。</li>
</ol>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>魔改Google BBR一键安装脚本，比正常版BBR强</title>
    <url>/1590/</url>
    <content><![CDATA[<p><strong>说明：</strong>本方法出自于<code>hostloc</code>论坛大佬<code>Yankee</code>发布的<code>BBR</code>魔改，并由<code>Vicer</code>博主制作的一键包。魔改基本就是修改<code>BBR</code>源码，调整参数，使其更强劲。</p>
<p><strong>更新：</strong><br>[2017.07.25]<br>修复一个由检测<code>gcc</code>版本引起的不可预料的错误。<br>[2017.07.15]<br>自动检测<code>gcc</code>版本，如果<code>gcc</code>版本大于4.9的将不会再安装<code>gcc</code>。<br>[2017.07.12]<br>支持用户自行指定内核版本(需要与<code>-f</code>命令同时使用)。</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>1、执行过程中会重新编译模块。<br>2、模块默认为开机自动加载。<br>3、模块名称:<code>tcp_bbr_powered</code>。<br>4、可用<code>modprobe tcp_bbr_powered</code>命令进行加载模块。<br>5、可执行<code>lsmod |grep &#39;bbr_powered&#39;</code>，结果不为空,则加载模块成功。<br>6、可执行<code>sysctl -w net.ipv4.tcp_congestion_control=bbr_powered</code>使用此模块。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>本方法已在<code>debian</code>及<code>ubuntu</code>上测试通过。</p>
<p><strong>提示：</strong>关于<code>CentOS</code>系统魔改请参考：BBR+BBR魔改+Lotsever(锐速)一键脚本 for Centos/Debian/Ubuntu。</p>
<p><strong>1、安装BBR并开启</strong><br>使用命令：</p>
<pre><code>wget --no-check-certificate -qO &apos;BBR.sh&apos; &apos;https://moeclub.org/attachment/LinuxShell/BBR.sh&apos; &amp;&amp; chmod a+x BBR.sh &amp;&amp; bash BBR.sh -f
# 备用地址
wget --no-check-certificate -qO &apos;BBR.sh&apos; &apos;https://www.southcat.net/usr/down/BBR.sh&apos; &amp;&amp; chmod a+x BBR.sh &amp;&amp; bash BBR.sh -f</code></pre><p><strong>2、魔改BBR</strong><br>一键地址默认是选择官方提供的最新版本的内核，如想要指定内核则运行指定内核版本一键包即可！</p>
<p>（1）一键地址</p>
<pre><code>wget --no-check-certificate -qO &apos;BBR_POWERED.sh&apos; &apos;https://moeclub.org/attachment/LinuxShell/BBR_POWERED.sh&apos; &amp;&amp; chmod a+x BBR_POWERED.sh &amp;&amp; bash BBR_POWERED.sh
# 备用地址
wget --no-check-certificate -qO &apos;BBR_POWERED.sh&apos; &apos;https://www.southcat.net/usr/down/BBR_POWERED.sh&apos; &amp;&amp; chmod a+x BBR_POWERED.sh &amp;&amp; bash BBR_POWERED.sh</code></pre><p>（2）指定内核版本(以<code>v4.12.9</code>内核版本为例)</p>
<pre><code>wget --no-check-certificate -qO &apos;BBR_POWERED.sh&apos; &apos;https://moeclub.org/attachment/LinuxShell/BBR_POWERED.sh&apos; &amp;&amp; chmod a+x BBR_POWERED.sh &amp;&amp; bash BBR_POWERED.sh -f v4.12.9
# 备用地址
wget --no-check-certificate -qO &apos;BBR_POWERED.sh&apos; &apos;https://www.southcat.net/usr/down/BBR_POWERED.sh&apos; &amp;&amp; chmod a+x BBR_POWERED.sh &amp;&amp; bash BBR_POWERED.sh -f v4.12.9</code></pre><p>安装完成即可！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>EasyEngine：VPS上最简单的创建WordPress站点</title>
    <url>/1539/</url>
    <content><![CDATA[<p><strong>说明：</strong>可以快速的安装<code>NGINX</code>、<code>PHP</code>、<code>MySQL</code>、<code>Postfix</code>环境，并创建单个或多个<code>wordpress</code>站点。同时，支持<code>HHVM</code>、<code>PageSpeed</code>，可以使<code>用W3Total Cache</code>、<code>WP Super Cache</code> 、<code>Nginx’s FastCGI Cache</code>等。</p>
<p><strong>系统要求：</strong>仅支持<code>Ubuntu 12.04+</code>、<code>Debian 7+</code></p>
<p><strong>1、安装EasyEngine</strong></p>
<pre><code>wget -qO ee rt.cx/ee &amp;&amp; sudo bash ee</code></pre><p><strong>2、创建wordpress站点</strong></p>
<pre><code>sudo ee site create example.com --wp</code></pre><p>也可创建各种缓存的<code>wordpress</code>站点，如<code>Nginx</code>缓存：</p>
<pre><code>sudo ee site create example.com --wpfc</code></pre><p>下面是详细的站点创建命令：</p>
<p>a、标准版</p>
<pre><code>ee site create example.com --wp # 安装无缓存的wordpress
ee site create example.com --w3tc # 安装w3-total-cache插件的wordpress
ee site create example.com --wpsc # 安装wp-super-cache插件的wordpress
ee site create example.com --wpfc # 安装nginx fastcgi_cache的wordpress
ee site create example.com --wpredis # 安装nginx redis_cache的wordpress</code></pre><p>b、使用子目录创建多个<code>wordpress</code></p>
<pre><code>ee site create example.com --wpsubdir # 安装无缓存的wordpress
ee site create example.com --wpsubdir --w3tc # 安装w3-total-cache插件的wordpress
ee site create example.com --wpsubdir --wpsc # 安装wp-super-cache插件的wordpress
ee site create example.com --wpsubdir --wpfc # 安装nginx fastcgi_cache的wordpress
ee site create example.com --wpsubdir --wpredis # 安装nginx redis_cache的wordpress</code></pre><p>c、使用二级域名创建多个<code>wordpress</code></p>
<pre><code>ee site create example.com --wpsubdomain # 安装无缓存的wordpress
ee site create example.com --wpsubdomain --w3tc # 安装w3-total-cache插件的wordpress
ee site create example.com --wpsubdomain --wpsc # 安装wp-super-cache插件的wordpress
ee site create example.com --wpsubdomain --wpfc # 安装nginx fastcgi_cache的wordpress
ee site create example.com --wpsubdomain --wpredis # 安装nginx redis_cache的wordpress</code></pre><p>d、创建非<code>WordPress</code>站点</p>
<pre><code>ee site create example.com --html # 创建静态站
ee site create example.com --php # 创建仅支持php的站点
ee site create example.com --mysql # 创建支持php &amp; mysql的站点</code></pre><p>e、创建使用<code>HHVM</code>的站点</p>
<pre><code>ee site create example.com --wp --hhvm # 创建使用HHVM的wordpress站点
ee site create example.com --php --hhvm # 创建使用HHVM的非wordpress、支持PHP的站点</code></pre><p>f、创建支持<code>PageSpeed</code>的站点</p>
<pre><code>ee site create example.com --wp --pagespeed # 创建使用PageSpeed的wordpress站点
ee site create example.com --php --pagespeed # 创建使用PageSpeed的非wordpress、支持PHP的站点</code></pre><p><strong>3、升级</strong></p>
<pre><code>ee update</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>eBesucher：利用闲置的VPS服务器挂机赚钱教程</title>
    <url>/1734/</url>
    <content><![CDATA[<p><strong>说明：</strong>相信很多人手上有很多闲置的<code>VPS</code>服务器，都不知道拿来干啥，其实我们可以用来挂机回本，让服务器充分得到利用。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Ebesucher</code>是德国目前最好的自动冲浪网站之一，用户可以通过自动冲浪、付费邮件等赚取点数 (<code>BTP</code>)，然后每<code>100000</code>点分数可以兑换两欧元。</p>
<p>关于点数说明：<br>高质量<code>IP</code>，一个小时可以挂10000+点分数。<br>中等质量<code>IP</code>，一个小时可以挂300-400点分数。<br>普通<code>IP</code>，一个小时可以挂50点分数。</p>
<p>引用某个挂机大神的原话：</p>
<pre><code>唯一不能避免就是沖人家網站被強制跳轉導致沖浪沒了
所以才設定30分鐘讓他重啟一次
就是檢查比較煩,要每台都開來看..
我都是看到點數急降才去檢查…</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>注册地址：</strong> <a href="https://www.ebesucher.com" target="_blank" rel="noopener">https://www.ebesucher.com</a><br><strong>系统：</strong><code>Debian7 x32</code></p>
<p>1、安装必要环境</p>
<pre><code>apt-get update
apt-get install -y xorg lxde-core tightvncserver firefox-esr</code></pre><p>2、创建一个<code>VNC</code>通用文件</p>
<pre><code>mkdir -p ~/.vnc
cat&gt;~/.vnc/xstartup&lt;&lt;EOF
#!/bin/sh
xrdb $HOME/.Xresources
xsetroot -solid black

EOF</code></pre><p>3、初始化<code>VNC</code>，并设置<code>VNC</code>密码</p>
<pre><code>tightvncserver :1</code></pre><p>4、安装<code>Flash</code>播放器</p>
<pre><code>#使用官方源安装
#参考地址 https://get.adobe.com/flashplayer/otherversions/
ARCH=&apos;i386&apos;
FLASHVER=&apos;27.0.0.130&apos; #如果下载出错，说明版本号已经更新，请使用备份源安装。
mkdir -p /usr/lib/mozilla/plugins
cd /usr/lib/mozilla/plugins
wget --no-check-certificate -qO- https://fpdownload.adobe.com/get/flashplayer/pdc/$FLASHVER/flash_player_npapi_linux.$ARCH.tar.gz |tar -zx libflashplayer.so

#直接使用备份源安装 v26.0.0.151_i386
mkdir -p /usr/lib/mozilla/plugins
wget --no-check-certificate -qO /usr/lib/mozilla/plugins/libflashplayer.so &apos;https://docs.google.com/uc?id=0B783U-qC53BDRVIwR2toOUlZNjQ&amp;export=download&apos;</code></pre><p>5、输入挂机地址就可以挂机啦</p>
<pre><code>firefox-esr --display=localhost:1.0 --new-tab http://www.ebesucher.com/surfbar/你的用户名 &gt;/dev/null 2&gt;&amp;1 &amp;</code></pre><p>6、可以进<code>VNC</code>界面查看情况<br>推荐使用<code>VNC Viewer</code>客户端，下载地址：点击下载</p>
<pre><code>IP:5901</code></pre><p>7、设置<code>Firefox</code><br>由于只安装了桌面的核心功能，所以有些部分操作功能会缺失，不过也不需要。<br>进入火狐的设置</p>
<pre><code>about:preferences</code></pre><p>进入火狐扩展页面</p>
<pre><code>about:addons</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Fantasy-field：一款二次元风格的轻量级微博图床程序</title>
    <url>/2282/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主最近分享了好几款图床程序，这里再分享个<code>Fantasy-field</code>(幻想领域)，一款基于新浪的<code>PHP</code>图床程序，界面风格和国外比较火的<code>Chevereto</code>差不多，都挺好看的，也支持用户注册，限制游客上传等功能，上传的图片会保存在新浪图床，可以为小内存<code>VPS</code>节省很多空间。对图床的美观有要求，也想节省空间的人来说，貌似是个挺好的选择。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Fantasy-field(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Fantasy-field(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在幻想领域中，图床图片全部托管在新浪云，每张图片都有多张不同级别的缩略图，这便是幻想领域的最大特色之一。</p>
<p>拥有较为完善的用户系统与管理员系统。管理员在后台拥有完全权限，对网站的一切基本配置。</p>
<p>我的图库，将会罗列出用户自己所上传的所有图片。管理员则显示系统托管的所有图片。你可以在这里对图片进行删除、预览或者复制它，但删除仅仅只是不再出现在本系统中，图片仍然是存在于新浪之上，这点你是要知道的。</p>
<p>探索，它是前台对用户图片预览的功能，在这里你可以发现和找到你需要的东西。如果你不需要它，可以在后台进行关闭设置。</p>
<p>上传新浪图床并非无要求，它需要你进行登录验证，但我们拥有一套独立的新浪登录程序，不依赖任何扩展，并且无验证码，<code>cookie</code>过期将自动为你进行登录，为你解决一切后顾之忧，所以你必须在后台设置你的新浪账号密码才能正常使用。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/178146582/Fantasy-field" target="_blank" rel="noopener">https://github.com/178146582/Fantasy-field</a></p>
<p><strong>环境要求：</strong><code>PHP ≥ 5.6</code>、<code>Nginx</code>/<code>Apache</code>、<code>Mysql</code></p>
<p><strong>1、搭建环境</strong><br>搭建方法很多，可以使用军哥的<code>LNMP</code>→传送门、<code>OneinStack</code>→传送门、宝塔面板→使用教程，小白和不想折腾的建议直接宝塔面板。</p>
<p><strong>2、安装程序</strong><br>先添加域名和新建一个数据库，如果你是<code>Nginx</code>，还需要添加伪静态：</p>
<pre><code>location / {
    try_files $uri $uri/ /index.php?$query_string;
}
#或者
location / {
 if (!-d $request_filename){
 set $rule_0 1$rule_0;
 }
 if (!-f $request_filename){
 set $rule_0 2$rule_0;
 }
if ($rule_0 = &quot;21&quot;){
 rewrite ^/(.*)$ /index.php?/$1 last;
 }
}</code></pre><h2 id="相关修改"><a href="#相关修改" class="headerlink" title="相关修改"></a>相关修改</h2><pre><code>#大部分都可以直接在后台修改，少部分需要通过文件修改
版权文件：/application/controller/Home/IndexController.class.php，需解密，不过最好保留下方的版权
首页背景图片：/application/view/Home/style/main.css
背景图片嵌入代码：/application/view/Home/details.php</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><pre><code>#邮件发送失败
1、先确定你的25端口是否被封禁，如果封掉，尝试让主机商启用(如果不启用就换服务器)
2、关掉注册验证或者等下个版本更新（注：改端口是没有用的，465端口需要ssl支持）

#数据接口异常
1、伪静态重定向失败，请参考上方的再做设置
2、如果是nginx服务器， 找到路径/framework/core/Framework.php第51行到第53行注释或者删除，
3、具体代码如下(一般Apache服务器不会遇到这个问题，只有nginx的服务器才会)
if ($path != &apos;&apos;) {
$path = strstr(trim($_SERVER[&apos;REQUEST_URI&apos;],&apos;/&apos;),$path);
}

#上传图片失败，如提示：上传时发生了点小插曲，请打开控制器查看原因！
1、检查新浪账号密码是否正确
2、手动登录一次网页版新浪微博
3、新浪账号是否有发微博权限
4、配置成功后不允许在登录新浪任何平台(推荐使用小号)

#除新浪限制以外，上传图片还取决于服务器配置，请尝试修改以上配置信息进行解决
最大上传限制（upload_max_filesize）
允许上传文件最大数（max_file_uploads）
脚本最大执行时长（max_execution_time）
脚本最大消耗内存（memory_limit）
脚本最大解析时长 （max_input_time）


#验证码错误，如：明明登录的图像验证码输入是正确的，却一直提示验证码错误
1、查看php.ini配置中ESSINON目录是否存在
2、如果不存在则新建目录，如果存在则检查读写权限

#配置文件无法保存
检查程序目录是否有读写权限</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Filestash：一个多功能的Web端文件管理器，支持SFTP/GDrive/Dropbox/S3等</title>
    <url>/2337/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Filestash</code>是一个类似<code>Dropbox</code>的文件管理器，通过浏览器即可使用，可让您在任何位置管理数据。包括上传文件和文件夹，编辑文件，音频播放器，视频播放器，图像查看器。目前支持<code>FTP</code>、<code>SFTP</code>、<code>WebDAV</code>、<code>Git</code>、<code>S3</code>、<code>Minio Dropbox</code>、<code>Google Drive</code>，貌似以后还会增加<code>OneDrive</code>，而且登录访问速度很快，可以拿来修改<code>VPS</code>或网盘文件，或者看看里面的小电影也行，安装方法也挺简单的，就一个<code>Docker</code>，这里说一下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/filestash(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/filestash(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/filestash(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/filestash(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>官方文档：</strong><a href="https://www.filestash.app/docs" target="_blank" rel="noopener">https://www.filestash.app/docs</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、运行filetash</strong><br>这里官方是用的<code>docker-compose</code>运行的，为了安装更简单，博主就直接改成了<code>docker</code>运行，使用命令：</p>
<pre><code>#基本命令，建议把文章看完后再运行该命令
docker run --restart=always --name filetash -d -p 8334:8334 machines/filestash</code></pre><p>安装成功后可以直接通过<code>ip:8334</code>访问，这里<code>8334</code>端口可以自行修改，只需要修改上面的<code>-p</code>参数即可，比如改成<code>666</code>端口，则用<code>-p 666:8334</code>。</p>
<p>不过要想使用完整的功能，比如<code>GDrive</code>、<code>Dropbox</code>网盘，就需要配置下域名，网盘<code>api</code>客户端密匙等信息(获取方式看后面)。</p>
<p>以上说的几个信息可以直接在后台配置文件里修改，也可以加进上面的<code>docker</code>命令一起运行，比如：</p>
<pre><code>#变量参数如下，分别是域名，GDrive客户端ID和密匙，Dropbox客户端ID
-e APPLICATION_URL=&lt;app_url&gt;
-e GDRIVE_CLIENT_ID=&lt;gdrive_client&gt;
-e GDRIVE_CLIENT_SECRET=&lt;gdrive_secret&gt;
-e DROPBOX_CLIENT_ID=&lt;dropbox_key&gt;

#这里博主只需要用到GDrive，假设域名为file.southcat.net、ID和密匙为aaaa和bbbb，使用命令：
docker run --restart=always --name filetash -d \
  -e APPLICATION_URL=file.southcat.net \
  -e GDRIVE_CLIENT_ID=aaaa \
  -e GDRIVE_CLIENT_SECRET=bbbb \
  -p 8334:8334 \
  machines/filestash</code></pre><h2 id="获取GDrive客户端信息"><a href="#获取GDrive客户端信息" class="headerlink" title="获取GDrive客户端信息"></a>获取GDrive客户端信息</h2><p>首先启用<code>Google Drive API</code>，启用地址：点击进入。<br><img src="https://www.southcat.net/usr/picture/filestash(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>再创建一个<code>OAuth</code>客户端<code>ID</code>，创建地址：点击进入。创建的时候可能会有个<code>OAuth同意屏幕</code>选项，这里应用名称什么的随便填，授权的网域填你准备使用的域名主域名即可。<br><img src="https://www.southcat.net/usr/picture/filestash(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后开始创建客户端<code>ID</code>，注意已获授权的重定向<code>URL</code>格式要正确，比如博主用的<code>https://file.southcat.net</code>，那就在后面加个<code>/login</code>，这里也记得区分下开头。如果你用的<code>https</code>，需要填<code>https</code>，反之<code>http</code>。这里建议直接使用<code>https</code>。<br><img src="https://www.southcat.net/usr/picture/filestash(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后就可以获取<code>GDRIVE_CLIENT_ID</code>和<code>GDRIVE_CLIENT_SECRET</code>参数了。<br><img src="https://www.southcat.net/usr/picture/filestash(8).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>最后登录的时候，出现该授权窗口就说明配置成功了。<br><img src="https://www.southcat.net/usr/picture/filestash(9).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="获取Dropbox客户端信息"><a href="#获取Dropbox客户端信息" class="headerlink" title="获取Dropbox客户端信息"></a>获取Dropbox客户端信息</h2><p>这个博主用的少，就大概说下思路，有需求的可以尝试下，方法如下。</p>
<p>先创建第三方应用程序，创建地址：点击进入，接下来大致步骤：</p>
<pre><code>dropbox api - “Full Dropbox”或“App folder” - 您想要的任何名称 - 将重定向URI设置为https://domain.com/login</code></pre><h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>上面配置了域名是不能直接访问的，需要反代下才行，反代可以用<code>Nginx</code>、<code>Caddy</code>，这里只说宝塔和<code>Caddy</code>。如果你网站有宝塔，就可以使用宝塔进行反代，如果没有，建议使用第<code>2</code>种的<code>Caddy</code>反代，配置很快。</p>
<pre><code>提示：这里以8334端口做示范，如果你运行的时候更换了端口，就请自行修改</code></pre><p><strong>1、宝塔反代</strong><br>先进入宝塔面板，然后点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:8334</code>，再启用反向代理即可。然后需要配置<code>https</code>访问的，直接在站点配置启用<code>ssl</code>即可。</p>
<p><strong>2、Caddy反代</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请记得修改下方域名为自己的，再一起复制到SSH运行！

#http访问(这里不建议使用http)，该配置不会自动签发SSL
echo &quot;file.southcat.net {
 gzip
 proxy / 127.0.0.1:8334 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;file.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:8334 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<p>如果启动失败，可以查看下启动日志，使用命令：</p>
<pre><code>tail -f /tmp/caddy.log</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>File Run：多功能的VPS文件管理器</title>
    <url>/1684/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Files Run</code>是一款基于<code>PHP</code>写成的文件管理器。界面精美，支持众多插件，比如<code>Google Doc</code>，<code>Microsoft Office</code>,<code>Google Drive</code>，<code>AutoDesk</code>等。可以自由部署在任何一台装有<code>PHP</code>运行环境的<code>VPS</code>上。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><strong>1、文件办公</strong><br><img src="https://www.southcat.net/usr/picture/File%20Run(1).jpg" alt="请输入图片描述" title="请输入图片描述"><br><strong>2、照片图库管理</strong><br><img src="https://www.southcat.net/usr/picture/File%20Run(2).jpg" alt="请输入图片描述" title="请输入图片描述"><br><strong>3、音乐库管理</strong><br><img src="https://www.southcat.net/usr/picture/File%20Run(3).jpg" alt="请输入图片描述" title="请输入图片描述"><br><strong>4、插件支持</strong><br><img src="https://www.southcat.net/usr/picture/File%20Run(4).jpg" alt="请输入图片描述" title="请输入图片描述"><br>支持<code>Google Docs</code>，<code>Google Drive</code>，<code>AutoDesk</code>，<code>Office</code>等功能。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>finalspeed一键安装包</title>
    <url>/1512/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>官方介绍：</strong><br>FinalSpeed是高速双边加速软件,可加速所有基于tcp协议的网络服务,在高丢包和高延迟环境下,仍可达到90%的物理带宽利用率,即使高峰时段也能轻松跑满带宽.</p>
<p><strong>用途：</strong><br>可以压缩流量发包（双边），与Net-Speed多发包不同的是，FinalSpeed是压缩流量以增加传输成功率，这样就不会多耗费VPS流量，但是有可能对同机房的网络稳定造成影响。</p>
<p><strong>说明：</strong><br>之前finalspeed一直免费，而且作为openvz架构的救星，加速是非常暴力的，如今finalspeed作者开始卖收费版了，所以停止了免费版的更新，现在还是有不少人对finalspeed有需求的，于是91yun博主就重新做了这个一键安装包。</p>
<p>这个一键安装包完全重写了作者原来的安装代码，启动，停止代码。并加入了服务，可以使用 service finalspeed star | stop 来控制，加入了开机启动启动。总之，你需要做的就是真正的一键。一键安装包安装的服务器端版本为1.2.需要1.0的自行到github下载。</p>
<p><strong>注意：</strong><br>1.服务器必须同时部署FinalSpeed服务端才能进行加速.<br>2.客户端必须准确设置物理带宽,最终加速的速度不会超过所设置的带宽值,如果设置值高于实际带宽会造成丢包,导致速度变慢.<br>3.客户端首选tcp协议,如果udp不稳定,请切换到tcp.<br>4.若服务器为openvz架构,客户端只能选择udp协议,其他架构同时支持tcp和udp协议.<br>5.windows客户端使用tcp协议时不兼容锐速,停止锐速后可以正常运行.<br>6.FinalSpeed不提供加密功能,如有安全需求,不要直接加速明文协议.</p>
<p>github地址：<a href="https://github.com/91yun/finalspeed" target="_blank" rel="noopener">https://github.com/91yun/finalspeed</a></p>
<p>github里也有服务器端和客户端的文件。大家有需求可以自行去下载。</p>
<p>客户端的使用可以见《双边加速FinalSpeed客户端下载及教程 ，Openvz福音》</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>一键安装代码：</strong></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/finalspeed/master/install_fs.sh &amp;&amp; bash install_fs.sh</code></pre><p><strong>一键卸载代码：</strong></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/finalspeed/master/install_fs.sh &amp;&amp; bash install_fs.sh uninstall</code></pre><p><strong>finalspeed操作命令：</strong><br>启动： /etc/init.d/finalspeed start<br>停止命令：/etc/init.d/finalspeed stop<br>状态命令（查看日志）：/etc/init.d/finalspeed status</p>
<p><strong>finalspeed安装路径：</strong><br>安装路径： /fs/<br>日志路径：/fs/server.log</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Firefox Send：临时文件分享系统，下载1次或24小时后自动删除</title>
    <url>/1558/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Firefox Send</code>是<code>Firefox</code>推出了一個全新的档案分享服务，可以上传最大不超过<code>1GB</code>容量的文件并分享出去，而且不用注册登录，也不用自己删除，下载<code>1</code>次或<code>24</code>小时后自动删除，在上传的时候也进行加密，对于我们需要临时分享文件的人来说非常方便。</p>
<p><img src="https://www.southcat.net/usr/picture/send.firefox.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Gdrive：Linux下谷歌网盘同步工具、自动备份VPS文件到Google Drive</title>
    <url>/1697/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Gdrive</code>，<code>Linux</code>下上传、下载<code>Google Drive</code>文件的一款<code>CLI</code>工具，安装简单、使用方便。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>centos 7</code>下测试通过。<br>1、安装</p>
<pre><code>wget -O /usr/bin/gdrive &quot;https://docs.google.com/uc?id=0B3X9GlR6EmbnQ0FtZmJJUXEyRTA&amp;export=download&quot;
chmod +x /usr/bin/gdrive</code></pre><p>2、授权</p>
<pre><code>gdrive about</code></pre><p>然后会出现一串网址并询问验证码。<br><img src="https://www.southcat.net/usr/picture/Gdrive(1).jpg" alt="请输入图片描述" title="请输入图片描述"><br>将地址粘贴到浏览器并登陆账号，会返回一串代码。<br><img src="https://www.southcat.net/usr/picture/Gdrive(2).jpg" alt="请输入图片描述" title="请输入图片描述"><br>将代码粘贴到SSH下，然后会返回你的账户信息。<br><img src="https://www.southcat.net/usr/picture/Gdrive(3).jpg" alt="请输入图片描述" title="请输入图片描述"><br><code>gdrive</code>程序会自动将你的<code>token</code>保存在用户目录下的<code>.gdrive</code>目录中，所以如果不需要了记得把这个文件删掉。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>常用命令如下，更多查看<code>gdrive</code>官网：<a href="https://github.com/prasmussen/gdrive。" target="_blank" rel="noopener">https://github.com/prasmussen/gdrive。</a></p>
<p>1、列出<code>Google Drive</code>根目录下文件、文件夹</p>
<pre><code>gdrive list</code></pre><p>2、下载<code>Google Drive</code>根目录下文件到本地（<code>xxxx</code>为文件名）</p>
<pre><code>gdrive download xxxx</code></pre><p>3、下载<code>Google Drive</code>根目录下文件夹到本地（<code>xxx</code>为文件夹名）</p>
<pre><code>gdrive download xxx</code></pre><p>4、把本地文件上传到<code>Google Drive</code>根目录下（<code>xxxx</code>为文件名）</p>
<pre><code>gdrive upload xxxx</code></pre><p>5、在<code>Google Drive</code>根目录下创建文件夹（<code>xxx</code>为文件夹名）</p>
<pre><code>gdrive mkdir xxx</code></pre><h2 id="自动备份"><a href="#自动备份" class="headerlink" title="自动备份"></a>自动备份</h2><p>1、网站自动备份脚本（基于<code>Mysql</code>数据库）<br>脚本下载：googledrive.sh<br>修改以下部分：</p>
<pre><code>第3行：my-database-name改为自己的数据库名
第4行：my-database-user改为自己的数据库用户名
第5行：my-database-password改为自己的数据库用户名对应的密码
第7行：yourdomain.com改为自己的网站目录
第8行：/home/wwwroot改为自己的网站所在目录（即需备份目录为/home/wwwroot/yourdomain.com）
第9行：/backups改为备份文件存放目录
第35行：youremail@yourdomain.com修改为自己的邮箱</code></pre><p>2、更改权限</p>
<pre><code>chmod +x googledrive.sh</code></pre><p>3、创建定时任务</p>
<pre><code>vi  /etc/crontab</code></pre><p>添加</p>
<pre><code>0 2 * * * /backups/googledrive.sh</code></pre><p>以上备份脚本存放在<code>/backups/</code>下，每日<code>2</code>点备份。</p>
<p>4、重启crontab</p>
<pre><code>/etc/init.d/crond restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Forsaken Mail一个即收即毁的临时邮箱系统</title>
    <url>/532/</url>
    <content><![CDATA[<h2 id="Forsaken-Mail"><a href="#Forsaken-Mail" class="headerlink" title="Forsaken-Mail"></a>Forsaken-Mail</h2><p>一个即收即毁的临时邮箱系统。，支持自定义前缀，可以供他人使用。有<code>npm</code>和<code>docker</code>两种安装方式</p>
<h2 id="安装需求"><a href="#安装需求" class="headerlink" title="安装需求"></a>安装需求</h2><p>为了接收电子邮件，您的smtp服务器地址应该在某处可用。应将两条记录添加到DNS记录中。让我们假装我们想要收到以下电子邮件<code>*@subdomain.domain.com</code>： - 首先是MX记录：<code>subdomain.domain.com MX 10 mxsubdomain.domain.com</code>这意味着，对于地址的邮件服务器一样<code>*@subdomain.domain.com1会1mxsubdomain.domain.com</code>。 - 然后A记录：<code>mxsubdomain.domain.com A the.ip.address.of.your.mailin.server</code>。这告诉可以找到邮件服务器的IP地址。</p>
<h2 id="Let’s-Go"><a href="#Let’s-Go" class="headerlink" title="Let’s Go"></a>Let’s Go</h2><h3 id="NPM安装方式"><a href="#NPM安装方式" class="headerlink" title="NPM安装方式"></a>NPM安装方式</h3><ol>
<li><p>安装<code>npm</code></p>
<p>#Debian/Ubuntu系统<br>curl -sL <a href="https://deb.nodesource.com/setup_10.x" target="_blank" rel="noopener">https://deb.nodesource.com/setup_10.x</a> | bash -<br>apt-get install -y nodejs git screen</p>
<p>#Centos系统<br>curl -sL <a href="https://rpm.nodesource.com/setup_10.x" target="_blank" rel="noopener">https://rpm.nodesource.com/setup_10.x</a> | bash -<br>yum install nodejs git screen -y</p>
</li>
</ol>
<ol start="2">
<li><p>安装Forsaken Mail</p>
<p>git clone <a href="https://github.com/denghongcai/forsaken-mail.git" target="_blank" rel="noopener">https://github.com/denghongcai/forsaken-mail.git</a><br>cd forsaken-mail<br>npm install &amp;&amp; npm start</p>
</li>
</ol>
<blockquote>
<p>默认是3000端口 注意开放端口。</p>
</blockquote>
<h3 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h3><ol>
<li><p>安装Docker</p>
<p>#CentOS 6<br>rpm -iUvh <a href="http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm" target="_blank" rel="noopener">http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm</a><br>yum update -y<br>yum -y install docker-io<br>service docker start<br>chkconfig docker on</p>
<p>#CentOS 7、Debian、Ubuntu<br>curl -sSL <a href="https://get.docker.com/" target="_blank" rel="noopener">https://get.docker.com/</a> | sh<br>systemctl start docker<br>systemctl enable docker</p>
</li>
</ol>
<ol start="2">
<li><p>安装Forsaken Mail</p>
<p>docker run –name forsaken-mail -d -p 25:25 -p 3000:3000 denghongcai/forsaken-mail</p>
</li>
</ol>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>Flask+WebUploader实现快速将本地文件上传到VPS服务器</title>
    <url>/2250/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前博主就写过一篇将本地文件上传至<code>VPS</code>服务器的教程→点击查看，虽然该教程使用的<code>jQuery-File-Upload</code>很强大，但配置起来还是有点麻烦，现在再分享一个上传工具，使用<code>Flask</code>+<code>WebUploader</code>实现上传功能，使用起来很简单，但是不如<code>jQuery-File-Upload</code>稳定，不过各有所需，用来上传小文件是足矣的。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Flask+WebUploader.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/abbeyokgo/flask\_multi\_uploader" target="_blank" rel="noopener">https://github.com/abbeyokgo/flask\_multi\_uploader</a></p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#CentOS 6.x 32位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
yum install -y python-pip git

#CentOS 6.x 64位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum install -y python-pip git

#CentOS 7.x
yum install -y epel-release
yum install -y python-pip git
#如果CentOS 7安装出现No package python-pip available，可以用以下命令进行安装
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py

#Debian/Ubuntu系统
apt-get -y update
apt-get -y install python-pip git</code></pre><p><strong>2、运行程序</strong></p>
<pre><code>git clone https://github.com/abbeyokgo/flask_multi_uploader.git
cd flask_multi_uploader
#安装依赖
pip install -r requirements.txt
#启动程序，8888端口可自行修改
gunicorn -k eventlet -b 0:8888 server:app</code></pre><p>如果启动的时候提示<code>-bash: gunicorn: command not found</code>错误，需要先运行命令：</p>
<pre><code>pip install gunicorn</code></pre><p>然后再使用命令启动程序，接下来就可以访问<code>IP:8888</code>上传文件了，上传文件保存在<code>upload</code>文件夹。如果<code>Web</code>界面打不开，可能需要开启防火墙端口。</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8888 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8888/tcp --permanent
firewall-cmd --reload</code></pre><p>开启端口后你会发现，启动命令运行出错了，这时候使用<code>Ctrl+C</code>断开命令，再重新使用命令启动即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Goimg.io：一个免费的在线智能图片压缩瘦身工具</title>
    <url>/1779/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候我们上传图片到论坛或者当成头像的时候，会提示图片过大，这时候就需要将图片压缩一下了，记得很久前发过一个这样的工具，参考：TinyPNG-一个可以在线压缩图片的网站，今天又发现了一个很不错的在线图片压缩工具<code>Goimg.io</code>，差不多压缩的很极致了。不过对比了<code>TinyPNG</code>和<code>Goimg</code>，发现<code>TinyPNG</code>压缩的更极致，当然各有优点，具体就不多说了。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Frps一键安装脚本，带Frpc Windows便捷启动脚本</title>
    <url>/2284/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Frp</code>估计很多人都用过，一个高性能的内网穿透工具，支持<code>tcp</code>、<code>udp</code>、<code>http</code>、<code>https</code>协议，安装和使用教程可以直接查看官方中文文档→传送门，写的超详细。这里博主分享个某大佬写的<code>Frps</code>一键脚本，包括<code>Frpc Windows</code>便捷脚本，使用起来很方便，想快速上手的可以用下。</p>
<h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><p><strong>Github地址：</strong><a href="https://github.com/dylanbai8/frpspro" target="_blank" rel="noopener">https://github.com/dylanbai8/frpspro</a></p>
<p><strong>系统要求：</strong><code>CentOS 7+</code>、<code>Debian 8+</code></p>
<p>使用命令：</p>
<pre><code>wget -N --no-check-certificate git.io/f.sh &amp;&amp; chmod +x f.sh &amp;&amp; bash f.sh install</code></pre><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre><code>#一键修改token
bash f.sh token

#一键修改bind_port
bash f.sh bind_port

#一键修改vhost_http_port
bash f.sh vhost_http_port

#一键修改vhost_https_port
bash f.sh vhost_https_port</code></pre><h2 id="备用命令"><a href="#备用命令" class="headerlink" title="备用命令"></a>备用命令</h2><pre><code>#一键修改dashboard_port
bash f.sh dashboard_port

#一键修改dashboard_user
bash f.sh dashboard_user

#一键修改dashboard_pwd
bash f.sh dashboard_pwd

#一键修改bind_udp_port
bash f.sh bind_udp_port

#一键修改kcp_bind_port
bash f.sh kcp_bind_port

#一键修改subdomain_host(用于泛解析子域名)
bash f.sh subdomain_host

#一键卸载frps
bash f.sh uninstall</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><pre><code>#一键关闭 apache2、防火墙，释放80端口
bash f.sh unapache2

#注意，除http(s)以外，客户端frpc.ini内任何端口修改时须在以下范围内：
默认端口白名单：2000-3000,3001,3003,4000-50000

#转发远程桌面时，需先在本机开启允许远程协助
我的电脑-右键属性-远程设置

#需要注意frpc所在机器和frps所在机器的时间相差不能超过15分钟</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>一款带Web管理面板的内网穿透工具：lanproxy使用教程</li>
<li>使用Holer远程登录家里或公司内网的电脑</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>EagleGet：免费多线程下载工具，可高速下载百度云大文件</title>
    <url>/1763/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前介绍了很多下载神器，参考：百度网盘不限速下载工具-dpdownload v2.0.5，利用IDM工具高速下载百度云大文件教程，当然现在说的<code>EagleGet</code>和<code>IDM</code>也不仅仅是用来下载百度云文件的，只是用的百度网盘较多，就着重说下，其它很多文件都可以下载。而且速度基本都可以满。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>EagleGet</code>中文名为“猎鹰”，是一个用于<code>Windows</code>系统的下载管理器，支持多线程，<code>HTTP</code>/<code>HTTPS</code>/<code>FTP</code>等协议，缺点是不支持<code>BT</code>/<code>ed2k</code>，不过它是免费软件，还支持中文，这就很不错了。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><code>EagleGet</code>可以下载很多资源，具体怎么下应该都清楚，这里只说下如何下载百度云大文件的方法。</p>
<p>一般百度云盘大文件是获取不了直链的，意味着无法用浏览器和其它工具直接下载，只能从客户端下载，不过还好有很多大神，都制作了获取直链工具，之前也介绍了一种，参考：百度网盘直接下载助手 Tampermonkey（油猴）脚本。</p>
<p>我们获取百度云大文件直链后，就可以直接进行下载了。<br><img src="https://www.southcat.net/usr/picture/EagleGet(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>博主<code>50M</code>电信下载文件速度还是比较满意的，要是在百度网盘下载，估计就几百<code>K</code>左右。<br><img src="https://www.southcat.net/usr/picture/EagleGet(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Ghost博客一键安装脚本，使用Caddy作为反向代理，并自动签发SSL证书</title>
    <url>/1855/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Ghost</code>博客是一款精美，轻巧的博客，也支持<code>Markdown</code>语法，一般国外人使用的最多，之前发过<code>Ghost</code>一键脚本，是使用<code>Nginx</code>作为反向代理的，参考：Ubuntu/Debian/CentOS系统Ghost博客一键安装脚本，今天再发个使用<code>Caddy</code>作为反向代理的<code>Ghost</code>一键脚本，而且还能自动签发<code>Let’s Encrypt SSL</code>证书，这是之前那个脚本所没有的，还算不错。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/sayem314/Ghost-over-Caddy" target="_blank" rel="noopener">https://github.com/sayem314/Ghost-over-Caddy</a></p>
<p><strong>系统要求：</strong><code>Ubuntu 16.04</code>/<code>14.04</code>、<code>Debian 8</code>/<code>9</code>、<code>CentOS 6</code>/<code>7</code>，内存至少<code>512 MB</code>。</p>
<p><strong>1、更新系统</strong></p>
<pre><code>apt-get update &amp;&amp; apt-get upgrade</code></pre><p><strong>2、安装Ghost</strong></p>
<pre><code>wget https://git.io/setup-ghost.sh
bash setup-ghost.sh yourdomain.com
#脚本备份
https://www.southcat.net/usr/shell/ghost_caddy.sh</code></pre><h2 id="相关目录"><a href="#相关目录" class="headerlink" title="相关目录"></a>相关目录</h2><pre><code>Ghost目录：/var/caddywww/xx.com
Caddy配置文件：/etc/Caddyfile
Caddy日志文件：/var/log/caddy</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Gifski--Mac上的一款优秀的视频转gif软件</title>
    <url>/704/</url>
    <content><![CDATA[<h2 id="应用介绍"><a href="#应用介绍" class="headerlink" title="应用介绍"></a>应用介绍</h2><p>一款</p>
<p>Gifski是一款高质量的Mac平台视频转Gif工具，只需要一拖就行了。</p>
<h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><p><img src="https://img.southcat.net/southcat/Gifski.png" alt=""></p>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2>]]></content>
      <categories>
        <category>值得一试</category>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>GoIndex：一个无需服务器的Google Drive目录索引程序</title>
    <url>/2453/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>GoIndex</code>是一款部署在<code>Cloudflare Workers</code>的<code>Google Drive</code>目录索引程序，无需提供服务器，可以直接列出你谷歌网盘的所有文件，同时下载和访问也不需要挂梯子，也可以在线观看某些格式的视频文件，拿来玩玩也是可以的。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/cfwk(11).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/donwa/goindex" target="_blank" rel="noopener">https://github.com/donwa/goindex</a></p>
<p>首先肯定是需要一个谷歌网盘的，个人的话容量有点小，如果想容量大的，可以免费申请一个无限容量的<code>Google Drive</code>网盘，申请方法查看→传送门。</p>
<p>这里直接使用作者提供的快速部署方法，由于使用的是<code>rclone</code>的<code>google api</code>，高峰期难免会出现点问题，后面也会说下使用自己的<code>api</code>部署方法。</p>
<p><strong>1、获取Workers代码</strong><br>先访问：<a href="https://installen.gd.workers.dev/，点击`GET" target="_blank" rel="noopener">https://installen.gd.workers.dev/，点击`GET</a> AUTH CODE<code>，验证你的谷歌账号获取</code>Auth code`。</p>
<p>然后开始输入你的<code>Auth code</code>，其它可以先默认，然后点击<code>BUILD</code>获取你的代码。</p>
<p>开头的相关参数，可自行修改：</p>
<pre><code>#站点名称
&quot;siteName&quot;: &quot;GoIndex&quot;,
#根目录访问密码，如不设置留空即可
&quot;root_pass&quot;: &quot;moerats&quot;,
#根目录ID，默认整个网盘文件夹，如果只想列出根目录某个文件夹，那么填入该文件夹ID即可。
&quot;root&quot;: &quot;root&quot;</code></pre><p>文件夹<code>ID</code>获取方法，点击根目录某个文件夹，地址栏为：<code>https://drive.google.com/drive/folders/1C4Aro</code>，则<code>1C4Aro</code>为文件夹<code>ID</code>。</p>
<p><strong>2、部署到Workers</strong></p>
<p>首先登录<code>cloudflare</code>，官网→传送门，然后首页右侧可以看到<code>Workers</code>入口。<br><img src="https://www.southcat.net/usr/picture/cfwk(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>点进去后新建一个<code>Workers</code>子域名，也就是你的专属域名，填入确认后就更改不了了，所以别乱填。<br><img src="https://www.southcat.net/usr/picture/cfwk(2).png" alt="请输入图片描述" title="请输入图片描述"><br>接下来点击<code>Create a Worker</code>创建一个<code>Worker</code>。<br><img src="https://www.southcat.net/usr/picture/cfwk(3).png" alt="请输入图片描述" title="请输入图片描述"><br>把你之前获取的<code>Workers</code>代码粘贴进去，然后可以在左上角双击修改域名，再点击<code>Save and Deploy</code>即可。<br><img src="https://www.southcat.net/usr/picture/cfwk(4).png" alt="请输入图片描述" title="请输入图片描述"><br>最后打开分配的子域名即可，此后修改配置可以自行修改<code>Workers</code>代码。</p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>如果想绑定自己的域名，就需要先将自己的域名转到<code>cloudflare</code>，然后点自己的域名，解析一个<code>A</code>记录，<code>IP</code>地址随意。<br><img src="https://www.southcat.net/usr/picture/cfwk(5).png" alt="请输入图片描述" title="请输入图片描述"><br>然后在上方找到<code>Workers</code>，选择后，点击页面下的<code>Add route</code>，进行如下设置。<br><img src="https://www.southcat.net/usr/picture/cfwk(6).png" alt="请输入图片描述" title="请输入图片描述"><br>按照图中的格式，填上自己的域名，并选择对应的<code>Workers</code>程序即可。<br><img src="https://www.southcat.net/usr/picture/cfwk(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="API部署"><a href="#API部署" class="headerlink" title="API部署"></a>API部署</h2><p>这里也可以使用自己的<code>API</code>部署，好处就是安全点，高峰期也不容易爆炸，当然安装会麻烦点，如果不经常使用的话，还是建议用上面的方法快速部署。</p>
<p><strong>1、获取GDrive客户端</strong><br>先启用<code>Google Drive API</code>，启用地址：点击进入，注意这里使用个人账号操作。<br><img src="https://www.southcat.net/usr/picture/cfwk(8).png" alt="请输入图片描述" title="请输入图片描述"><br>再创建一个<code>OAuth client ID</code>，创建地址：点击进入。应用类型选择其他(<code>Other</code>)，名称自己填，这里博主填的<code>GoIndex</code>。<br><img src="https://www.southcat.net/usr/picture/cfwk(9).png" alt="请输入图片描述" title="请输入图片描述"><br>然后你会获得自己的客户端<code>ID</code>和客户端密钥，再复制下来。<br><img src="https://www.southcat.net/usr/picture/cfwk(10).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、获取refresh_token</strong><br>这里使用<code>Rclone</code>来获取<code>refresh_token</code>，先登录<code>VPS</code>，先安装依赖，使用命令：</p>
<pre><code>#CentOS系统
yum install p7zip unzip -y
#Debian/Ubuntu系统
apt install -y p7zip-full</code></pre><p>再安装<code>Rclone</code>，使用命令：</p>
<pre><code>curl https://rclone.org/install.sh | bash</code></pre><p>开始配置，使用命令：</p>
<pre><code>rclone config</code></pre><p>会出现以下信息：</p>
<pre><code>n) New remote
s) Set configuration password
q) Quit config
n/s/q&gt; n
name&gt; Rats  #配置名称，随便填
Type of storage to configure.
Enter a string value. Press Enter for the default (&quot;&quot;).
Choose a number from below, or type in your own value
 1 / 1Fichier
   \ &quot;fichier&quot;
 2 / Alias for an existing remote
   \ &quot;alias&quot;
 3 / Amazon Drive
   \ &quot;amazon cloud drive&quot;
 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)
   \ &quot;s3&quot;
 5 / Backblaze B2
   \ &quot;b2&quot;
 6 / Box
   \ &quot;box&quot;
 7 / Cache a remote
   \ &quot;cache&quot;
 8 / Dropbox
   \ &quot;dropbox&quot;
 9 / Encrypt/Decrypt a remote
   \ &quot;crypt&quot;
10 / FTP Connection
   \ &quot;ftp&quot;
11 / Google Cloud Storage (this is not Google Drive)
   \ &quot;google cloud storage&quot;
12 / Google Drive
   \ &quot;drive&quot;
13 / Google Photos
   \ &quot;google photos&quot;
14 / Hubic
   \ &quot;hubic&quot;
15 / JottaCloud
   \ &quot;jottacloud&quot;
16 / Koofr
   \ &quot;koofr&quot;
17 / Local Disk
   \ &quot;local&quot;
18 / Mega
   \ &quot;mega&quot;
19 / Microsoft Azure Blob Storage
   \ &quot;azureblob&quot;
20 / Microsoft OneDrive
   \ &quot;onedrive&quot;
21 / OpenDrive
   \ &quot;opendrive&quot;
22 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ &quot;swift&quot;
23 / Pcloud
   \ &quot;pcloud&quot;
24 / Put.io
   \ &quot;putio&quot;
25 / QingCloud Object Storage
   \ &quot;qingstor&quot;
26 / SSH/SFTP Connection
   \ &quot;sftp&quot;
27 / Union merges the contents of several remotes
   \ &quot;union&quot;
28 / Webdav
   \ &quot;webdav&quot;
29 / Yandex Disk
   \ &quot;yandex&quot;
30 / http Connection
   \ &quot;http&quot;
31 / premiumize.me
   \ &quot;premiumizeme&quot;
Storage&gt; 12  #选择12，Google Drive
client_id&gt; 850428  #填上你的Google Drive客户端ID
client_secret&gt; D72gPc  #填上你的Google Drive客户端密匙
Choose a number from below, or type in your own value
 1 / Full access all files, excluding Application Data Folder.
   \ &quot;drive&quot;
 2 / Read-only access to file metadata and file contents.
   \ &quot;drive.readonly&quot;
   / Access to files created by rclone only.
 3 | These are visible in the drive website.
   | File authorization is revoked when the user deauthorizes the app.
   \ &quot;drive.file&quot;
   / Allows read and write access to the Application Data folder.
 4 | This is not visible in the drive website.
   \ &quot;drive.appfolder&quot;
   / Allows read-only access to file metadata but
 5 | does not allow any access to read or download file content.
   \ &quot;drive.metadata.readonly&quot;
scope&gt; 1 
ID of the root folder
Leave blank normally.
Fill in to access &quot;Computers&quot; folders. (see docs).
Enter a string value. Press Enter for the default (&quot;&quot;).
root_folder_id&gt; 
Service Account Credentials JSON file path 
Leave blank normally.
Needed only if you want use SA instead of interactive login.
Enter a string value. Press Enter for the default (&quot;&quot;).
service_account_file&gt; 
Edit advanced config? (y/n)
y) Yes
n) No
y/n&gt; n  #输入n
Remote config
Use auto config?
 * Say Y if not sure
 * Say N if you are working on a remote or headless machine
y) Yes
n) No
y/n&gt; n  #输入n
If your browser doesn&apos;t open automatically go to the following link: https://accounts.google.com/o/  #打开该地址获取code
Log in and authorize rclone for access
Enter verification code&gt;hjdd   #输入你获取到的code
Configure this as a team drive?
y) Yes
n) No
y/n&gt; n  #输入n
--------------------
[Rats]
type = drive
client_id = 85042871
client_secret = D72gPc
scope = drive
token = {&quot;access_token&quot;:&quot;y902Z&quot;}  #记住里面的refresh_token参数
--------------------
y) Yes this is OK
e) Edit this remote
d) Delete this remote
y/e/d&gt; y  #输入y
Current remotes:

Name                 Type
====                 ====
Rats                 drive

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; q  #输入q保存退出</code></pre><p>此时我们在配置过程中就获取到了<code>refresh_token</code>参数，如果忘了的可以查看配置文件。</p>
<p>不知道配置文件在哪的，可以使用命令：</p>
<pre><code>rclone config file | grep rclone.conf</code></pre><p><strong>3、获取并修改Workers代码</strong><br><code>Workers</code>代码可以点击该地址查看→传送门，先复制代码，部分修改可参考上面，不同的是，需要填上自己的<code>api</code>信息，如下：</p>
<pre><code>#填上自己的api客户端，密匙和获取到的refresh_token
“client_id”：“20226481”，
“client_secret”：“X4Z3ca8”，
“refresh_token”：“”，</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>GoPing：一个视觉化的ping测试工具</title>
    <url>/1811/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多时候都想知道自己网络或者服务器的<code>ping</code>网络延迟等一些测试，这里就推荐一款<code>ping</code>测试工具<code>GoPing</code>，该软体跟一般<code>ping</code>指令所提供的功能都差不多，不过可以在比较简洁易懂的视窗中显示这些网路检测结果。开始之前也可手动调整<code>Packet Size</code>、<code>Interval</code>、<code>Timeout</code>等等检测参数，算是一个简单实用的小工具。<br><img src="https://www.southcat.net/usr/picture/Goping.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Google BBR关闭/卸载方法</title>
    <url>/1536/</url>
    <content><![CDATA[<p><strong>说明：</strong>网上的<code>Google BBR</code>教程都只提到了安装/开启方法，并没有说关闭/卸载方法，相信有人会想关闭它！这里就说个简单的关闭<code>BBR</code>的方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、使用root用户登录，运行以下命令：</strong></p>
<pre><code>vim /etc/sysctl.conf</code></pre><p><strong>2、删除或注释掉其中的两行：</strong></p>
<pre><code>#net.core.default_qdisc = fq           用#注释掉
#net.ipv4.tcp_congestion_control = bbr 用#注释掉</code></pre><p><strong>3、执行命令：</strong></p>
<pre><code>sysctl -p</code></pre><p>最后重启服务器生效！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Google Drive网盘文件直链获取一键脚本</title>
    <url>/2036/</url>
    <content><![CDATA[<p><strong>说明：</strong>本脚本可以将<code>Google Drive</code>网盘的文件分享链接或者文件<code>ID</code>变成直链，方便我们在很多情况下调用。只支持文件分享，不支持文件夹。文件分享<code>ID</code>为<code>26</code>到<code>48</code>位。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、需求</strong></p>
<pre><code>wget、grep、cat、head  #系统一般都有，Centos 7可能要安装wget</code></pre><p><strong>2、下载脚本</strong></p>
<pre><code>wget --no-check-certificate -qO /usr/local/bin/gdlink &apos;https://www.southcat.net/usr/shell/gdlink.sh&apos; &amp;&amp; chmod a+x /usr/local/bin/gdlink</code></pre><p><strong>3、使用方法</strong><br>注意: 获取的分享链接权限为”知道链接的任何人“。</p>
<pre><code>#Work with share link/使用分享链接方式
gdlink &apos;https://drive.google.com/open?id=0B8SvBXZ3I5QMcUduTMJEanRkMzQ&apos;

#Work with file id/使用文件ID方式
gdlink &apos;0B8SvBXZ3I5QMcUduTMJEanRkMzQ&apos;

#download with share link/使用分享链接方式直接使用wget下载链接
##可将其中./download改成自己需要的文件名或文件绝对路径
gdlink &apos;https://drive.google.com/open?id=0B8SvBXZ3I5QMcUduTMJEanRkMzQ&apos; |xargs -n1 wget -c -O ./download</code></pre><p><strong>4、调用场景</strong><br>比如该<code>DD</code>教程：Linux VPS无限制一键全自动DD安装Windows脚本。</p>
<p>先获取到谷歌网盘里的<code>DD</code>镜像链接</p>
<pre><code>https://drive.google.com/open?id=0B8SvBXZ3I5QMcUduTMJEanRkMzQ</code></pre><p>调用该分享链接。(将文件<code>ID</code>替换为自己的即可)</p>
<pre><code>#Work with share link/使用分享链接方式
bash DebianNET.sh -dd &quot;$(echo &quot;https://drive.google.com/open?id=0B8SvBXZ3I5QMcUduTMJEanRkMzQ&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &apos;https://moeclub.org/attachment/LinuxShell/gdlink.sh&apos;))&quot;

#Work with file id/使用文件ID方式
bash DebianNET.sh -dd &quot;$(echo &quot;0B8SvBXZ3I5QMcUduTMJEanRkMzQ&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &apos;https://moeclub.org/attachment/LinuxShell/gdlink.sh&apos;))&quot;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>H5ai一键安装脚本（基于Nginx+PHP 7），自动配置SSL证书</title>
    <url>/1902/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一个<code>h5ai</code>一键安装脚本，参考：h5ai一键安装脚本 for Debian，不过不能自动签发<code>SSL</code>证书还是有点不足的，恰好今天在<code>Github</code>上也发现了一个大佬写的<code>h5ai</code>一键安装脚本，而且还支持自动签发免费的<code>Let&#39;s Encrypt SSL</code>证书，很不错。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/h5ai.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><p>【2017-12-15】</p>
<ul>
<li>添加一键<code>SSL</code>配置功能</li>
<li>添加域名<code>IP</code>验证</li>
<li>部分<code>bug</code>修复</li>
<li>相关依赖完善</li>
</ul>
<p>【2017-12-14】</p>
<ul>
<li>实现<code>H5AI</code>基本功能</li>
<li>完善安装相关所需依赖</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/wulabing/h5ai\_onekey\_install-lnp-" target="_blank" rel="noopener">https://github.com/wulabing/h5ai\_onekey\_install-lnp-</a></p>
<p><strong>系统要求：</strong><code>Debian 8 +</code>，并使用纯净状态的发行版系统安装。还需要提前将你的域名解析到服务器。</p>
<p>运行以下命令：</p>
<pre><code>#下载脚本
apt-get install git -y
git clone https://github.com/wulabing/h5ai_onekey_install-lnp-.git h5ai
cd h5ai

#Debian 8运行命令
bash h5ai.sh

#Debian 9运行命令
sed -i &apos;53,54d&apos; h5ai.sh &amp;&amp; bash h5ai.sh

#脚本备份
https://www.southcat.net/usr/shell/h5ai_ssl.sh</code></pre><p>安装会要求你输入相应的数字：</p>
<pre><code>input: 请选择安装内容 
1. h5ai
2. SSL
3. h5ai+SSL</code></pre><h2 id="安装路径"><a href="#安装路径" class="headerlink" title="安装路径"></a>安装路径</h2><pre><code>Nginx：/etc/nginx
PHP: /etc/php/7.0
h5ai目录：/home/wwwroot/your_domain</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>handsome：一款十分华丽且功能强大的Typecho主题</title>
    <url>/1767/</url>
    <content><![CDATA[<p><strong>说明：</strong>本博客就是使用的<code>handsome</code>主题，外观很好看，功能也是十分的强大，值得推荐！</p>
<p><img src="https://www.southcat.net/usr/picture/tyhandsome.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在复杂中，保持简洁。</p>
<p>如你所见，这是一款花费很长时间才得以完成的主题。</p>
<p>在功能强大和体积轻巧中不断权衡，然后呈现在你的面前。</p>
<p>为了更好地创作，为了更好记录生活。</p>
<p>愿我们不会在岁月流逝中迷失自己，仍然能够在时光的碎片找到过往的痕迹。</p>
<p>代码交给我，你只管记录与创作就好。</p>
<p>这样应该就已经足够了吧！</p>
<h2 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h2><ul>
<li>全站无刷新页面体验：流畅般的体验。</li>
<li>基于<code>boostrap3</code>框架内置丰富<code>css</code>和<code>js</code>组件：可自定义性极强。</li>
<li>内置<code>5</code>套独立页面的自定义模板：豆瓣书单、时光机、文章归档、留言板、友情链接。</li>
<li><code>14</code>套自定义风格、<code>4</code>种页面自定义布局切换：每一处的细节随意打造。</li>
<li>社交功能极丰富：目录、灯箱插件、“热门文章”、“最新评论”、“随机文章”、“标签云”、短代码高亮文本、音乐播放器等等。</li>
<li>强大而且简单的后台设置：不用学习代码，轻点鼠标即可设置完成。</li>
<li>国际化语言支持：内置三套基本语言，还可以自行添加语言设置。</li>
<li>响应式设计：任何屏幕尺寸都能得到优秀的视觉体验。</li>
</ul>
<h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><pre><code>##【2018年09月12日】更新至4.5.1
新功能
现在，使用微信公众号可以同步发送到博客啦，支持文字和图片两种类型 文档教程
私密评论记录cookie，作者同样可以给对方回复私密评论，甚至多人进行相互私密评论也是可以的
重写了留言板的排行榜样式
重写了友情链接的样式
增加时光机页面的点赞功能，还不快来点赞
增加了时光机页面的发送来源
增加了文章字体变大的功能（在标题的右侧）
增加了pjax动画素雅圆圈，以及支持自定义pjax动画的设置 文档教程
增加全站加锁的功能（后台外观设置——高级设置——加密访问）
增加了呼声很高的后台外观数据备份以及备份管理（在外观设置的顶栏有）
增加头图样式交错模式（即大头图和小头图根据奇偶以次显示）（后台外观设置——外观设置——头图样式选择）
增加侧边栏分类中有子分类情况下父分类是否显示（外观设置——主题增强功能）

优化
摘要中排除login加密文字
回复可见必须是评论审核后
优化了最后一点风格，深红色变成了淡红色
优化了黑色风格，更加的深邃迷人
优化了引用块的样式
优化了侧边栏的样式
优化了手机端的顶栏样式
升级meting至1.5.4
优化了handsome的debug模式
之前播放器自动播放的提示不小心删掉了，现在补上
调整了首页文章标题的字体大小
优化了lazyLoad的加载

bug修复
时光机的联系方式以新窗口打开链接</code></pre><h2 id="购买地址"><a href="#购买地址" class="headerlink" title="购买地址"></a>购买地址</h2><p><strong>作者博客：</strong><a href="https://www.ihewro.com" target="_blank" rel="noopener">https://www.ihewro.com</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>H5ai修改版，带HTML5视频播放器DPlayer，并支持hls切片播放</title>
    <url>/2022/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>该源码由<code>LOC</code>的冻猫修改，将<code>H5ai</code>的视频播放器替换成了<code>DPlayer</code>。快进什么的方便些，也可以调播放速度。想加弹幕之类的可以自己改代码，<code>3757</code>行里面研究吧。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.6.14】
1、h5ai更新到0.29.2
2、DPlayer更新到1.25.0
3、增加hls切片播放支持
4、支持登录验证，默认用户名密码都是admin
5、支持vtt格式同视频文件名字幕文件，可用ffmpeg将普通字幕文件转换为vtt字幕文件。</code></pre><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/h5ai_dplayer.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Pearlulu/h5ai\_dplayer\_hls" target="_blank" rel="noopener">https://github.com/Pearlulu/h5ai\_dplayer\_hls</a></p>
<p><strong>下载地址：</strong>点击进入，然后下载最新版的<code>zip</code>压缩包文件就行了。</p>
<p><strong>安装教程：</strong>h5ai安装教程、H5ai一键脚本，如果使用脚本安装的，安装完成后需要替换<code>H5ai</code>源码文件。</p>
<p>关于切片视频播放：</p>
<pre><code>例如视频在/video/abcd.mp4，那么会自动寻找/video/__abcd.mp4__/video.m3u8。也就是会寻找&quot;__视频文件名__&quot;文件夹下的切片文件。如果没有切片文件会播放原始视频。切片文件夹和文件都是隐藏的，不会在h5ai中显示。


1、如果不想要用户名密码，把_h5ai/public/index.php里第二行include &apos;login.php&apos;注销。
2、修改用户名密码在_h5ai/public/login.php</code></pre><h2 id="简单切片"><a href="#简单切片" class="headerlink" title="简单切片"></a>简单切片</h2><pre><code>#搭配Aria2下载完成后自动切片
1、下载脚本
wget https://raw.githubusercontent.com/Pearlulu/h5ai_dplayer_hls/master/hls_aria2.sh
2、在aria2配置文件中增加以下参数，后面为脚本路径
on-download-complete=/root/hls_aria2.sh
3、授权脚本
chmod +x /root/hls_aria2.sh
4、修改脚本的下载路径DOWNPATH(注意需要结尾的&quot;/&quot;)，然后重启Aria2生效。

#通用转换切片文件、将目录及所有子目录下的全部视频文件切片。
1、下载脚本
wget https://raw.githubusercontent.com/Pearlulu/h5ai_dplayer_hls/master/hls_general.sh
2、自行修改脚本里的目录绝对路径(注意结尾无&quot;/&quot;)。
3、运行脚本，bash hls_general.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Haproxy一键安装脚本，可转发端口改善服务器的网络状况</title>
    <url>/1511/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般用海外服务器的都会遇到线路爆炸，网络不好的情况，这时候连接<code>SSH</code>或者使用<code>55R</code>的时候，会出现连接不上或者速度变慢的问题，为了改善这种状况，我们可以使用<code>haproxy</code>转发端口进行中转加速。</p>
<p>假设你的本地电脑为<code>A</code>，<code>haproxy</code>服务器为<code>B</code>，需要转发的服务器为<code>C</code>。<code>A</code>当然可以直接去连<code>C</code>，但效果可能不会很理想。如果<code>B</code>是一个对<code>C</code>和<code>A</code>连接效果都好的服务器。那么<code>A</code>连接<code>C</code>就等于<code>A</code>连接<code>B</code>，通过<code>B</code>连接<code>C</code>，这样一来，虽然成本有所上升，但却能明显改善网络带宽情况。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统支持：</strong><code>CentOS</code>，<code>Debian</code>，<code>Ubuntu</code></p>
<p>使用<code>root</code>登录做中转的那台服务器，执行下面的命令：</p>
<pre><code>wget --no-check-certificate https://www.southcat.net/usr/down/haproxy.sh &amp;&amp; bash haproxy.sh</code></pre><p>然后会要求你依次输入起始端口、结束端口，需要中专的服务器<code>IP</code>。</p>
<p><strong>卸载方法：</strong><br><code>Debian</code>或<code>Ubuntu</code>系统</p>
<pre><code>apt-get -y remove haproxy</code></pre><p><code>CentOS</code>系统</p>
<pre><code>yum -y remove haproxy</code></pre><p>然后删掉<code>haproxy</code>的配置文件目录</p>
<pre><code>rm -rf /etc/haproxy</code></pre><p><strong>使用命令：</strong><br>启动：<code>/etc/init.d/haproxy start</code><br>停止：<code>/etc/init.d/haproxy stop</code><br>重启：<code>/etc/init.d/haproxy restart</code><br>状态：<code>/etc/init.d/haproxy status</code></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>H5ai一键安装脚本 for Debian</title>
    <url>/1889/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>h5ai</code>就不过多介绍了，具体可参考：一款不错的PHP目录列表程序：h5ai安装教程，由于用常规的<code>lnmp</code>安装花的时间比较长，临时用还是有点麻烦的，于是博主就想搞个安装简单的方法，想到之前<code>Vicer</code>大佬写过<code>Transmission+h5ai</code>一键部署脚本，就把脚本拿来改了下，把<code>Transmission</code>给去掉了，运行脚本的过程也改简单了下，变成了输入域名地址后再安装。安装时间一般只要<code>2</code>分钟左右，还是很快的。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>脚本在<code>Debian 7</code>、<code>8</code>、<code>9</code>上均测试通过。且只适用于没安装过<code>WEB</code>环境的系统。</p>
<p>运行以下命令：</p>
<pre><code>wget --no-check-certificate https://www.southcat.net/usr/shell/h5ai_install.sh &amp;&amp; bash h5ai_install.sh</code></pre><p>运行后，输入域名地址，也可以是<code>IP</code>地址，记得带<code>http://</code>。输入域名需要提前做好解析，<code>IP</code>不用。</p>
<p>安装完成后，打开之前输入的地址即可。<code>h5ai</code>文件存放目录：<code>/data/www/download</code>。</p>
<p>给<code>h5ai</code>加密方法：给h5ai增加查看需要输入用户名和密码。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Haproxy安装及端口转发配置</title>
    <url>/1505/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>haproxy</code>是一款功能强大、灵活好用反代软件，提供了高可用、负载均衡、后端服务器代理的功能，它在7层负载均衡方面的功能很强大(支持<code>cookie</code> <code>track</code>, <code>header rewrite</code>等等)，支持双机热备，支持虚拟主机，拥有非常不错的服务器健康检查功能，当其代理的后端服务器出现故障， <code>HAProxy</code>会自动将该服务器摘除，故障恢复后再自动将该服务器加入;同时还提供直观的监控页面，可以清晰实时的监控服务集群的运行状况。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、安装haproxy</strong></p>
<pre><code>yum -y install haproxy</code></pre><p><strong>2、然后清空<code>haproxy.cfg</code>文件内容</strong></p>
<pre><code>cd /etc/haproxy/
&gt; haproxy.cfg</code></pre><p><strong>3、把下面的内容写入到<code>haproxy.cfg</code>文件中</strong></p>
<pre><code>global
ulimit-n  51200
defaults
log global
mode    tcp
option  dontlognull
timeout connect 1000ms
timeout client 150000ms
timeout server 150000ms
listen status
bind 0.0.0.0:1080
mode http
log global
stats refresh 30s
stats uri /admin?stats
stats realm Private lands
stats auth admin:password
stats hide-version
frontend ssin
bind *:1000-2000
default_backend ssout
backend ssout
server server1 11.22.33.44 maxconn 204800</code></pre><p><strong>说明：</strong><code>bind *:1000-2000</code>这里指的是<code>1000-2000</code>端口，<code>11.22.33.44</code>为需要转发的服务器的<code>IP</code>。</p>
<p><strong>4、启动<code>haproxy</code>服务</strong></p>
<pre><code>service haproxy start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>再次遇见</title>
    <url>/124/</url>
    <content><![CDATA[<p>从wordpress转到emlog然后到typecho，现在有回到了wordpress，可能以后不会再更换程序了吧，除非自己去写了一个，回归初心，有些晚了名天再慢慢搞吧，</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>Holer：又一款带Web管理界面的内网穿透工具</title>
    <url>/2447/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主去年介绍过一个免费的内网穿透工具Holer，它可以将局域网服务器代理到公网的内网穿透工具，支持转发基于<code>TCP</code>等协议的报文，不过那时候服务端并未开源，由作者免费提供服务，现在服务端代码已经开源了，而且带<code>Web</code>管理面板，该类似面板博主介绍过不少了，这里就大概说下，我们就可以拿来自建一个内网穿透服务器，使用效果还不错。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/holer(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/holer(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/holer(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装服务端"><a href="#安装服务端" class="headerlink" title="安装服务端"></a>安装服务端</h2><p><strong>Github地址：</strong><a href="https://github.com/Wisdom-Projects/holer" target="_blank" rel="noopener">https://github.com/Wisdom-Projects/holer</a></p>
<p><strong>支持系统：</strong><code>Windows</code>、<code>Linux</code>系统，这里只说<code>Linux</code>搭建，建议直接<code>Debain</code>。</p>
<p><strong>说明：</strong>由于该面板使用的<code>JAVA</code>，所以还是比较消耗内存的，如果内存太小，建议先加一点虚拟内存，可以使用<code>Swap</code>一键脚本→传送门。</p>
<p><strong>1、安装JAVA</strong></p>
<pre><code>#CentOS系统
yum install java-1.8.0-openjdk -y

#Debian/Ubuntu系统
apt update
apt install default-jdk -y</code></pre><p><strong>2、安装Mysql</strong></p>
<pre><code>#CentOS 6系统
rpm -ivh http://repo.mysql.com/mysql-community-release-el6-5.noarch.rpm
yum install mysql-community-server -y
service mysqld start
chkconfig mysqld on

#CentOS 7系统
rpm -ivh http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
yum install mysql-community-server -y
systemctl start mysqld
systemctl enable mysqld

#Debian/Ubuntu系统
apt install mysql-server -y</code></pre><p>如果<code>Debian</code>或<code>Ubuntu</code>在安装期间有弹出窗口要你输入密码就设置一个，没有的话密码就是空格。</p>
<p>修改数据库密码：</p>
<pre><code>#CentOS系统，第一行登录数据库的时候直接Enter跳过，第二行moerats为要修改的密码，自行修改
mysql -u root -p
mysql&gt; set password=password(&quot;moerats&quot;);
mysql&gt; exit;

#Debian、Ubuntu系统，第一行登录数据库的时候直接Enter跳过，第二行moerats为要修改的密码，自行修改
mysql -u root -p
mysql&gt; UPDATE mysql.user SET authentication_string=PASSWORD(&apos;moerats&apos;), PLUGIN=&apos;mysql_native_password&apos; WHERE USER=&apos;root&apos;;
mysql&gt; exit;</code></pre><p>最后修改过密码的还需要重启数据库：</p>
<pre><code>#CentOS系统
service mysqld restart

#Debian和Ubuntu系统
systemctl restart mysql</code></pre><p>此时<code>Mysql</code>算是安装完成了。</p>
<p><strong>3、安装源码</strong><br>安装<code>unzip</code>：</p>
<pre><code>#CentOS系统
yum install unzip -y

#Debian和Ubuntu系统
apt install unzip -y</code></pre><p>下载源码：</p>
<pre><code>wget https://github.com/wisdom-projects/holer/releases/download/v1.1/holer-server-1.1.zip
unzip holer-server-1.1.zip &amp;&amp; rm -rf holer-server-1.1.zip
#移动到opt目录，然后进入到源码文件夹
mv holer-server /opt/holer &amp;&amp; cd $_
#修改配置文件
nano resources/application.yaml</code></pre><p>关键配置如下：</p>
<pre><code>#运行端口
server:
  port: 600

#Mysql数据库用户名和密码
spring:
  datasource:
    username: root
    password: moerats

#域名和nginx目录，可以直接全部删掉，用ip不需要，域名的话，有点不好用
holer
  domain:
    name: your-domain.com
  nginx:
    #home: /usr/local/nginx
    home: C:/nginx-1.14.2</code></pre><p>修改后使用<code>Ctrl+x</code>、<code>y</code>保存退出，或者可以直接使用<code>FTP</code>等工具直接编辑。</p>
<p>再修改管理员用户名和密码，使用命令：</p>
<pre><code>nano resources/conf/holer-data.sql</code></pre><p><code>admin</code>和<code>admin123</code>为管理员用户名和密码，自行修改，修改完成后同样的使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>最后启动：</p>
<pre><code>chmod +x holer
./holer start</code></pre><p>如果想开机自启的话，这里可以建一个简单的<code>systemd</code>配置文件，且不适用<code>CentOS 6</code>，使用命令：</p>
<pre><code>#将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/holer.service &lt;&lt;EOF
[Unit]
Description=holer
After=network.target

[Service]
Type=simple
ExecStart=$(command -v java) -server -Xms256m -Xmx512m -jar holer-server-1.1.jar
WorkingDirectory=/opt/holer
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>然后启动并设置开机自启：</p>
<pre><code>systemctl start holer
systemctl enable holer</code></pre><p>然后就可以使用<code>ip:600</code>访问管理界面了，具体端口以你修改的为准。</p>
<p>然后<code>CentOS</code>系统建议关闭防火墙使用，或者打开部分端口也行，关闭命令：</p>
<pre><code>#CentOS 6系统
service iptables stop
chkconfig iptables off

#CentOS 7系统
systemctl stop firewalld
systemctl disable firewalld</code></pre><p>像阿里云等服务器，还需要去安全组那里开放下端口。</p>
<h2 id="客户端使用"><a href="#客户端使用" class="headerlink" title="客户端使用"></a>客户端使用</h2><p>首先我们需要去用户列表新建一个用户，然后再去端口映射选择该用户，新建一个穿透规则，这里根据需求自行选择，然后设置好时长。</p>
<p>然后就可以直接在客户端使用了，一般客户端有<code>JAVA</code>和<code>GO</code>版，使用<code>JAVA</code>的话，需要先安装<code>JAVA</code>环境，所以这里直接选择<code>GO</code>版本，简单粗暴。</p>
<p>首先根据直接的系统和架构下载指定的<code>GO</code>版客户端，每个压缩包里都包含<code>32</code>位和<code>64</code>位，下载地址→传送门。</p>
<p>这里拿我们常见的<code>Linux</code>服务器架构来说，直接使用命令：</p>
<pre><code>#下载并解压
wget https://github.com/wisdom-projects/holer/raw/master/Binary/Go/holer-linux-x86.tar.gz
tar -zxvf holer-linux-x86.tar.gz

#32位启动，分别为访问秘钥和服务端ip地址
nohup ./holer-linux-386 -k 7aa8d973bc8e40 -s ip地址 &amp;
#64位启动
nohup ./holer-linux-amd64 -k 7aa8d973bc8e40 -s ip地址 &amp;</code></pre><p>如果是<code>Windows</code>系统，先把压缩包下载并解压到<code>D</code>盘根目录，然后按住<code>Win+R</code>，输入<code>cmd</code>进入命令窗口，使用命令：</p>
<pre><code>#进入到D盘根目录
cd D:\

#32位启动，分别为访问秘钥和服务端ip地址
.\holer-windows-386.exe -k 7aa8d973bc8e40 -s ip地址
#64位启动
.\holer-windows-amd64.exe -k 7aa8d973bc8e40 -s ip地址</code></pre><p>到这里基本上就运行成功了。</p>
<h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>如果你想使用域名来配置服务器面板的话，就需要安装<code>Web</code>服务器了，这里就直接使用<code>Nginx</code>。</p>
<p><strong>1、安装Nginx</strong></p>
<pre><code>#CentOS 6系统
rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
yum install nginx -y
service nginx start
chkconfig nginx on

#CentOS 7系统
rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm
yum install nginx -y
systemctl start nginx
systemctl enable nginx

#Debian/Ubuntu系统
apt install nginx -y</code></pre><p><strong>2、申请SSL证书</strong></p>
<p>这里就使用简单粗暴的<code>webroot</code>方式签发<code>Let&#39;s Encrypt</code>证书，首先解析好域名并生效。</p>
<p>安装<code>letsencrypt</code>：</p>
<pre><code>#CentOS系统
yum install letsencrypt -y

#Debian/Ubuntu系统
apt install letsencrypt -y</code></pre><p>申请<code>SSL</code>证书：</p>
<pre><code>#CentOS系统
letsencrypt certonly --webroot -w /usr/share/nginx/html --domain www.southcat.net

#Debian/Ubuntu系统
letsencrypt certonly --webroot -w /var/www/html --domain www.southcat.net</code></pre><p>请替换成自己域名后运行，期间会要你输入邮箱和<code>A</code>选项啥的，申请后证书文件在<code>/etc/letsencrypt/live</code>。</p>
<p><strong>3、新建conf文件</strong></p>
<pre><code>#将下面域名修改成自己的，然后证书路径也修改下，再一起复制进SSH客户端运行
cat &gt; /etc/nginx/conf.d/holer.conf &lt;&lt; &apos;EOF&apos;
server {
    listen 443;
    server_name www.southcat.net;    
    ssl on;
    ssl_certificate /etc/letsencrypt/live/www.southcat.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.southcat.net/privkey.pem;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers &quot;EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5&quot;;
    ssl_session_cache builtin:1000 shared:SSL:10m;
    charset utf-8;
    location /{
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

        client_max_body_size       1024m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
        proxy_pass http://127.0.0.1:600/;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}
server
    {
        listen 80;
        server_name www.southcat.net;
        rewrite ^(.*) https://www.southcat.net$1 permanent;
    }
EOF</code></pre><p>重启<code>Nginx</code>生效：</p>
<pre><code>systemctl restart nginx</code></pre><p>最后连接的时候，就可以填域名了。</p>
<h2 id="相关面板"><a href="#相关面板" class="headerlink" title="相关面板"></a>相关面板</h2><ul>
<li>一款基于Frp的Web管理面板：FrpMgr安装及使用</li>
<li>一款带Web面板的轻量级、高性能内网穿透工具：nps</li>
<li>一款带Web管理面板的内网穿透工具：lanproxy</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>HostDare：洛杉矶Crea机房/CN2 GIA线路/年付16美元/支持支付宝和微信</title>
    <url>/2236/</url>
    <content><![CDATA[<p><strong>说明：</strong>好像博主好久没分享新的<code>VPS</code>服务商了，现在分享一家对国人相当友好的国外服务商<code>HostDare</code>，该商家是一家来自美国的主机销售商，之前的特价套餐都是洛杉矶<code>C3</code>机房，现在已经从<code>C3</code>机房已经成功切换去了“云镭”的网络上。即洛杉矶<code>C3</code>机房已经更换为洛杉矶<code>Cera</code>机房。</p>
<p>线路依旧是<code>CN2 GIA</code>，移动、联通直连，电信双向<code>CN2 GIA</code>直连，国内访问速度非常好，现在好像联通和电信出口都走上海电信<code>CN2</code>，移动直连。很适合做站，而且最低的价格年付才<code>$16</code>，在同类线路里算非常便宜了。</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>博主几天前就斥巨资买了台月付<code>$17</code>美元的服务器，这里就拿来做个测试。</p>
<p><strong>1、基本测试</strong><br><img src="https://www.southcat.net/usr/picture/HostDare(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、电信回程</strong><br><img src="https://www.southcat.net/usr/picture/HostDare(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>3、联通回程</strong><br><img src="https://www.southcat.net/usr/picture/HostDare(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>4、移动回程</strong><br><img src="https://www.southcat.net/usr/picture/HostDare(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="套餐"><a href="#套餐" class="headerlink" title="套餐"></a>套餐</h2><p><strong>1、KVM系列</strong><br><code>25%</code>优惠码<code>15UJZ1OUPK</code>(仅限年付)</p>
<p>核心：1核CPU<br>内存：756MB<br>硬盘：35GB<br>流量：1000GB/月<br>端口：80Mbps<br>架构：KVM<br>节点：洛杉矶CN2 GIA直连<br>价格：$34.49/年<br>购买：立即购买</p>
<p>核心：2核CPU<br>内存：1.5GB<br>硬盘：75GB<br>流量：1500GB/月<br>端口：100Mbps<br>架构：KVM<br>节点：洛杉矶CN2 GIA直连<br>价格：$52.49/年<br>购买：立即购买</p>
<p>核心：3核CPU<br>内存：4GBRAM<br>硬盘：150GB<br>流量：2500GB/月<br>端口：100Mbps<br>架构：KVM<br>节点：洛杉矶CN2 GIA直连<br>价格：$127/年<br>购买：立即购买</p>
<p>核心：4核CPU<br>内存：8GB<br>硬盘：300GB<br>流量：3500GB/月<br>端口：100Mbps<br>架构：KVM<br>节点：洛杉矶CN2 GIA直连<br>价格：$247/年<br>购买：立即购买</p>
<p><strong>2、OpenVZ系列</strong><br><code>35%</code>优惠码<code>U58TF02MIG</code>(仅限年付)</p>
<p>核心：1核CPU<br>内存：256MB<br>硬盘：7GB<br>流量：300GB/月<br>端口：50Mbps<br>架构：OpenVZ<br>节点：洛杉矶CN2 GIA直连<br>价格：$16.25/年<br>购买：立即购买</p>
<p>核心：1核CPU<br>内存：512MB<br>硬盘：10GB<br>流量：500GB/月<br>端口：100Mbps<br>架构：OpenVZ<br>节点：洛杉矶CN2 GIA直连<br>价格：$22.75/年<br>购买：立即购买</p>
<h2 id="大硬盘"><a href="#大硬盘" class="headerlink" title="大硬盘"></a>大硬盘</h2><p><code>7.5</code>折终身优惠码：<code>15UJZ1OUPK</code>，仅限年付！</p>
<p>核心：1核CPU<br>内存：756MB<br>硬盘：150GB<br>流量：1TB/月<br>端口：80Mbps<br>架构：KVM<br>节点：洛杉矶CN2 GIA直连<br>价格：$45/年<br>购买：立即购买</p>
<p>核心：2核CPU<br>内存：1.5GB<br>硬盘：300GB<br>流量：1.5TB/月<br>端口：100Mbps<br>架构：KVM<br>节点：洛杉矶CN2 GIA直连<br>价格：$75/年<br>购买：立即购买</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>IOS剁手记</title>
    <url>/673/</url>
    <content><![CDATA[<p>双11狗东上了 64G乞丐版xs 对我来说64G刚好毕竟还有个128的安卓备用，但是活动结束就降价200 被坑哭了。</p>
<p>到机之后才发现是真正剁手的开始</p>
<p>先是怂的购买了AC+ 然后一堆软件 QUANX Surge GRID 为了Surge又抛弃年付喵换到的dler</p>
<p>昨天想去体验下Airpod Pro 没想到这边的APPLE零售店连开封的都没有于是放弃了只能等房价回去之后到另一个零售店体验下了，苹果确实有种魔力，小米也一样，买了一个就忍不住买另一个。</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>ImgURL：一款功能多且简洁的图床程序</title>
    <url>/1884/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>ImgURL</code>是继：<a href="https://github.com/helloxz/xz-pic，小`Z`大佬写的另一款图床程序，依然保持以往简洁风格，在`XZ" target="_blank" rel="noopener">https://github.com/helloxz/xz-pic，小`Z`大佬写的另一款图床程序，依然保持以往简洁风格，在`XZ</a> Pic<code>基础上完善了</code>UI`，增加了部分实用的功能。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/ImgURL(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ImgURL(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>拽拖上传，自动生成连接，一键复制。</li>
<li>图片预览与探索。</li>
<li>基本的图片管理。</li>
<li>支持<code>TinyPNG</code>图片压缩。</li>
<li>图片鉴黄</li>
<li><code>API</code>上传</li>
<li>油猴脚本上传</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>PHP&gt;=5.6</code>，需要<code>exif</code>函数支持。</p>
<p>先访问：<a href="https://github.com/helloxz/imgurl下载最新版`ImgURL`程序，放到您的站点根目录并解压。修改一下`config.php`设置你自己的域名和密码，访问`http(s)://domain.com/`即可，就是这么简单。" target="_blank" rel="noopener">https://github.com/helloxz/imgurl下载最新版`ImgURL`程序，放到您的站点根目录并解压。修改一下`config.php`设置你自己的域名和密码，访问`http(s)://domain.com/`即可，就是这么简单。</a></p>
<p><strong>Demo：</strong><a href="https://imgurl.org/" target="_blank" rel="noopener">https://imgurl.org/</a><br><strong>帮助文档：</strong><a href="https://wiki.xiaoz.me/docs/imgurl/" target="_blank" rel="noopener">https://wiki.xiaoz.me/docs/imgurl/</a><br><strong>源码：</strong><a href="https://github.com/helloxz/imgurl" target="_blank" rel="noopener">https://github.com/helloxz/imgurl</a></p>
<h2 id="ImgURL专业版"><a href="#ImgURL专业版" class="headerlink" title="ImgURL专业版"></a>ImgURL专业版</h2><p>目前作者开发发布了<code>ImgURL Pro</code>专业版图床程序，满足更多用户需要，功能如下：</p>
<ul>
<li>支持拽拖上传、多图上传、<code>Ctrl + V</code>粘贴上传、<code>URL</code>上传</li>
<li>支持图片裁剪，自动生成缩略图</li>
<li>限制访客上传数量/限制上传大小</li>
<li>图片压缩</li>
<li>图片鉴黄</li>
<li><code>API</code>支持</li>
<li>无广告</li>
<li>自定义底部版权</li>
<li>多个外部存储（本地、<code>Backblaze B2</code>、腾讯<code>COS</code>、<code>FTP</code>）</li>
<li>永久更新 + <code>6</code>个月技术支持</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>IPinfo：一款整合了多接口的IP地址查询工具</title>
    <url>/1998/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>网上已经有很多<code>IP</code>查询工具了，但是数据参差不齐，结果存在偏差，于是<code>IPinfo</code>整合了多个<code>IP</code>查询接口，包括<code>ipip.net</code>、淘宝、新浪、<code>GeoIP</code>，方面对查询结果进行对比。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/IPinfo(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/IPinfo(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><p><code>IPinfo</code>使用<code>PHP</code>开发，您可以访问：master.zip下载源码，放到您的<code>PHP</code>环境中就可以运行了，真正做到开箱即用。</p>
<h2 id="频次限制"><a href="#频次限制" class="headerlink" title="频次限制"></a>频次限制</h2><p><code>IPinfo</code>用的都是免费接口，所以在查询次数方面会受到限制，具体如下。</p>
<ul>
<li><code>ipip.net</code>：限速每天<code>1000</code>次。</li>
<li>淘宝：访问频率需小于<code>10qps</code>。</li>
</ul>
<h2 id="数据对比"><a href="#数据对比" class="headerlink" title="数据对比"></a>数据对比</h2><ul>
<li><code>ipip.net</code>：可能是国内最精准的<code>IP</code>查询。</li>
<li>淘宝：准确度也不错。</li>
<li>新浪：感觉<code>IP</code>库好久没更新了，不是很准确。</li>
<li><code>GeoIP</code>：查询国外的<code>IP</code>比较准确。</li>
</ul>
<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>iptables封禁BT/PT/SPAM(垃圾邮件)和自定义端口/关键词一键脚本</title>
    <url>/1793/</url>
    <content><![CDATA[<p><strong>说明：</strong>通常我们买的<code>VPS</code>如果乱发垃圾邮件(<code>SPAM</code>)和下载<code>BT</code>、<code>PT</code>等都会导致<code>VPS</code>被<code>IDC</code>封杀。按照博主的经验来看发垃圾邮件被封杀几率是非常大的，不过对于<code>BT</code>、<code>PT</code>来说，有的商家虽然有规定不许下载，但都是睁一只眼闭一只眼，只要不被投诉就没事。但还是要注意点，特别是喜欢分享<code>55R</code>等梯子的人，最好都给封上，以防万一。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>注意：</strong>本脚本邮件端口是完全可以封住的，但是<code>BT</code>和<code>PT</code>就不是<code>100%</code>的了，封不干净，这个没办法。<br><strong>系统要求：</strong><code>CentOS 6+</code>/<code>Debian 6+</code>/<code>Ubuntu 14.04 +</code></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/ban_iptables.sh &amp;&amp; chmod +x ban_iptables.sh &amp;&amp; bash ban_iptables.sh</code></pre><p>运行脚本后会出现脚本操作菜单，选择并输入对应的数字来操作。</p>
<p><strong>提示：</strong>既然是<code>iptables</code>防火墙规则，那<code>VPS</code>肯定是要安装<code>iptables</code>的，不过一般都安装的有，除了坑爹的<code>CentOS 7</code>需要关闭自带的防火墙安装<code>iptables</code>。</p>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>进入下载脚本的目录并运行脚本：</p>
<pre><code>./ban_iptables.sh</code></pre><p>然后选择你要执行的选项即可。</p>
<pre><code> iptables防火墙 封禁管理脚本 [vX.X.X]
 -- Toyo | doub.io/shell-jc2 --

 0. 查看 当前封禁列表
————————————
 1. 封禁 BT、PT
 2. 封禁 SPAM(垃圾邮件)
 3. 封禁 BT、PT+SPAM
 4. 封禁 自定义 端口
 5. 封禁 自定义关键词
————————————
 6. 解封 BT、PT
 7. 解封 SPAM(垃圾邮件)
 8. 解封 BT、PT+SPAM
 9. 解封 自定义 端口
10. 解封 自定义关键词
11. 解封 所有  关键词
————————————
12. 升级脚本

请输入数字 [0-11]:</code></pre><h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><p>为了方便，我也做了几个快捷的命令，不需要进入菜单去选择对应的选项，直接就能封禁/解封。</p>
<pre><code>./ban_iptables.sh banbt
# 封禁 BT、PT

./ban_iptables.sh banspam
# 封禁 SPAM（垃圾邮件）

./ban_iptables.sh banall
# 封禁 BT、PT+SPAM

./ban_iptables.sh unbanbt
# 解封 BT、PT

./ban_iptables.sh unbanspam
# 解封 SPAM（垃圾邮件）

./ban_iptables.sh unbanall
# 解封 BT、PT+SPAM</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>iptables之禁ping和ddos向外发包</title>
    <url>/1468/</url>
    <content><![CDATA[<p>主要讲2个基本的实际应用，主要涉及到禁ping（ipv4）以及禁止udp，即禁止有黑客利用服务器向外发包ddos攻击方面的内容。</p>
<p><strong>一、如果没有iptables禁止ping</strong></p>
<pre><code>echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_igore_all #开启
echo 0 &gt; /proc/sys/net/ipv4/icmp_echo_igore_all #关闭</code></pre><p><strong>二、利用iptables规则禁ping</strong></p>
<pre><code>iptables -A INPUT -p icmp --icmp-type 8 -s 0/0 -j DROP</code></pre><p><strong>三、利用iptables规则，禁止服务器向外发包，防止DDOS向外攻击</strong></p>
<pre><code>iptables -I OUTPUT -p udp --dport 53 -d 8.8.8.8 -j ACCEPT #允许UDP服务IP
iptables -A OUTPUT -p udp -j DROP #禁止udp服务


cat /etc/resolv.conf</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Jiacrontab：一个带Web面板的定时任务&amp;常驻后台管理工具</title>
    <url>/2291/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们一般使用程序的时候，很多都需要使用定时任务来按时重启/执行应用，还有的也需要让程序一直常驻后台，对这类要求使用的基本上是<code>crontab</code>和<code>Systemctl</code>/<code>Supervisor</code>，不过对于很多人来说配置挺麻烦的，这里就分享一个带<code>Web</code>面板的定时任务&amp;常驻后台工具，可以很方便设置定时任务和常驻后台操作，也可以同时管理多台服务器，很强大，使用起来很方便。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/jiacrontab(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/jiacrontab(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>允许设置每个脚本的超时时间，超时操作可选择邮件通知管理者，或强杀脚本进程。</li>
<li>允许设置脚本的最大并发数。</li>
<li>一台<code>server</code>管理多个<code>client</code>。</li>
<li>每个脚本都可在<code>server</code>端灵活配置，如测试脚本运行，查看日志，强杀进程，停止定时等。</li>
<li>允许添加脚本依赖（支持跨服务器），依赖脚本提供同步和异步的执行模式。</li>
<li>友好的<code>web</code>界面，方便用户操作。</li>
<li>脚本出错时可选择邮箱通知多人。</li>
<li>支持常驻任务，任务失败后可配置自动重启。</li>
<li>支持管道操作。</li>
</ul>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><pre><code>jiacrontab由server，client两部分构成，两者完全独立通过rpc通信。
server：向用户提供可视化界面，调度多个client。
client：实现定时逻辑，隔离用户脚本，将client布置于多台服务器上可由server统一管理。 每个脚本的定时格式完全兼容linux本身的crontab脚本配置格式。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/iwannay/jiacrontab" target="_blank" rel="noopener">https://github.com/iwannay/jiacrontab</a></p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#CentOS系统
yum -y install unzip

#Debian/Ubuntu系统
apt install unzip -y</code></pre><p><strong>2、运行Jiacrontab</strong><br>先访问该地址→传送门，根据操作系统获取最新版本的<code>Jiacrontab</code>下载地址，然后使用命令：</p>
<pre><code>#下载jiacrontab
wget https://jiacrontab.iwannay.cn/download/jiacrontab-v1.4.5-linux-amd64.zip
#解压
unzip jiacrontab-v1.4.5-linux-amd64.zip
#进入服务端文件夹并运行服务端
cd jiacrontab/server
nohup ./jiaserver &amp;&gt; jiaserver.log &amp;
#进入客户端文件夹并运行客户端
cd .. &amp;&amp; cd client
nohup ./jiaclient &amp;&gt; jiaclient.log &amp;</code></pre><p>然后还需要开放<code>20000-20003</code>端口，使用命令：</p>
<pre><code>#CentOS 7
firewall-cmd --zone=public --add-port=20000-20003/tcp --permanent
firewall-cmd --reload

#CentOS 6(一般情况下，Debian和Ubuntu不需要开启，如果访问不了Web就需要开启了)
iptables -A INPUT -p tcp -dport 20000:20003 -j ACCEPT
iptables save
service iptables restart</code></pre><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><pre><code>服务端配置文件：server/server.ini，可以在里面修改用户名、密码，邮箱，允许使用的命令等信息。
客户端配置文件：client/client.ini ，可以修改报警邮箱，开启日志及连接服务端地址。</code></pre><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><pre><code>#基本使用
1、定时任务
超时设置和超时操作
超时后会进行设置的超时操作 默认值为0 不判断超时

2、最大并发数
最大并发数 控制 同时有几个脚本进程
默认最大并发数为1，若不设置超时时间，当定时任务第二次执行时，若上一次执行还未完成
则会kill上一个脚本，进行本次执行。
防止脚本无法正常退出而导致系统资源耗尽

3、添加依赖
依赖就是用户脚本执行前，需要先执行依赖脚本，只有依赖脚本执行完毕才会执行当前脚本。
并发执行：并发执行依赖脚本，任意一个脚本出错或超时不会影响其他依赖脚本，但是会中断用户脚本
同步执行：同步执行依赖脚本，执行顺序为添加顺序，如果有一个依赖脚本出错或超时，则会中断后继依赖，以及用户脚本

脚本异常退出通知 如果脚本退出码不为0，则认为是异常退出

#常驻任务
常驻任务检查脚本进程是否退出，如果退出再次重启，保证脚本不停运行
其他同 定时任务</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Jirafeau：一个简洁的临时文件分享系统，可随时删除</title>
    <url>/2273/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前介绍过一个临时文件系统<code>Plik</code>→点击查看，功能比较强大，不过对于不会美化界面的人来说，使用起来可能会觉得不好看。这里再介绍个<code>Jirafeau</code>，可以设置保存时间，密码，生成分享链接的同时也会给你一个删除链接，你可以随时进行删除，功能虽然没前者强大，但够用了，界面也简洁。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Jirafeau(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Jirafeau(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Jirafeau(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>要求：</strong><code>PHP &gt;= 5.6</code>，<code>Nginx</code>/<code>Apache</code>等，无需数据库</p>
<p><strong>Gitlab地址：</strong><a href="https://gitlab.com/mojo42/Jirafeau" target="_blank" rel="noopener">https://gitlab.com/mojo42/Jirafeau</a></p>
<p><strong>提示：</strong>如果你过于小白，还不会搭建环境，可以参考该建站教程→传送门；或许看本文后面的<code>Docker</code>安装。</p>
<p>先搭建好环境，然后下载源码(点击下载)，并上传解压到网站根目录。</p>
<p>再新建配置文件<code>lib/config.local.php</code>，将<code>lib/config.original.php</code>里的代码全部复制进去，并给予写入权限，此后你可以修改该配置文件进行一些功能修改。</p>
<p>最后就可以打开地址进行安装了。<br><img src="https://www.southcat.net/usr/picture/Jirafeau(4).png" alt="请输入图片描述" title="请输入图片描述"><br>后台地址：<code>http://xx.com/admin.php</code>，一般上传者删除链接后，只是不能下载了，但文件暂时还在，可以通过后台进行清空。</p>
<pre><code>#除了后台清空外还可以用命令清空，建议设置为定时任务，命令如下：
php /www/wwwroot/xx.com/admin.php clean_expired
php /www/wwwroot/xx.com/admin.php clean_async</code></pre><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、构建镜像</strong></p>
<pre><code>git clone https://gitlab.com/mojo42/Jirafeau.git
cd Jirafeau
docker build -t mojo42/jirafeau .</code></pre><p><strong>3、启动镜像</strong></p>
<pre><code>#8000端口可自行修改
docker run -d -p 8000:80 -v $(pwd):/www mojo42/jirafeau</code></pre><p><strong>4、配置修改</strong></p>
<pre><code>#进入lib文件夹
cd /root/Jirafeau
#新建配置文件config.local.php，可修改该文件调整一些功能
cp lib/config.original.php lib/config.local.php
#授权
chmod 777 lib/config.local.php</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Kcptun服务端一键安装脚本</title>
    <url>/1521/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Kcptun</code>是一个非常简单和快速的，基于<code>KCP</code>协议的<code>UDP</code>隧道，它可以将<code>TCP</code>流转换为<code>KCP+UDP</code>流。而<code>KCP</code>是一个快速可靠协议，能以比<code>TCP</code>浪费10%-20%的带宽的代价，换取平均延迟降低30%-40%，且最大延迟降低三倍的传输效果。</p>
<p><code>Kcptun</code>是<code>KCP</code>协议的一个简单应用，可以用于任意<code>TCP</code>网络程序的传输承载，以提高网络流畅度，降低掉线情况。由于 <code>Kcptun</code>使用<code>Go</code>语言编写，内存占用低（经测试，在64M内存服务器上稳定运行），而且适用于所有平台，甚至<code>Arm</code>平台。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>提示：</strong>2个版本都可以使用，不过经测试好像旧版本效果不是那么好了。<br><strong>1、新版本安装</strong><br>使用root用户登录，运行以下命令：</p>
<pre><code>wget --no-check-certificate https://github.com/kuoruan/shell-scripts/raw/master/kcptun/kcptun.sh
chmod +x ./kcptun.sh
./kcptun.sh</code></pre><p><strong>2、旧版本安装</strong><br>使用root用户登录，运行以下命令：</p>
<pre><code>wget --no-check-certificate https://github.com/kuoruan/kcptun_installer/raw/master/kcptun_bak.sh
chmod +x ./kcptun_bak.sh
./kcptun_bak.sh</code></pre><p><strong>设置 Kcptun 的服务端端口：</strong></p>
<pre><code>请输入 Kcptun Server 端口 [1-65535]:
(默认: 29900):</code></pre><p>请输入一个未被占用的端口，<code>Kcptun</code>运行时将使用此端口。</p>
<p><strong>设置加速的 IP：</strong></p>
<pre><code>请输入需要加速的 IP [0.0.0.0 ~ 255.255.255.255]:
(默认: 127.0.0.1):</code></pre><p>填入上面获取到的加速 IP。</p>
<p><strong>设置需要加速的端口：</strong></p>
<pre><code>请输入需要加速的端口 [1-65535]:
(默认: 12948):</code></pre><p>填入上面获取到的加速端口。</p>
<p>程序会检查当前是不是有程序占用着此端口，如果你的<code>55</code>没在运行，或者没有软件使用此端口，会弹出如下提示：</p>
<pre><code>当前没有软件使用此端口, 确定加速此端口?(y/n)</code></pre><p>如果你确认<code>55</code>运行时会使用此端口，那么输入<code>“y”</code>回车即可。</p>
<p><strong>设置 Kcptun 密码：</strong></p>
<pre><code>请输入 Kcptun 密码:
(如果不想使用密码请留空):</code></pre><p>你可以为<code>Kcptun</code>单独设置一个密码,与<code>55</code>密码没任何联系。</p>
<p><strong>禁用压缩：</strong></p>
<pre><code>是否禁用数据压缩?
(默认: 不禁用) [y/n]:</code></pre><p><strong>如果安装成功，应该能看到如下输出信息：</strong></p>
<pre><code>恭喜, Kcptun 服务端配置完毕！

正在获取当前安装的 Kcptun 版本...
服务器IP:  10.10.10.10
端口:  29900
加速地址: 127.0.0.1:8388
密码: 123456
加密方式 Crypt:  salsa20

当前安装的 Kcptun 版本为: v20160922

推荐的客户端配置为: 
{
  &quot;localaddr&quot;: &quot;:8388&quot;,
  &quot;remoteaddr&quot;: &quot;10.10.10.10:29900&quot;,
  &quot;key&quot;: &quot;123456&quot;,
  &quot;crypt&quot;: &quot;salsa20&quot;,
  &quot;mode&quot;: &quot;fast&quot;,
  &quot;mtu&quot;: 1350,
  &quot;sndwnd&quot;: 1024,
  &quot;rcvwnd&quot;: 1024,
  &quot;datashard&quot;: 10,
  &quot;parityshard&quot;: 3,
  &quot;dscp&quot;: 0,
  &quot;conn&quot;: 1,
  &quot;autoexpire&quot;: 60,
  &quot;nocomp&quot;: false
}

手机端参数可以使用：
-autoexpire 60 -key &quot;123456&quot; -crypt &quot;salsa20&quot;

其他参数请自行计算或设置, 详细信息可以查看: https://github.com/xtaci/kcptun

Kcptun 安装目录: /usr/share/kcptun
Kcptun 日志文件目录: /var/log/kcptun/</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>JuiceSSH/Termius：安卓/IOS平台上好用且免费的SSH客户端</title>
    <url>/1924/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多人操作<code>VPS</code>服务器的时候，都是习惯在电脑上使用<code>Putty</code>或者<code>Xshell</code>工具进行操作，其实我们不方便用电脑的时候，也可以用手机操作下，毕竟手机端还是有不少好用的<code>SSH</code>客户端的，这里争对安卓和<code>IOS</code>(<code>MAC</code>)平台，分别推荐个好用且免费的<code>SSH</code>客户端，<code>JuiceSSH</code>和<code>Termius</code>。</p>
<h2 id="JuiceSSH-安卓"><a href="#JuiceSSH-安卓" class="headerlink" title="JuiceSSH(安卓)"></a>JuiceSSH(安卓)</h2><p><code>JuiceSSH</code>是一个为<code>Android</code>打造的全功能终端应用，支持<code>SSH</code>，本地<code>Shell</code>，<code>mosh</code>和<code>Telnet</code>。在会话中长按可以复制、粘贴等，很方便我们对<code>VPS</code>进行操作，功能强大，差不多是安卓里最好用的一款<code>SSH</code>客户端了，也是用的人最多的。<br><img src="https://www.southcat.net/usr/picture/JuiceSSH_ad.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>这里分享个最新版<code>JuiceSSH 2.14</code>中文破解版，本地下载：JuiceSSH_2.14中文破解。<br><strong>官方网站：</strong><a href="https://juicessh.com/" target="_blank" rel="noopener">https://juicessh.com/</a></p>
<h2 id="Termius-IOS"><a href="#Termius-IOS" class="headerlink" title="Termius(IOS)"></a>Termius(IOS)</h2><p><code>Termius</code>(原<code>Server Auditor</code>)是一款基于手机移动端的远程<code>SSH</code>服务器链接工具，功能多也好用，虽然安卓和<code>IOS</code>端都有客户端，不过感觉安卓端没啥人用，用的人都是<code>IOS</code>端的，也挺受欢迎，毕竟没广告且免费，所以这里也就推荐下。<br><img src="https://www.southcat.net/usr/picture/Termius_ios.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>KMS激活服务器一键脚本 for Debian/Ubuntu</title>
    <url>/1961/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发了个<code>KMS</code>服务器一键脚本，不过不足的是没有自启，这里就再发个千影的脚本，使用<code>supervisord</code>管理<code>KMS</code>进程，重启系统或者中途程序崩溃都会自动启动<code>KMS</code>。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/KMS_win.jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>使用命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/kms_install.sh &amp;&amp; bash kms_install.sh</code></pre><p>有防火墙的还需要放行<code>1688</code>端口。</p>
<p><code>Win</code>激活，使用管理员权限运行<code>cmd</code>，再使用命令：</p>
<pre><code>cd /d &quot;%SystemRoot%\system32&quot;
slmgr /skms ip  #ip为你KMS的IP地址或者域名 
slmgr /ato
slmgr /xpr</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Kvmla：1G内存/40G硬盘/600G流量/日本&amp;香港&amp;新加坡KVM/月付￥80</title>
    <url>/2185/</url>
    <content><![CDATA[<p><strong>说明：</strong>博客现在搬到了<code>kvmla</code>的日本服务器上，体验还不错，这里就发个测评，顺便推荐下，毕竟博主经常看见有人对香港/新加坡等亚洲服务器有需求，而且现在新加坡有终身<code>8</code>折，以及充<code>500</code>送<code>100</code>的活动。有需要的可以上。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>kvmla</code>隶属香港<code>klayer</code>公司，成立于<code>2011</code>年；主要提供<code>kvm</code>架构<code>VPS</code>以及独立服务器业务，主要包括香港、新加坡、日本、美国等多个国家和地区的<code>VPS</code>和独立服务器租用业务；大部分为自营机柜，实力相当雄厚；其香港机房为<code>CN2</code>线路，日本机房为罕见的<code>bbtec</code>线路（软银），新加坡机房为<code>Pccw</code>线路大带宽，均很稳定。</p>
<h2 id="测评"><a href="#测评" class="headerlink" title="测评"></a>测评</h2><p>博主只有日本的<code>VPS</code>，只测这个地区，关于丢包延迟情况以博客为准。<br><img src="https://www.southcat.net/usr/picture/Kvmla_JP.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>从实际测试来看，博主本地从日本服务器下载文件最高到过<code>13M/S</code>，比页面上标的高很多，其他地区就暂时不知道了，反正很给力。</p>
<p>香港/新加坡测试<code>IP</code>：</p>
<pre><code>香港CN2：103.213.245.30
新加坡：144.48.6.254</code></pre><h2 id="Kvmla套餐"><a href="#Kvmla套餐" class="headerlink" title="Kvmla套餐"></a>Kvmla套餐</h2><p>优惠码：<code>SGNEW80</code>终生<code>8</code>折，好像只适用于新加坡，且额外升级<code>1G</code>内存，如果不使用优惠码加送<code>50%</code>硬盘。</p>
<p>CPU：2核<br>内存：1GB<br>硬盘：40GB<br>带宽：新加坡100M/香港2M/日本10M<br>流量：600GB<br>架构：KVM<br>价格：80元/月<br>购买：香港、日本、新加坡</p>
<p>CPU：3核<br>内存：2GB<br>硬盘：65GB<br>带宽：新加坡100M/香港3M/日本10M<br>流量：800GB<br>架构：KVM<br>价格：150元/月<br>购买：日本、新加坡、香港</p>
<h2 id="PZEA套餐"><a href="#PZEA套餐" class="headerlink" title="PZEA套餐"></a>PZEA套餐</h2><p><code>Pzea</code>和<code>Kvmla</code>都是一家，而且新加坡有月付<code>7</code>折，年付<code>5</code>折的活动，均为终生折扣，这里也提下。其中<code>7</code>折优惠码<code>PAUG30OFF</code>；<code>5</code>折优惠码<code>PAUG50OOFF</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Let’s Encrypt免费泛域名SSL证书申请教程</title>
    <url>/2003/</url>
    <content><![CDATA[<p><strong>说明：</strong>前几天<code>Let’s Encrypt</code>泛域名<code>SSL</code>证书出来了，有需要的可以签发下。</p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><strong>1、安装相关依赖</strong></p>
<pre><code>#Debian/Ubuntu
apt-get update -y &amp;&amp;  apt-get -y install curl cron socat
#Centos
yum update -y &amp;&amp;  yum -y install curl cron socat</code></pre><p><strong>2、安装acme.sh</strong></p>
<pre><code>curl https://get.acme.sh | sh</code></pre><p><strong>3、获取DNS API</strong><br>可以使用<code>CloudXNS</code>、<code>CloudFlare</code>、<code>DNSPod</code>等<code>DNS</code>获取<code>API</code>，这里以<code>CloudFlare</code>为例，先登录账号，然后再去获取<code>API</code>，<code>API</code>获取地址：<a href="https://www.cloudflare.com/a/profile。" target="_blank" rel="noopener">https://www.cloudflare.com/a/profile。</a><br><img src="https://www.southcat.net/usr/picture/let_fssl.png" alt="请输入图片描述" title="请输入图片描述"><br>接下来再输入以下命令：</p>
<pre><code>export CF_Key=&quot;sdfsdfsdfljlbjkljlkjsdfoiwje&quot;  #获取到的API
export CF_Email=&quot;xxxx@sss.com&quot;  #CloudFlare邮箱</code></pre><p>其它<code>DNS</code>使用方法参考<code>Github</code>：How to use DNS API。</p>
<p><strong>4、开始签发</strong></p>
<pre><code>#修改自己域名后运行，且第一个-d后面不能直接写*.xx.com，一定要写单域名，第二个-d后面可以写泛域名。
~/.acme.sh/acme.sh   --issue -d southcat.net  -d *.southcat.net  --dns dns_cf</code></pre><p>签发成功后，<code>CSR</code>、<code>KEY</code>、<code>CERT</code>保存的路径：<code>/root/.acme.sh/southcat.net/</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Let&#39;s Encrypt将从2018年1月起免费提供通配符证书</title>
    <url>/1609/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Let’s Encrypt</code>从2018年1月起将要支持野卡泛域名<code>SSL</code>证书的申请。泛域名证书的域名可以填写为<code>*.xx.com</code>，那么所有<code>xx.com</code>的子域名，比如<code>x.xx.com</code>都可以使用同一张证书。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>引用wiki介绍：</strong><a href="https://zh.wikipedia.org/wiki/Let%27s_Encrypt" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/Let%27s_Encrypt</a><br><code>Let&#39;s Encrypt</code>是一个于2015年三季度推出的数字证书认证机构，将通过旨在消除当前手动创建和安装证书的复杂过程的自动化流程，为安全网站提供免费的<code>SSL/TLS</code>证书。<br><code>Let&#39;s Encrypt</code>是由互联网安全研究小组（<code>ISRG</code>，一个公益组织）提供的服务。主要赞助商包括电子前哨基金会，<code>Mozilla</code>基金会，<code>Akamai</code>以及思科。2015年4月9日，<code>ISRG</code>与<code>Linux</code>基金会宣布合作。<br>用以实现这一新的数字证书认证机构的协议被称为自动证书管理环境（<code>ACME</code>）。<code>GitHub</code>上有这一规范的草案，且提案的一个版本已作为一个<code>Internet</code>草案发布。<code>Let&#39;s Encrypt</code>宣称这一过程将十分简单、自动化并且免费。</p>
<p><strong>公告地址：</strong><a href="https://letsencrypt.org//2017/07/06/wildcard-certificates-coming-jan-2018.html" target="_blank" rel="noopener">https://letsencrypt.org//2017/07/06/wildcard-certificates-coming-jan-2018.html</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux CentOS 6升级Python 2.6至Python 2.7的方法</title>
    <url>/1489/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在很多软件安装都需要<code>Python2.7</code>支持了，不想折腾的可以直接用<code>Centos 7.x</code>，自带<code>Python2.7</code>，很多人还在用<code>Centos 6.x</code>，自带<code>Python2.6</code>，版本太低，而又不想换系统，所以只能手动升级了。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、检查当前Python版本</strong></p>
<pre><code>python -V</code></pre><p>检查之后，我们可以看到是<code>Python 2.6.6</code>版本</p>
<p><strong>2、升级系统和安装开发工具包</strong></p>
<pre><code>yum -y update
yum groupinstall &quot;Development tools&quot; -y</code></pre><p><strong>3、补充安装需要的组件支持</strong></p>
<pre><code>yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel -y</code></pre><p><strong>4、安装Python2.7.6</strong></p>
<pre><code>cd /opt
wget --no-check-certificate https://www.python.org/ftp/python/2.7.6/Python-2.7.6.tar.xz
tar xf Python-2.7.6.tar.xz
./configure --prefix=/usr/local
sudo make &amp;&amp; sudo make altinstall</code></pre><p>注意了，这里是用的<code>altinstall</code>。</p>
<p><strong>5、检查是否安装</strong></p>
<pre><code>/usr/local/bin/python2.7 --version</code></pre><p>目前，我们只能通过这个命令检查，看到<code>Python 2.7.6</code>版本。</p>
<p><strong>6、创建软链接</strong></p>
<pre><code>mv /usr/bin/python /usr/bin/python2.6.6
ln -s /usr/local/bin/python2.7 /usr/bin/python</code></pre><p>移除原来的老版本，然后创建<code>2.7</code>的软链接。这样我们直接用<code>Python -V</code>可以看到已经是<code>Python 2.7.6</code>。</p>
<p><strong>7、修复兼容问题</strong><br>另外，由于<code>yum</code>的依赖是<code>python2.6</code>，需要修改<code>yum</code>文件</p>
<pre><code>vi /usr/bin/yum</code></pre><p>编辑文件，在顶部修改成</p>
<pre><code>#!/usr/bin/python2.6.6</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux Centos下Nginx反向代理教程</title>
    <url>/1553/</url>
    <content><![CDATA[<p><strong>系统要求：</strong><code>CentOS</code>系统，内存<code>64MB</code>及以上、<code>80</code>端口没有被占用</p>
<p><strong>1、安装EPEL repo</strong></p>
<pre><code>rpm -Uvh http://mirror.ancl.hawaii.edu/linux/epel/6/i386/epel-release-6-8.noarch.rpm</code></pre><p><code>EPEL repo</code>下载地址：<code>https://fedoraproject.org/wiki/EPEL</code></p>
<p><strong>2、安装Nginx</strong><br>安装<code>Nginx</code></p>
<pre><code>yum install nginx -y</code></pre><p>调整<code>Nginx</code>配置</p>
<pre><code>cd /etc/nginx/conf.d
mv default.conf default.conf.disabled</code></pre><p><strong>3、创建Nginx反代配置文件</strong></p>
<pre><code>cd /etc/nginx/conf.d
vi yourdomain.com                 </code></pre><p>粘贴以下内容：</p>
<pre><code>server {
      listen 80;
      server_name yourdomain.com;   
      access_log off;
      error_log off;
      location / {
      proxy_pass http://需要反代的服务器IP/;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_max_temp_file_size 0;
      client_max_body_size 10m;
      client_body_buffer_size 128k;
      proxy_connect_timeout 90;
      proxy_send_timeout 90;
      proxy_read_timeout 90;
      proxy_buffer_size 4k;
      proxy_buffers 4 32k;
      proxy_busy_buffers_size 64k;
      proxy_temp_file_write_size 64k;
   }
} </code></pre><p>然后保存。</p>
<pre><code>service nginx start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux一键安装Aria2+Yaaw+FileManager实现BT磁力下载，并在线查看/观看</title>
    <url>/1863/</url>
    <content><![CDATA[<p><strong>说明：</strong>博客关于<code>BT</code>下载的教程已经很多了，特别是<code>Aria2</code>，看见小<code>Z</code>大佬写了个<code>Aria2</code>+<code>Yaaw</code>+<code>FileManager</code>一键包，比一般的<code>Aria2</code>面板配置要简单，挺方便的，就转载下。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Aria2</code>是一个轻量级的多协议和多源命令行 下载工具。它支持<code>HTTP</code>/<code>HTTPS</code>，<code>FTP</code>，<code>SFTP</code>，<code>BitTorrent</code>和<code>Metalink</code>。<code>aria2</code>可以通过内置的<code>JSON-RPC</code>和<code>XML-RPC</code>接口进行操作。</p>
<p><code>YAAW</code>则是一个管理<code>aria2</code>的<code>WEB</code>接口，两者结合轻松实现离线下载，在文章《CentOS安装aria2 + yaaw实现离线下载》分享过手动配置方法，为了简化流程，写了一个一键脚本，方便部署。</p>
<p><code>File Manager</code>是一个基于<code>GO</code>的轻量级文件管理系统支持登录系统 角色系统、在线<code>PDF</code>、图片、视频浏览、上传下载、打包下载等功能。</p>
<p><strong>Github地址：</strong><a href="https://github.com/helloxz/aria2" target="_blank" rel="noopener">https://github.com/helloxz/aria2</a></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>支持多种<code>Linux</code>发行版</li>
<li>一键安装<code>Aria2</code>+<code>Caddy</code>+<code>YAAW</code>+<code>FileManager</code></li>
<li>文件管理+离线下载+在线播放</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>CentOS 6</code>/<code>7 X64</code>、<code>Debian 8+ X64</code>和<code>Ubuntu 16+ X64</code>，不支持<code>32</code>位系统。</p>
<p>运行以下命令：</p>
<pre><code>#Centos系统
yum -y install wget unzip
#如果是Debian or Ubuntu系统
apt-get install -y wget unzip
#下面的命令通用，直接复制
wget https://github.com/helloxz/aria2/archive/master.zip
unzip master.zip &amp;&amp; cd aria2-master &amp;&amp; chmod u+x *.sh &amp;&amp; ./install_aria2.sh</code></pre><p>安装过程中，按要求输入用户名、密码及<code>Aria2</code>授权令牌。</p>
<h2 id="配置YAAW"><a href="#配置YAAW" class="headerlink" title="配置YAAW"></a>配置YAAW</h2><p>访问<code>YAAW</code>下载面板地址：<code>http://IP:6080</code>，，输入您刚刚设置的用户名、密码，就可以看到<code>YAAW</code>，再点击右上角<code>Setting</code>按钮，在<code>JSON-RPC Path</code>那里输入安装完后显示的<code>RPC</code>地址：<code>http://token:abc123@IP:6800/jsonrpc</code>，然后保存即可。<br><img src="https://www.southcat.net/usr/picture/Aria2_Yaaw_f(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Aria2_Yaaw_f(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>点击<code>YAAW</code>面板的左上角<code>Add</code>添加任务并下载，再通过访问<code>http://IP:6080/admin</code>进入到<code>FileManager</code>文件管理器，进入<code>Down</code>文件夹，找到下载的东西，就可以在线查看或者观看了。注意，和<code>Down</code>同一个文件夹的文件请不要随意删除和修改，以免出现异常。<br><img src="https://www.southcat.net/usr/picture/Aria2_Yaaw_f(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Aria2_Yaaw_f(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Aria2_Yaaw_f(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>#启动
/data/aria2/aria2.sh start
#停止
/data/aria2/aria2.sh stop
#重启
/data/aria2/aria2.sh restart
#Caddy server配置文件
/data/aria2/caddy.conf
#Aria2配置文件
/data/aria2/aria2.conf
#离线下载目录
/data/aria2/download
#日志目录
/data/aria2/aria2.log
/data/aria2/caddy.log</code></pre><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><pre><code>#YAAW提示Error: Internal server error错误？
原因一：RPC地址错误，安装完成后会提示RPC地址，请确保填写正确。
原因二：输入netstat -apn|grep aria2c查看进程，如果没有任何信息，可以确定Aria2服务未启动，输入命令nohup aria2c --conf-path=/data/aria2/aria2.conf &gt; /data/aria2/aria2.log 2&gt;&amp;1 &amp;重新启动服务，如果依然不行，请查看错误日志/data/aria2/aria2.log
原因三：防火墙未放行6800端口，请自行放行下端口或关闭服务器防火墙。

#重启了服务器就打不开了？
脚本并未设置开机启动，重启服务器后请输入/data/aria2/aria2.sh start来运行服务。

#Debian/Ubuntu系统，提示安装成功，但是打不开？
Debian/Ubuntu并未自动放行端口，请放行6080/6800两个端口，或者直接关闭防火墙，如果您的服务商支持安全组还需要额外检查。</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>使用Aria2+AriaNG+FileManager来进行离线BT下载及在线播放</li>
<li>使用Docker快速安装Aria2+AriaNg+Filerun/Nextcloud，在线下载BT磁链/在线观看</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux CentOS升级Python 3.6版本方法</title>
    <url>/1598/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在很多软件安装也要求<code>Python 3</code>以上，而<code>Python</code>在<code>CentOS 6</code>默认是<code>2.6</code>版本，<code>CentOS 7</code>是<code>2.7</code>版本，所以我们需要手动升级<code>Python</code>版本来达到软件编译的最低要求。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>这里以<code>CentOS 6</code>为例。<br><strong>1、安装环境</strong></p>
<pre><code>yum -y groupinstall development zlib zlib-devel</code></pre><p><strong>2、下载并安装python3.6</strong></p>
<pre><code>wget https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tar.xz
tar xJf Python-3.6.0.tar.xz
cd Python-3.6.0
./configure
make
make install</code></pre><p>注意：如果因为系统原因<code>make install</code>时出现<code>zipimport.ZipImportError: can&#39;t decompress data</code>错误，请先执行 <code>yum -y install zlib*</code>后再安装。</p>
<p><strong>3、检查是否成功</strong></p>
<pre><code>which python3
python3 -V</code></pre><p><img src="https://www.southcat.net/usr/picture/Python%203.6(1).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>4、创建软链接</strong></p>
<pre><code>cd /usr/bin
mv python python.backup
ln -s /usr/local/bin/python3 /usr/bin/python</code></pre><p><strong>5、重启，查看当前的python版本</strong></p>
<pre><code>python -V</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux下使用MediaEncoder工具压制视频</title>
    <url>/1740/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>KiritoMiao</code>大佬写的脚本，用来压制视频的，感觉还可以。</p>
<p><strong>Github地址：</strong><a href="https://github.com/KiritoMiao/MediaEncoder" target="_blank" rel="noopener">https://github.com/KiritoMiao/MediaEncoder</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装指令</strong></p>
<pre><code>yum install unzip curl  #For Centos
apt-get install unzip curl  #For Debian和Ubuntu</code></pre><p><strong>2、安装脚本</strong></p>
<pre><code>bash &lt;(curl https://www.southcat.net/usr/down/mediaencode/mencode.sh)</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>输入<code>mediaencode</code>按提示操作。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux下，使用speedtest测试网络的上/下行速率</title>
    <url>/1528/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>speedtest是一个用Python编写的轻量级Linux命令行工具，在Python2.4至3.4版本下均可运行。它基于Speedtest.net的基础架构来测量网络的上/下行速率。安装speedtest很简单——只需要下载其Python脚本文件。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、安装：</strong></p>
<pre><code>wget https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
chmod a+rx speedtest.py
mv speedtest.py /usr/local/bin/speedtest
chown root:root /usr/local/bin/speedtest</code></pre><p><strong>2、使用：</strong></p>
<pre><code>speedtest</code></pre><p>输入这个命令后，它会自动发现离你最近的Speedtest.net服务器（地理距离），然后测试出网络上/下行速率。</p>
<pre><code>speedtest --share</code></pre><p>这个命令将会把你的测试结果上传到Speedtest.net服务器，并以图形的方式分享给其他人。</p>
<pre><code>speedtest --list</code></pre><p>这个命令将会打印出所有的Speedtest.net服务器（按照离你的地理距离由近及远排序）。</p>
<pre><code>speedtest --server 935</code></pre><p>在上面的列表中，每个服务器的前面都有一个与其对应的ID。如果想使用指定的服务器来测试你的网速，你只需要在speedtest-cli命令后指定其ID即可。例如，如果想使用在Washington DC的服务器，你只需要指定相对应的服务器ID（如935）。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux下安装Vuze (Azureus)客户端教程，可离线BT下载</title>
    <url>/1971/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前提到了很多<code>BT</code>下载工具，比如<code>Aria2</code>、<code>uTorrent</code>、<code>Deluge</code>、<code>Peerflix Server</code>、<code>Transmission</code>等，安装教程博客也都有，这里再提个下载工具<code>Vuze</code>，原<code>Azureus</code>，中文名毒蛙，还有社交功能等，博主测试了下，速度还是挺快的，这里说下安装方法。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Vuze</code>是一个基于<code>JAVA</code>的多<code>torrent</code>下载程序，支持多个<code>torrent</code>同时下载，可对每一个<code>torrent</code>的上传和下载速度进行限制，可手动设置某个<code>torrent</code>的优先权，对于多<code>tracker</code>发布的<code>torrent</code>可自动切换，并可以手动更改<code>tracker url</code>。增加了一些基本的<code>irc</code>命令，还有社交，资源搜索等功能。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Vuze(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vuze(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vuze(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本教程在<code>CentOS 7</code>下测试通过。</p>
<p><strong>1、安装JAVA</strong></p>
<pre><code>yum install java</code></pre><p>如果安装不成功，可添加<code>yum</code>源后再安装，</p>
<pre><code>#CentOS/RHEL 5：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-5.noarch.rpm

#CentOS/RHEL 6：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm

#CentOS/RHEL 7：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</code></pre><p><strong>2、安装Vuze</strong></p>
<pre><code>#下载Vuze
cd /opt/
wget http://cf1.vuze.com/files/VuzeInstaller.tar.bz2
tar xjf VuzeInstaller.tar.bz2
cd vuze

#下载控制台界面组件
wget -r --level=1 -np -nH -R index.html -nd -k http://svn.vuze.com/public/client/trunk/uis/lib/

#创建用户, 修改文件所有者
groupadd vuze
useradd vuze -g vuze
chown vuze:vuze -R /opt/vuze

#以vuze用户启动控制台(这是为了确保配置文件保存在vuze用户主目录下，防止后面脚本需要重新配置)
su vuze -c &quot;java -jar Azureus2.jar --ui=console&quot;

#安装Web界面插件
plugin install xmwebui</code></pre><p>如果解压出现<code>tar (child): lbzip2: Cannot exec: No such file or directory</code>问题，先<code>yum -y install bzip2</code>后再解压<code>*.tar.bz2</code>文件。</p>
<p>安装完成后就可以访问<code>http://IP:9091/</code>进行下载了，如果想添加<code>pair</code>认证和密码登录的话，继续往下面看。</p>
<p><strong>3、添加pair认证和密码登录</strong><br>一般完成上面<code>2</code>步就可以直接使用了，不过还可以选择连接方式，有<code>Vuze</code>特色的<code>pair</code>认证以及常规的账号密码认证。</p>
<p><code>pair</code>认证请输入命令：</p>
<pre><code>pair enable</code></pre><p>输出类似如下，请记好<code>Access code</code>，这个可以在<code>http://remote.vuze.com</code>或者<code>Vuze Remote</code>的客户端中使用。</p>
<pre><code>Current pairing state:
        Status: No remote services enabled
        Access code: xxxxxx</code></pre><p>如果要关闭这个模式切换为常规密码模式，请输入命令：</p>
<pre><code>#账号密码自行修改
set &quot;Plugin.xmwebui.Password Enable&quot; true boolean
set &quot;Plugin.xmwebui.Pairing Enable&quot; false boolean
set &quot;Plugin.xmwebui.User&quot; &quot;senra&quot; string
set &quot;Plugin.xmwebui.Password&quot; &quot;senrame&quot; password</code></pre><p><strong>4、添加自启</strong><br>一般重启系统后，<code>Vuze</code>就不会自己启动，这里就需要给<code>Vuze</code>添加自启。使用命令：</p>
<p>脚本需要依赖<code>screen</code>，请使用以下命令安装</p>
<pre><code>yum install screen</code></pre><p>添加脚本</p>
<pre><code>cat &gt;/etc/init.d/vuze&lt;&lt;&apos;EOF&apos;</code></pre><p>复制以下代码</p>
<pre><code>#! /bin/sh

#The user that will run Vuze
VZ_USER=vuze

#Name of the screen-session
NAME=vuze_screen

#executable files in the following paths that are perhaps needed by the script
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/opt/vuze/bin

#your path to the azureus directory, where Azureus2.jar is located
DIR=/opt/vuze/

#Description
DESC=&quot;Vuze screen daemon&quot;

case &quot;$1&quot; in
 start)
    if [[ `su $VZ_USER -c &quot;screen -ls |grep $NAME&quot;` ]]
       then
       echo &quot;Vuze is already running!&quot;
    else
       echo &quot;Starting $DESC: $NAME&quot;
       su $VZ_USER -c &quot;cd $DIR; screen -dmS $NAME java -jar ./Azureus2.jar --ui=console&quot;
    fi
    ;;
 stop)
    if [[ `su $VZ_USER -c &quot;screen -ls |grep $NAME&quot;` ]]
       then
       echo -n &quot;Stopping $DESC: $NAME&quot;
       su $VZ_USER -c &quot;screen -X quit&quot;
       echo &quot; ... done.&quot;
    else
       echo &quot;Coulnd&apos;t find a running $DESC&quot;
    fi
    ;;
 restart)
    if [[ `su $VZ_USER -c &quot;screen -ls |grep $NAME&quot;` ]]
        then
       echo -n &quot;Stopping $DESC: $NAME&quot;
       su $VZ_USER -c &quot;screen -X quit&quot;
       echo &quot; ... done.&quot;
    else
       echo &quot;Coulnd&apos;t find a running $DESC&quot;
    fi
    echo &quot;Starting $DESC: $NAME&quot;
       su $VZ_USER -c &quot;cd $DIR; screen -dmS $NAME java -jar ./Azureus2.jar --ui=console&quot;
    echo &quot; ... done.&quot;
    ;;
 status)
    if [[ `su $VZ_USER -c &quot;screen -ls |grep $NAME&quot;` ]]
       then
       echo &quot;Vuze is RUNNING&quot;
    else
       echo &quot;Vuze is DOWN&quot;
    fi
    ;;
 *)
    echo &quot;Usage: $0 {start|stop|status|restart}&quot;
    exit 1
    ;;
 esac

 exit 0

EOF</code></pre><p>授权脚本</p>
<pre><code>chmod +x /etc/init.d/vuze</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>在Ubuntu/Debian下安装uTorrent，可离线下载BT种子磁力</li>
<li>一个小巧而强大的BT种子下载客户端：Deluge一键安装脚本</li>
<li>支持BT磁力链接/离线下载/边下边播：Peerflix Server一键脚本</li>
<li>Debian一键安装Transmission并美化Web界面来进行BT下载</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux使用Aria2命令下载BT种子/磁力/直链文件</title>
    <url>/1757/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人肯定以为<code>Aria2</code>只是一个下载工具，需要配合前端比如<code>Aria2 Web UI</code>、<code>AriaNg</code>等使用，其实<code>Aria2</code>本身就是个命令行工具，优点是轻量、开源，支持多协议、多线程，可以直接使用<code>Aria2</code>命令来下载<code>BT</code>种子等资源文件，这里说下<code>Aria2</code>命令使用方法。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>执行以下命令：</p>
<pre><code>yum install aria2  #CentOS系统
apt-get install aria2  #Debian/Ubuntu系统</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、直链下载</strong><br>下载直链文件，只需在命令后附加地址，如：</p>
<pre><code>aria2c http://xx.com/xx</code></pre><p>如果需要重命名为<code>yy</code>的话加上<code>--out</code>或者<code>-o</code>参数，如：</p>
<pre><code>aria2c --out=yy http://xx.com/xx
aria2c -o yy http://xx.com/xx</code></pre><p>使用<code>aria2</code>的分段和多线程下载功能可以加快文件的下载速度，对于下载大文件时特别有用。<code>-x</code> 分段下载，<code>-s</code> 多线程下载，如：</p>
<pre><code>aria2c -s 2 -x 2 http://xx.com/xx</code></pre><p>这将使用<code>2</code>个连接和<code>2</code>个线程来下载该文件。</p>
<p><strong>2、BT下载</strong><br>种子和磁力下载：</p>
<pre><code>aria2c ‘xxx.torrnet‘
aria2c &apos;磁力链接&apos;</code></pre><p>列出种子内容：</p>
<pre><code>aria2c -S xxx.torrent</code></pre><p>下载种子内编号为<code>1</code>、<code>4</code>、<code>5</code>、<code>6</code>、<code>7</code>的文件，如：</p>
<pre><code>aria2c --select-file=1,4-7 xxx.torrent</code></pre><p>设置<code>bt</code>端口：</p>
<pre><code>aria2c --listen-port=3653 ‘xxx.torrent’</code></pre><p><strong>3、限速下载</strong><br>单个文件最大下载速度：</p>
<pre><code>aria2c --max-download-limit=300K -s10 -x10 &apos;http://xx.com/xx&apos;</code></pre><p>整体下载最大速度：</p>
<pre><code>aria2c --max-overall-download-limit=300k -s10 -x10 &apos;http://xx.com/xx&apos;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux使用hdparm命令来测试SSD硬盘性能</title>
    <url>/1463/</url>
    <content><![CDATA[<p><strong>说明：</strong>使用<code>hdparm</code>可以测试<code>SSD</code>硬盘性能，数据准确。</p>
<p><strong>1、安装</strong></p>
<pre><code>yum install hdparm   #centos
apt-get install hdparm   #debian,ubuntu</code></pre><p><strong>2、使用</strong></p>
<pre><code>hdparm -t /dev/xvda</code></pre><p><code>/dev/xvdb</code>为硬盘符，可使用<code>fdisk -l</code>获取。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux使用mkdir和touch命令创建文件夹和文件</title>
    <url>/1760/</url>
    <content><![CDATA[<p><strong>说明：</strong>刚刚在操作<code>VPS</code>的时候，需要创建一些文件夹和文件，而这些命令在<code>Linux VPS</code>操作和应用过程中还是比较常用的，所以就说一下。</p>
<p><strong>1、创建文件夹</strong></p>
<pre><code>mkdir xx  #xx为文件夹名称</code></pre><p><strong>2、创建文件</strong></p>
<pre><code>touch xx  #xx为文件名称，比如xx.txt，xx.php</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux修改PhpMyAdmin(MySql)密码教程</title>
    <url>/1506/</url>
    <content><![CDATA[<p>此教程只为了方便忘记数据库（phpmyadmin）密码的人。</p>
<p><strong>第一步，停止掉目前VPS的MYSQL服务</strong></p>
<pre><code>/etc/init.d/mysql stop</code></pre><p><strong>第二步，跳过验证启动MySQL</strong></p>
<pre><code>/usr/local/mysql/bin/mysqld_safe --skip-grant-tables &gt;/dev/null 2&gt;&amp;1 &amp;</code></pre><p><strong>第三步，准备重新设置新密码</strong></p>
<pre><code>/usr/local/mysql/bin/mysql -u root mysql
update user set password = Password(&apos;新密码&apos;) where User = &apos;root&apos;;
flush privileges;
exit;


killall mysqld
/etc/init.d/mysql start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux 出现&quot;No targets specified and no makefile found&quot;错误的解决方法</title>
    <url>/1480/</url>
    <content><![CDATA[<p>我们在<code>Linux VPS</code>中安装文件的时候，经常会出现各种各样的问题，比如出现<code>&quot;make:*** No targets specified and no makefile found.Stop.&quot;</code>这样的错误提示。现在就说下这种错误的解决方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>1、更新最新版本系统软件</p>
<pre><code>apt-get update</code></pre><p>2、编译缺失关联软件</p>
<pre><code>apt-get install gcc build-essential</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux删除文件出现/bin/rm: Argument list too long解决方法</title>
    <url>/1481/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候用<code>rm -rf*</code>删除文件时会出现<code>-bash:/bin/rm:Argument list too long</code>错误提示，这句话意思应该文件过大，删除失败，这时候可以通过<code>xargs</code>命令来解决。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>注意：</strong>未免误删，请在需要删除的文件目录下进行操作！<br><strong>1、文件数量较少情况下</strong></p>
<pre><code>ls | xargs rm -f</code></pre><p>目录下文件可都一起删除</p>
<p><strong>2、文件数量很多的时候</strong></p>
<pre><code>ls | xargs -n 10 rm -rf  </code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux安装dos2unix来转换文件格式</title>
    <url>/1622/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们有时候在电脑上编辑一些脚本或者文件时，放到<code>linux vps</code>服务器上会出现问题，其实需要转换下格式就可以用了。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、安装dos2unix</strong></p>
<pre><code>#Centos
yum install dos2unix
#Debian/Ubuntu
apt-get install dos2unix


dos2unix /root/xx   #注意文件位置填对</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux安装Aria2来实现种子、磁力下载</title>
    <url>/1530/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Aria2</code>作为一款<code>linux</code>下的下载神器，很多极客都在使用，可以下载<code>http</code>资源、种-子文件、磁力链接等，功能强大，而且整合<code>Chrome</code>插件可以摆脱百度云盘的速度限制。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p>1、高速，自动多线程下载；断点续传。<br>2、轻量占用内存非常少，通常情况平均4~9MB内存占用(官方介绍)。<br>3、多平台。支持<code>Win/Linux/OSX/Android</code>等操作系统下的部署。<br>4、模块化。分段下载引擎，文件整合速度快。<br>5、支持<code>RPC</code>界面远程。<br>6、全面支持<code>BitTorrent</code>协议。</p>
<p><strong>官网：</strong><code>https://aria2.github.io</code></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>已在<code>Centos6</code>下安装成功</p>
<p><strong>1、安装必要组件</strong><br>安装<code>clang</code></p>
<pre><code>yum -y install clang</code></pre><p>安装<code>GCC</code>，通过<code>SCL</code>安装<code>GCC</code></p>
<pre><code>wget https://copr.fedoraproject.org/coprs/rhscl/devtoolset-3/repo/epel-6/rhscl-devtoolset-3-epel-6.repo -O /etc/yum.repos.d/rhscl-devtoolset-3-epel-6.repo
yum install devtoolset-3-gcc devtoolset-3-gcc-c++ devtoolset-3-binutils devtoolset-3-gcc-gfortran 
scl enable devtoolset-3 bash
gcc --version</code></pre><p><strong>2、一键安装</strong></p>
<pre><code>wget https://www.southcat.net/usr/down/Aria2/aria2.sh
chmod +x aria2.sh
./aria2.sh</code></pre><p>安装了<code>Aria2</code>主程序、开放<code>6800</code>端口启动、开启<code>RPC Server</code>、开机启动<code>RPC Server</code>、添加<code>Aria2</code>管理脚本，默认用户名<code>user</code>，密码<code>passwd</code>，用户名和密码存放在<code>/etc/aria2/aria2.conf</code>中。</p>
<p><strong>3、aria2管理脚本</strong><br>启动：<code>/etc/init.d/aria2 start</code><br>停止：<code>/etc/init.d/aria2 stop</code><br>重启：<code>/etc/init.d/aria2 restart</code></p>
<h2 id="Aria2的图形管理"><a href="#Aria2的图形管理" class="headerlink" title="Aria2的图形管理"></a>Aria2的图形管理</h2><p><strong>提示：</strong><code>Aria2</code>的图形管理界面可以自己搭建也可以使用别人搭建好的，不过2种方法都会说。</p>
<p><strong>1、自己搭建</strong><br>可使用军哥的<code>lnmp</code>、<code>lamp</code>一键包或者<code>amh</code>、<code>vestacp</code>、宝塔等面板程序搭建网站环境，上传最常用的<code>Aria2 Web UI</code>程序到网站根目录即可。<br><code>Aria2 Web UI</code>程序本地下载地址：webui-aria2、<code>github</code>项目地址：<code>https://github.com/ziahamza/webui-aria2</code></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux安装rinetd实现TCP端口转发，可加速网站</title>
    <url>/2040/</url>
    <content><![CDATA[<p><strong>说明：</strong>网站服务器在国外的如果延迟很高，网络爆炸，会造成国内访问放慢，可以使用<code>CDN</code>加速，自建教程查看：使用Nginx反向代理，自建CDN加速节点，不过设置方法对于新手很不友好，这里再说个方法，可以使用<code>rinetd</code>转发端口来加速网站。当然也可以用来加速一些<code>55r</code>等<code>DaiL</code>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装依赖</strong></p>
<pre><code>#CentOS系统
yum -y install gcc make

#Debian/Ubuntu系统
apt update
apt install gcc make -y</code></pre><p><strong>2、安装rinetd</strong></p>
<pre><code>#下载rinetd
wget https://boutell.com/rinetd/http/rinetd.tar.gz
#解压
tar -zxvf rinetd.tar.gz
#创建手册目录
mkdir -p /usr/man/man8
#进入目录
cd rinetd
#编译安装
make &amp;&amp; make install</code></pre><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>接下来设置<code>TCP</code>端口转发。</p>
<p>1、新建<code>rinetd</code>配置文件</p>
<pre><code>vi /etc/rinetd.conf</code></pre><p>2、添加转发配置</p>
<pre><code>#源IP一般填0.0.0.0
源IP 源端口 目标IP 目标端口</code></pre><p>如果是转发<code>https</code>网站，则填入下面参数，自行修改。</p>
<pre><code>0.0.0.0 80 100.61.126.101 80
0.0.0.0 443 100.61.126.101 443</code></pre><p>意思是将本地<code>80/443</code>端口转发到<code>100.61.126.101</code>的<code>80/443</code>端口。</p>
<p>3、启动<code>rinetd</code></p>
<pre><code>rinetd -c /etc/rinetd.conf</code></pre><p>启动后可以输入<code>netstat -apn|grep &#39;rinetd&#39;</code>查看是否运行正常。</p>
<p>注意还需要在自己服务器防火墙放行对应的源端口，否则无法正常使用用。</p>
<pre><code>#防火墙关闭
service iptables stop

#CentOS 7
systemctl stop firewalld.service
systemctl disable firewalld.service</code></pre><p>这时候可以修改本地<code>host</code>文件，位置<code>C:\Windows\System32\drivers\etc\hosts</code>，添加：</p>
<pre><code>源IP 转发的网站
#如
100.600.100.101 southcat.net</code></pre><p>打开网站测试下速度。如果没问题，效果不错，就可以更改网站的<code>DNS</code>解析了，指向源<code>IP</code>地址即可。</p>
<p><strong>说明：</strong>如果加速网站，请使用延迟低的服务器转发，建议<code>ping</code>下本地到源<code>IP</code>延迟，和源<code>IP</code>到目标<code>IP</code>延迟，如果加起来延迟过高，效果不好，就别转了，浪费时间。如果效果好，建议<code>2</code>个服务器都安装魔改<code>BBR</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux性能测试UnixBench一键脚本</title>
    <url>/1490/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>UnixBench是一个类unix系（Unix，BSD，Linux）统下的性能测试工具，一个开源工具，被广泛用与测试linux系统主机的性能。Unixbench的主要测试项目有：系统调用、读写、进程、图形化测试、2D、3D、管道、运算、C库等系统基准性能提供测试数据。</p>
<p>最新版本UnixBench5.1.3，包含system和graphic测试，如果你需要测试graphic，则需要修改Makefile,不要注释掉”GRAPHIC_TESTS = defined”，同时需要系统提供x11perf命令gl_glibs库。</p>
<p>下面的脚本使用了最新版UnixBench5.1.3来测试，注释了关于graphic的测试项（大多数VPS都是没有显卡或者是集显，所以图像性能无需测试），运行10-30分钟后（根据CPU内核数量，运算时间不等）得出分数，越高越好。</p>
<h2 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h2><pre><code>wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh
chmod +x unixbench.sh
./unixbench.sh</code></pre><h2 id="测试项目"><a href="#测试项目" class="headerlink" title="测试项目"></a>测试项目</h2><p><strong>Dhrystone 2 using register variables</strong><br>此项用于测试 string handling，因为没有浮点操作，所以深受软件和硬件设计（hardware and software design）、编译和链接（compiler and linker options）、代码优化（code optimazaton）、对内存的cache（cache memory）、等待状态（wait states）、整数数据类型（integer data types）的影响。</p>
<p><strong>Double-Precision Whetstone</strong><br>这一项测试浮点数操作的速度和效率。这一测试包括几个模块，每个模块都包括一组用于科学计算的操作。覆盖面很广的一系列 c 函数：sin，cos，sqrt，exp，log 被用于整数和浮点数的数学运算、数组访问、条件分支（conditional branch）和程序调用。此测试同时测试了整数和浮点数算术运算。</p>
<p><strong>Execl Throughput</strong><br>此测试考察每秒钟可以执行的 execl 系统调用的次数。 execl 系统调用是 exec 函数族的一员。它和其他一些与之相似的命令一样是 execve（） 函数的前端。</p>
<p><strong>File copy</strong><br>测试从一个文件向另外一个文件传输数据的速率。每次测试使用不同大小的缓冲区。这一针对文件 read、write、copy 操作的测试统计规定时间（默认是 10s）内的文件 read、write、copy 操作次数。</p>
<p><strong>Pipe Throughput</strong><br>管道（pipe）是进程间交流的最简单方式，这里的 Pipe throughtput 指的是一秒钟内一个进程可以向一个管道写 512 字节数据然后再读回的次数。需要注意的是，pipe throughtput 在实际编程中没有对应的真实存在。</p>
<p><strong>Pipe-based Context Switching</strong><br>这个测试两个进程（每秒钟）通过一个管道交换一个不断增长的整数的次数。这一点很向现实编程中的一些应用，这个测试程序首先创建一个子进程，再和这个子进程进行双向的管道传输。</p>
<p><strong>Process Creation</strong><br>测试每秒钟一个进程可以创建子进程然后收回子进程的次数（子进程一定立即退出）。process creation 的关注点是新进程进程控制块（process control block）的创建和内存分配，即一针见血地关注内存带宽。一般说来，这个测试被用于对操作系统进程创建这一系统调用的不同实现的比较。</p>
<p><strong>System Call Overhead</strong><br>测试进入和离开操作系统内核的代价，即一次系统调用的代价。它利用一个反复地调用 getpid 函数的小程序达到此目的。</p>
<p><strong>Shell Scripts</strong><br>测试一秒钟内一个进程可以并发地开始一个 shell 脚本的 n 个拷贝的次数，n 一般取值 1，2，4，8。（我在测试时取 1， 8）。这个脚本对一个数据文件进行一系列的变形操作（transformation）。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux广告过滤/屏蔽软件：ADbyby一键安装脚本</title>
    <url>/1674/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们的<code>VPS</code>服务器可以通过安装<code>ADbyby</code>使<code>55R</code>等相关工具实现过滤、屏蔽广告功能，还是很不错的。</p>
<p><strong>注意：</strong><code>ADbyby</code>对<code>CPU</code>要求较高，特别是流量很大的时候，如果<code>CPU</code>很弱的请不要尝试，并且在大流量情况下可能会因为<code>ADbyby</code>效率和<code>CPU</code>占用过高而影响速度。所以一般我是不推荐在服务器上面安装这类广告过滤软件的，还是建议本地设备安装！</p>
<p>官方网站：<a href="http://www.adbyby.com/" target="_blank" rel="noopener">http://www.adbyby.com/</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>CentOS 6+</code>/<code>Debian 6+</code>/<code>Ubuntu 14.04 +</code>，推荐<code>Debian 7 x64</code>。</p>
<p>执行下面的代码下载并运行脚本：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/adbyby.sh &amp;&amp; chmod +x adbyby.sh &amp;&amp; bash adbyby.sh</code></pre><p><img src="https://www.southcat.net/usr/picture/ADbyby.png" alt="请输入图片描述" title="请输入图片描述"><br>运行脚本后会出现脚本操作菜单，选择并输入<code>1</code>就会开始安装。</p>
<h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><p>启动：<code>service adbyby start</code><br>停止：<code>service adbyby stop</code><br>重启：<code>service adbyby restart</code><br>查看状态：<code>service adbyby status</code><br>安装目录：<code>/usr/local/adbyby</code><br>配置文件：<code>/usr/local/adbyby/bin/adhook.ini</code></p>
<h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><p><code>ADbyby</code>脚本支持开机启动。</p>
<p><code>ADbyby</code>的广告过滤效果取决于广告过滤规则的完善程度，默认的规则并不是很全，所以想要更好的过滤效果请自行添加 广告过滤规则<code>URL</code>！</p>
<h2 id="添加广告过滤-屏蔽规则URL"><a href="#添加广告过滤-屏蔽规则URL" class="headerlink" title="添加广告过滤/屏蔽规则URL"></a>添加广告过滤/屏蔽规则URL</h2><p>默认的配置文件，我已经加上了四个<code>URL</code>规则，<code>ADbyby</code>会自动定时更新的，如果你想要添加或者删除这些<code>URL</code>规则，那么可以运行脚本后选择<code>6</code>选项。</p>
<p>然后就会打开配置文件，在最后的<code>[exrule]</code>项目下面添加/删除广告过滤<code>URL</code>规则即可，一行一个。</p>
<p>脚本中我是用<code>vim</code>编辑器打开配置文件的，打开后按<code>I键</code>即可进入编辑模式，然后就可以修改了（注意不要使用键盘中的小键盘）。</p>
<p>修改后，按<code>ESC键</code>退出编辑模式，然后输入<code>:wq</code>保存并退出，如果不想保存，那就<code>:q!</code>不保存强行退出。</p>
<p>以下这些广告过滤规则<code>URL</code>，可以根据需求添加进去：</p>
<pre><code>https://easylist-downloads.adblockplus.org/easylistchina.txt
https://easylist.to/easylist/easylist.txt
https://easylist-downloads.adblockplus.org/easyprivacy.txt
https://easylist-downloads.adblockplus.org/malwaredomains_full.txt
https://raw.githubusercontent.com/xinggsf/Adblock-Plus-Rule/master/ABP-FX.txt</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux安装lrzsz后使用rz和sz命令来上传下载文件</title>
    <url>/1475/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>lrzsz</code>是一款在<code>linux</code>里可代替<code>ftp</code>上传和下载的程序。有时候上传下载文件的时候比直接用<code>FTP</code>工具方便多了！</p>
<p><strong>1、安装lrzsz</strong></p>
<pre><code>apt-get install lrzsz  #debian或Ubuntu
yum -y install lrzsz  #Centos</code></pre><p><strong>2、rz和sz命令使用</strong></p>
<pre><code>rz  #上传文件，去所需目录执行命令rz，会跳出文件选择窗口，选择好文件，点击确认即可。


sz  #下载文件，去文件所在目录执行命令sz xx.zip，xx.zip即为文件名</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux最常用的几个命令</title>
    <url>/1449/</url>
    <content><![CDATA[<p><strong>1、top命令 可以实时查看系统状态</strong></p>
<pre><code>top #可以查看内存，cpu运行状态之类</code></pre><p><strong>2、wget命令 下载网络文件，例如：</strong></p>
<pre><code>wget http://cachefly.cachefly.net/100mb.test #后面改成需要的下载链接地址</code></pre><p><strong>3、chmod命令 #后就是这个命令的说明</strong></p>
<pre><code>chmod +x /home/auto.sh # 赋予auto.sh可执行权限
chmod -R 777 /home/wwwroot # 赋予/home/wwwroot写入权限（部分网站程序安装时需要用到）</code></pre><p><strong>4、mv命令 移动文件</strong></p>
<pre><code>mv /home/wwwroot/abc.tar.gz /home/backup # 把abc.tar.gz移动到backup目录</code></pre><p><strong>5、rm命令 删除文件</strong></p>
<pre><code>rm test.tar.gz # 删除test.tar.gz，会有提示你确认 y即可
rm -rf /home/wwwroot/test # 无提示直接删除test目录，勿乱用，切记。</code></pre><p><strong>6、tar命令 C打包和X解压文件</strong></p>
<pre><code>tar zcvf test.tar.gz /home/wwwroot #把/home/wwwroot打包
tar zxvf test.tar.gz # 在当前目录解压test.tar.gz


cd 举例：cd /home/wwwroot # 进入某目录
ls # 查看当前目录文件
echo nameserver 8.8.8.8 &gt;&gt; /etc/resolv.conf #设置dns为Google的</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux系统Crontab的安装及定时任务的命令详解</title>
    <url>/1689/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多时候我们的<code>VPS</code>运行脚本或者重启某些软件的时候都需要用到定时功能，这时候就要用到<code>Crontab</code>定时软件了，这里简单的说下安装和使用方法。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>一般我们使用的<code>Centos</code>或者<code>Debian</code>都自带<code>Crontab</code>定时软件，如果没有，那我们就需要安装了。<br><strong>1、centos安装crontab</strong></p>
<pre><code>yum install crontabs   #安装Crontab
chkconfig crond on   #设置开机启动Crontab
service crond start   #启动Crontab</code></pre><p><strong>2、debian安装crontab</strong></p>
<pre><code>apt-get install cron   #安装Crontab
/etc/init.d/cron restart   #重启Crontab</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、基本命令</strong></p>
<pre><code>crontab -e   #编辑定时任务
crontab -r   #移除定时任务
crontab -l   #查看定时任务</code></pre><p><strong>2、使用命令</strong><br>添加的命令必须以如下格式：</p>
<pre><code>* * * * * /root/rats.sh   #前5个*指时间，后面为命令</code></pre><p>前5个<code>*</code>分别表示：</p>
<pre><code>分钟：0-59
小时：1-23
日期：1-31
月份：1-12
星期：0-6（0表示周日）</code></pre><p>还可以用一些特殊符号：</p>
<pre><code>*： 表示任何时刻
,：　表示分割
－：表示一个段，如：1-5，就表示1到5点
/n : 表示每个n的单位执行一次，如：*/1, 就表示每隔1个小时执行一次命令。也可以写成1-23/1


43 21 * * *   #21:43 执行
15 05 * * *   #05:15 执行
0 17 * * *    #17:00 执行
0 17 * * 1    #每周一的17:00 执行
0,10 17 * * 0,2,3    #每周日,周二,周三的17:00和17:10 执行
0-10 17 1 * *    #毎月1日从17:00到7:10毎隔1分钟 执行
0 0 1,15 * 1    #毎月1日和15日和一日的0:00 执行
42 4 1 * *   #毎月1日的4:42分 执行
0 21 * * 1-6   #周一到周六21:00 执行
0,10,20,30,40,50 * * * *　  #每隔10分 执行
*/10 * * * *   #每隔10分 执行
* 1 * * *   #从1:0到1:59每隔1分钟 执行
0 1 * * *   #1:00 执行
0 */1 * * *   #毎时0分每隔1小时 执行
0 * * * *   #毎时0分 执行
2 8-20/3 * * *   #8:02,11:02,14:02,17:02,20:02 执行
30 5 1,15 * *   #1日和15日的5:30 执行</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>linux查看硬盘使用时间</title>
    <url>/1495/</url>
    <content><![CDATA[<p><strong>说明：</strong>此方法只适用于独服！！</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>这里用的centos系统：</strong></p>
<pre><code>yum install smartmontools -y</code></pre><p><strong>如果有阵列使用命令：</strong></p>
<pre><code>smartctl -a /dev/sg0
smartctl -a /dev/sg1
smartctl -a /dev/sg2
sg1是阵列卡</code></pre><p><strong>如果就普通硬盘没有阵列使用命令：</strong></p>
<pre><code>smartctl -A /dev/sda   #如果不行用df看看硬盘名称，把sda换了即可</code></pre><p><strong>如果正常会显示以下信息：</strong></p>
<pre><code>=== START OF READ SMART DATA SECTION ===
SMART Attributes Data Structure revision number: 10
Vendor Specific SMART Attributes with Thresholds:
ID# ATTRIBUTE_NAME           FLAG       VALUE WORST THRESH TYPE        UPDATED    WHEN_FAILED RAW_VALUE
1 Raw_Read_Error_Rate       0 × 000f     083     063     044     Pre-fail    Always        –        204269687
3 Spin_Up_Time              0 × 0003     099     099     000     Pre-fail    Always        –        0
4 Start_Stop_Count          0 × 0032     100     100     020     Old_age     Always        –        18
5 Reallocated_Sector_Ct     0 × 0033     100     100     036     Pre-fail    Always        –        0
7 Seek_Error_Rate           0 × 000f     069     060     030     Pre-fail    Always        –        7825289
9 Power_On_Hours           0 × 0032     099     099     000     Old_age     Always        –        1626  
10 Spin_Retry_Count          0 × 0013     100     100     097     Pre-fail    Always        –        0
12 Power_Cycle_Count        0 × 0032     100     037     020     Old_age     Always        –        18
184 Unknown_Attribute        0 × 0032     100     100     099     Old_age     Always        –        0
187 Reported_Uncorrect        0 × 0032     100     100     000     Old_age     Always        –        0
188 Unknown_Attribute        0 × 0032     100     099     000     Old_age     Always        –        12
189 High_Fly_Writes           0 × 003a     100     100     000     Old_age     Always        –        0
190 Airflow_Temperature_Cel 0 × 0022     072     069     045     Old_age     Always        –        28 (Lifetime Min/Max 25/31)
194 Temperature_Celsius       0 × 0022     028     040     000     Old_age     Always        –        28 (0 22 0 0)
195 Hardware_ECC_Recovered    0 × 001a     050     047     000     Old_age     Always        –        204269687
197 Current_Pending_Sector    0 × 0012     100     100     000     Old_age     Always        –        0
198 Offline_Uncorrectable     0 × 0010     100     100     000     Old_age     Offline        –        0
199 UDMA_CRC_Error_Count     0 × 003e     200     200     000     Old_age     Always        –        0


9 Power_On_Minutes          0 × 0032     201     201     000     Old_age     Always        –        649h+23m</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux系统下vim编辑文件时出现中文乱码的解决办法</title>
    <url>/1762/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般我们在编辑文件的时候，都喜欢用<code>WinSCP</code>等<code>FTP</code>软件进行编辑，这样确实方便不少，也有时候为了方便直接用<code>vim</code>编辑文件。不过有时候编辑带有中文文件的时候会出现乱码的情况，这样有点影响我们的操作，这里就说下解决方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、编辑.vimrc文件</strong></p>
<pre><code>vim .vimrc</code></pre><p>加入以下代码：</p>
<pre><code>set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8</code></pre><p>保存并退出，当然也可以用<code>WinSCP</code>等<code>FTP</code>软件在<code>root</code>文件夹新建并编辑<code>.vimrc</code>文件。</p>
<p><strong>2、执行生效</strong></p>
<pre><code>source .vimrc</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS一键安装锐速(LotServer)脚本，可与BBR共存</title>
    <url>/1523/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近萌咖大佬的锐速脚本更新了，支持的锐速版本差不多到最新的了，与之前的版本比较，修复了崩溃等众多问题，而且支持的内核更高了(包括<code>4.9+</code>内核)，也就意味着我们在锐速和<code>BBR</code>之间切换安装的时候不需要重复更换内核了，貌似锐速和<code>BBR</code>还能共存，但博主感觉效果提升并不大，反而流量可能会爆增，具体的就需要人去探究了，这里只大概说下脚本。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/MoeClub/lotServer" target="_blank" rel="noopener">https://github.com/MoeClub/lotServer</a></p>
<p>锐速目前支持的操作系统和内核查看→传送门</p>
<p><strong>1、更换内核</strong></p>
<pre><code>#CentOS 6 32位系统更换内核为2.6.32-504.el6
rpm -ivh http://vault.centos.org/6.6/centosplus/i386/Packages/kernel-firmware-2.6.32-504.el6.centos.plus.noarch.rpm
rpm -ivh http://vault.centos.org/6.6/centosplus/i386/Packages/kernel-2.6.32-504.el6.centos.plus.i686.rpm --force

#CentOS 6 64位系统更换内核为2.6.32-504.3.3.el6.x86_64
rpm -ivh http://vault.centos.org/6.6/centosplus/x86_64/Packages/kernel-firmware-2.6.32-504.3.3.el6.centos.plus.noarch.rpm
rpm -ivh http://vault.centos.org/6.6/centosplus/x86_64/Packages/kernel-2.6.32-504.3.3.el6.centos.plus.x86_64.rpm --force

#CentOS 7系统更换内核为3.10.0-229.1.2.el7.x86_64
rpm -ivh http://dev.centos.org/c7.01.u/kernel/20150327030147/3.10.0-229.1.2.el7.x86_64/kernel-3.10.0-229.1.2.el7.x86_64.rpm --force</code></pre><p>查看内核是否更换成功，使用命令：</p>
<pre><code>rpm -qa | grep kernel</code></pre><p>如果成功，重启<code>VPS</code>即可。</p>
<p><strong>2、安装锐速</strong></p>
<pre><code>#常规自动安装
bash &lt;(wget --no-check-certificate -qO- https://github.com/MoeClub/lotServer/raw/master/Install.sh) install

#指定内核安装
bash &lt;(wget --no-check-certificate -qO- https://github.com/MoeClub/lotServer/raw/master/Install.sh) install &lt;Kernel Version&gt;

#完全卸载
bash &lt;(wget --no-check-certificate -qO- https://github.com/MoeClub/lotServer/raw/master/Install.sh) uninstall</code></pre><p><strong>3、使用命令</strong></p>
<pre><code>#启动命令
/appex/bin/lotServer.sh start 

#状态查询
/appex/bin/lotServer.sh status

#停止加速
/appex/bin/lotServer.sh stop

#更新许可，使用ifconfig查看网卡mac地址，替换00:00:00:00:00:00 
wget -qO /appex/etc/apx.lic &apos;https://api.moeclub.org/lotServer?mac=00:00:00:00:00:00&apos;</code></pre><p>最后就说下<code>Debian 9</code>同时开启<code>BBR</code>和锐速的方法，但只建议随便玩玩。</p>
<p>更换内核：</p>
<pre><code>#安装4.9.0-4-amd64内核
apt update
wget https://debian.sipwise.com/debian-security/pool/main/l/linux/linux-image-4.9.0-4-amd64_4.9.65-3+deb9u1_amd64.deb
dpkg -i linux-image-4.9.0-4-amd64*.deb
#查看所有内核
dpkg -l|grep linux-image
#卸载其他内核
apt-get purge &lt;旧内核名称&gt;
#内核更新
update-grub
#重启
reboot</code></pre><p>安装锐速：</p>
<pre><code>bash &lt;(wget --no-check-certificate -qO- https://github.com/MoeClub/lotServer/raw/master/Install.sh) install 4.9.0-4-amd64


echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf
echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf
sysctl -p</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS一键安装Seafile搭建私有云盘存储</title>
    <url>/1593/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Seafile</code>是一个开源、专业、可靠的云存储平台；解决文件集中存储、共享和跨平台访问等问题，除了提供云存储以及共享功能外，<code>Seafile</code>还提供消息通信、群组讨论等辅助功能，帮助更好的围绕文件展开协同工作。</p>
<h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><ul>
<li><code>CentOS 7 64位</code></li>
<li><code>Python &gt;= 2.7</code></li>
<li><code>SqLite 3</code></li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用<code>xshell</code>登录<code>vps</code>用<code>root</code>命令运行：</p>
<pre><code>yum -y install wget
wget https://raw.githubusercontent.com/helloxz/seafile/master/install_seafile.sh
chmod +x install_seafile.sh &amp;&amp; ./install_seafile.sh</code></pre><p>设置管理员邮箱和密码（密码是不会显示的，输入完毕后直接回车），直到安装完成后，直接输入<code>http//:IP:8000</code>进行访问即可！</p>
<p><img src="https://www.southcat.net/usr/picture/Seafile(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Seafile(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a>其它说明</h2><pre><code>#安装目录
/home/MyCloud
#启动服务
/home/MyCloud/seafile-server/seafile.sh start
/home/MyCloud/seafile-server/seahub.sh start
#停止服务
/home/MyCloud/seafile-server/seafile.sh stop
/home/MyCloud/seafile-server/seahub.sh stop</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux通过安装davfs2来挂载webdav网盘</title>
    <url>/1720/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>什么是<code>webdav</code>，是一组基于超文本传输协议的技术集合，有利于用户间协同编辑和管理存储在万维网服务器文档。国外的很多网盘，包括<code>owncloud</code>都支持<code>webdav</code>,本文以<code>yandex</code>为例子介绍，挂载在<code>Linux</code>上。</p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>Linux</strong></p>
<ul>
<li><code>davfs2</code>或者<code>fusedav</code>将<code>WebDAV</code>共享挂载成<code>Coda</code>或者<code>FUSE</code>文件系统。</li>
<li><code>KDE</code>将<code>WebDAV</code>作为<code>kio_http</code>的一部分提供原生支持。<code>Dolphin</code>，<code>Konqueror</code>等其他<code>KDE</code>应用程序可以直接与<code>WebDAV</code>服务器交互。</li>
<li><code>Nautilus</code>也提供内置支持。</li>
<li><code>cadaver</code>命令行工具提供类<code>FTP</code>命令集，也包含在很多<code>Linux</code>发行版中。</li>
<li><code>Apache HTTP</code>服务 提供基于<code>davfs</code>和<code>Apache Subversion</code>的<code>WebDAV</code>模块。</li>
</ul>
<p><strong>Windows</strong></p>
<ul>
<li><code>NetDrive</code>：挂载为网络硬盘机</li>
</ul>
<p><strong>Mac</strong></p>
<ul>
<li><code>Finder</code>：系统内置程式</li>
</ul>
<p>本文就是利用<code>davfs2</code>挂载<code>wendav</code>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>Linux</code>主要的源中都有<code>davfs2</code>,也可以自己编译，需要准备好环境。</p>
<pre><code>apt-get install davfs2
mkdir /mnt/webdav
mount -t davfs https://webdav.yandex.ru /mnt/webdav
Please enter the username to authenticate with server
https://webdav.yandex.ru or hit enter for none.
  Username: test
Please enter the password to authenticate user test with server
https://webdav.yandex.ru or hit enter for none.
  Password:</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>可以把账号密码写入配置文件，以普通用户来挂载。</p>
<pre><code>usermod -a -G network username</code></pre><p>编辑<code>/etc/fstab</code>文件，在后面添加（<code>username</code>自己替换）:</p>
<pre><code>https://webdav.example.com /home/username/webdav davfs user,noauto,uid=username,file_mode=600,dir_mode=700 0 1</code></pre><p>创建账号密码配置:</p>
<pre><code>mkdir ~/.davfs2/
echo &quot;https://webdav.example.com webdavuser webdavpassword&quot; &gt;&gt; ~/.davfs2/secrets 
chmod 0600 ~/.davfs2/secrets</code></pre><p><code>yandex url</code>是：</p>
<pre><code>https://webdav.yandex.ru</code></pre><p>如果是<code>owncloud</code>, <code>url</code>是:</p>
<pre><code>https://webdav.example.com/remote.php/webdav</code></pre><p>多用户配置</p>
<pre><code>/home/username/disk1 webdavuser1 &quot;webdavpassword1&quot;
/home/username/disk2 webdavuser1 &quot;webdavpassword2&quot;
.........
/home/username/diskN webdavuserN &quot;webdavpasswordN&quot;</code></pre><p>Now you should be able to mount and unmount ~/webdav:</p>
<pre><code>mount ~/webdav</code></pre><p>取消挂载</p>
<pre><code>fusermount -u ~/webdav</code></pre><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><p>如果在复制剪切文件遇到错误，编辑<code>/etc/davfs2/davfs2.conf</code>，修改配置如下，</p>
<pre><code>[...]
use_locks 0
[...]</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://wiki.archlinux.org/index.php/Davfs" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Davfs</a></li>
<li><a href="https://yandex.com/support/disk/webdav.html" target="_blank" rel="noopener">https://yandex.com/support/disk/webdav.html</a></li>
<li><a href="https://zh.wikipedia.org/wiki/WebDAV" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/WebDAV</a></li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS一键屏蔽指定国家所有的IP访问</title>
    <url>/2099/</url>
    <content><![CDATA[<p><strong>说明：</strong>对于屏蔽指定国家所有的<code>IP</code>的手动教程已经讲了，查看：Linux VPS使用ipset快速屏蔽指定国家的IP访问，虽然步骤很简单，但为了更白的小白，博主写了个一键脚本，这里分享下。</p>
<p><strong>提示：</strong>据一些同学需求，博主也发了个白名单教程，查看：使用ipset设置防火墙端口白名单，只让指定国家访问。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>本脚本适用于<code>CentOS</code>、<code>Debian</code>、<code>Ubuntu</code>等常用系统。</p>
<p>使用<code>root</code>运行以下命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/block-ips.sh
chmod +x block-ips.sh
./block-ips.sh</code></pre><p>封禁<code>ip</code>时会要求你输入国家代码，代码查看：点击进入。记住所填参数均为小写字母。比如<code>JAPAN (JP)</code>，我们就输入<code>jp</code>这个参数。</p>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p><strong>1、封禁IP</strong><br><img src="https://www.southcat.net/usr/picture/Block-IP(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、查看封禁列表</strong><br><img src="https://www.southcat.net/usr/picture/Block-IP(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>3、解封IP</strong><br><img src="https://www.southcat.net/usr/picture/Block-IP(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS一键更换软件源脚本</title>
    <url>/2268/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有时候会遇到<code>Linux</code>的源更新速度非常的缓慢，特别是在国内使用默认的源，因为国内的网络环境，经常会出现无法更新，更新缓慢的情况。在这种情况下，更换一个更适合或者说更近，更快的软件源，会为你的<code>Linux</code>安装更新操作更加的流畅和顺利。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>系统要求：</strong><code>CentOS 5+</code>、<code>Ubuntu 14.04+</code>、<code>Debian 7+</code></p>
<p>使用命令：</p>
<pre><code>#下载脚本
wget git.io/superupdate.sh
#运行脚本
bash superupdate.sh</code></pre><p>如果第一步你出现错误或执行后无任何输出，请检查是否安装<code>wget</code>和<code>ca-certificates</code>，使用命令：</p>
<pre><code>#Debian、Ubuntu
apt-get install -y wget &amp;&amp; apt-get install -y ca-certificates
#CentOS
yum install -y wget &amp;&amp; yum install -y ca-certificates</code></pre><p>对于<code>Debian</code>默认换源为<code>Fastly CDN</code>的<code>mirror</code>这个源有<code>Fastly</code>的加持对境外主机都有不错的速度。对于<code>Ubuntu</code>和 <code>CentOS</code>系统都默认换为阿里云的<code>mirror</code>，这个源有阿里云全球<code>CDN</code>的加持，全球都有不错的速度。</p>
<p>对于<code>Debian</code>系统还设置了四套其他的源，阿里云，<code>CloudFront CDN</code>，网易<code>163</code>，中科大的源，请根据需要使用参数一键设置如：</p>
<pre><code>bash superupdate.sh cn
bash superupdate.sh 163
bash superupdate.sh aliyun
bash superupdate.sh aws</code></pre><p>如果配置的文件不满意，一键还原</p>
<pre><code>bash superupdate.sh restore</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS一键搭建KMS服务器脚本及激活Windows和Office教程</title>
    <url>/1956/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>KMS</code>就不详细介绍了，可以用来激活微软的一些系统和软件，让你免费体验正版的系统或软件。这里就分享个<code>KMS</code>激活服务器一键搭建脚本，可以供多人使用，一次激活有效期<code>180</code>天，且<code>180</code>天内只要服务器重新在线一次就会自动续期。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/dakkidaze/one-key-kms" target="_blank" rel="noopener">https://github.com/dakkidaze/one-key-kms</a></p>
<p>使用命令：</p>
<pre><code>#CentOS，Redhat，Fedora等请选择CentOS脚本
wget https://raw.githubusercontent.com/dakkidaze/one-key-kms/master/one-key-kms-centos.sh
chmod +x one-key-kms-centos.sh
./one-key-kms-centos.sh

#Debian，Ubuntu，Mint等请选择Debian脚本
wget https://raw.githubusercontent.com/dakkidaze/one-key-kms/master/one-key-kms-debian.sh
chmod +x one-key-kms-debian.sh
./one-key-kms-debian.sh

#启动KMS
wget https://raw.githubusercontent.com/dakkidaze/one-key-kms/master/kms.sh
chmod +x kms.sh
./kms.sh start</code></pre><p>注意放行服务器<code>1688</code>端口！</p>
<h2 id="激活Windows"><a href="#激活Windows" class="headerlink" title="激活Windows"></a>激活Windows</h2><p>系统需要是<code>VL</code>版本的，然后使用管理员权限运行<code>cmd</code>，运行以下命令：</p>
<pre><code>cd /d &quot;%SystemRoot%\system32&quot;
slmgr /skms ip  #ip为你KMS的IP地址或者域名 
slmgr /ato
slmgr /xpr</code></pre><p>看到网上还有很多系统不是<code>VL</code>版本的激活方法，这个方法就不说了，感觉没啥用，因为不是<code>VL</code>版本的都没<code>KEY</code>，比如说旗舰版，家庭高级版等。</p>
<h2 id="激活Office"><a href="#激活Office" class="headerlink" title="激活Office"></a>激活Office</h2><p>首先你的<code>Office</code>必须是<code>VOL</code>版本，否则无法激活。</p>
<p>找到你的<code>Office</code>安装目录，如果你不知道你的<code>Office</code>装在哪个目录，可以鼠标右键一个程序图标比如<code>Word</code>，然后选择“打开文件所在的位置”，在上面地址栏就可以看到了。</p>
<p>这里以<code>Office2016</code>为例，<code>32</code>位文件夹目录为<code>C:\Program Files (x86)\Microsoft Office\Office16</code>。<code>62</code>位目录为<code>C:\Program Files\Microsoft Office\Office16</code>。关于文件夹对应的版本说明：<code>Office16</code>是<code>Office2016</code>，<code>Office15</code>就是<code>Office2013</code>，<code>Office14</code>就是<code>Office2010</code>。</p>
<p>下面以<code>32</code>位为参考。使用管理员权限运行<code>cmd</code>，运行以下命令：</p>
<pre><code>#进入Office文件夹执行命令
cd &quot;C:\Program Files (x86)\Microsoft Office\Office16&quot;
cscript ospp.vbs /sethst:ip  #ip为你KMS的IP地址或者域名
cscript ospp.vbs /act</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS一键更改语言环境为简体中文</title>
    <url>/1886/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>最近在<code>VPS</code>上写程序时发现有些系统中文会有乱码的情况，于是即兴写了这么一个脚本。这是一个用于把<code>Linux</code>的系统环境改为简体中文的小工具。也可以给本身无法显示中文的<code>VPS</code>增加中文显示。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>Github地址：</strong><a href="https://github.com/FunctionClub/LocaleCN" target="_blank" rel="noopener">https://github.com/FunctionClub/LocaleCN</a></p>
<p>运行以下命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/LocaleCN/master/LocaleCN.sh &amp;&amp; bash LocaleCN.sh</code></pre><p>然后重启<code>VPS</code>即可。</p>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS一键安装桌面环境和RDP远程桌面连接</title>
    <url>/2216/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>对于一个最小安装的<code>Linux</code>系统，在一些时候下，我们需要安装简单快速的桌面环境并且通过<code>RDP</code>访问。</p>
<p>例如：运行浏览器，或者一些<code>Linux</code>应用程序，甚至一些<code>Windows</code>应用程序。</p>
<p>现在，你有了一个更好的解决方案，只需一键，就可以快速的帮你安装好桌面环境和远程桌面连接以及<code>Windows</code>支持。如果你正在寻找这样的解决方案，就来试试吧。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/CentOS_RDP.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>脚本已支持<code>Debian</code>、<code>Ubuntu</code>系统。</p>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><pre><code>1、只需一键，即可为Linux(CentOS/Debian/Ubuntu)安装桌面环境和RDP远程桌面连接。
（您需要全新安装的Linux系统，最低硬件要求是：CPU核心≥1，内存≥1GB，磁盘空间≥15GB。）

2、Windows应用程序支持。 （通过Wine）
（安装Wine X64和X86，现在可以在Linux上运行Windows应用程序。例如：Telegram、WeChat）

3、创建3GB交换内存。 避免内存不足导致的错误。
（交换位置：/var/swapd）

4、安装中文输入环境，中文支持。
（如果没有中文环境，您将无法查看中文字体、输入中文内容。而且会导致编码混乱。）

5、默认安装了Chrome，Firefox，WPS国际版，FileZilla。

6、安装远程桌面客户端。（Remmina允许你可以连接和管理其他计算机）。
（支持连接管理RDP/SSH/NX/SFTP/VNC/XDMCP协议）</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>CentOS</code>、<code>Debian</code>、<code>Ubuntu</code></p>
<p>保证你有一个新安装的纯净<code>Linux</code>最小化系统。（没有安装任何无关组件，否则可能会导致错误）。</p>
<p>通过<code>root</code>用户执行以下命令：</p>
<pre><code>#下载脚本
wget --no-check-certificate -qO ~/Linux-Remote-Desktop-Environment.sh &apos;https://raw.githubusercontent.com/iiiiiii1/Linux-Remote-Desktop-Environment/master/Download/Common/Load/Linux-Remote-Desktop-Environment.sh&apos; &amp;&amp; chmod a+x ~/Linux-Remote-Desktop-Environment.sh

#CentOS 7+安装
bash ~/Linux-Remote-Desktop-Environment.sh -CentOS
#Debian 9+安装
bash ~/Linux-Remote-Desktop-Environment.sh -Debian
#Ubuntu 18.04+安装
bash ~/Linux-Remote-Desktop-Environment.sh -Ubuntu</code></pre><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><pre><code>1、完成后。你就可以连接IP:3389（通过远程桌面连接）。RDP登陆账号密码就是您的系统账户和密码。
(root用户和RdpUser用户均可登陆，root密码是您自己设置的密码，RdpUser密码为默认密码)

2、创建新用户时，请授权新用户RDP远程连接。 你需要这样做。（我将演示创建新用户CXT）
#输入useradd -m CXT创建用户或者在[控制中心]-[用户和组群]创建新用户CXT。(为CXT设置密码passwd CXT)
#使用root用户切换进入到CXT的目录。
cd /home/CXT
#输入下面的命令(你需要注意，下面命令中引号是”英文状态单引号”。)
touch ./.Xclients
echo &apos;mate-session&apos; &gt; ./.Xclients
chmod a+x ./.Xclients
#(可选)如果您是Debian/Ubuntu用户，新建用户后需要运行Windows程序，出现中文乱码请参照第9条的方案处理。(CentOS/Redhat无此问题)

3、Chrome浏览器不能通过root用户运行。如果您需要运行，请新建账户。(或者附加运行命令 –no-sandbox)

4、一些Windows应用程序不工作，也许需要您关闭SELinux。（不推荐，一般情况下不需要）

5、一些Windows软件看起来模糊，你需要调整软件后面的背景颜色为暗色调。（例如更换壁纸为深色壁纸）

6、现在，你已经有了浏览器，我相信你可以完成很多的事情了。

7、如果你是Debian/Ubuntu用户，你需要修改部分一键脚本进行手动安装。

8、当前的默认系统语言是中文。如果您是英语用户，请执行’ sudo localectl set-locale LANG = en_US.UTF-8 ‘

9、Debian/Ubuntu系统下，由您新建的用户，运行Wine可能会出现中文乱码，需要您执行以下命令(以新建CXT用户为例)。
#运行命令
su - CXT -c &apos;mkdir -p /home/CXT/.wine/drive_c/windows/Fonts/&apos;
cp -rf ~/.wine/drive_c/windows/Fonts/* /home/CXT/.wine/drive_c/windows/Fonts/
chown -R CXT:CXT /home/CXT/.wine/drive_c/windows/Fonts/*

10、一般情况下不建议使用OVZ服务器运行本程序。当然如果您想使用OVZ虚拟化的服务器，请注意：
#Swap Memory不会生效，因此你的内存必须≥2GB+。
#你需要等待Swap Memory创建完成后，立即开启新SSH窗口，删除Swap挂载。
#挂载的设置文件在这里(/etc/fstab)，删掉(/var/swapd swap swap default 0 0)。
#删除文件(/var/swapd)。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS下Nginx与Apache环境防盗链设置方法</title>
    <url>/1453/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人的<code>VPS</code>流量有限，有的人在<code>VPS</code>中放了一首MP3用来作为背景音乐，但被搜索引擎列为试听/下载地址，放的图片和文件地址也会别人盗用，可想而知流量会消耗多快，这时候我们需要设置防盗链来阻止这样的事发生。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>根据我们搭建的系统环境不同，我们在<code>Nginx</code>和<code>Apache</code>中设置防盗链的方法也是不同的。</p>
<p><strong>1、Nginx防盗链方法：</strong></p>
<pre><code>location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|mp3|wav|zip|rar)$
{
valid_referers none blocked southcat.net *.southcat.net;
if ($invalid_referer)
{
return 403;
}
expires 30d;
}</code></pre><p>在我们网站所在的配置文件<code>conf</code>中添加以上代码，添加后重启<code>nginx</code>就可以生效，网址替换成自己的。</p>
<p><strong>2、Apache防盗链方法：</strong></p>
<pre><code>RewriteEngine On
RewriteCond %{HTTP_REFERER} !^http://southcat.net/.*$ [NC]
RewriteCond %{HTTP_REFERER} !^http://southcat.net$ [NC]
RewriteCond %{HTTP_REFERER} !^http://www.southcat.net/.*$ [NC]
RewriteCond %{HTTP_REFERER} !^http://www.southcat.net$ [NC]
RewriteRule .*\.(gif|jpg|jpeg|png|bmp|swf|mp3|wav|zip|rar)$ http://www.southcat.net/404.html [R,NC]</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS主机安全设置 - 修改VPS默认SSH端口</title>
    <url>/1465/</url>
    <content><![CDATA[<p><strong>说明：</strong>修改端口可以增加被入侵的难度，提高VPS安全性！</p>
<p><strong>1、修改端口</strong><br>使用xshell或者putty登录VPS，默认的VPS一般是22端口</p>
<pre><code>vi  /etc/ssh/sshd_config</code></pre><p>将port后面的端口22数字修改成任意的5个数字</p>
<p><strong>2、重启SSH</strong></p>
<pre><code>#CentOS系统
service sshd restart
#Debian/Ubuntu系统
service ssh restart</code></pre><p><strong>3、特别提示</strong><br>有些时候为了确保还需要设定防火墙是否开启</p>
<pre><code>/sbin/iptables -I INPUT -p tcp --dport 28888（你修改的端口） -j ACCEPT
/etc/init.d/iptables save</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用命令行快速查询百度网盘提取码</title>
    <url>/2386/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主很久前分享过一款百度网盘密码暴力破解器→传送门，现在貌似失效了，所以这里再分享一个，不过不是暴力破解，所以不用担心被百度封<code>ip</code>，该功能使用的是云盘万能钥匙<code>API</code>，也就意味着新的加密链接是获取不了提取码的，不过对于分享过密码的链接，大部分是可以派上用场的，这里就说下使用命令行查询方法。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/wu-dada/baidupankey" target="_blank" rel="noopener">https://github.com/wu-dada/baidupankey</a></p>
<p><strong>Web地址：</strong><a href="https://pnote.net/pan/，不想自己搭建的可以直接在`Web`页面查询。" target="_blank" rel="noopener">https://pnote.net/pan/，不想自己搭建的可以直接在`Web`页面查询。</a></p>
<p><strong>1、安装Nodejs</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y nodejs

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs -y</code></pre><p><strong>2、安装工具</strong></p>
<pre><code>npm install baidupankey -g</code></pre><p>然后使用命令查询：</p>
<pre><code>bdp -u https://pan.baidu.com/s/xxxxx</code></pre><p>后面的为百度网盘链接，输出如图：<br><img src="https://www.southcat.net/usr/picture/baidupankey.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS 使用DDOS deflate来抵御DDOS攻击</title>
    <url>/1471/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人搭建博客或者网站都会被DDOS攻击，基本都会出现网站打不开，服务器瘫痪，对于我们这些小博客来说，都不会花更多资金买抗DDOS服务器来防御DDOS，只能采取些其他办法，<code>DDOS deflate</code>是一款免费的用来防御和减轻DDOS攻击的脚本。它通过netstat监测跟踪创建大量网络连接的IP地址，在检测到某个结点超过预设的限制时，该程序会通过APF或IPTABLES禁止或阻挡这些IP。</p>
<p><strong>1、安装DDOS deflate</strong></p>
<pre><code>wget http://www.southcat.net/usr/down/DDOS/deflate.sh
chmod +x deflate.sh
./deflate.sh</code></pre><p><strong>2、配置DDOS deflate</strong><br>配置<code>/usr/local/ddos/ddos.conf</code>文件。</p>
<pre><code>##### Paths of the script and other files
PROGDIR=&quot;/usr/local/ddos&quot;
PROG=&quot;/usr/local/ddos/ddos.sh&quot;
IGNORE_IP_LIST=&quot;/usr/local/ddos/ignore.ip.list&quot;
CRON=&quot;/etc/cron.d/ddos.cron&quot;
APF=&quot;/etc/apf/apf&quot;
IPT=&quot;/sbin/iptables&quot;

##### frequency in minutes for running the script
##### Caution: Every time this setting is changed, run the script with --cron
#####          option so that the new frequency takes effect
FREQ=1
##### How many connections define a bad IP Indicate that below.
NO_OF_CONNECTIONS=150
##### APF_BAN=1 (Make sure your APF version is atleast 0.96)
##### APF_BAN=0 (Uses iptables for banning ips instead of APF)
APF_BAN=0
##### KILL=0 (Bad IPs are&apos;nt banned, good for interactive execution of script)
##### KILL=1 (Recommended setting)
KILL=1
##### An email is sent to the following address when an IP is banned.
##### Blank would suppress sending of mails
EMAIL_TO=&quot;root&quot;
##### Number of seconds the banned ip should remain in blacklist.
BAN_PERIOD=600</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS一键添加/删除Swap虚拟内存</title>
    <url>/2210/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人的<code>VPS</code>服务器由于内存太小，会导致很多进程被杀掉，这时候就需要我们添加<code>Swap</code>虚拟内存了，这里就整了个一键脚本方便懒人或小白使用。</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p><strong>提示：</strong>脚本不支持<code>OpenVZ</code>架构，安装会自动退出。</p>
<p><strong>运行命令：</strong></p>
<pre><code>wget https://www.southcat.net/usr/shell/swap.sh &amp;&amp; bash swap.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用命令行通过Firefox Send轻松安全地共享文件</title>
    <url>/2411/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Firefox Send</code>可能很多人知道，一个很不错的临时文件分享系统，官方地址→传送门，用的人也挺多的，之前博主曾水过自建<code>Firefox Send</code>的教程，具体查看→传送门，不过都只能通过网页端共享，使用<code>VPS</code>共享就有点不行了，这里就说个工具<code>ffsend</code>，基于官方<code>Firefox Send</code>，使用一个简单的命令，通过安全，专用和加密的链接，从命令行轻松安全地共享文件和目录，可以指定可选密码，最高可达<code>2GB</code>，共享的文件始终在客户端上加密，并且永远不会与远程主机共享密钥。其他人可以使用此工具或通过其<code>Web</code>浏览器下载这些文件。</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>功能齐全，友好的命令行工具</li>
<li>安全地上传和下载文件和目录</li>
<li>始终在客户端加密</li>
<li>额外的密码保护，生成和可配置的下载限制</li>
<li>文件和目录存档和提取</li>
<li>内置共享<code>URL</code>缩短器和<code>QR</code>代码生成器</li>
<li>支持新旧<code>Firefox Send</code>服务器版本</li>
<li>跟踪文件的历史记录，便于管理</li>
<li>能够使用自定义发送主机</li>
<li>检查或删除共享文件</li>
<li>准确的错误报告</li>
<li>流加密和上传/下载，内存占用非常低</li>
<li>即将推出：<code>Firefox</code>帐户集成(下载次数越多，到期时间越长)</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/timvisee/ffsend" target="_blank" rel="noopener">https://github.com/timvisee/ffsend</a></p>
<p><strong>系统要求：</strong><code>Linux</code>、<code>macOS</code>、<code>Windows</code>，这里就只说<code>Linux</code>系统，<code>Windows</code>/<code>macOS</code>直接通过网页上传吧。</p>
<pre><code>提示：编译安装和直接安装随便选一种就行，32位系统只能编译安装。</code></pre><p><strong>1、编译安装</strong><br>安装依赖：</p>
<pre><code>#Debian/Ubuntu系统
apt update
apt install build-essential cmake pkg-config libssl-dev xclip git -y

#CentOS系统
yum install gcc gcc-c++ make cmake openssl-devel xclip git -y</code></pre><p>安装<code>Rust</code>和<code>Cargo</code>：</p>
<pre><code>curl https://sh.rustup.rs -sSf | sh
source $HOME/.cargo/env</code></pre><p>拉取最新源码并编译：</p>
<pre><code>git clone https://github.com/timvisee/ffsend.git
cd ffsend
cargo install --path . -f
#查看版本
ffsend --version</code></pre><p><strong>2、直接安装</strong><br>除了自己编译外，作者也直接提供了编译好的文件给你使用，文件下载地址：点击进去，然后再根据自己的系统架构下载对应的最新版二进制文件。目前最新版为<code>v0.2.46</code>。</p>
<p>安装依赖：</p>
<pre><code>#Debian/Ubuntu系统
apt update
apt install xclip -y

#CentOS系统
yum install xclip -y</code></pre><p>安装<code>ffsend</code>：</p>
<pre><code>#下载二进制文件
wget https://github.com/timvisee/ffsend/releases/download/v0.2.46/ffsend-v0.2.46-linux-x64-static
mv ffsend-* ffsend 
chmod a+x ffsend
mv ffsend /usr/local/bin
#查看版本
ffsend --version</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre><code>#使用命令
ffsend [FLAGS] [OPTIONS] [SUBCOMMAND]

#参数详解，解释看不懂的，直接谷歌翻译
FLAGS:
    -f, --force          
            Force the action, ignore warnings

    -h, --help           
            Prints help information

    -i, --incognito      
            Don&apos;t update local history for actions

    -I, --no-interact    
            Not interactive, do not prompt

    -q, --quiet          
            Produce output suitable for logging and automation

    -V, --version        
            Prints version information

    -v, --verbose        
            Enable verbose information and logging

    -y, --yes            
            Assume yes for prompts

OPTIONS:
    -A, --api &lt;VERSION&gt;                 
            Server API version to use, one of:
            2, 3: Firefox Send API versions
            auto, -: probe server to determine [env:FFSEND_API]
        --basic-auth &lt;USER:PASSWORD&gt;    
            HTTP basic authentication credentials [env:FFSEND_BASIC_AUTH]

    -H, --history &lt;FILE&gt;                
            Use the specified history file [env:FFSEND_HISTORY]

    -t, --timeout &lt;SECONDS&gt;             
            Request timeout (0 to disable) [env:FFSEND_TIMEOUT]

    -T, --transfer-timeout &lt;SECONDS&gt;    
            Transfer timeout (0 to disable) [env:FFSEND_TRANSFER_TIMEOUT]

SUBCOMMANDS:
    upload        Upload files [aliases:u, up]
    download      Download files [aliases:d, down]
    debug         View debug information [aliases:dbg]
    delete        Delete a shared file [aliases:del]
    exists        Check whether a remote file exists [aliases:e]
    generate      Generate assets [aliases:gen]
    help          Prints this message or the help of the given subcommand(s)
    history       View file history [aliases:h]
    info          Fetch info about a shared file [aliases:i]
    parameters    Change parameters of a shared file [aliases:params]
    password      Change the password of a shared file [aliases:pass, p]
    version       Determine the Send server version [aliases:v]</code></pre><p><strong>1、上传</strong></p>
<pre><code>#直接上传
ffsend upload moerats.mp4

#设置密码为moerats
ffsend upload moerats.mp4 --password moerats</code></pre><p><strong>2、下载</strong></p>
<pre><code>ffsend download https://send.firefox.com/share-url</code></pre><p><strong>3、其它命令</strong></p>
<pre><code>#查看文件信息
ffsend info https://send.firefox.com/share-url
大致输出：
ID:         b23be28f61e720dc  
Name:       moerats.mp4  
Size:       10.70 MiB (11221278 B)  
MIME:       video/mp4  
Downloads:  0 of 1  
Expiry:     23h42m (85357s)

#查看上传历史
ffsend history

#修改上传文件密码
ffsend password https://send.firefox.com/share-url

#删除上传文件
ffsend delete https://send.firefox.com/share-url</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用Docker快速安装Cloudreve多功能网盘</title>
    <url>/2021/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Cloudreve</code>是一款支持对接多家云存储的多功能网盘系统，之前介绍过，具体查看：Cloudreve搭建教程，这里再说下使用<code>Docker</code>来快速安装<code>Cloudreve</code>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本镜像使用环境为<code>Apache 2.4</code>、<code>MariaDB 10</code>、<code>PHP 7.1</code>。且不支持<code>OpenVZ</code>架构。</p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong></p>
<pre><code>docker pull ilemonrain/cloudreve</code></pre><p><strong>3、配置镜像</strong></p>
<pre><code>#命令
docker run [-d/-t] -p 80:80 -v /cloudreve:/cloudreve -e CLOUDREVE_URL=&quot;[Cloudreve URL]&quot; --name docker-cloudreve ilemonrain/cloudreve
#示例
docker run -t -p 80:80 -v /cloudreve:/cloudreve -e CLOUDREVE_URL=&quot;http://xx.com/&quot; --name docker-cloudreve ilemonrain/cloudreve</code></pre><p>参数说明：</p>
<pre><code>#-d/-t：决定是以后台运行模式启动或是前台监控模式启动。
使用-d参数启动，镜像将不会输出任何日志到你的Console，直接以Daemon模式启动。Deamon模式启动下，可以使用docker logs docker-cloudreve命令显示启动日志。
使用-t参数启动，将会直接Attach你的镜像到你的Console，这个模式启动下，你可以直观的看到镜像的启动过程，适合于初次部署镜像，以及镜像Debug部署使用。你可以使用Ctrl+C将Docker镜像转入后台运行，使用docker logs docker-cloudreve 命令显示启动日志。

#-v /cloudreve:/cloudreve：将Docker容器中的/cloudreve目录，映射到宿主机的/cloudreve目录，冒号前面的是映射路径，冒号后的为容器中路径 (强烈建议进行映射，以确保容器中数据的安全，避免在容器意外崩溃时导致数据丢失)，容器中可以映射的路径：
/cloudreve：Cloudreve程序目录以及网盘文件目录
/var/lib/mysql：MariaDB(MySQL)数据库文件目录

#-p 80:80：暴露你的Docker容器内部的80端口，到你容器外部的80端口。目前由于开发状态原因，不建议修改此端口。

#-e CLOUDREVE_URL=&quot;[Cloudreve URL]&quot;：Cloudreve绑定的地址，此参数务必严格填写，不能丢掉http/https前缀和结尾的斜杠！如http://xx.com/。</code></pre><p>最后打开地址即可！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用Docker快速部署一个CentOS系统容器</title>
    <url>/2114/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多都需要新系统来测试一些东西，如果没多的<code>VPS</code>服务器的话，就很蛋疼了。这时候我们可以在仅有的服务器上使用<code>Docker</code>部署一个新系统来供我们测试，测试完再直接清空容器，而不会影响到服务器本身，很方便。话说好像可以用这个方法在一个<code>VPS</code>上部署很多个类似<code>NAT</code>小鸡？只是与真<code>NAT</code>不同的是资源全部共享，一般玩玩还是可以的。这里就分享个由ilemonrain博主制作的<code>CentOS</code>镜像。</p>
<h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><p><strong>1、镜像说明</strong><br>此镜像基于<code>CentOS</code>官方镜像制作而成，集成<code>OpenSSH-Server</code>、<code>OpenSSH-Client</code>、<code>initscripts</code>(可以使用<code>service</code>命令)、<code>EPEL</code>镜像源、<code>wget</code>、<code>passwd</code>、<code>tar</code>、<code>unzip</code>，满足最低运行环境需求，如果其他需要，请自行使用<code>yum install</code>进行安装。</p>
<p>受制于<code>systend</code>在<code>Docker</code>上的兼容性，<code>CentOS 7.x</code>系统将无法使用<code>systemd</code>相关程序 (如<code>systemctl</code>，<code>service</code>等)，如果后台启动服务的需要，请使用<code>CentOS 6.x</code>镜像，(默认拉取的镜像为<code>CentOS 6.9</code>)。</p>
<p>推荐使用最新的镜像(<code>CentOS 6.9</code>与<code>CentOS 7.4</code>)，受制于<code>Docker</code>本身机制，无法在<code>yum update</code>升级系统版本后<code>reboot</code>(重启)完成升级。所以除非特殊需要，否则建议你使用最新镜像，避免很多问题。</p>
<p><strong>2、镜像标签</strong></p>
<pre><code>CentOS 7.4.1708 (7.4, 7.4.1708, 7)
CentOS 7.3.1611 (7.3, 7.3.1611)
CentOS 7.2.1511 (7.2, 7.2.1511)
CentOS 7.1.1503 (7.1, 7.1.1503)
CentOS 7.0.1406 (7.0, 7.0.1406)
CentOS 6.9 (6.9, 6, latest)
CentOS 6.8 (6.8)
CentOS 6.7 (6.7)
CentOS 6.6 (6.6)</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取CentOS镜像</strong><br>启动命令：</p>
<pre><code>docker run -d -p 2222:22 --name CentOS-Docker ilemonrain/centos-sshd </code></pre><p>参数说明：</p>
<pre><code>-d：以Daemon(后台)模式启动镜像
-p 2222:22：暴露宿主机的2222端口，映射到容器内部的22端口 (SSH)
--name CentOS-Docker：容器名称
ilemonrain/centos-sshd：镜像名称</code></pre><p>请按照自己的实际需要，暴露对应的端口。</p>
<p>更多说明：</p>
<pre><code>#如果需要暴露更多的内部端口，可以使用多个-p参数，比如-p 80:80 -p 53:53。如果需要区分协议，请在-p参数后面注明，比如-p 80:80/tcp -p 53:53/udp。

#ilemonrain/centos-sshd镜像默认为CentOS 6.9系统，如果你要安装CentOS 7.4，后面参数则为ilemonrain/centos-sshd:7.4，其它系统以此为参考。

#如果想部署多个CentOS系统容器，则注意将容器名称改成不同的即可！</code></pre><p>部署好了后，<code>SSH</code>登录信息：</p>
<pre><code>用户名：root
密码：centos</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用Google BBR拥塞算法加速TCP教程</title>
    <url>/1527/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Google BBR</code>是一个<code>TCP</code>加速优化工具，类似于锐速，可用于优化<code>TCP</code>连接,最近<code>Google</code>开源了其<code>TCP BBR</code>拥塞控制算法,并提交到了<code>Linux</code>内核,根据实地测试，在部署了最新版内核并开启了<code>TCP BBR</code>的机器上，网速甚至可以提升好几个数量级，所以最近一下就火起来了。</p>
<p><strong>特别提示：</strong><code>Google BBR</code>不支持<code>Openvz</code>！</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本方法在<code>Debian</code>和<code>Ubuntu</code>部分版本中可行，此次测试操作系统是<code>Ubuntu 14.04 x86_64</code>。</p>
<p>内核下载</p>
<pre><code>wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.9-rc8/linux-image-4.9.0-040900rc8-generic_4.9.0-040900rc8.201612051443_amd64.deb（64位内核）
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.9-rc8/linux-headers-4.9.0-040900rc8_4.9.0-040900rc8.201612051443_all.deb（32位内核）</code></pre><p>内核安装</p>
<pre><code>dpkg -i linux-image-4.9.0*.deb</code></pre><p>查看内核</p>
<pre><code>dpkg -l|grep linux-image</code></pre><p>删除旧内核</p>
<pre><code>apt-get purge （旧内核名称）</code></pre><p>内核更新</p>
<pre><code>update-grub</code></pre><p>重启</p>
<pre><code>reboot</code></pre><p>保存生效</p>
<pre><code>echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf
echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf
sysctl -p</code></pre><p>查看内核是否已开启BBR</p>
<pre><code>sysctl net.ipv4.tcp_available_congestion_control</code></pre><p>查看BBR是否启动</p>
<pre><code>lsmod | grep bbr</code></pre><p>显示以下即启动成功</p>
<pre><code># lsmod | grep bbr
tcp_bbr                20480  14</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用iftop监控服务器流量，查看网络异常情况</title>
    <url>/1928/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们手上的<code>VPS</code>服务器有时候会出现流量异常情况，这时候可能被人当肉鸡发包，或者挂了网站被<code>CC</code>消耗了大量的流量，这时候我们就需要查看流量具体情况来排除问题了，这里推荐个<code>iftop</code>工具，很好用，而且对检测流量异常的服务器是非常有效的。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>iftop</code>是<code>Linux</code>系统一个免费的网卡实时流量监控工具，类似于<code>top</code>命令。<code>iftop</code>可以监控指定网卡的实时流量、端口连接信息、反向解析<code>IP</code>等，还可以精确显示服务器与其它服务器、网站的流量来源信息，非常方便我们查看服务器流量异常的根源，这对于网络故障排查、网络安全检测是十分有用的。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>CentOS/RHEL系统：</strong></p>
<pre><code>#安装EPEL源
CentOS/RHEL 5 ：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-5.noarch.rpm

CentOS/RHEL 6 ：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm

CentOS/RHEL 7 ：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

#安装iftop
yum install iftop</code></pre><p><strong>Debian/Ubuntu系统：</strong></p>
<pre><code>apt-get install iftop</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>然后使用<code>iftop</code>命令查看流量信息。<br><img src="https://www.southcat.net/usr/picture/iftop_jk.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>参数说明：</strong></p>
<pre><code>1、最上面的一行显示的信息是流量刻度，用于显示网卡带宽流量。
2、中间的是服务器与其它服务器或IP流量传输关系，=&gt;为发送数据，&lt;=为接收数据。
3、最下面的信息
TX：发送流量
RX：接收流量
TOTAL：总流量
Cumm：运行iftop到目前时间的总流量
peak：流量峰值
rates：分别表示过去2s 10s 40s的平均流量</code></pre><p>使用<code>iftop -h</code>可以查看各个参数含义，如：</p>
<pre><code>-i指定需要监测的网卡                                         iftop –i eth1
-n将输出的主机信息都通过IP显示，不进行DNS反向解析            iftop -n
-B将输出以bytes为单位显示网卡流量，默认是bits                iftop –B
-p以混杂模式运行iftop，此时iftop可以作为网络嗅探器使用       iftop –p
-N只显示连接端口号，不显示端口对应的服务名称                 iftop –N
-P显示主机以及端口信息，这个参数非常有用                     iftop –P
-F显示特定网段的网卡进出流量                                 iftop –F 192.168.12.0/24
-m设置iftop输出界面中最上面的流量刻度最大值                  iftop –m</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用ipset快速屏蔽指定国家的IP访问</title>
    <url>/2053/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>ipset</code>是<code>iptables</code>的扩展，它允许你创建匹配整个<code>IP</code>地址集合的规则。可以快速的让我们屏蔽某个<code>IP</code>段。这里分享个屏蔽指定国家访问的方法，有时候还可以有效的帮网站阻挡下攻击。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>首先需要得到国家<code>IP</code>段，下载地址：<a href="http://www.ipdeny.com/ipblocks/。这里以我们国家为例。" target="_blank" rel="noopener">http://www.ipdeny.com/ipblocks/。这里以我们国家为例。</a></p>
<p><strong>1、安装ipset</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install ipset

#CentOS系统
yum -y install ipset</code></pre><p><strong>2、创建规则</strong></p>
<pre><code>#创建一个名为cnip的规则
ipset -N cnip hash:net
#下载国家IP段
wget -P . http://www.ipdeny.com/ipblocks/data/countries/cn.zone
#将IP段添加到cnip规则中
for i in $(cat /root/cn.zone ); do ipset -A cnip $i; done</code></pre><p><strong>3、开始屏蔽</strong></p>
<pre><code>iptables -I INPUT -p tcp -m set --match-set cnip src -j DROP</code></pre><p><strong>4、解除屏蔽</strong></p>
<pre><code>#-D为删除规则
iptables -D INPUT -p tcp -m set --match-set cnip src -j DROP</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用Matomo(Piwik)搭建网站统计系统</title>
    <url>/1945/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Matomo</code>(原<code>Piwik</code>)是一个<code>PHP</code>和<code>MySQL</code>的开放源代码的<code>Web</code>统计软件，它给你一些关于你的网站的实用统计报告，比如网页浏览人数，访问最多的页面，搜索引擎关键词等等，<code>piwik</code>也可以定位访问者所在的国家、地区、城市，并将这些信息在地图中展现。及对文件下载、网站内链接点击、<code>404</code>页面及网页中的标题、文本等其他的元素跟踪。还有专门的<code>APP</code>(<code>Matomo Mobile</code>)可以进行查询分析数据，还支持中文等多国语言，反正功能很多，就不细说了。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/piwiki(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/piwiki(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、搭建WEB环境</strong><br>使用服务器搭建好<code>WEB</code>环境，<code>LNMP</code>/<code>LAMP</code>都可以，然后直接下载并上传程序源码解压到网站根目录，再删除源码压缩包，程序下载：piwik.zip。<br>也可以直接使用命令：</p>
<pre><code>cd /www/wwwroot/xx.com
wget https://builds.matomo.org/piwik.zip &amp;&amp; unzip piwik.zip
mv piwik/* ./
rm -rf piwik.zip</code></pre><p><strong>2、安装程序</strong><br>新建数据库并打开网站，按要求进行安装。<br><img src="https://www.southcat.net/usr/picture/piwiki(3).png" alt="请输入图片描述" title="请输入图片描述"><br>检查下重要组件有没有缺失。<br><img src="https://www.southcat.net/usr/picture/piwiki(4).png" alt="请输入图片描述" title="请输入图片描述"><br>然后设置数据库和网站。<br><img src="https://www.southcat.net/usr/picture/piwiki(5).png" alt="请输入图片描述" title="请输入图片描述"><br>再到自己网站将代码放进去。<br><img src="https://www.southcat.net/usr/picture/piwiki(6).png" alt="请输入图片描述" title="请输入图片描述"><br>安装完成后去后台根据需求进行设置及安装插件了。<br><img src="https://www.southcat.net/usr/picture/piwiki(7).png" alt="请输入图片描述" title="请输入图片描述"><br>如果要获得更精确可靠访客地理信息就需要安装<code>GeoIP</code>插件并设置，插件在平台商城那里搜索。</p>
<p><code>Wordpress</code>的<code>Piwik</code>插件地址：<a href="https://wordpress.org/plugins/wp-piwik/，可以方便的连接`Piwik`和`WP`博客。" target="_blank" rel="noopener">https://wordpress.org/plugins/wp-piwik/，可以方便的连接`Piwik`和`WP`博客。</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用MinIO Client客户端实时同步备份文件</title>
    <url>/2452/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主很久前介绍过<code>MinIO</code>服务器，一个开源的轻量级对象存储服务，具体查看→传送门，用起来挺不错的，搭建也非常方便，而这里要说的其实是<code>MinIO</code>服务器是的一个客户端<code>MinIO Client</code>，主要的功能就是可以自动监听文件夹，然后实时同步到远程的<code>MinIO</code>服务器，也支持同步到<code>Amazon S3</code>、<code>Google</code>云存储，同样的安装十分简单，我们可以拿来同步备份博客或者其他数据文件。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>文档地址：</strong><a href="https://docs.min.io/" target="_blank" rel="noopener">https://docs.min.io/</a></p>
<p>基本上<code>MinIO</code>服务器和客户端支持在很多系统上安装，比如<code>Windows</code>、<code>macOS</code>等，这里主要说<code>Linux</code>。</p>
<p><strong>1、安装MinIO Client</strong></p>
<pre><code>wget https://dl.min.io/client/mc/release/linux-amd64/mc -P /usr/local/bin/
chmod +x /usr/local/bin/mc</code></pre><p><strong>2、添加云存储</strong></p>
<pre><code>#MinIO云存储，添加前需要在另一台服务器安装MinIO服务，教程查看https://www.southcat.net/archives/643/
mc config host add minio &lt;Endpoint&gt; &lt;AccessKey&gt; &lt;SecretKey&gt; S3v4

#Amazon S3云存储
mc config host add s3 https://s3.amazonaws.com &lt;ALIAS&gt; &lt;Endpoint&gt; &lt;AccessKeyID&gt; &lt;SecretAccessKey&gt; S3v4

#Google云存储
mc config host add gcs  https://storage.googleapis.com &lt;AccessKeyID&gt; &lt;SecretAccessKey&gt; S3v2</code></pre><p>这里只说<code>MinIO</code>云存储，<code>Amazon S3</code>云存储参数获取查看→传送门，Google云存储参数获取查看→传送门。</p>
<p>基本上这里配置好了后，我们可以使用很多命令远程操作云存储上的文件了。</p>
<p><strong>3、开始同步</strong><br>先创建一个桶，名称为<code>moerats</code>，可自行修改，使用命令：</p>
<pre><code>mc mb minio/moerats</code></pre><p>接下来比如我要同步网站根目录<code>/www/wwwroot/www.southcat.net</code>，使用命令：</p>
<pre><code>#该命令只会同步文件，但本地修改或删除，云存储不会变化
mc mirror -w /www/wwwroot/www.southcat.net minio/moerats

#该命令同步文件后，本地修改文件，会自行在云存储进行相应的修改
mc mirror -w --overwrite /www/wwwroot/www.southcat.net minio/moerats

#该命令同步文件后，本地修改/删除文件，会自行在云存储进行相应的修改/删除
mc mirror -w --overwrite --remove /www/wwwroot/www.southcat.net minio/moerats</code></pre><p>这里加了<code>--remove</code>参数后，首次会强行让远程存储桶和本地文件一模一样，意味着会清空你的远程存储桶。</p>
<p>运行命令后你会发现远程<code>MinIO</code>云存储里的<code>MOERATS</code>就会出现你网站根目录所有文件了，以后根目录新增文件都会实时同步进去。</p>
<p>当然这里我们也可以同时实时备份多个文件夹到多个存储桶，自行修改名称就行了。</p>
<p><strong>4、开机自启</strong><br>新建<code>systemd</code>配置文件，适用<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p>
<pre><code>#修改成你需要实时同步备份的文件夹
backup=&quot;/www/wwwroot/www.southcat.net&quot;
#修改成你要备份到的存储桶
bucket=&quot;moerats&quot;
#将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/minioc.service &lt;&lt;EOF
[Unit]
Description=minioc
After=network.target

[Service]
Type=simple
ExecStart=$(command -v mc) mirror -w --overwrite --remove ${backup} minio/${bucket}
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF</code></pre><p><code>ExecStart</code>为启动命令，默认为自行删除/修改也会同步，可自行修改参数。</p>
<p>启动并设置开机自启：</p>
<pre><code>systemctl start minioc
systemctl enable minioc</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用Python/Caddy快速搭建文件分享平台</title>
    <url>/1990/</url>
    <content><![CDATA[<p><strong>说明：</strong>刚刚提到过<code>Linux VPS</code>快速分享文件方法，查看：Transfer.sh：Linux VPS使用命令行快速的分享文件，除了这个方法，我们还可以自建文件分享平台，由于<code>Python</code>内置了一个简单的<code>HTTP</code>服务器，而<code>Caddy</code>也是一个简单的<code>HTTP</code>服务器，所以这里可以分别使用<code>Python</code>和<code>Caddy</code>搭建文件分享平台。</p>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>使用<code>Python</code>搭建是超级快的，就是界面有点不好看。</p>
<p>使用命令：</p>
<pre><code>#进入要分享的文件目录
cd /moerats
#后面的端口随便填，注意防火墙设置
python -m SimpleHTTPServer 8080</code></pre><p>建议配合<code>screen</code>一起使用，参考：使用screen来实现多任务不断线操作命令。</p>
<p>然后我们可以打开<code>http://IP:端口</code>进入界面了。<br><img src="https://www.southcat.net/usr/picture/VPS_GG(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="Caddy"><a href="#Caddy" class="headerlink" title="Caddy"></a>Caddy</h2><p>觉得<code>Python</code>搭建的界面不好看的，可以使用<code>Caddy</code>搭建，这里用的是逗比的脚本。</p>
<p>使用命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>创建<code>IP</code>访问，使用命令：</p>
<pre><code>#以下一整条命令，直接复制即可，80为端口，可以随便修改，且/MOERATS为要分享的文件目录
echo &quot;:80 {
 root /MOERATS
 gzip
 browse
}&quot; &gt; /usr/local/caddy/Caddyfile

/etc/init.d/caddy start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用skicka将文件上传至Google Drive网盘，支持编辑/下载等</title>
    <url>/2050/</url>
    <content><![CDATA[<p><strong>说明：</strong>此前操作<code>VPS</code>和<code>Google Drive</code>网盘都是用的<code>rclone</code>挂载同步方法，教程查看：在Debian/Ubuntu上使用rclone挂载Google Drive网盘，现在再分享个方法，使用<code>skicka</code>来进行<code>VPS</code>和<code>GD</code>之间的同步操作，也可以操作网盘，比如创建文件/文件夹、编辑/下载等，速度都还不错，挺方便的。这里说下安装教程。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/google/skicka" target="_blank" rel="noopener">https://github.com/google/skicka</a></p>
<p><strong>1、安装golang</strong></p>
<pre><code>#32位系统下载
wget -O go.tar.gz https://dl.google.com/go/go1.13.3.linux-386.tar.gz
#64位系统下载
wget -O go.tar.gz https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz

#解压压缩包
tar -zxvf go.tar.gz -C /usr/local
#设置环境变量，将以下一起复制进ssh客户端运行
mkdir $HOME/go
echo &apos;export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin&apos; &gt;&gt; /etc/profile
source /etc/profile
#查看go版本，有输出即为安装成功
go version</code></pre><p><strong>2、安装git</strong></p>
<pre><code>#Debian/Ubuntu系统
apt -y install git

#CentOS/RHEL系统
yum -y install git</code></pre><p><strong>3、安装skicka</strong></p>
<pre><code>go get github.com/google/skicka
mv /root/go/bin/skicka /usr/local/bin
#初始化
skicka init</code></pre><p>此时会创建一个配置文件，大致路径为<code>/root/.skicka.config.</code>，由于默认的<code>api</code>停用了，这里我们就编辑该配置文件，进行如下修改：</p>
<pre><code>#需要修改以下2行
;clientid=YOUR_GOOGLE_APP_CLIENT_ID
;clientsecret=YOUR_GOOGLE_APP_SECRET

#改成以下2行
clientid=850428714661-757h6cilp37g2us5tuh9vg2a0ki3edr7.apps.googleusercontent.com
clientsecret=pHNfSgpcdZHNAn_FDua5Ke6w</code></pre><p>这里由博主提供的<code>api</code>，如果你不放心，可以自己申请api，申请教程参考→传送门。</p>
<pre><code>#授权
skicka -no-browser-auth ls</code></pre><p>然后会出现如下信息：</p>
<pre><code>[root@Rats ~]# skicka -no-browser-auth ls
Go to the following link in your browser:  #将得到的链接在浏览器打开，授权获取验证码
Enter verification code:  #输入上面获得的验证码确定</code></pre><p>这里由于使用的是自用的<code>api</code>，可能会提示不安全，不用理会，直接继续验证即可，验证成功后会显示网盘文件。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>其实使用命令和<code>VPS</code>没区别，很多就是在命令前面加一个<code>skicka</code>即可，比如：</p>
<pre><code>#列举文件
skicka ls

#查看网盘大小
skicka df

#查看文件夹文件及大小
skicka du 文件夹名

#上传文件至网盘
skicka upload 本地文件 网盘路径

#从网盘下载文件至本地
skicka download 网盘文件 本地目录

#创建文件夹
skicka mkdir 文件夹名

#删除文件夹
skicka rm -r 文件名

#删除文件
skicka rm 文件名</code></pre><p>删除的文件和文件夹都在回收站，误删的直接恢复即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用torrent-cli命令行获取电影等资源的BT磁力</title>
    <url>/2130/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多人找小电影的都习惯百度，但这个方法似乎没什么逼格，对于手上有很多<code>VPS</code>的来说，找资源这种事，可以不用像普通老百姓一样打开百度盲目查找了！这里分享个磁力爬虫工具，可以帮你完成查找磁力的工作。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/chenjiandongx/torrent-cli" target="_blank" rel="noopener">https://github.com/chenjiandongx/torrent-cli</a><br><strong>系统要求：</strong><code>Windows</code>、<code>Linux</code>、<code>MacOs</code>，这里就说下<code>Linux VPS</code>安装，建议使用<code>CentOS</code>系统。</p>
<p><strong>1、安装Python3</strong><br>一般大多数<code>Ubuntu</code>自带<code>Python3</code>，而<code>Centos</code>、<code>Debian</code>就需要我们安装了。</p>
<pre><code>#查看是否有Python3
python3 -V

#安装Python3
#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</code></pre><p>然后再输入<code>python3 -V</code>看是否安装成功。</p>
<p><strong>2、安装torrent-cli</strong><br>这里安装方法有<code>2</code>种。<br><code>pip</code>安装：</p>
<pre><code>pip3 install torrent-cli</code></pre><p>源码安装：</p>
<pre><code>#可以修改torrent.py文件来增加所爬的磁力站
git clone https://github.com/chenjiandongx/torrent-cli.git
cd torrent-cli
pip3 install -r requirements.txt
python3 setup.py install</code></pre><p>提示<code>-bash: git: command not found</code>的使用命令：</p>
<pre><code>#Debian/Ubuntu系统
apt-get install git -y
#CentOS系统
yum install git -y</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、使用命令：</strong></p>
<pre><code>usage: torrent-cli [-h] [-k KEYWORD] [-n NUM] [-s SORT_BY] [-o OUTPUT] [-p]
                   [-v]

Magnets-Getter CLI Tools.

optional arguments:
  -h, --help            show this help message and exit
  -k KEYWORD, --keyword KEYWORD
                        magnet keyword.
  -n NUM, --num NUM     magnet number.(default 10)
  -s SORT_BY, --sort-by SORT_BY
                        0: Sort by date，1: Sort by size. 2. Sort by hot-
                        rank.(default 0)
  -o OUTPUT, --output OUTPUT
                        output file path, supports csv and json format.
  -p, --pretty-oneline  show magnets info with one line.
  -v, --version         version information.</code></pre><p><strong>2、简单示范</strong></p>
<pre><code>#搜索资源磁力
torrent-cli -k 逃学威龙</code></pre><p><img src="https://www.southcat.net/usr/picture/torrent-cli(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<pre><code>#单行显示并按大小排序（也可以指定排序顺序为2，按热度排序）
torrent-cli -k 逃学威龙 -p -s 1

#保存为csv或者json文件（建议保存为csv文件，json数据会被序列化，转为utf编码）
torrent-cli -k 逃学威龙 -o mv.csv</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用rtorrent下载BT种子，并在线观看</title>
    <url>/2118/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>rTorrent</code>是一个非常简洁、优秀、非常轻量的命令行<code>BT</code>下载客户端，和<code>Aria2</code>一样，既可以使用命令行下载，也可以配合自己的<code>Web</code>前端进行控制操作。很多都喜欢用<code>rTorrent</code>配合前端<code>ruTorrent</code>一起使用，毕竟有个图形界面方便些，不过配置起来挺麻烦的，博主觉得单独使用<code>rtorrent</code>下载<code>BT</code>文件速度还可以，操作也不难，关键安装很简单，很适合临时下载<code>BT</code>文件的人。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>执行下列命令：</p>
<pre><code>#CentOS系统
yum install rtorrent -y  

#Debian/Ubuntu系统
apt-get update -y
apt-get install rtorrent -y </code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>先将需要下载的<code>BT</code>文件上传至<code>VPS</code>一个文件夹，比如<code>home</code>。然后运行<code>rtorrent</code>，使用命令：</p>
<pre><code>rtorrent</code></pre><p>这时候会出现一个界面，如果显示<code>Could not read resource file: ~/.rtorrent.rc</code>，这是缺少配置文件，可以不用管。然后按<code>Enter</code>，会出现<code>load.normal&gt;</code>命令行。这时候在后面输入你的<code>BT</code>文件路径，比如:</p>
<pre><code>load.normal&gt;  /home/xx.torrent</code></pre><p>确定后，会出现如下界面：<br><img src="https://www.southcat.net/usr/picture/rtorrent_(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后按一下键盘<code>↑</code>或<code>↓</code>键，下载列表左边出现<code>*</code>后，按<code>Ctrl+s</code>即可下载。最后下载的<code>BT</code>在<code>/root</code>文件夹。<br><img src="https://www.southcat.net/usr/picture/rtorrent_(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>如果你要使用更多的功能，就需要新建<code>.rtorrent.rc</code>配置文件了。</p>
<pre><code>nano /root/.rtorrent.rc</code></pre><p>复制下列参数，不需要的可以不复制，这里只列举常用的一些配置，更多配置：点击查看。</p>
<pre><code>#正在下载和已完成种子的最大和最小节点数
throttle.min_peers.normal.set = 100
throttle.max_peers.normal.set = 100
throttle.min_peers.seed.set = 100
throttle.max_peers.seed.set = 100

#每个种子最大同时上传数
throttle.max_uploads.set = 20

#最大上传和下载速度，0为无限制
throttle.global_down.max_rate.set_kb = 0
throttle.global_up.max_rate.set_kb = 0

#BT下载后保存的目录
directory.default.set = /root/rtorrent/download

#设置会话目录，重新启动rTorrent时，所有以前加载的种子将被恢复
session.path.set = /root/rtorrent/.session

#设置种子目录，添加种子自动下载，种子删除后自动停止
schedule2 = watch_directory,5,5,load_start=/root/rtorrent/.watch/*.torrent
schedule2 = untied_directory,5,5,stop_untied=

#服务器硬盘低于200M时停止下载
schedule2 = low_diskspace,5,60,close_low_diskspace=200M 

#监听的端口范围
network.port_range.set = 5555-8888
network.port_random.set = no

#连接UDP trackers
trackers.use_udp.set = yes

#当trackers失效后，启用DHT
dht.mode.set = auto
dht.port.set = 6881</code></pre><p>复制好了后，使用<code>Ctrl+X</code>、<code>Y</code>、<code>Enter</code>保存退出，然后新建文件夹。</p>
<pre><code>mkdir /root/rtorrent
mkdir /root/rtorrent/download
mkdir /root/rtorrent/.session
mkdir /root/rtorrent/.watch</code></pre><p>最后再使用<code>rtorrent</code>命令启动。</p>
<h2 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h2><p><code>BT</code>下载完成后，我们需要将文件下载到本地或者直接在<code>VPS</code>上查看，这里我们可以用<code>H5ai</code>来完成这些操作。</p>
<p><strong>1、安装Docker</strong></p>
<pre><code>curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取H5ai镜像</strong><br>启动命令：</p>
<pre><code>#8080端口可自行调整，如果你的下载目录调整了，请将参数也调整成下载目录
docker run -t -p 8080:80 -v /root/rtorrent/download:/h5ai --name h5ai ilemonrain/h5ai:full</code></pre><p>然后浏览器访问<code>ip:8080</code>查看即可。</p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>在Ubuntu/Debian下安装uTorrent，可离线下载BT种子磁力</li>
<li>一个小巧而强大的BT种子下载客户端：Deluge一键安装脚本</li>
<li>支持BT磁力链接/离线下载/边下边播：Peerflix Server一键脚本</li>
<li>Debian一键安装Transmission并美化Web界面来进行BT下载</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用wget下载百度网盘文件的方法</title>
    <url>/1565/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们都喜欢把网站备份文件或者其它文件放在百度网盘，等到需要用的时候，就从百度网盘把文件下载到本地再上传到服务器，这样很麻烦，这里说下<code>vps</code>下载百度网盘文件最方便的方法，就是用<code>wget</code>命令下载，也许有人知道该方法，但现在对于稍微有点大的文件就没法了，毕竟获取不到文件直链了，所以这里也说下如何下载大文件。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、获取百度网盘直链</strong><br>比较小的文件可以直接获取下载链接，大文件获取直链的方法参考：百度网盘直接下载助手 Tampermonkey（油猴）脚本</p>
<p><strong>2、用wget命令下载文件</strong><br>获取到文件直接下载地址后，通过下面的命令下载。</p>
<pre><code>wget -c -O xx.zip &quot;https://xx.com/xx&quot;  #xx.zip为文件名，后面为文件下载地址</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用Webbench/Apache-ab进行网站压力测试</title>
    <url>/2072/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Webbench</code>是一个在<code>linux</code>下使用的非常简单的网站压测工具。它使用<code>fork()</code>模拟多个客户端同时访问我们设定的<code>URL</code>，测试网站在压力下工作的性能，最多可以模拟<code>3</code>万个并发连接去测试网站的负载能力。</p>
<p><code>Apache ab</code>（<code>Apache Bench</code>性能测试工具，这是<code>apache</code>免费自带的性能测试工具，就在<code>apache</code>的<code>bin</code>目录下，它能模拟多个并发请求，也就是说它主要是用来测试你的网站每秒能处理多少请求的。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>如果是测试<code>https</code>的话，使用<code>Apache-ab</code>就可以了。</p>
<p><strong>1、安装Webbench</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get install gcc make ctags -y
#Centos系统
yum install gcc make ctags -y

#安装Webbench
wget https://www.southcat.net/usr/down/webbench-1.5.tar.gz
tar zxvf webbench-1.5.tar.gz &amp;&amp; cd webbench-1.5
make &amp;&amp; make install</code></pre><p><strong>2、安装Apache</strong></p>
<pre><code>#Centos系统
yum install httpd -y
#Debian/Ubuntu系统
apt-get install apache2 -y</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、Webbench</strong></p>
<pre><code>#使用帮助
webbench -h
#测试命令，-c为并发数；-t为测试时长，单位秒；后面为链接
webbench -c 1000 -t 50 http://www.baidu.com</code></pre><p><strong>2、Apache</strong></p>
<pre><code>#使用帮助
ab -h
#测试1，-n为发送请求次数；-c并发数；后面为链接
ab -n 500 -c 400 http://www.baidu.com
#测试2，-t为测试时长，单位秒；-c并发数；后面为链接
ab -t 90 -c 50 http://www.baidu.com</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS使用WonderShaper限制服务器上传/下载带宽</title>
    <url>/2395/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近看有人问博主如何限制服务器的上传带宽，所以就分享下此前经常用的一个限速脚本<code>WonderShaper</code>，原理的话，网上比较详细的解释是<code>WonderShaper</code>使用<code>tc</code>来定义流量调整命令，使用<code>QoS</code>来处理特定的网络接口。外发流量通过放在不同优先级的队列中，达到限制传出流量速率的目的；而传入流量通过丢包的方式来达到速率限制的目的。用起来挺方便的，有需求的可以了解下。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/magnific0/wondershaper" target="_blank" rel="noopener">https://github.com/magnific0/wondershaper</a></p>
<p>安装的话是可以直接用软件包安装，不过版本都不太新，所以这里直接从<code>Github</code>拉取最新源码。</p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#Debian/Ubuntu系统
apt install -y make git

#CentOS系统
yum install make git -y</code></pre><p><strong>2、安装WonderShaper</strong></p>
<pre><code>git clone https://github.com/magnific0/wondershaper.git
cd wondershaper
make install</code></pre><p><strong>3、设置限速</strong></p>
<pre><code>#使用命令
USAGE: wondershaper [-hcs] [-a &lt;adapter&gt;] [-d &lt;rate&gt;] [-u &lt;rate&gt;]

OPTIONS:
   -h           Show this message
   -a &lt;adapter&gt; Set the adapter
   -d &lt;rate&gt;    Set maximum download rate (in Kbps) and/or
   -u &lt;rate&gt;    Set maximum upload rate (in Kbps)
   -p           Use presets in /etc/conf.d/wondershaper.conf
   -c           Clear the limits from adapter
   -s           Show the current status of adapter
   -v           Show the current version</code></pre><p>首先查看网卡：</p>
<pre><code>#这里提供三个可以查看网卡的命令，建议使用第一个
ifconfig
ip addr
route</code></pre><p>比如我要限制<code>eth0</code>网卡速度，使用命令：</p>
<pre><code>#限制上传带宽为10M
wondershaper -a eth0 -u 10240
#限制下载带宽为10M
wondershaper -a eth0 -d 10240
#限制上传和上传均10M
wondershaper -a eth0 -d 10240 -u 10240
#清楚网卡限速规则
wondershaper -c -a eth0</code></pre><p>然后我们可以测一下速，使用命令：</p>
<pre><code>wget -O speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
chmod +x speedtest-cli
./speedtest-cli</code></pre><p>这是没限速前的测速：<br><img src="https://www.southcat.net/usr/picture/WonderShaper(1).png" alt="请输入图片描述" title="请输入图片描述"><br>上传/下载限速<code>10M</code>后的测速：<br><img src="https://www.southcat.net/usr/picture/WonderShaper(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>一般设置限速规则后，服务器重启的话，限速规则会自动失效，所以这里需要稍微设置一下，使其开机也自动生效，这里就说<code>2</code>种方法。</p>
<p><strong>1、使用rc.local</strong><br>这是最简单的设置自启方法，不过<code>Debian 9</code>、<code>Ubuntu 17+</code>是没有<code>rc.local</code>文件的，所以使用该系统的需要先配置一下。</p>
<pre><code>1、添加rc-local.service，以下为一整条命令，一起复制运行
cat &gt; /etc/systemd/system/rc-local.service &lt;&lt;EOF
[Unit]
Description=/etc/rc.local
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
EOF

2、新建rc-local文件，以下为一整条命令，一起复制运行
cat &gt; /etc/rc.local &lt;&lt;EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will &quot;exit 0&quot; on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.    
EOF

3、添加权限并设置开机自启
chmod +x /etc/rc.local
systemctl start rc-local
systemctl enable rc-local</code></pre><p>最后将启动命令加入<code>rc.local</code>文件，使用命令：</p>
<pre><code>#CentOS 7系统
echo &quot;wondershaper -a eth0 -d 10240 -u 10240&quot; &gt;&gt; /etc/rc.d/rc.local
chmod +x /etc/rc.d/rc.local

#CentOS 6、Debian、Ubuntu系统
echo &quot;wondershaper -a eth0 -d 10240 -u 10240&quot; &gt;&gt; /etc/rc.local
chmod +x /etc/rc.local</code></pre><p>这里限速命令自行修改。</p>
<p><strong>2、使用Systemd</strong><br>由于安装的时候，<code>Systemd</code>配置文件也给你了，所以就方便使用了，不过该方法只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>等。</p>
<p>由于启动时，默认调用的配置文件为<code>/etc/conf.d/wondershaper.conf</code>，所以先编辑该文件：</p>
<pre><code>nano /etc/conf.d/wondershaper.conf</code></pre><p>大致如下：</p>
<pre><code>[wondershaper]
# Adapter
#
IFACE=&quot;eth0&quot;

# Download rate in Kbps
#
DSPEED=&quot;10240&quot;

# Upload rate in Kbps
#
USPEED=&quot;10240&quot;</code></pre><p>参数依次为网卡、下载、上传限制，修改好了后，使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<pre><code>systemctl start wondershaper
systemctl enable wondershaper</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS出现 “-bash: python: command not found”错误的解决方法</title>
    <url>/1611/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候换系统尝试运行<code>Python</code>程序时，服务器会返回<code>-bash: python: command not found</code>错误指令，说明系统上未安装<code>Python</code>，这里说下方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、安装</strong><br><code>Ubuntu/Debian</code>系统：</p>
<pre><code>apt-get install python
或者
apt-get install python3</code></pre><p><code>CentOS</code>系统：</p>
<pre><code>yum install python</code></pre><p><strong>2、检查</strong></p>
<pre><code>type -a python
which python
ls -l /usr/bin/python
ls -l /usr/bin/python*</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS全自动DD安装Windows一键脚本</title>
    <url>/1838/</url>
    <content><![CDATA[<p><strong>说明：</strong>该脚本支持在无<code>vnc</code>模式，无救援模式能<code>dd</code>进去<code>windows</code>。为我们在<code>VPS</code>上安装<code>Window</code>系统提供了方便。本教程提供了作者自制的<code>Window 10</code>、<code>Window server 2012 r2</code>的<code>DD</code>包及其它来源的<code>Window 7</code>、<code>Window 2008</code>的<code>DD</code>包，有兴趣的的可以折腾下。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>【2017.11.19】<br>作者已制作出<code>Windows 10</code>、<code>Window server 2012 r2</code>系统模板。</p>
<h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><p><strong>适用范围：</strong>非<code>OVZ</code>架构，<code>KVM</code>、独立服务器均可使用。</p>
<p>命令行中运行：</p>
<pre><code>wget https://xiaofd.github.io/ddwin.sh &amp;&amp; bash ddwin.sh -w http://直链地址 -d /dev/vda
#备用地址
wget https://www.southcat.net/usr/shell/ddwin.sh &amp;&amp; bash ddwin.sh -w http://直链地址 -d /dev/vda</code></pre><p>类似这么使用，参数请自行修改，其中<code>-w</code>参数为<code>http</code>直连<code>gzip</code>压缩格式<code>dd</code>包链接，<code>-d</code>为<code>dd</code>目标硬盘位置，运行完脚本后等待就能<code>dd</code>成功了。</p>
<p><code>VNC</code>界面可以看到类似网络重装的界面，有一个地方会一直卡住，那里就是在<code>dd</code>系统了，只要你的<code>dd</code>包下载没有问题，这部分等一等总会过去的。</p>
<h2 id="DD-Windows包"><a href="#DD-Windows包" class="headerlink" title="DD Windows包"></a>DD Windows包</h2><p><strong>1、作者自制的Windows DD包</strong></p>
<pre><code>Windows 10(内存至少1G)：
谷歌网盘地址：https://drive.google.com/open?id=1TmErU8F4SDePUfXixyGJyPDCj4EfTqat
#登录用户名和密码
Username: xiaofd
Password: xiaofd.win

Window server 2012 r2(内存至少512)：
谷歌网盘地址：https://drive.google.com/open?id=1VLODEvdd5BFWrXLKIXsJZqzRlnp5GcLN
#登录用户名和密码
Username: Administrator
Password: xiaofd.WIN</code></pre><p>重点说明：<code>DD</code>包为自制，自制过程：添加驱动，安装<code>win10</code>，设置管理员账户（<code>xiaofd</code>），开启远程桌面，修改计算机名称为（<code>xiaofd</code>），没有额外的操作，可放心使用。有人指出没有<code>Administrator</code>权限不放心，<code>dd</code>完后自行开启<code>admin</code>管理员账户，并删除<code>xiaofd</code>账户即可。（<code>win10</code>安装必须添加一个非<code>Administrator</code>管理员账户，这个用过<code>win10</code>的应该都知道）。</p>
<p><strong>2、其他途径找的DD包</strong></p>
<pre><code>http://down.80host.com/iso/dd/WS2008R2Enterprise-Joodle-Template.gz
http://down.80host.com/iso/dd/Windows2012R2-Joodle-Template.gz
Username:Administrator
Password:Password147

http://down.80host.com/iso/dd/Windows7-Joodle-Template.gz
http://down.80host.com/iso/dd/Windows8.1-Joodle-Template.gz
Username:Admin
Password:Password147

http://down.80host.com/iso/dd/7.ENT.EVAL.64.VIRTIO-SCSI.gz
Username:WhatUpTime.com
Password:P@ssword64

http://down.80host.com/iso/dd/win7_cn_5gb_virtio_scsi.gz
Username:administrator
Password:www.80host.com
支持OVH VPS的scsi磁盘驱动，其他viostor的DD包在上面会蓝屏

http://down.80host.com/iso/dd/win7_cn_5gb_virtio_scsi_faster.gz
Username:administrator
Password:www.80host.com
支持OVH VPS的scsi磁盘驱动，其他viostor的DD包在上面会蓝屏

http://down.80host.com/iso/dd/Kimsufi2003.gz
Username:Administrator
Password:password!yxz.me

http://down.80host.com/iso/dd/win2003_with_update.gz
Username:administrator
Password:80hostkvmlamjj

http://down.80host.com/iso/dd/ikoula92.gz
Username:administrator
Password:Abcd123400

Laiboke.com制作的中文版2012R2
http://down.80host.com/iso/dd/Win2012R2ZW.gz
Username:Administrator
Password:Laiboke.com

Leaseweb/Linode专用
http://down.80host.com/iso/dd/cn2003-virtio-pass-Linode.gz
Username:Administrator
Password:Linode</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>尝试了很久，一些小发现吧，无救援模式系统不能正常在<code>SSH</code>中<code>DD windows</code>，但是如果网络重装系统，然后硬盘分区<code>/boot</code>单独分区的话，这时是可以直接<code>DD</code>的。</p>
<p>带分区的网络重装脚本，仅供参考：</p>
<pre><code>https://www.southcat.net/usr/shell/osdd.sh</code></pre><p><code>Windows</code>系统的<code>virto</code>驱动下载地址，欢迎大家折腾玩：<a href="https://fedoraproject.org/wiki/Windows\_Virtio\_Drivers。" target="_blank" rel="noopener">https://fedoraproject.org/wiki/Windows\_Virtio\_Drivers。</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS利用iptables string模块屏蔽指定的网站、文件等</title>
    <url>/1976/</url>
    <content><![CDATA[<p><strong>说明：</strong>在逗比那里看到的一个方法，可以阻止服务器访问某个网站，或文件等，对于爬梯子的，如果有共享行为，可以屏蔽下油管，这个大流量的很容易被<code>Q</code>。</p>
<p><strong>原理：</strong>一般<code>iptables</code>自带的都有<code>string</code>模块，这个模块的作用就是匹配字符串，匹配到泛域名的<code>URL</code>，然后就把数据包丢弃，就实现了屏蔽泛域名的功能。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>以下规则是屏蔽以<code>xx.com</code>为主的所有一级、二级、三级等域名。</p>
<pre><code>#添加屏蔽规则
iptables -A OUTPUT -m string --string &quot;xx.com&quot; --algo bm --to 65535 -j DROP

#删除屏蔽规则，上面添加的代码是什么样，那么删除的代码就是把-I改成-D 
iptables -D OUTPUT -m string --string &quot;xx.com&quot; --algo bm --to 65535 -j DROP</code></pre><p>命令详解：</p>
<pre><code>-A
#添加iptables规则；
-D
#删除iptables规则（把添加防火墙规则时代码中的-A改成-D即可删除添加的规则）；
-m string
#指定模块；
--string &quot;xx.com&quot;
#指定要匹配的字符串(域名、关键词等)；
--algo bm
#指定匹配字符串模式/算法（还有一种更复杂的算法：kmp）；
--to 65535
#指定端口，这里代表所有端口（1-65535）；
-j DROP
#指匹配到数据包后处理方式，这里是丢弃数据包。</code></pre><p>这个模块的作用就是匹配字符串，这个字符串可以是<code>URL</code>、普通文本、文件后缀（后两者时，如果目标网站启用了<code>GZIP</code>类压缩算法，就会无法过滤匹配，毕竟都压缩了）。</p>
<p>比如：<code>.zip</code>，就会把包含<code>.zip</code>的数据库丢弃，这样就会无法下载<code>.zip</code>类型的文件了！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS安装DNSmasq搭建自己的DNS服务器</title>
    <url>/1735/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>DNSmasq</code>是一个小巧且方便地用于配置<code>DNS</code>和<code>DHCP</code>的工具，适用于小型网络，它提供了<code>DNS</code>功能和可选择的<code>DHCP</code>功能。自己搭建公共<code>DNS</code>更加灵活，如果是在本地搭建，还可以大幅提高解析速度。</p>
<h2 id="安装DNSmasq"><a href="#安装DNSmasq" class="headerlink" title="安装DNSmasq"></a>安装DNSmasq</h2><p>可以下载软件包编译安装，不过一般<code>Linux</code>软件仓库已经提供了<code>DNSmasq</code>，相关命令如下：</p>
<pre><code>#centos安装
yum -y install dnsmasq
#如果是ubuntu系统
apt-get -y install dnsmasq</code></pre><h2 id="配置DNSmasq"><a href="#配置DNSmasq" class="headerlink" title="配置DNSmasq"></a>配置DNSmasq</h2><p><code>DNSmasq</code>配置文件在<code>/etc/dnsmasq.conf</code>，我们需要修改几个参数，分别为：</p>
<ul>
<li><code>resolv-file=/etc/resolv.dnsmasq.conf</code>这个参数表示<code>dnsmasq</code>会从这个指定的文件中寻找上游<code>dns</code>服务器。</li>
<li>取消注释的<code>strict-order</code>，表示严格按照<code>resolv-file</code>文件中的顺序从上到下进行<code>DNS</code>解析,<br>直到第一个成功解析成功为止。</li>
<li>注释掉<code>no-hosts</code>, 默认情况下这是注释掉的,<code>dnsmasq</code>会首先寻找本地的<code>hosts</code>文件再去寻找缓存下来的域名,最后去上游 <code>dns</code>服务器寻找。</li>
<li>设置<code>listen-address=0.0.0.0, 0.0.0.0</code>改成服务器公网<code>IP</code>。</li>
</ul>
<p>我们来整理下上面我们修改了那些配置内容</p>
<pre><code>#需要新建一个resolv.dnsmasq.conf文件,这个是配置上游DNS，也就是真正的公共DNS
vi /etc/resolv.dnsmasq.conf
#内容如下
nameserver 119.29.29.29
nameserver 1.2.4.8


#修改/etc/dnsmasq.conf
#上游DNS路径
resolv-file=/etc/resolv.dnsmasq.conf
#取消strict-order注释
strict-order
#监听地址0.0.0.0对所有网络有效
listen-address=0.0.0.0</code></pre><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><code>DNSmasq</code>可以设置不同的域名指定不同的<code>DNS</code>进行解析，修改<code>/etc/dnsmasq.conf</code>文件即可，若不对域名设置<code>DNS</code>，则从上游<code>DNS</code>获取记录。</p>
<pre><code>#指定淘宝使用114 DNS进行解析
server=/taobao.com/114.114.114.114
#google指定8.8.8.8进行解析
server=/google.com/8.8.8.8</code></pre><p>也可以对指定的域名进行解析，相当于就是本地<code>hosts</code>指向，可以利用这个功能实现广告屏蔽等效果。也是需要修改<code>/etc/dnsmasq.conf</code>文件，<code>DNSmasq</code>也可以对域名进行泛解析，填写<code>*.southcat.net</code>,这样的格式即可。</p>
<pre><code>#将广告域名指向到127.0.0.1实现广告屏蔽
address=/ad.youku.com/127.0.0.1
address=/ad.iqiyi.com/127.0.0.1
#对southcat.net进行泛解析
address=/*.southcat.net/132.165.25.188</code></pre><h2 id="启动与测试"><a href="#启动与测试" class="headerlink" title="启动与测试"></a>启动与测试</h2><pre><code>#启动
/etc/init.d/dnsmasq start
#停止
/etc/init.d/dnsmasq stop
#重新启动
/etc/init.d/dnsmasq restart</code></pre><p>比如我在本地一台<code>Linux</code>服务器（<code>192.168.20.127</code>）安装了<code>DNSmasq</code>，并在局域网内其它<code>PC</code>将<code>DNS</code>配置为<code>192.168.20.127</code>，使用<code>dig</code>命令进行测试，第一次查询相对较长，第二次几乎再<code>10ms</code>内，如下截图。<br><img src="https://www.southcat.net/usr/picture/DNSmasq.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果是在内网搭建<code>DNSmasq</code>，不仅可以提高解析速度，还可以有效的防止<code>DNS</code>劫持，实现屏蔽广告等作用。如果是在公网搭建<code>DNSmasq</code>，还可以对指定的域名解析<code>hosts</code>指向，从而避免<code>DNS</code>污染，实现<code>fq</code>。</p>
<p>如果您发现<code>DNSmasq</code>启动正常，但就是无法解析，请注意防火墙是否放行<code>tcp/upd 53</code>端口。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS安装Fikkerd 3.7.6全功能破解版</title>
    <url>/2143/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Fikkerd</code>很久前在博客就介绍过了，是一款面向<code>CDN</code>/站长的专业级网站缓存和反向代理服务器软件，具体查看：CentOS安装Fikker自建CDN系统，支持Https/反向代理/防CC攻击，由于免费版受限很多，导致很多功能都用不了，现在有大佬发出了最新<code>Linux Fikker 3.7.6</code>授权全功能破解版，有兴趣的可以试试自建<code>CDN</code>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>运行以下命令：</p>
<pre><code>wget https://www.southcat.net/usr/down/fikkerd-3.7.6-linux-x86-64.tar.gz
tar zxvf fikkerd-3.7.6-linux-x86-64.tar.gz
cd fikkerd-3.7.6-linux-x86-64/
chmod +x ./bin/fikkerd
./fikkerd.sh install
./fikkerd.sh start</code></pre><p>完成后访问<code>http://IP:6780</code>，初始密码为<code>123456</code>，如果打不开，开启端口即可。</p>
<pre><code>#如果防火墙使用的iptables（Centos 6）
iptables -I INPUT -p tcp --dport 80 -j ACCEPT
iptables -I INPUT -p tcp --dport 443 -j ACCEPT
iptables -I INPUT -p tcp --dport 6780 -j ACCEPT
service iptables save
service iptables restart
#如果使用的是firewall（CentOS 7）
firewall-cmd --zone=public --add-port=80/tcp --permanent 
firewall-cmd --zone=public --add-port=443/tcp --permanent 
firewall-cmd --zone=public --add-port=6780/tcp --permanent 
firewall-cmd --reload</code></pre><p>使用方法查看前面给的<code>Fikker</code>教程地址。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS安装PHP探针教程</title>
    <url>/1574/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人估计都只会安装军哥的<code>lnmp</code>一键包，这样很麻烦，毕竟装<code>lnmp</code>要很长时间，也有很多人写的傻瓜式教程或多或少也会出现点问题，也没啥好方法，就自己想写个几分钟就可以装好的教程，看见外国人写的lowendscript lnmp脚本单独安装<code>nginx</code>和<code>php</code>环境挺快的，也省内存，就用了下，这里说下方法，一般2分钟就装好了，还是挺快的。</p>
<p><strong>注意：</strong>该方法只适用于<code>Ubuntu</code>、<code>Debian</code>系统。</p>
<p><strong>1、系统更新和升级</strong></p>
<pre><code>apt-get -y update &amp;&amp; apt-get -y upgrade</code></pre><p><strong>2、安装Nginx和php环境</strong><br>登录<code>vps</code>运行下面命令：</p>
<pre><code>wget --no-check-certificate https://raw.github.com/Xeoncross/lowendscript/master/setup-debian.sh &amp;&amp; chmod +x setup-debian.sh &amp;&amp; ./setup-debian.sh dotdeb &amp;&amp; ./setup-debian.sh nginx &amp;&amp; ./setup-debian.sh php</code></pre><p><strong>3、创建站点目录及下载雅黑探针</strong><br>如果系统没安装<code>unzip</code>就使用命令：<code>apt-get install unzip</code>安装一下，下面会使用到。</p>
<p>将下面命令中的<code>your_ip</code>改成你的服务器<code>ip</code>再执行命令：</p>
<pre><code>./setup-debian.sh site your_ip &amp;&amp; cd /var/www/your_ip/public &amp;&amp; wget http://www.yahei.net/tz/tz.zip &amp;&amp; unzip tz.zip</code></pre><p>也可以将<code>your_ip</code>改成你的某个域名，但域名必须解析到服务器<code>ip</code>上。<br>最后探针访问地址：<code>http://your_ip/tz.php</code></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS安装Google Authenticator实现SSH登陆二次验证</title>
    <url>/2385/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般我们考虑到<code>VPS</code>的安全问题的时候，都是更改<code>SSH</code>端口和密码，然后更安全的也就是禁用密码使用密匙登录。方法很久前就水过了，这里再分享一个方法，可以在<code>VPS</code>上安装一个<code>Google Authenticator</code>(谷歌身份验证器)，这样我们登录<code>VPS</code>的时候，不仅需要密码正确，而且还要你输入正确的动态验证码才能登录进去，这样安全性就高了不少，这里就说下<code>CentOS</code>、<code>Debian</code>、<code>Ubuntu</code>的使用。</p>
<pre><code>提示：教程需要配合Google身份验证器一起使用，手机没有安装该APP的需要安装一下，方便获取动态验证码。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、软件包安装</strong></p>
<pre><code>#CentOS 6系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
yum install google-authenticator -y

#CentOS 7系统
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install google-authenticator -y

#Debian/Ubuntu系统
apt update
apt install libpam-google-authenticator -y</code></pre><p><strong>2、编译安装</strong><br>安装依赖：</p>
<pre><code>#CentOS系统
yum install gcc make pam-devel libpng-devel libtool wget git autoconf automake qrencode -y

#Debian/Ubuntu系统
apt update
apt install -y gcc make autoconf automake libtool libpam0g-dev libqrencode3 git</code></pre><p>安装验证器：</p>
<pre><code>git clone https://github.com/google/google-authenticator-libpam.git
cd google-authenticator-libpam
./bootstrap.sh
./configure
make &amp;&amp; make install</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><strong>1、配置验证器</strong></p>
<pre><code>google-authenticator</code></pre><p>输出如下：</p>
<pre><code>Do you want authentication tokens to be time-based (y/n) y
#验证二维码，在浏览器打开使用谷歌验证器APP扫描添加即可。
https://www.google.com/chart?chs=200x200xxx
Your new secret key is: WKDPJHOKR2P3DOWL
Your verification code is 189192
#临时验证码，手机不在身边可以使用，不过一个码只能用一次
Your emergency scratch codes are:
  77678926
  14729443
  83656478
  55669982
  23960253

#下面可以直接照着填，或者自己使用谷歌翻译，然后自行选择
Do you want me to update your &quot;/root/.google_authenticator&quot; file (y/n) y

Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) y

By default, tokens are good for 30 seconds and in order to compensate for
possible time-skew between the client and the server, we allow an extra
token before and after the current time. If you experience problems with poor
time synchronization, you can increase the window from its default
size of 1:30min to about 4min. Do you want to do so (y/n) y

If the computer that you are logging into isn&apos;t hardened against brute-force
login attempts, you can enable rate-limiting for the authentication module.
By default, this limits attackers to no more than 3 login attempts every 30s.
Do you want to enable rate-limiting (y/n) y</code></pre><p><strong>2、配置PAM文件</strong><br>修改<code>PAM</code>配置文件：</p>
<pre><code>nano /etc/pam.d/sshd</code></pre><p>在相应的位置添加<code>auth required pam_google_authenticator.so</code>代码，大概如下：</p>
<pre><code>#CentOS 6在#%PAM-1.0下面一行添加
#CentOS 7在auth substack password-auth下面一行添加
#Debian和Ubuntu在末尾添加</code></pre><p>然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>或者直接使用命令添加：</p>
<pre><code>#CentOS 6系统
sed -i &apos;1a\auth required pam_google_authenticator.so&apos; /etc/pam.d/sshd
#CentOS 7系统
sed -i &quot;/auth[ ]*substack[ ]*pass*/a\auth required pam_google_authenticator.so&quot; /etc/pam.d/sshd
#Debian/Ubuntu系统
echo &apos;auth required pam_google_authenticator.so&apos; &gt;&gt;/etc/pam.d/sshd</code></pre><p>如果是编译安装的，还需要做一下软链接：</p>
<pre><code>#CentOS系统
ln -fs /usr/local/lib/security/pam_google_authenticator.so /lib64/security/
#Debian/Ubuntu系统
ln -fs /usr/local/lib/security/pam_google_authenticator.so /lib/x86_64-linux-gnu/security/</code></pre><p><strong>3、修改SSH文件</strong><br>这里可以直接使用命令：</p>
<pre><code>sed -i -r &apos;s#(ChallengeResponseAuthentication) no#\1 yes#g&apos; /etc/ssh/sshd_config</code></pre><p>然后同步下时间：</p>
<pre><code>#查看下服务器时间
date
#如果时区不一样，再使用命令修改为本地时间
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</code></pre><p>对于<code>CentOS</code>系统，还需要关闭<code>SELINUX</code>，不过并不是所有系统都是开启状态，使用命令：</p>
<pre><code>#使用命令查看状态
getenforce
#如果输出disabled则为关闭，反之开启，然后使用命令关闭
sed -i &apos;s/SELINUX=enforcing/SELINUX=disabled/g&apos; /etc/selinux/config</code></pre><p>最后重启<code>SSH</code>：</p>
<pre><code>#CentOS系统
service sshd restart
#Debian/Ubuntu系统
service ssh restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS安装Stat Hub自建服务器监控</title>
    <url>/1636/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Stat Hub</code>是一个帮您收集并展示众多服务器状态的服务。它由两部分组成，一是服务端，用于接收、储存和展示状态；另一个是客户端，它用于收集并发送状态到服务端。<code>Stat Hub</code>没有<code>Zabbix</code>那么强大的功能，因此部署也显得简单很多。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>项目地址：</strong><a href="https://github.com/likexian/stathub-go" target="_blank" rel="noopener">https://github.com/likexian/stathub-go</a></p>
<p>直接复制下面的命令：</p>
<pre><code>#curl下载并安装
curl --insecure https://raw.githubusercontent.com/likexian/stathub-go/master/setup.sh | sh
#如果curl无法使用，可以用wget下载
wget --no-check-certificate -O - https://raw.githubusercontent.com/likexian/stathub-go/master/setup.sh | sh
#放行端口（iptables）
iptables -I INPUT -p tcp --dport 15944 -j ACCEPT
service iptables save
service iptables restart </code></pre><p>安装完后，接着访问<code>https://ip:15944</code>打开即可（注意是<code>https</code>的地址，浏览器提示危险请选择允许访问），初始密码为:<code>likexian</code>，登录后可修改，效果图如下。<br><img src="https://www.southcat.net/usr/picture/Stat%20Hub.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="添加多个客户端"><a href="#添加多个客户端" class="headerlink" title="添加多个客户端"></a>添加多个客户端</h2><p>在<code>Stat Hub</code>点击<code>help</code>按钮，按提示操作即可，或者访问<code>https://ip:15944</code>根据提示添加客户端，这样就可以监控多台服务器了。<code>Stat Hub</code>使用<code>crontab</code>每隔1分钟采集1次数据，如果未显示数据，请输入<code>crontab -l</code>查看计划任务是否添加成功。</p>
<h2 id="通过域名访问（Nginx反向代理）"><a href="#通过域名访问（Nginx反向代理）" class="headerlink" title="通过域名访问（Nginx反向代理）"></a>通过域名访问（Nginx反向代理）</h2><p>在<code>nginx vhost</code>配置文件中添加下面的规则，并重载<code>nginx</code>即可生效。</p>
<pre><code>server
        {
        listen          80;
        server_name     southcat.net;#您需要绑定的域名
        location / {
           proxy_pass https://127.0.0.1:15944;
           proxy_redirect off;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS安装vDDoS Proxy防御DDOS CC攻击</title>
    <url>/1729/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一篇防<code>DDOS</code>的文章，参考：Linux VPS 使用DDOS deflate来抵御DDOS攻击，今天又看到一个使用<code>vDDoS Proxy</code>防御<code>DDOS CC</code>攻击的教程，就说下。</p>
<h2 id="Vddos-proxy是什么"><a href="#Vddos-proxy是什么" class="headerlink" title="Vddos proxy是什么"></a>Vddos proxy是什么</h2><p>引用原文“</p>
<p>vDDoS Protection is Nginx bundled with module HTTP/2; GeoIP; Limit Req, Testcookie; reCaptcha processor…</p>
<p>Working like CloudFlare, but vDDoS is software help you build your own System Firewall.</p>
<p>”</p>
<p><strong>Github地址：</strong><a href="https://github.com/duy13/vDDoS-Protection" target="_blank" rel="noopener">https://github.com/duy13/vDDoS-Protection</a><br><strong>作者主页：</strong><a href="http://vddos.voduy.com/" target="_blank" rel="noopener">http://vddos.voduy.com/</a><br>原作者还提供了更强大的功能以及更详细的说明，有能力的<code>MJJ</code>可以前去研究。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><code>vDDos proxy</code>必须安装在<code>WEB</code>程序以前例如(<code>cPanel</code>, <code>VestaCP</code>, <code>LAMP</code>, <code>LEMP</code>…)。</p>
<p><code>vDDos proxy</code>暂只支持<code>Centos 5</code>/<code>6</code>/<code>7</code> <code>64</code>位和<code>CloudLinux Server</code> <code>5</code>/<code>6</code>/<code>7</code> <code>64</code>位。</p>
<p>接下来以<code>Centos 7</code>为例。</p>
<p>运行以下命令：</p>
<pre><code>yum -y install epel-release 
yum -y update
yum -y install curl wget gc gcc gcc-c++ pcre-devel zlib-devel make openssl-devel libxml2-devel libxslt-devel
yum -y install gd-devel perl-ExtUtils-Embed GeoIP-devel gperftools gperftools-devel libatomic_ops-devel
yum -y install automake autoconf apr-util-devel GeoIP-devel libatomic_ops-devel</code></pre><p>目前最新版本为<code>1.13.1</code></p>
<pre><code>curl -L https://github.com/duy13/vDDoS-Protection/raw/master/vddos-1.13.1-centos7 -o /usr/bin/vddos
#curl -L https://github.com/duy13/vDDoS-Protection/raw/master/vddos-1.13.1-centos6 -o /usr/bin/vddos #Centos6.X
#curl -L https://github.com/duy13/vDDoS-Protection/raw/master/vddos-1.13.1-centos5 -o /usr/bin/vddos #Centos5.X
chmod 700 /usr/bin/vddos
/usr/bin/vddos help
/usr/bin/vddos setup</code></pre><p>至此，安装完毕</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre><code>Welcome to vDDoS, a HTTP(S) DDoS Protection Reverse Proxy. Thank you for using!

               Command Line Usage:
       vddos setup             :installing vDDoS service for the first time into /vddos
       vddos start             :start vDDoS service
       vddos stop              :stop vDDoS service
       vddos restart           :restart vDDoS service
       vddos autostart         :auto-start vDDoS services on boot
       vddos attack            :create a DDoS attacks to HTTP target (in 30 min)
       vddos stopattack        :stop &quot;vddos attack&quot; command
       vddos help              :display this help

                                       Please sure download vDDoS source from: vddos.voduy.com</code></pre><h2 id="保护某一个网站"><a href="#保护某一个网站" class="headerlink" title="保护某一个网站"></a>保护某一个网站</h2><pre><code># vi /vddos/conf.d/website.conf

# Website       Listen               Backend                  Cache Security SSL-Prikey   SSL-CRTkey
default         http://0.0.0.0:80    http://127.0.0.1:8080    no    200      no           no
your-domain.com http://0.0.0.0:80    http://127.0.0.1:8080    no    200      no           no
default         https://0.0.0.0:443  https://127.0.0.1:8443   no    307   /ssl/key.pri /ssl/crt.crt
your-domain.com https://0.0.0.0:443  https://127.0.0.1:8443   no    307   /ssl/key.pri /ssl/crt.crt</code></pre><h2 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h2><p><code>your-domain.com</code>为你想要保护的域名<code>listen</code>为本地监听<code>IP</code>端口<code>backend</code>为后端<code>IP</code>端口（可以当作为使用<code>CDN</code>或者反代源网站）<code>cache</code>是否进行缓存。</p>
<p><code>security</code>是保护强度 可选<code>no</code>, <code>307</code>, <code>200</code>, <code>click</code>, <code>5s</code>, <code>high</code>, <code>captcha</code>。</p>
<p>强度阶梯：<code>no &lt; 307 &lt; 200 &lt; click &lt; 5s &lt; high &lt; captcha</code>。</p>
<p><code>5s</code>类似于<code>Cloudflare</code>的五秒盾。</p>
<p><code>captcha</code>为启用谷歌人机验证码后面会详细说。</p>
<p><code>SSL-Prikey</code>为<code>SSL</code>密匙。</p>
<p><code>SSL-CRTket</code>为<code>SSL</code>证书。</p>
<h2 id="5S盾"><a href="#5S盾" class="headerlink" title="5S盾"></a>5S盾</h2><p><code>5s</code>盾的默认文件储存于</p>
<pre><code>/vddos/html/5s.html</code></pre><p>如有需要，可自行<code>DIY</code>。</p>
<h2 id="captcha谷歌验证码"><a href="#captcha谷歌验证码" class="headerlink" title="captcha谷歌验证码"></a>captcha谷歌验证码</h2><p>因为国内无法使用谷歌验证码，所以本虾也没有去测试。</p>
<p>下面贴出<code>LET</code>上给出的使用方法，请自行测试。</p>
<pre><code># vi /vddos/conf.d/recaptcha-sitekey.conf
# Website       reCaptcha-sitekey (View KEY in https://www.google.com/recaptcha/admin#list)
your-domain.com     6Lcr6QkUAAAAAxxxxxxxxxxxxxxxxxxxxxxxxxxx
...
# vi /vddos/conf.d/recaptcha-secretkey.conf
DEBUG=False
RE_SECRETS = { &apos;your-domain.com&apos;: &apos;6Lcr6QkUAAAAxxxxxxxxxxxxxxxxxxxxxxxxxxx&apos;,
               &apos;your-domain.org&apos;: &apos;6LcKngoUAAAAxxxxxxxxxxxxxxxxxxxxxxxxxxx&apos; }</code></pre><p>所需的<code>KEY</code>需要在<code>https://www.google.com/recaptcha/admin#list</code>申请，似乎是一个域名对应了一个<code>key</code>。</p>
<h2 id="禁止某个国家的IP访问"><a href="#禁止某个国家的IP访问" class="headerlink" title="禁止某个国家的IP访问"></a>禁止某个国家的IP访问</h2><p>修改文件<code>/vddos/conf.d/blacklist-countrycode.conf</code></p>
<pre><code>#vi /vddos/conf.d/blacklist-countrycode.conf

geoip_country /usr/share/GeoIP/GeoIP.dat;
map $geoip_country_code $allowed_country {
    default yes;
    US yes;
    CN no;#这个。。自带禁止中国是啥意思 mjj

}
deny 1.1.1.1;</code></pre><h2 id="添加白名单"><a href="#添加白名单" class="headerlink" title="添加白名单"></a>添加白名单</h2><p>修改文件<code>/vddos/conf.d/whitelist-botsearch.conf</code></p>
<pre><code># vi /vddos/conf.d/whitelist-botsearch.conf

#Alexa Bot IP Addresses
204.236.235.245; 75.101.186.145;
...</code></pre><p>添加白名单之后，启用的如<code>5s</code>盾 验证码将不会对白名单<code>IP</code>访客生效。</p>
<h2 id="设置IP直接访问源站"><a href="#设置IP直接访问源站" class="headerlink" title="设置IP直接访问源站"></a>设置IP直接访问源站</h2><p>修改文件<code>/vddos/conf.d/cdn-ip.conf</code></p>
<pre><code># vi /vddos/conf.d/cdn-ip.conf

# Cloudflare
set_real_ip_from 103.21.244.0/22;
...</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux vps定时备份网站文件和数据库到七牛云存储</title>
    <url>/1533/</url>
    <content><![CDATA[<p>之前有说过Linux VPS每日自动备份FTP及数据库通过邮箱发送方法，不过需要自建FTP空间才行，较本教程有点麻烦，如果你没有<code>FTP</code>空间，可以申请一个七牛云存储，免费10G空间备份一般的小站足够了。这里介绍一个备份网站文件和数据库到七牛的脚本，实测效果还不错，<code>Linux vps</code>下弄个定时任务就可以每天定时自动备份了。</p>
<p>本脚本<code>Github</code>项目地址：<a href="https://github.com/ccbikai/backuptoqiniu" target="_blank" rel="noopener">https://github.com/ccbikai/backuptoqiniu</a></p>
<p>先去注册个七牛云账号，然后实名认证后，会送10G流量和空间。注册完后，在左侧位置找到对象存储，然后新建存储空间，并记住你新建的存储空间的名称，后面需要用到。<br><img src="https://www.southcat.net/usr/picture/bfqiniuyun.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>注意：系统<code>python</code>版本得在2.7以上</p>
<p><strong>1、安装zip</strong></p>
<pre><code>apt-get install zip</code></pre><p><strong>2、安装备份脚本</strong></p>
<pre><code>wget --no-check-certificate -O backuptoqiniu.zip https://www.southcat.net/usr/down/backuptoqiniu.zip
unzip backuptoqiniu.zip &amp;&amp; cd backuptoqiniu
python setup.py install</code></pre><p><strong>3、编辑配置文件</strong><br>使用<code>vi backuptoqiniu.sh</code>命令或者<code>Winscp</code>工具编辑</p>
<pre><code>## 备份配置信息 ##

# 备份名称，用于标记
BACKUP_NAME=&quot;backup&quot;
# 备份目录，多个请空格分隔
BACKUP_SRC=&quot;/home/wwwroot/southcat.net&quot;
# Mysql主机地址
MYSQL_SERVER=&quot;localhost&quot;
# Mysql用户名
MYSQL_USER=&quot;root&quot;
# Mysql密码
MYSQL_PASS=&quot;mysqlpassword&quot;
# Mysql备份数据库，多个请空格分隔
MYSQL_DBS=&quot;dbname&quot;
# 备份文件临时存放目录，一般不需要更改
BACKUP_DIR=&quot;/tmp/backuptoqiniu&quot;
# 备份文件压缩密码确保压缩包的安全
BACKUP_FILE_PASSWD=&quot;123456&quot;

## 备份配置信息 End ##

## 七牛配置信息 ##

#存放空间对应我们在七牛上创建的文件夹
QINIU_BUCKET=&quot;Rats&quot;
QINIU_ACCESS_KEY=&quot;ACCESS_KEY&quot;
QINIU_SECRET_KEY=&quot;SECRET_KEY&quot;

## 七牛配置信息 End ##</code></pre><p>上面的脚本配置基本都已经写的很清楚了，上半部分填写网站的信息，最后三行的信息在七牛获取。<code>QINIU_BUCKET</code>就是存储空间名，<code>ACCESS_KEY</code>和<code>SECRET_KEY</code>在个人面板-密钥管理里获取。那个<code>AK</code>和<code>SK</code>后面对应的长串就是密钥了。</p>
<p><strong>4、测试脚本</strong></p>
<pre><code>chmod +x backuptoqiniu.sh
./backuptoqiniu.sh</code></pre><p>正常运行后我们可以去七牛的后台你新建的存储空间里查看有没有这个压缩包。</p>
<p><strong>5、设置自动运行脚本</strong></p>
<pre><code>crontab -e
0 2 * * 0 /bin/bash /root/backuptoqiniu/backuptoqiniu.sh #添加这个脚本</code></pre><p>上面脚本的意思就是利用<code>crontab</code>定时任务每天凌晨2点自动运行这个脚本。具体<code>crontab</code>的用法可以自行搜索。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS定时备份服务器/网站数据到Github私人仓库</title>
    <url>/2335/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在<code>Github</code>被微软收购后，私人仓库已经开始免费了，只能说微软很良心。然后就可以拿来折腾下了，让其充分发挥下作用，这里我们可以用来备份下网站或者服务器一些数据，方法就大概说下。</p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>首先你肯定需要一个<code>Github</code>账号，没有的可以去注册一个，地址：<a href="https://github.com。有了账号就继续看。" target="_blank" rel="noopener">https://github.com。有了账号就继续看。</a></p>
<p><strong>1、配置Git SSH密钥</strong></p>
<pre><code>由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以必须要让github仓库认证你SSH key，在操作之前，需要先在服务器上生成SSH key。</code></pre><p>我们先去根目录下使用命令：</p>
<pre><code>cd ~
ssh-keygen -t rsa</code></pre><p>这里会要你命名密匙名称(这里建议使用默认名称)，然后连续按几次<code>Enter</code>，这时候会在<code>/root/.ssh</code>文件夹生成<code>2</code>个<code>ssh</code>密钥，然后我们查看公钥<code>id_rsa.pub</code>。</p>
<pre><code>cat ~/.ssh/id_rsa.pub</code></pre><p>查看后，再复制下公钥，然后打开<code>Github</code>官网，进入<a href="https://github.com/settings/ssh/new，`Title`随便填，然后`Key`填入刚刚复制的密匙，最后点击`Add" target="_blank" rel="noopener">https://github.com/settings/ssh/new，`Title`随便填，然后`Key`填入刚刚复制的密匙，最后点击`Add</a> SSH Key`添加即可。<br><img src="https://www.southcat.net/usr/picture/Githubback(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、建立私人仓库</strong><br>我们需要先访问<a href="https://github.com/new，新建一个仓库用来存放备份文件，名称自己随意，记得下面一定要勾选`Private`，也就是私人仓库。不然你辛辛苦苦备份的小姐姐就要被别人偷走了。" target="_blank" rel="noopener">https://github.com/new，新建一个仓库用来存放备份文件，名称自己随意，记得下面一定要勾选`Private`，也就是私人仓库。不然你辛辛苦苦备份的小姐姐就要被别人偷走了。</a><br><img src="https://www.southcat.net/usr/picture/Githubback(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>3、配置本地仓库</strong><br>由于博主是用来备份网站，所以需要备份文件夹为<code>/home/www.southcat.net</code>，也就是把该文件夹定为本地仓库，使用命令：</p>
<pre><code>#进入需要备份的文件夹
cd /home/www.southcat.net
#初始化你的github仓库
git init
#关联到远程github仓库
git remote add origin git@github.com:iiiiiii1/MOERATS.git</code></pre><p>关联仓库的时候，后面可以用<code>HTTPS</code>链接也可以用<code>SSH</code>，这里强烈建议选择<code>SSH</code>，安全性很高。<br><img src="https://www.southcat.net/usr/picture/Githubback(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>4、初次备份</strong></p>
<pre><code>#进入备份的文件夹
cd /home/www.southcat.net
#把目录下所有文件更改状况提交到暂存区，包括增，删，改。
git add -A
#提交更改的说明，说明随意了，这里为backsite
git commit -m &quot;backsite&quot;
#开始推送到Github
git push -u origin master</code></pre><p>推送的时候可能会提示<code>The authenticity of host &#39;github.com&#39; can&#39;t be established.</code>信息，直进<code>yes</code>即可。</p>
<p>然后可以看到仓库的备份文件了。<br><img src="https://www.southcat.net/usr/picture/Githubback(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>5、设置定时备份</strong><br>在根目录先新建一个<code>bash</code>脚本：</p>
<pre><code>nano ~/gitback.sh</code></pre><p>代码如下：</p>
<pre><code>#!/bin/bash
#进入到网站根目录，记得修改为自己的站点
cd /home/xxx.com
#将数据库导入到该目录，这里以mysql为例，passwd为数据库密码，typecho为数据库名称，typecho.sql为备份的数据库文件
mysqldump -uroot -ppasswd typecho &gt; typecho.sql
git add -A
git commit -m &quot;backsite&quot;
git push -u origin master</code></pre><p>然后编辑好了后，使用<code>ctrl+x</code>，<code>y</code>保存退出。再测试下脚本，使用命令：</p>
<pre><code>bash ~/gitback.sh</code></pre><p>脚本没问题的话，再设置为每天<code>05:15</code>执行一次：</p>
<pre><code>#并将运行日志输出到根目录的siteback.log文件
echo &quot;15 05 * * * bash ~/gitback.sh &gt; ~/siteback.log 2&gt;&amp;1 &amp;&quot; &gt; bt.cron
crontab bt.cron
rm -rf bt.cron</code></pre><p>最后使用<code>crontab -l</code>命令查看添加成功没。成功的话，就基本上算完成了。</p>
<h2 id="推送失败"><a href="#推送失败" class="headerlink" title="推送失败"></a>推送失败</h2><p>如果你将本地文件夹推送到<code>Github</code>失败的话，常见原因有<code>2</code>种，具体如下。</p>
<p><strong>1、邮件问题</strong></p>
<pre><code>报错提示：Your push would publish a private email address.</code></pre><p>这里可能是你将你的邮件地址私密了，解决方法如下：</p>
<pre><code>#方法一，如果你想一直保持私密，可以选择方法二
访问https://github.com/settings/emails，将Keep my email address private的勾去掉。

#方法二
1、访问https://github.com/settings/emails，将Block command line pushes that expose my email的勾去掉。
2、设置你的github邮箱，修改成自己的再运行命令：
git config --global user.email &quot;admin@southcat.net&quot;</code></pre><p><strong>2、密匙问题</strong></p>
<pre><code>报错提示：Permission denied (publickey).</code></pre><p>大概的原因就是，你设置密匙的时候改成了其它名称，而<code>ssh</code>默认只读取<code>id_rsa</code>，所以会显示没权限。解决方法如下：</p>
<pre><code>#方法一
进入根目录的.ssh文件夹，将你的github密匙文件，重新更名为id_rsa。

#方法二
将github密匙添加到ssh agent，比如密匙名称为github，使用命令：
ssh-agent bash
ssh-add ~/.ssh/github</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS将本地脚本代码或文件推送到Github教程</title>
    <url>/2088/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们有时候需要将一些脚本代码或者文件上传到<code>Github</code>托管，而<code>Github</code>客户端有点难用，在网页上上传又慢，所以我们需要另想办法，这里就说下在<code>VPS</code>上直接将文件推送到<code>Github</code>方法，而且速度很快。如果你可以建立私人项目，还可以用来备份网站等私密文件。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、配置Git SSH密钥</strong></p>
<pre><code>ssh-keygen -t rsa</code></pre><p>连续按几次<code>Enter</code>，这时候会在<code>/root/.ssh</code>文件夹生成<code>2</code>个<code>ssh</code>密钥，然后我们查看并复制公钥<code>id_rsa.pub</code>。</p>
<pre><code>cat /root/.ssh/id_rsa.pub</code></pre><p>复制好了后，登录<code>Github</code>，进入<a href="https://github.com/settings/ssh/new，`Title`随便填，然后`Key`填入刚刚复制的密匙点击`Add" target="_blank" rel="noopener">https://github.com/settings/ssh/new，`Title`随便填，然后`Key`填入刚刚复制的密匙点击`Add</a> SSH Key`添加即可。<br><img src="https://www.southcat.net/usr/picture/Git_ts(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、推送文件</strong><br>首先我们需要进入<a href="https://github.com/new，新建一个项目用来存放文件，如果你想将网站等私密文件放在`Github`，新建项目的时候，选择`Private`建立私人项目，反之选择`Public`。" target="_blank" rel="noopener">https://github.com/new，新建一个项目用来存放文件，如果你想将网站等私密文件放在`Github`，新建项目的时候，选择`Private`建立私人项目，反之选择`Public`。</a><br><img src="https://www.southcat.net/usr/picture/Git_ts(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后开始配置，如果我们需要推送的文件在网站<code>/home</code>文件夹，这时候运行命令：</p>
<pre><code>#进入文件夹
cd /home
#建立本地仓库
git init
#关联到Github仓库
git remote add origin git@github.com:MOERATS/TEST.git</code></pre><p>关联仓库的时候，后面可以用<code>HTTPS</code>链接也可以用<code>SSH</code>，这里建议选择<code>SSH</code>。<br><img src="https://www.southcat.net/usr/picture/Git_ts(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>接下来在<code>/home</code>文件夹里，继续操作。</p>
<pre><code>#把目录下所有文件更改状况提交到暂存区
git add -A
#提交更改的说明
git commit -m &quot;push&quot;
#开始推送到Github
git push -u origin master</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS快速下载Bilibili视频脚本 ，支持1080P/720P/360P等格式</title>
    <url>/2324/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近想下载点<code>B</code>站的一些资源到<code>Onedrive</code>网盘存着，以免日后由于版权等一些问题，导致资源被下架，所以就从<code>git</code>找了个<code>py</code>脚本，使用起来很方便，支持<code>1080P</code>、<code>720P</code>、<code>360P</code>等格式下载，下载视频速度也挺快的。这里就大概的说下使用教程，有需求的同学可以用用。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/Henryhaohao/Bilibili\_video\_download" target="_blank" rel="noopener">https://github.com/Henryhaohao/Bilibili\_video\_download</a></p>
<p>由于<code>Win</code>系统下载工具非常多，所以就不说<code>Win</code>系统使用，这里就只说下<code>Linux</code>系统用法。</p>
<p><strong>1、安装Python3</strong></p>
<pre><code>#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh
#由于Ubuntu 16+自带Python3，所以只需要安装pip3就可以了
apt install python3-pip -y</code></pre><p><strong>2、安装ffmpeg</strong></p>
<pre><code>#下载ffmpeg二进制
wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz
#解压文件
tar xvf ffmpeg-git-*-static.tar.xz
#移动ffmpeg可执行文件
mv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/bin/
#删除文件
rm -rf ffmpeg-git-*</code></pre><p><strong>3、下载脚本</strong></p>
<pre><code>#下载脚本并存放在/root/bz文件夹
git clone https://github.com/Henryhaohao/Bilibili_video_download.git /root/bz
#安装依赖
cd /root/bz &amp;&amp; pip3 install -r requirements.txt
#开始运行脚本
python3 bilibili_video_download.py</code></pre><p>然后会要求你输入<code>B</code>站的<code>AV</code>号或者视频链接地址，然后选择你需要的格式，直到下载完成。<br><img src="https://www.southcat.net/usr/picture/Down_bilibili.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>如果你运行脚本的时候出现<code>UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode</code>错误，那就需要先将系统的默认语言环境编码设置为<code>UTF-8</code>格式，使用命令：</p>
<pre><code>echo &apos;export LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8&apos; &gt;&gt; /etc/profile
source /etc/profile</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux vps快速安装wordpress教程</title>
    <url>/1509/</url>
    <content><![CDATA[<p><strong>说明：</strong>刚开始用虚拟主机建站的时候我们总是习惯用ftp或者WinSCP工具上传网站源文件，一个文件夹里的东西全部上传虽然有的程序不大，但是文件比较多比较碎上传起来就比较慢。等到我们渐渐的摆脱虚拟主机开始用vps以后就不用再这样了，用的比较多的web程序如<code>wordpress</code>官网都有在线下载的压缩包。只需要下载到web目录解压就行了，速度比你通过ftp上传快多了。这里以军哥的<code>LNMP</code>为例，新建虚拟主机，例如<code>xx.com</code>。</p>
<p><strong>1、下载解压wordpress</strong><br>我们来到网站目录</p>
<pre><code>cd /home/wwwroot/xx.com  </code></pre><p>然后下载wp安装压缩包</p>
<pre><code>wget https://cn.wordpress.org/wordpress-4.5.2-zh_CN.tar.gz</code></pre><p>解压</p>
<pre><code>tar xzvf wordpress-4.5.2-zh_CN.tar.gz</code></pre><p>这时候能看到解压出来个wordpress目录,我们要把目录里的文件都移到网站根目录，执行命令：</p>
<pre><code>cd wordpress
mv * ../
cd ..</code></pre><p><strong>2、修改目录权限</strong><br>如果你不修改一下目录权限可能会出现一些错误，要保证网站目录下所有文件都是www所属，要不然会显示nobody<br>回到上层目录<code>cd ..</code>亦即<code>/home/wwwroot</code>目录，运行命令：<code>chown www:www xx.com -R</code>即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS性能/网络测试综合脚本</title>
    <url>/2103/</url>
    <content><![CDATA[<p><strong>说明：</strong>目前的<code>VPS</code>测试脚本有很多，不过测试项目都不是很全，于是千影大佬根据众多测试脚本重新修改编写了一个全新的<code>Linux VPS</code>测试脚本。该脚本最大的特点是测试全面，运行迅速，不会因为硬盘<code>i/o</code>低下或者网络状况不好，造成测试时间较长的问题，无论是什么机器，不带<code>UnixBench</code>都能很快的执行完，测试完后还可以通过网页分享结果。</p>
<h2 id="测试项目"><a href="#测试项目" class="headerlink" title="测试项目"></a>测试项目</h2><ul>
<li>获取系统基本信息</li>
<li>测试硬盘存取延迟、<code>iops</code>、存取速度</li>
<li>测试本机带宽</li>
<li>测试本机到<code>25</code>个国外节点下载速度</li>
<li>测试本机到<code>8</code>个国内节点下载速度</li>
<li>测试本机到国内<code>9</code>个节点的路由</li>
<li>测试本机到国内<code>9</code>个节点的延迟与丢包</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、下载脚本</strong></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/chiakge/Linux-Server-Bench-Test/master/linuxtest.sh</code></pre><p><strong>2、使用命令</strong></p>
<pre><code>#不含UnixBench的测试，无网页分享
bash linuxtest.sh

#不含UnixBench的测试，带网页分享
bash linuxtest.sh s

#含UnixBench的测试，不带网页分享
bash linuxtest.sh a

#含UnixBench的测试，带网页分享
bash linuxtest.sh as</code></pre><h2 id="测试样本"><a href="#测试样本" class="headerlink" title="测试样本"></a>测试样本</h2><pre><code>========== 开始记录测试信息 ==========
测试时间：2018-05-15 18:06:27
----------------------------------------------------------------------
CPU model            : Virtual CPU a7769a6388d5
Number of cores      : 1
CPU frequency        : 2394.454 MHz
Total size of Disk   : 20.2 GB (4.7 GB Used)
Total amount of Mem  : 492 MB (107 MB Used)
Total amount of Swap : 1023 MB (4 MB Used)
System uptime        : 2 days, 20 hour 0 min
Load average         : 0.65, 0.18, 0.06
OS                   : Debian GNU/Linux 9
Arch                 : x86_64 (64 Bit)
Kernel               : 4.9.0-5-amd64
ip                   : 108.61.126.101
ipaddr               : 日本 东京都 东京  choopa.com
vm                   : kvm
----------------------------------------------------------------------
===== 开始硬盘性能测试 =====
ioping: seek rate
    min/avg/max/mdev = 197.8 us / 337.5 us / 5.84 ms / 142.6 us
ioping: sequential speed
    generated 2.84 k requests in 5.00 s, 709.8 MiB, 567 iops, 141.9 MiB/s
===== 硬盘性能测试完成 =====
----------------------------------------------------------------------
===== 开始speedtest =====
Retrieving speedtest.net configuration...
Testing from Choopa, LLC (108.61.*.*)...
Retrieving speedtest.net server list...
Selecting best server based on ping...
Hosted by cloudremix (Tokyo) [12.58 km]: 4.648 ms
Testing download speed................................................................................
Download: 764.43 Mbit/s
Testing upload speed................................................................................................
Upload: 139.42 Mbit/s
Share results: http://www.speedtest.net/result/7310913596.png
===== speedtest完成 =====
----------------------------------------------------------------------
Node Name:                      IPv4 address:                  Download Speed
CacheFly:                       204.93.150.152:          102.64 MiB/s |  821.10 Mbps
Linode, Tokyo, JP:              106.187.96.148:           36.95 MiB/s |  295.59 Mbps
Linode, Tokyo2, JP:             139.162.65.37:            76.18 MiB/s |  609.43 Mbps
Linode, Singapore, SG:          139.162.23.4:             16.44 MiB/s |  131.48 Mbps
Linode, Fremont, CA:            50.116.14.9:             277.89 KiB/s |    2.17 Mbps
Linode, Newark, NJ:             50.116.57.237:             7.84 MiB/s |   62.71 Mbps
Linode, London, UK:             176.58.107.39:             6.27 MiB/s |   50.20 Mbps
Linode, Frankfurt, DE:          139.162.130.8:             5.66 MiB/s |   45.27 Mbps
Softlayer, Tokyo, JP:           161.202.125.20:          130.64 MiB/s | 1045.14 Mbps
Softlayer, Singapore, SG:       119.81.28.170:           469.33 KiB/s |    3.67 Mbps
Softlayer, Seoul, KR:           119.81.28.170:           495.91 KiB/s |    3.87 Mbps
Softlayer, HongKong, CN:        119.81.130.170:          374.38 KiB/s |    2.92 Mbps
Softlayer, Dallas, TX:          169.48.124.82:             1.55 MiB/s |   12.37 Mbps
Softlayer, Seattle, WA:         67.228.112.250:          301.42 KiB/s |    2.35 Mbps
Softlayer, Frankfurt, DE:       159.122.69.4:            472.46 KiB/s |    3.69 Mbps
Softlayer, Paris, FR:           159.8.64.212:            271.49 KiB/s |    2.12 Mbps
Leaseweb, HongKong, CN:         43.249.36.49:              2.09 MiB/s |   16.71 Mbps
Leaseweb, Singapore, SG:        103.254.153.18:          288.60 KiB/s |    2.25 Mbps
Leaseweb, Washington D.C., US:  207.244.94.80:           146.71 KiB/s |    1.15 Mbps
Leaseweb, San Francisco, US:    209.58.135.187:          464.09 KiB/s |    3.63 Mbps
Leaseweb, Netherlands, NL:      5.79.108.33:             149.20 KiB/s |    1.17 Mbps
OVH, Montreal, CA:              192.99.19.165:             1.04 MiB/s |    8.34 Mbps
ChinaTelecom, Shanghai, CN:     101.95.48.41:            193.00 KiB/s |    1.51 Mbps
ChinaTelecom, Beijing, CN:      60.247.96.2:             341.15 KiB/s |    2.67 Mbps
ChinaUnicom, Beijing, CN:       61.135.202.2:              2.46 MiB/s |   19.72 Mbps
ChinaTelecom, Guangzhou, CN:    119.145.88.166:          383.05 KiB/s |    2.99 Mbps
ChinaMobile, Guangzhou, CN:     221.179.46.222:          960.18 KiB/s |    7.50 Mbps
ChinaTelecom, Hefei, CN:        61.191.111.11:           290.96 KiB/s |    2.27 Mbps
ChinaUnicom, Hefei, CN:         112.122.10.26:             1.71 MiB/s |   13.65 Mbps
ChinaMobile, Hefei, CN:         120.209.140.60:          790.67 KiB/s |    6.18 Mbps
Hinet, Taiwan, TW:              210.61.132.1:              6.43 MiB/s |   51.41 Mbps
----------------------------------------------------------------------
===== 测试 [四川电信] 的回程路由 =====
traceroute to 125.64.38.178 (125.64.38.178), 30 hops max, 60 byte packets
 1  *
 2  209.222.31.33  19.72 ms  AS20473  日本 东京都 东京 choopa.com
 3  vl627-br2-cer.tyo1.choopa.net (45.76.201.93)  1.09 ms  AS20473  日本 东京都 东京 choopa.com
 4  ae-12.r01.tokyjp05.jp.bb.gin.ntt.net (120.88.53.65)  2.61 ms  AS2914  日本 东京都 东京 ntt.com
 5  ae-4.r03.tokyjp05.jp.bb.gin.ntt.net (129.250.6.188)  2.08 ms  AS2914  日本 东京都 东京 ntt.com
 6  ae-4.r31.tokyjp05.jp.bb.gin.ntt.net (129.250.3.57)  1.93 ms  AS2914  日本 东京都 东京 ntt.com
 7  ae-10.r26.tokyjp05.jp.bb.gin.ntt.net (129.250.2.152)  1.81 ms  AS2914  日本 东京都 东京 ntt.com
 8  202.97.51.61  85.03 ms  AS4134  中国 上海 电信
 9  202.97.90.58  83.64 ms  AS4134  中国 上海 电信
10  202.97.57.230  86.66 ms  AS4134  中国 上海 电信
11  202.97.36.2  134.01 ms  AS4134  中国 四川 成都 电信
12  *
13  118.123.217.86  134.36 ms  AS38283  中国 四川 成都 电信
14  118.123.214.38  131.01 ms  AS38283  中国 四川 成都 电信
15  125.64.38.178  129.30 ms  AS38283  中国 四川 成都 电信

===== 回程 [四川电信] 路由测试结束 =====
===== 测试 [北京电信] 的回程路由 =====
traceroute to 106.120.243.142 (106.120.243.142), 30 hops max, 60 byte packets
 1  *
 2  209.222.31.33  16.77 ms  AS20473  日本 东京都 东京 choopa.com
 3  vl627-br2-cer.tyo1.choopa.net (45.76.201.93)  0.97 ms  AS20473  日本 东京都 东京 choopa.com
 4  ae-12.r01.tokyjp05.jp.bb.gin.ntt.net (120.88.53.65)  62.23 ms  AS2914  日本 东京都 东京 ntt.com
 5  ae-4.r03.tokyjp05.jp.bb.gin.ntt.net (129.250.6.188)  2.17 ms  AS2914  日本 东京都 东京 ntt.com
 6  ae-4.r31.tokyjp05.jp.bb.gin.ntt.net (129.250.3.57)  2.00 ms  AS2914  日本 东京都 东京 ntt.com
 7  ae-11.r27.tokyjp05.jp.bb.gin.ntt.net (129.250.2.154)  4.03 ms  AS2914  日本 东京都 东京 ntt.com
 8  *
 9  *
10  202.97.34.157  109.75 ms  AS4134  中国 北京 电信
11  *
12  *
13  6.254.120.106.static.bjtelecom.net (106.120.254.6)  107.99 ms  AS4847  中国 北京 电信
14  142.243.120.106.static.bjtelecom.net (106.120.243.142)  107.59 ms  AS4847  中国 北京 电信

===== 回程 [北京电信] 路由测试结束 =====
===== 测试 [北京联通] 的回程路由 =====
traceroute to 103.254.70.52 (103.254.70.52), 30 hops max, 60 byte packets
 1  *
 2  209.222.31.33  43.39 ms  AS20473  日本 东京都 东京 choopa.com
 3  *
 4  ae-12.r01.tokyjp05.jp.bb.gin.ntt.net (120.88.53.65)  1.61 ms  AS2914  日本 东京都 东京 ntt.com
 5  ae-4.r03.tokyjp05.jp.bb.gin.ntt.net (129.250.6.188)  1.92 ms  AS2914  日本 东京都 东京 ntt.com
 6  ae-4.r31.tokyjp05.jp.bb.gin.ntt.net (129.250.3.57)  2.02 ms  AS2914  日本 东京都 东京 ntt.com
 7  ae-10.r26.tokyjp05.jp.bb.gin.ntt.net (129.250.2.152)  1.71 ms  AS2914  日本 东京都 东京 ntt.com
 8  202.97.94.9  82.06 ms  AS4134  中国 上海 电信
 9  202.97.90.30  86.60 ms  AS4134  中国 上海 电信
10  202.97.94.238  88.84 ms  AS4134  中国 上海 电信
11  202.97.34.149  107.28 ms  AS4134  中国 北京 电信
12  *
13  *
14  *
15  119.40.40.74  132.06 ms  AS4847  中国 北京 cnispunion.org 联通
16  *
17  103.254.70.52  112.12 ms  AS4808,AS4847  中国 北京 联通/电信

===== 回程 [北京联通] 路由测试结束 =====
===== 测试 [北京移动] 的回程路由 =====
traceroute to 218.205.152.14 (218.205.152.14), 30 hops max, 60 byte packets
 1  *
 2  209.222.31.33  16.58 ms  AS20473  日本 东京都 东京 choopa.com
 3  vl627-br2-cer.tyo1.choopa.net (45.76.201.93)  1.02 ms  AS20473  日本 东京都 东京 choopa.com
 4  *
 5  ce-0-14-0-1.r02.tokyjp05.jp.bb.gin.ntt.net (120.88.54.97)  2.43 ms  AS2914  日本 东京都 东京 ntt.com
 6  *
 7  ae-4.r24.tkokhk01.hk.bb.gin.ntt.net (129.250.2.51)  50.50 ms  AS2914  中国 香港 ntt.com
 8  ae-1.r03.tkokhk01.hk.bb.gin.ntt.net (129.250.6.98)  50.19 ms  AS2914  中国 香港 ntt.com
 9  ae-1.a01.chwahk02.hk.bb.gin.ntt.net (129.250.5.161)  51.50 ms  AS2914  中国 香港 ntt.com
10  203.131.254.2  49.16 ms  AS2914  中国 香港 ntt.com
11  *
12  223.120.2.2  54.42 ms  AS58453  中国 广东 广州 移动
13  223.120.22.21  87.17 ms  AS58453  中国 广东 广州 移动
14  221.183.55.102  298.44 ms  AS9808  中国 北京 移动
15  221.183.46.254  87.28 ms  AS9808  中国 北京 移动
16  221.176.27.253  152.95 ms  AS9808  中国 北京 移动
17  *
18  *
19  211.136.63.106  88.03 ms  AS56048  中国 北京 移动
20  218.205.152.14  89.40 ms  AS56048  中国 北京 移动

===== 回程 [北京移动] 路由测试结束 =====
===== 测试 [上海移动] 的回程路由 =====
traceroute to 117.131.14.202 (117.131.14.202), 30 hops max, 60 byte packets
 1  *
 2  209.222.31.33  12.84 ms  AS20473  日本 东京都 东京 choopa.com
 3  vl627-br2-cer.tyo1.choopa.net (45.76.201.93)  1.05 ms  AS20473  日本 东京都 东京 choopa.com
 4  *
 5  ce-0-14-0-1.r02.tokyjp05.jp.bb.gin.ntt.net (120.88.54.97)  2.64 ms  AS2914  日本 东京都 东京 ntt.com
 6  ae-3.r30.tokyjp05.jp.bb.gin.ntt.net (129.250.3.23)  2.20 ms  AS2914  日本 东京都 东京 ntt.com
 7  ae-4.r24.tkokhk01.hk.bb.gin.ntt.net (129.250.2.51)  50.40 ms  AS2914  中国 香港 ntt.com
 8  ae-1.r02.tkokhk01.hk.bb.gin.ntt.net (129.250.6.92)  54.46 ms  AS2914  中国 香港 ntt.com
 9  ae-2.a01.chwahk02.hk.bb.gin.ntt.net (129.250.6.123)  59.84 ms  AS2914  中国 香港 ntt.com
10  203.131.254.2  49.43 ms  AS2914  中国 香港 ntt.com
11  223.120.2.53  49.60 ms  AS58453  中国 香港 移动
12  223.120.2.2  54.56 ms  AS58453  中国 广东 广州 移动
13  223.120.22.5  78.88 ms  AS58453  中国 上海 移动
14  221.183.55.26  80.49 ms  AS9808  中国 上海 移动
15  221.176.22.205  79.56 ms  AS9808  中国 上海 移动
16  221.176.22.13  80.06 ms  AS9808  中国 上海 移动
17  221.176.19.58  78.65 ms  AS9808  中国 上海 移动
18  221.181.125.154  80.03 ms  AS24400  中国 上海 移动
19  117.131.14.202  81.55 ms  AS24400  中国 上海 移动

===== 回程 [上海移动] 路由测试结束 =====
===== 测试 [上海电信] 的回程路由 =====
traceroute to 211.144.205.58 (211.144.205.58), 30 hops max, 60 byte packets
 1  *
 2  209.222.31.33  16.58 ms  AS20473  日本 东京都 东京 choopa.com
 3  vl627-br2-cer.tyo1.choopa.net (45.76.201.93)  2.57 ms  AS20473  日本 东京都 东京 choopa.com
 4  ae-12.r01.tokyjp05.jp.bb.gin.ntt.net (120.88.53.65)  62.10 ms  AS2914  日本 东京都 东京 ntt.com
 5  ae-25.r02.tokyjp05.jp.bb.gin.ntt.net (129.250.6.182)  2.19 ms  AS2914  日本 东京都 东京 ntt.com
 6  ae-3.r30.tokyjp05.jp.bb.gin.ntt.net (129.250.3.23)  2.04 ms  AS2914  日本 东京都 东京 ntt.com
 7  ae-9.r24.osakjp02.jp.bb.gin.ntt.net (129.250.7.79)  9.18 ms  AS2914  日本 大阪府 大阪 ntt.com
 8  ae-20.r00.osakjp02.jp.bb.gin.ntt.net (129.250.5.39)  9.53 ms  AS2914  日本 大阪府 大阪 ntt.com
 9  219.158.39.197  116.61 ms  AS4837  中国 上海 联通
10  219.158.113.126  125.50 ms  AS4837  中国 上海 联通
11  219.158.113.113  110.49 ms  AS4837  中国 上海 联通
12  *
13  112.64.252.86  120.11 ms  AS17621  中国 上海 联通
14  140.207.48.250  117.57 ms  AS17621  中国 上海 联通
15  208.162.dsnet (211.144.208.162)  108.13 ms  AS23853  中国 上海 shuxun.net 电信/联通
16  208.134.dsnet (211.144.208.134)  118.50 ms  AS23853  中国 上海 shuxun.net 电信/联通
17  205.58.dsnet (211.144.205.58)  108.55 ms  AS17621,AS23853  中国 上海 shuxun.net 电信/联通

===== 回程 [上海电信] 路由测试结束 =====
===== 测试 [上海联通] 的回程路由 =====
traceroute to 220.196.42.133 (220.196.42.133), 30 hops max, 60 byte packets
 1  *
 2  209.222.31.33  20.79 ms  AS20473  日本 东京都 东京 choopa.com
 3  vl627-br2-cer.tyo1.choopa.net (45.76.201.93)  1.23 ms  AS20473  日本 东京都 东京 choopa.com
 4  ae-12.r01.tokyjp05.jp.bb.gin.ntt.net (120.88.53.65)  15.15 ms  AS2914  日本 东京都 东京 ntt.com
 5  ae-4.r03.tokyjp05.jp.bb.gin.ntt.net (129.250.6.188)  1.82 ms  AS2914  日本 东京都 东京 ntt.com
 6  ae-4.r30.tokyjp05.jp.bb.gin.ntt.net (129.250.3.34)  2.02 ms  AS2914  日本 东京都 东京 ntt.com
 7  ae-9.r24.osakjp02.jp.bb.gin.ntt.net (129.250.7.79)  9.45 ms  AS2914  日本 大阪府 大阪 ntt.com
 8  ae-20.r00.osakjp02.jp.bb.gin.ntt.net (129.250.5.39)  9.42 ms  AS2914  日本 大阪府 大阪 ntt.com
 9  *
10  219.158.113.126  113.83 ms  AS4837  中国 上海 联通
11  *
12  *
13  112.64.247.194  112.50 ms  AS17621  中国 上海 联通
14  112.65.207.162  102.99 ms  AS17621  中国 上海 联通
15  140.207.207.37  101.11 ms  AS17621  中国 上海 联通
16  140.207.207.186  114.45 ms  AS17621  中国 上海 联通
17  220.196.42.133  102.02 ms  AS17621  中国 上海 联通

===== 回程 [上海联通] 路由测试结束 =====
===== 测试 [广东联通] 的回程路由 =====
traceroute to 27.40.0.30 (27.40.0.30), 30 hops max, 60 byte packets
 1  *
 2  209.222.31.33  16.63 ms  AS20473  日本 东京都 东京 choopa.com
 3  vl627-br2-cer.tyo1.choopa.net (45.76.201.93)  2.04 ms  AS20473  日本 东京都 东京 choopa.com
 4  ae-12.r01.tokyjp05.jp.bb.gin.ntt.net (120.88.53.65)  22.58 ms  AS2914  日本 东京都 东京 ntt.com
 5  ae-4.r03.tokyjp05.jp.bb.gin.ntt.net (129.250.6.188)  2.37 ms  AS2914  日本 东京都 东京 ntt.com
 6  ae-4.r30.tokyjp05.jp.bb.gin.ntt.net (129.250.3.34)  2.19 ms  AS2914  日本 东京都 东京 ntt.com
 7  ae-9.r26.tokyjp05.jp.bb.gin.ntt.net (129.250.2.10)  1.79 ms  AS2914  日本 东京都 东京 ntt.com
 8  219.158.42.5  63.99 ms  AS4837  中国 广东 广州 联通
 9  219.158.98.93  67.69 ms  AS4837  中国 广东 广州 联通
10  219.158.24.125  59.30 ms  AS4837  中国 广东 广州 联通
11  120.81.0.34  60.63 ms  AS17816  中国 广东 广州 联通
12  221.4.6.2  61.73 ms  AS17816  中国 广东 广州 联通
13  27.40.0.30  60.70 ms  AS17816  中国 广东 广州 联通

===== 回程 [广东联通] 路由测试结束 =====
===== 测试 [广东移动] 的回程路由 =====
traceroute to 211.139.129.222 (211.139.129.222), 30 hops max, 60 byte packets
 1  *
 2  209.222.31.33  17.33 ms  AS20473  日本 东京都 东京 choopa.com
 3  vl627-br2-cer.tyo1.choopa.net (45.76.201.93)  1.02 ms  AS20473  日本 东京都 东京 choopa.com
 4  *
 5  ce-0-14-0-1.r02.tokyjp05.jp.bb.gin.ntt.net (120.88.54.97)  2.44 ms  AS2914  日本 东京都 东京 ntt.com
 6  ae-3.r30.tokyjp05.jp.bb.gin.ntt.net (129.250.3.23)  3.10 ms  AS2914  日本 东京都 东京 ntt.com
 7  ae-4.r24.tkokhk01.hk.bb.gin.ntt.net (129.250.2.51)  50.28 ms  AS2914  中国 香港 ntt.com
 8  ae-1.r02.tkokhk01.hk.bb.gin.ntt.net (129.250.6.92)  54.53 ms  AS2914  中国 香港 ntt.com
 9  ce-0-4-0-0.r02.tkokhk01.hk.ce.gin.ntt.net (203.131.241.82)  47.76 ms  AS2914  中国 香港 ntt.com
10  223.120.2.117  47.23 ms  AS58453  中国 香港 移动
11  223.120.2.82  53.15 ms  AS58453  中国 香港 移动
12  221.183.55.82  54.49 ms  AS9808  中国 广东 广州 移动
13  221.183.25.118  53.30 ms  AS9808  中国 广东 广州 移动
14  221.176.22.157  57.43 ms  AS9808  中国 广东 广州 移动
15  221.183.14.126  56.49 ms  AS9808  中国 广东 广州 移动
16  120.198.206.198  59.19 ms  AS56040  中国 广东 广州 移动
17  120.197.27.250  59.96 ms  AS56040  中国 广东 广州 移动
18  211.139.129.222  57.43 ms  AS56040  中国 广东 广州 移动

===== 回程 [广东移动] 路由测试结束 =====
----------------------------------------------------------------------
【四川电信】 - 125.64.38.178
10 packets transmitted, 10 received, 0% packet loss, time 9012ms
rtt min/avg/max/mdev = 128.773/128.972/129.617/0.253 ms
----------------------------------------------------------------------
【北京电信】 - 106.120.243.142
10 packets transmitted, 10 received, 0% packet loss, time 9006ms
rtt min/avg/max/mdev = 107.442/107.535/107.645/0.394 ms
----------------------------------------------------------------------
【北京联通】 - 103.254.70.52
10 packets transmitted, 9 received, 10% packet loss, time 9013ms
rtt min/avg/max/mdev = 109.617/109.884/110.060/0.305 ms
----------------------------------------------------------------------
【北京移动】 - 218.205.152.14
10 packets transmitted, 10 received, 0% packet loss, time 9012ms
rtt min/avg/max/mdev = 89.018/89.152/89.315/0.210 ms
----------------------------------------------------------------------
【上海移动】 - 117.131.14.202
10 packets transmitted, 10 received, 0% packet loss, time 9011ms
rtt min/avg/max/mdev = 80.851/81.351/81.915/0.435 ms
----------------------------------------------------------------------
【上海电信】 - 211.144.205.58
10 packets transmitted, 4 received, 60% packet loss, time 9125ms
rtt min/avg/max/mdev = 108.511/109.197/110.554/0.875 ms
----------------------------------------------------------------------
【上海联通】 - 220.196.42.133
10 packets transmitted, 9 received, 10% packet loss, time 9020ms
rtt min/avg/max/mdev = 101.208/101.942/102.581/0.503 ms
----------------------------------------------------------------------
【广东联通】 - 27.40.0.30
10 packets transmitted, 10 received, 0% packet loss, time 9014ms
rtt min/avg/max/mdev = 60.410/61.356/62.579/0.582 ms
----------------------------------------------------------------------
【广东移动】 - 211.139.129.222
10 packets transmitted, 10 received, 0% packet loss, time 9015ms
rtt min/avg/max/mdev = 56.736/57.183/57.598/0.407 ms
----------------------------------------------------------------------
min:最低延迟
avg:平均延迟
max:最高延迟
mdev:平均偏差
----------------------------------------------------------------------</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS搭建发卡系统教程（支持支付宝/微信/手Q支付）</title>
    <url>/1943/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本发卡系统由<code>hostloc</code>大佬风铃制作，完全免费。采用前端<code>MuseUI</code>+<code>Vue</code>+<code>Webpack</code>，后端<code>Laravel</code>，市面上现有的功能都有，支付方式做成了插件模式，自己可以自助添加新的支付方式。目前支持的支付方式：支付宝/手机支付宝/支付宝当面付/微信扫码。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/card-syste(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/card-syste(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/card-syste(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>V2.0代码重构，支付方式增多: 
支付宝(企业V2/手机V4/当面付)  微信(扫码/H5)  手Q(扫码/H5) 
有赞(支付宝/QQ/微信)  码支付(支付宝/QQ/微信)</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Tai7sy/card-system。" target="_blank" rel="noopener">https://github.com/Tai7sy/card-system。</a></p>
<p><strong>系统环境：</strong><code>Apache</code>/<code>Nginx</code>、 <code>PHP</code>&gt;=<code>7.1</code>、<code>MySQL</code>。本教程以宝塔<code>BT</code>面板为参考。</p>
<p><strong>1、安装BT面板</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装后进面板安装<code>LAMP</code>，选择<code>Nginx1.12</code>、<code>PHP7.2</code>、<code>MySQL5.5</code>。</p>
<p><strong>2、上传程序代码</strong><br>先点击左侧添加网站，并设置你的<code>MySQL</code>数据库信息，再从<code>Github</code>下载最新源码到网站根目录，下载地址→传送门，使用命令：</p>
<pre><code>#进入站点根目录，自行修改，且目前最新版本为v2.7，记得自行替换下面下载链接
cd /www/wwwroot/www.southcat.net
curl -L -o card_release.tar.gz https://github.com/Tai7sy/card-system/releases/download/2.7/card_release.tar.gz
tar -zxf card_release.tar.gz
cp -rf card_system_free_dist/. .
rm -rf card_system_free_dist card_release.tar.gz
chmod -R 777 storage/
chmod -R 777 bootstrap/cache/
chmod -R 777 app/Library/Pay/Aliqr/f2fpay/log/ #如果使用了支付宝当面付
chmod -R 777 app/Library/Pay/WeChat/logs/ #如果使用了微信支付</code></pre><p><strong>3、修改配置文件</strong><br>复制<code>.env.example</code>到<code>.env</code>，使用命令：</p>
<pre><code>#进入网站目录，路径自行修改
cd /www/wwwroot/www.southcat.net
php -r &quot;copy(&apos;.env.example&apos;, &apos;.env&apos;);&quot;</code></pre><p>然后去目录文件找到<code>.env</code>，进行编辑。</p>
<pre><code>DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=card
DB_USERNAME=card
DB_PASSWORD=密码</code></pre><p>构建数据库</p>
<pre><code>#进入网站目录，路径自行修改
cd /www/wwwroot/www.southcat.net
php artisan key:generate
php artisan migrate:fresh --seed
php artisan cache:clear</code></pre><p><strong>4、配置网站</strong><br>点击网站-设置-网站目录，关闭”防跨站攻击” 并修改运行目录为<code>/public</code>，再重启<code>php</code>即可。</p>
<p>如果使用Nginx，则需要配置伪静态，添加如下：</p>
<pre><code>location / {
    try_files $uri $uri/ /index.php?$query_string;
}</code></pre><h2 id="后台设置"><a href="#后台设置" class="headerlink" title="后台设置"></a>后台设置</h2><p>默认账号密码<code>admin@qq.com/123456</code>，请及时修改；</p>
<p>进入后台<code>域名/admin</code>；</p>
<p>管理中心-网站设置-常规，填写网站地址与网站<code>API</code>地址，保存配置；</p>
<p>管理中心-支付渠道，配置你的支付信息；</p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><pre><code>#修改.env文件无效/修改网站设置无效
cd /www/wwwroot/www.southcat.net  #进入网站目录
php artisan config:clear
php artisan cache:clear

#忘记密码后重置
cd /www/wwwroot/example.com  #进入网站目录
php artisan reset:password admin@qq.com 123456</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS服务器SSH端口一键修改脚本</title>
    <url>/1819/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们的很多<code>VPS</code>服务器，默认的端口都是<code>22</code>，所以一直会被人扫描爆破，很容易会出现问题，所以我们需要通过修改端口来尽可能减少这种事情发生，之前发过手动修改教程，参考：Linux VPS主机安全设置 - 修改VPS默认SSH端口，但对于很多小白或者很懒的人来说，更喜欢一键脚本就能完成的方法，这里就整了个<code>SSH</code>端口一键修改脚本。从<code>OneinStack</code>一键安装包上扒下来的。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>系统要求：</strong>支持<code>Debian</code>、<code>Ubuntu</code>、<code>CentOS</code>系统。<br>运行以下命令：</p>
<pre><code>wget https://www.southcat.net/usr/down/sshport.sh
bash sshport.sh</code></pre><p>输入端口确认。再打开防火墙端口：</p>
<pre><code>#如果防火墙使用的iptables（Centos 6），修改端口为8080
iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
service iptables save
service iptables restart
#如果使用的是firewall（CentOS 7）
firewall-cmd --zone=public --add-port=8080/tcp --permanent 
firewall-cmd --reload</code></pre><p>最后重启<code>ssh</code>生效：</p>
<pre><code>#CentOS系统
service sshd restart
#Debian/Ubuntu系统
service ssh restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS无限制一键全自动DD安装Windows脚本</title>
    <url>/1846/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前有大佬发过一个<code>DD</code>全自动脚本，参考：Linux VPS全自动DD安装Windows一键脚本，不过只能使用<code>http</code>直链，还是有点限制的，这次<code>Vicer</code>大佬也制作了个无限制<code>DD</code>安装<code>Windows</code>脚本，包括<code>https</code>链接的都可以直接<code>DD</code>，对于很多人来说，是很方便的。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>突破没有<code>VNC</code>，没有救援模式，内存比<code>dd</code>包小的限制。使用<code>Debian Live CD</code>中的<code>busybox</code>做中间媒介，经过复杂的处理，使本机的网络参数传进<code>Windows</code>操作系统中，即使没有<code>DHCP</code>能够让<code>Windows</code>获取网络参数，也能让<code>Windows</code>操作系统在开机的第一时间能够连通网络。</p>
<h2 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h2><p>1、<code>Debian/Ubuntu/CentOS</code>系统(由<code>GRUB</code>引导)；<br>2、<code>wget</code>用来下载文件，获取公网IP;<br>3、<code>ip</code>获取网关，掩码等;<br>4、<code>sed awk grep</code>处理文本流；<br>5、<code>VNC</code>安装系统(此项为可选)。<br>6、无<code>DHCP</code>时额外需求: <code>iconv</code></p>
<pre><code>#Debian/Ubuntu
## 一般自带
#RedHat/CentOS
yum install glibc-common</code></pre><h2 id="使用限制"><a href="#使用限制" class="headerlink" title="使用限制"></a>使用限制</h2><p>1、需要定制<code>dd</code>包</p>
<ul>
<li>默认<code>Administrator</code>账户登录</li>
<li>默认开启远程桌面(默认<code>3389</code>端口)</li>
<li>适当的调整防火墙(可选)</li>
</ul>
<p>2、需要相关的虚拟化驱动，VirtIO驱动，XEN驱动。</p>
<p>3、<code>dd</code>包解压后的体积不能超过机器第一块硬盘的最大容积</p>
<h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><pre><code>wget --no-check-certificate -qO DebianNET.sh &apos;https://moeclub.org/attachment/LinuxShell/DebianNET.sh&apos; &amp;&amp; bash DebianNET.sh -dd &apos;[Windows dd包直连地址]&apos;
#脚本备份
https://www.southcat.net/usr/shell/DD_Win/DebianNET.sh</code></pre><p>萌咖提供的<code>demo</code>包(<code>1.19G</code>;已激活)：</p>
<pre><code>#在你的机器上全新安装，如果你有VNC，可以看到全部过程。
https://moeclub.org/get-win7embx86-auto
#该包只添加了VirtIO驱动,理论上仅能在KVM，Hyper-V构架下正常运行。
#如需在其他虚拟化构架下运行，请自行添加相关虚拟化驱动。
#备用地址
https://down.southcat.net/Windows/win7embx86-auto.gz</code></pre><p>使用的是<code>Windows Embedded Standard 7</code>(<code>Thin PC</code>)作为底包，官方精简。</p>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><pre><code>wget --no-check-certificate -qO DebianNET.sh &apos;https://moeclub.org/attachment/LinuxShell/DebianNET.sh&apos; &amp;&amp; bash DebianNET.sh -dd &apos;https://down.southcat.net/Windows/win7embx86-auto.gz&apos;</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>程登陆账号为: <code>Administrator</code><br>远程登陆密码为: <code>Vicer</code><br>仅修改了主机名，可放心使用。(建议自己制作.)<br>如果因此违反了<code>TOS</code>，萌咖不负任何责任。</p>
<p>萌咖提供的可用的<code>DD</code>包：</p>
<pre><code>#与本地用iso镜像安装过程一样，如果你有VNC，可看到全部过程。
#因为全新安装!!! 全新安装!!! 全新安装!!! 所以会等待久一点。
#Windows Embedded 8.1 Industry Pro x64 (2.87G;KVM;XEN;Hyper-V;未激活)
https://down.southcat.net/Windows/win8embx64-auto.gz</code></pre><h2 id="DD包提供"><a href="#DD包提供" class="headerlink" title="DD包提供"></a>DD包提供</h2><pre><code>http://down.80host.com/iso/dd/WS2008R2Enterprise-Joodle-Template.gz
http://down.80host.com/iso/dd/Windows2012R2-Joodle-Template.gz
Username:Administrator
Password:Password147

http://down.80host.com/iso/dd/win2003_with_update.gz
Username:administrator
Password:80hostkvmlamjj

Laiboke.com制作的中文版2012R2
http://down.80host.com/iso/dd/Win2012R2ZW.gz
Username:Administrator
Password:Laiboke.com</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS搭建Telegram RSS中文订阅机器人教程</title>
    <url>/2031/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多人喜欢一些网站或者博客，有时候会错过好东西或者福利，这里我们可以搭建个<code>Telegram RSS</code>中文订阅机器人，这样可以通过它来实现在<code>Telegram</code>里订阅网站并快速推送<code>RSS</code>内容。</p>
<h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><p><strong>Github地址：</strong><a href="https://github.com/iovxw/rssbot" target="_blank" rel="noopener">https://github.com/iovxw/rssbot</a></p>
<p><strong>1、申请Bot</strong><br>打开<code>Telegram</code>，搜索<code>@BotFather</code>，发送<code>/newbot</code> ，申请一个<code>Bot</code>。</p>
<p>然后再输入<code>/mybots</code>找到自己的<code>bot</code>，选择它，然后选择<code>Edit Bot</code>，选择<code>Edit Commands</code>就可以输入你的指令了。</p>
<pre><code>#以下一起复制到对话框发送
rss       - 显示当前订阅的 RSS 列表，加 raw 参数显示链接
sub       - 订阅一个 RSS: /sub http://example.com/feed.xml
unsub     - 退订一个 RSS: /unsub http://example.com/feed.xml
unsubthis - 使用此命令回复想要退订的 RSS 消息即可退订, 不支持 Channel
export    - 导出为 OPML</code></pre><p><img src="https://www.southcat.net/usr/picture/T_RSS(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、安装机器人</strong><br>首先得登录<code>VPS</code>，然后安装相关依赖。</p>
<pre><code>#CentOS系统
yum -y update &amp;&amp; yum -y install gcc make openssl* pkg* libssl* screen curl

#Ubuntu、Debian系统
apt-get -y update &amp;&amp; apt-get -y install gcc make openssl pkg-config libssl-dev screen curl</code></pre><p>这里坑不少，博主就多写了点依赖，如果还有其它错误，请留言报错内容。</p>
<p>安装<code>Rust Nightly</code></p>
<pre><code>curl https://sh.rustup.rs -sSf | sh</code></pre><p>安装<code>rssbot</code></p>
<pre><code>wget https://github.com/iovxw/rssbot/archive/v1.4.2.tar.gz
tar xvf v1.4.2.tar.gz
cd rssbot-1.4.2
cargo build --release</code></pre><p><img src="https://www.southcat.net/usr/picture/T_RSS(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>运行<code>rssbot</code></p>
<pre><code>cd target/release
screen -S rssbot
./rssbot DATAFILE TELEGRAM-BOT-TOKEN</code></pre><p><code>DATAFILE</code>为数据库保存路径(其实就是一个<code>json</code>文件，不需要手动创建)。<br><code>TELEGRAM-BOT-TOKEN</code>就是你创建的机器人的<code>Token</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS每日自动备份到FTP及数据库通过邮箱发送方法</title>
    <url>/1462/</url>
    <content><![CDATA[<p><strong>说明：</strong>此文介绍一种，每天自动备份网站以及数据库文件，发送EMAIL到邮箱，自动删除旧备份的方法。</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>1、如果不需要使用邮件功能的可以跳过邮件组建安装步骤，需要的请看<code>2</code>。<br>2、很多VPS商家会封闭邮件25端口，记得保持开启！发送邮件的大小和接收也与VPS商和接收的邮箱有关，数据库超过限制会发送失败。<br>3、FTP别使用要备份网站所在的VPS，不然就没多大意义了。</p>
<h2 id="获得自动备份脚本"><a href="#获得自动备份脚本" class="headerlink" title="获得自动备份脚本"></a>获得自动备份脚本</h2><p><strong>1、安装邮件发送依赖组件</strong></p>
<pre><code>yum install sendmail
yum install mailx</code></pre><p>此方法用<code>CentOS</code>测试，<code>Debian/Ubuntu</code>使用<code>apt-get</code>安装。</p>
<p><strong>2、获得备份脚本</strong></p>
<pre><code>wget http://southcat.net/usr/down/backup.sh</code></pre><h2 id="脚本编辑"><a href="#脚本编辑" class="headerlink" title="脚本编辑"></a>脚本编辑</h2><p><strong>1、创建备份文件夹</strong></p>
<pre><code>cd /home
mkdir back</code></pre><p><strong>2、修改<code>backup.sh</code>相关信息</strong><br>将脚本下载到本地修改好再上传或者直接通过<code>WinSCP</code>改都可以。</p>
<pre><code>#!/bin/bash
# 进入到备份文件夹
cd /home/back
#压缩网站数据
tar zcvf web_$(date +&quot;%Y%m%d&quot;).tar.gz 网站目录
# 导出数据库到备份文件夹内
mysqldump -uroot -p数据库密码 数据库名称 &gt; web_data_$(date +&quot;%Y%m%d&quot;).sql
# 以附件形式发送数据库到指定邮箱
echo &quot;Blog date&quot;|mail -s &quot;Backup$(date +%Y-%m-%d)&quot; -a web_data_$(date +&quot;%Y%m%d&quot;).sql 收件人邮箱
# 删除本地3天前的数据
rm -rf web_$(date -d -3day +&quot;%Y%m%d&quot;).tar.gz web_data_$(date -d -3day +&quot;%Y%m%d&quot;).sql
# 登录FTP
lftp ftp地址 -u ftp用户名,ftp密码 &lt;&lt; EOF
# 进入FTP根目录
cd ftp根目录文件夹
# 删除3天前备份文件
mrm web_$(date -d -3day +&quot;%Y%m%d&quot;).tar.gz
mrm web_data_$(date -d -3day +&quot;%Y%m%d&quot;).sql
# 上传当天备份文件
mput web_$(date +&quot;%Y%m%d&quot;).tar.gz
mput web_data_$(date -d -3day +&quot;%Y%m%d&quot;).sql
bye
EOF</code></pre><p>按脚本要求编辑网站路径，数据库密码，名称，FTP和邮箱即可。</p>
<p><strong>3、测试备份是否正常</strong></p>
<pre><code>sh /root/backup.sh</code></pre><p>测试过程中请不要关闭SSH，直到执行完毕，若没有问题，则继续。</p>
<h2 id="定时执行，每日备份"><a href="#定时执行，每日备份" class="headerlink" title="定时执行，每日备份"></a>定时执行，每日备份</h2><p><strong>1、赋予文件执行权限（755）</strong></p>
<pre><code>chmod +x /root/backup.sh</code></pre><p><strong>2、设定自动任务</strong></p>
<pre><code>crontab -e</code></pre><p>SSH执行以上命令。</p>
<p><strong>3、添加任务</strong></p>
<pre><code>00 00 * * * /root/backup.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS的Windows DD包详细的制作教程</title>
    <url>/1856/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前<code>Vicer</code>大佬制作出了<code>VPS</code>全自动<code>DD</code>安装<code>Windows</code>脚本，让我们很多喜欢在<code>VPS</code>安装<code>Windows</code>的人方便了许多，不过<code>dd</code>前必须得有一个<code>dd</code>包，这里就说下<code>Windows dd</code>包的制作过程，虽然网上很多这样的<code>dd</code>包，但对于一些来历不明的，也会有点不放心，所以我们有时间的话可以自己定制一个。</p>
<p><strong>相关教程：</strong>Linux VPS无限制一键全自动DD安装Windows脚本</p>
<p>通过本教程自制的一个<code>Windows server 2008 R2 dd</code>包：</p>
<pre><code># Windows server 2008 R2 Standard 中文版
# 2.9G（解压后8G） KVM 未激活 全新安装 已经过测试可用
http://nico-ni.co/dd/Win2008R2Standard-x64.gz
# 备用地址
https://down.southcat.net/Windows/Win2008R2Standard-x64.gz
# Username: Administrator
# Password: lolico.moe123</code></pre><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li><code>Windows</code>原版镜像，可以在MSDN下载。</li>
<li>DISM++，用于<code>DIY</code>以及优化<code>wim</code>镜像。</li>
<li>虚拟化驱动：VirtIO（<code>KVM</code>驱动），Xen驱动。</li>
<li>下载gunzip for windows，备用下载点。或者你也可以直接去安装<code>Cmder</code>（官网），其自带有<br><code>gzip</code>（顺便安利一下这个可以在<code>Win</code>下执行大多数<code>Linux</code>命令的超好用的命令行程序）。</li>
<li>在计算机上安装<code>Hyper-V</code>（Win8/10开启Hyper-V教程），准备用于对制作好的<code>vhd</code>映像进行测试。</li>
</ol>
<h2 id="开始制作"><a href="#开始制作" class="headerlink" title="开始制作"></a>开始制作</h2><p><strong>1、制作可用的镜像文件</strong><br>提取准备好的<code>Windows</code>原版镜像中的<code>\sources\install.wim</code>文件，解压或直接挂载虚拟光驱都行，提取该文件到<code>E:\install.wim</code>。</p>
<p>创建一个<code>vhd</code>虚拟磁盘，示例：盘符为<code>V</code>，路径为<code>D:\win.vhd</code>，大小为<code>5120M</code>。</p>
<p>首先以管理员身份运行命令提示符或者<code>PowerShell</code>，然后执行以下命令：</p>
<pre><code>diskpart
# 以下命令实际上可以复制粘贴一次性执行，无需分条
CREATE VDISK FILE=&quot;D:\win.vhd&quot; TYPE=FIXED MAXIMUM=5120
SELECT VDISK FILE=&quot;D:\win.vhd&quot;
ATTACH VDISK
CLEAN
CREATE PARTITION PRIMARY
FORMAT FS=NTFS QUICK
ASSIGN LETTER=V</code></pre><p>在<code>D</code>盘创建一个文件夹<code>D:\MOUNT</code>，打开<code>DISM++</code>，点击：文件–&gt;挂载映像–&gt;点第一个浏览，找到<code>E:\install.wim</code>–&gt;点第二个浏览，找到<code>D:\MOUNT</code>–&gt;不选中只读模式–&gt;确定。</p>
<p>在<code>DISM++</code>里进行系统设置优化（建议关闭<code>UAC</code>）、安装语言包、添加先前下载好的虚拟化驱动等。</p>
<p>完成后，点文件–&gt;另存为映像–&gt;保存在<code>D:\install.wim</code>，等待任务完成。</p>
<p>点击：文件–&gt;释放映像–&gt;点第一个浏览，找到<code>D:\install.wim</code>–&gt;点第二个浏览，找到<code>V:</code>–&gt;只选中添加引导和格式化–&gt;确定–&gt;在弹出的“引导修复-<code>BIOS</code>”对话框中点击“更多”–&gt;找到盘符为<code>V</code>的磁盘分区–&gt;确定。</p>
<p>最后等待完成！</p>
<p><strong>2、设置系统的注册表</strong></p>
<p>在自己的电脑上打开注册表编辑器<code>regedit</code>，选中<code>HKEY_LOCAL_MACHINE</code>分支，点击：文件-&gt;加载配置单元。</p>
<p>在文件浏览器中选择<code>V:\Windows\System32\config\SYSTEM</code>，项名称填一个好找又不和目前项相同的，例如<code>A_SYSTEM</code>,然后更改如下键值以开启远程桌面服务。<br><img src="https://www.southcat.net/usr/picture/Win_dd_z(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>继续按照先前步骤加载配置单元<code>V:\Windows\System32\config\SOFTWARE</code>，项为<code>A_SOFTWARE</code>，然后更改如下键值以关闭 <code>Ctrl+Alt+Del</code>登陆。<br><img src="https://www.southcat.net/usr/picture/Win_dd_z(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>选中我们加载的配置单元，点击：文件-&gt;卸载配置单元，将<code>A_SYSTEM</code>和<code>A_SOFTWARE</code>卸载。</p>
<p><strong>3、制作预应答文件</strong><br>下载Microsoft Windows AIK，建议安装在剩余空间较大的磁盘分区，因为创建编录文件的时候会自动挂载镜像。</p>
<p>貌似仅适用于制作<code>Windows 7</code>以及<code>Server 2008 R2</code>的，如果是其他系统不知能不能制作，也可以尝试直接照搬我提供的预应答文件。</p>
<p>安装完成后，打开“<code>Windows</code>系统映像管理器”，点击：文件-&gt;选择<code>Windows</code>映像，然后选择我们已经在前面的步骤中优化好的 <code>wim</code>文件，然后会提示你需要创建编录文件，选是即可。</p>
<p>等待加载完成，然后仿照【这个预应答文件】进行制作（文件内容见附录），这个预应答文件将会设置用户名<code>Administrator</code>的密码为<code>lolico.moe123</code>。软件的具体使用方法可以百度一下有很多范例，讲起来比较复杂，理解能力强的人看一看就会用，因此此处不再赘述。如果你要制作的是<code>Win7</code>或者<code>Server2008R2</code>的<code>64</code>位系统，也可以使用此软件打开，然后在这个文件的基础上进行修改。</p>
<p>制作完成之后保存预应答文件为<code>unattend.xml</code>，然后放在<code>V:\Windows\Panther</code>目录下（如果没有目录就自行新建）。</p>
<p>在我的电脑中右击<code>V</code>盘，弹出。</p>
<p><strong>3、对制作好的 dd 包进行测试</strong><br>先将你制作好的<code>vhd</code>复制一份，用复制的这份来测试，这样的话如果出现了错误就不用再重新制作，可以继续修改。</p>
<p>打开<code>Hyper-V</code>，点击：操作-&gt;新建-&gt;虚拟机。</p>
<p>名称和位置随便选，指定代数选择“第一代”，内存分配你觉得足以启动系统即可，配置网络不用管；连接虚拟硬盘选择“使用现有虚拟磁盘”，接着指定我们刚才制作的<code>vhd</code>虚拟磁盘，之后的设置都维持默认即可。</p>
<p>启动虚拟机，观察是否有进行自动安装等操作，成功的话就可以关掉虚拟机并删掉使用过的<code>vhd</code>了。</p>
<p><strong>4、将dd包部署在服务器上</strong><br>使用<code>gunzip</code>工具压缩打包压缩<code>D:\win.vhd</code>，这里提供两种方法：</p>
<pre><code>#使用gunzip for windows
将 gunzip 程序目录中的bin目录里的所有文件复制到%WINDIR%/SYSTEM32，接着在命令提示符内进入vhd所在目录，执行gzip.exe -k9 win.vhd。

#使用cmder自带gunzip
在cmder中进入vhd所在目录，执行gzip -k9 win.vhd。</code></pre><p>然后耐心等待压缩完成，之后我们就得到了一个可以用来脚本一键<code>dd</code>的包了。然后将这个压缩包传到可用<code>HTTP</code>直接下载的地方，最好不要包含跳转，然后就可以拿来使用了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS服务器性能测试脚本：Zench，可导出结果</title>
    <url>/1930/</url>
    <content><![CDATA[<p><strong>说明：</strong>本脚本雨落大佬写的，将秋水的<code>Bench.sh</code>和<code>Oldking</code>的<code>SuperBench</code>结合了，然后加入<code>Ping</code>以及路由测试功能，可以详细的测试出服务器系统信息，下载速度，到国内的带宽，<code>Ping</code>值等等，还可以生成<code>html</code>网页进行查看，很不错。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/FunctionClub/ZBench" target="_blank" rel="noopener">https://github.com/FunctionClub/ZBench</a></p>
<p>如果中文版出现乱码等情况，请换成英文版。</p>
<pre><code>#中文版：
wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/ZBench/master/ZBench-CN.sh &amp;&amp; bash ZBench-CN.sh

#英文版：
wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/ZBench/master/ZBench.sh &amp;&amp; bash ZBench</code></pre><h2 id="截图演示"><a href="#截图演示" class="headerlink" title="截图演示"></a>截图演示</h2><h2 id="相关脚本"><a href="#相关脚本" class="headerlink" title="相关脚本"></a>相关脚本</h2><ul>
<li>Superbench.sh：VPS服务器一键测试脚本</li>
<li>serverreview-benchmark：Linux服务器性能测试脚本</li>
<li>Superspeed：一键测试服务器到国内的速度</li>
<li>mPing：一键测试服务器回程ping脚本</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS禁止PING简单设置方法</title>
    <url>/1447/</url>
    <content><![CDATA[<p><strong>说明：</strong>可能由于某些原因我们需要禁止ping，这里就分享个方法</p>
<p><strong>1、修改文件</strong></p>
<pre><code>vi /proc/sys/net/ipv4/icmp_echo_ignore_all #将0改成1即可</code></pre><p>或者我们直接写入设置禁止PING</p>
<pre><code>echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</code></pre><p>如果是启动则是</p>
<pre><code>echo 0 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</code></pre><p>需要注意的是，如果用这个方法会使得我们无法PING别人，别人也不好PING我们。这样从性能角度看，无法PING出可能不是太好。</p>
<p><strong>2、修改iptables设置</strong></p>
<pre><code>iptables -A INPUT -p icmp --icmp-type 8 -s 0/0 -j DROP</code></pre><p>通过一句话命令脚本，设置禁止PING，如果需要启动，则可以看下面</p>
<pre><code>iptables -D INPUT -p icmp --icmp-type 8 -s 0/0 -j DROP</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS系统设置时区和同步时间的简单方法</title>
    <url>/1461/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候vps时区和时间不一样会出很多问题，这里就不举例了，只说下方法。</p>
<p><strong>1、修改北京时区</strong><br>这里以修改北京时间作为默认时区，如果有其他需要的，可以对应修改。</p>
<pre><code>rm -rf /etc/localtime #先删除默认的时区设置
ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime #替换上海/北京作为默认</code></pre><p><strong>2、手工修改当前系统的时间</strong></p>
<pre><code>date -s &apos;14:48:00 2015-05-10&apos;</code></pre><p>这里，就修改为当前的时间。</p>
<p><strong>3、设置同步时间</strong></p>
<pre><code>ntpdate us.pool.ntp.org</code></pre><p>设置同步服务器时间，安装完毕之后，我们用<code>date</code>测试下当前时间。</p>
<p>一般的<code>VPS</code>都有安装<code>NTP</code>，如果没有安装我们需要先安装<code>yum install -y ntp</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS纯净版CentOS系统一键安装脚本</title>
    <url>/2025/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul>
<li>适用于由<code>GRUB</code>引导的<code>CentOS</code>，<code>Ubuntu</code>，<code>Debian</code>系统。</li>
<li>使用官方发行版去掉模板预装的软件。</li>
<li>同时也可以解决内核版本与软件不兼容的问题。</li>
<li>只要有<code>root</code>权限，还您一个纯净的系统。</li>
</ul>
<p><strong>相关教程：</strong>Linux VPS纯净版Debian/Ubuntu系统一键安装脚本。</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul>
<li>全自动安装默认<code>root</code>密码：<code>Vicer</code>，安装完成后请立即更改密码。</li>
<li>全自动安装时默认提供<code>VNC</code>功能，可使用<code>VNC Viewer</code>查看进度。</li>
<li><code>VNC</code>端口为<code>1</code>或者<code>5901</code>，可自行尝试连接(成功后<code>VNC</code>功能会消失)。</li>
<li>目前只支持<code>CentOS 6.9</code>及以下版本(<code>5.x</code>、<code>6.x</code>)，<code>7</code>版本以后添加。</li>
</ul>
<p><strong>特别注意：</strong><code>OpenVZ</code>构架不适用。</p>
<h2 id="需要"><a href="#需要" class="headerlink" title="需要"></a>需要</h2><ol>
<li><code>Debian</code>/<code>Ubuntu</code>/<code>CentOS</code>系统(由<code>GRUB</code>引导)；</li>
<li><code>wget</code>用来下载文件，获取公网<code>IP</code>;</li>
<li><code>ip</code>获取网关，掩码等;</li>
<li><code>sed awk grep</code>处理文本流；</li>
<li><code>openssl</code>创建<code>root</code>用户密码;</li>
<li><code>xz-utils</code>重新打包镜像。</li>
</ol>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装依赖</strong></p>
<pre><code>#Debian/Ubuntu
apt-get install -y xz-utils openssl gawk coreutils file

#RedHat/CentOS
yum install -y xz openssl gawk coreutils file</code></pre><p>如果出现了错误，请升级系统</p>
<pre><code>#Debian/Ubuntu
apt-get update

#RedHat/CentOS
yum update</code></pre><p><strong>2、脚本下载及使用</strong><br>脚本下载：</p>
<pre><code>wget --no-check-certificate -qO CentOSNET.sh &apos;https://moeclub.org/attachment/LinuxShell/CentOSNET.sh&apos; &amp;&amp; chmod a+x CentOSNET.sh
#脚本备份
https://www.southcat.net/usr/down/CentOSNET.sh</code></pre><p>脚本使用：</p>
<pre><code>Usage:
        bash CentOSNET.sh       -c/--centos [dist-version]
                                -v/--ver [32/i386|64/amd64]
                                --ip-addr/--ip-gate/--ip-mask
                                -yum/--mirror
                                -a/-m</code></pre><p><strong>3、全自动安装</strong></p>
<pre><code>#使用默认镜像全自动安装
bash CentOSNET.sh -c 6.8 -v 64 -a

#使用自定义镜像全自动安装
bash CentOSNET.sh -c 6.9 -v 64 -a --mirror &apos;http://mirror.centos.org/centos&apos;

#使用自定义镜像自定义网络参数全自动安装
#bash CentOSNET.sh -c 6.9 -v 64 -a --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x --mirror &apos;http://mirror.centos.org/centos&apos;</code></pre><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><ul>
<li>如果看到“<code>Starting graphical installation</code>”或者类似表达，则表示正在安装。</li>
<li>正常情况下只需要耐心等待安装完成即可。</li>
<li>如果需要查看进度，使用<code>VNC Viewer</code>(或者其他<code>VNC</code>连接工具)。</li>
<li>连接提示中的<code>IP</code>地址：端口进行连接(端口一般为<code>1</code>或者<code>5901</code>)。</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS纯净版CentOS 6.9系统一键安装脚本</title>
    <url>/1717/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul>
<li>一个最纯净最原装的<code>CentOS</code>系统。</li>
<li>感谢<code>Vicer</code>大佬的文章Debian(Ubuntu)网络安装/重装一键脚本非常好用。</li>
<li>看得似懂非懂后，仿照着折腾了一下<code>CentOS</code>的重装脚本。</li>
<li>我自己不用<code>CentOS</code>，脚本水平也比较渣，希望大佬们能够继续帮忙完善脚本，提高下兼容性，多添加些版本啥的。</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>条件：</strong><code>GRUB</code>引导、非<code>OVZ</code>虚拟化。<br><strong>架构：</strong><code>X64</code><br>执行命令：</p>
<pre><code>wget https://xiaofd.github.io/centos.sh &amp;&amp; bash centos.sh
#备用地址
wget https://www.southcat.net/usr/down/centos_6.9.sh &amp;&amp; bash centos_6.9.sh</code></pre><p>安装时间（<code>Vultr 2.5</code>刀机器重装大概15分钟）用户：<code>root</code>，密码：<code>xiaofd.win</code></p>
<h2 id="测试说明"><a href="#测试说明" class="headerlink" title="测试说明"></a>测试说明</h2><ul>
<li><code>Debian</code>系列貌似跑不起来，脚本不好使。</li>
<li>测试了<code>Vultr</code>下重装，<code>Ubuntu 16.04</code>、<code>Ubuntu 14.04</code>、<code>CentOS 6</code>、<code>CentOS  
7</code>都能正常重装到<code>CentOS 6.9</code>。</li>
<li>测试了<code>Azure</code>下重装，<code>Ubuntu 16.04</code>能正常重装到<code>CentOS 6.9</code>（耗时较长，大概20~30分钟）。</li>
<li>测试了<code>AWS-LightSail</code>下重装，<code>Ubuntu 16.04</code>能正常重装到<code>CentOS 6.9</code>（耗时较长，大概20~30分钟）。</li>
<li>手里也没啥别的炸鸡了，其他就不测了，目测没啥幺蛾子的小鸡鸡都能成功装上。</li>
</ul>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p><code>X86</code>架构需要替换下源地址，应该可以用，其他版本不确定直接替换能不能用~</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS通过安装CPULimit来限制CPU使用率</title>
    <url>/1513/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们手上经常有很多廉价的<code>VPS</code>，有时候使用某些软件应用的时候，会出现<code>CPU</code>跑满的情况，而长时间跑满会被<code>VPS</code>商家停掉，所以这里我们需要想办法来限制进程<code>CPU</code>使用率，这里就说个教程。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>cpulimit</code>命令的工作原理是为进程预设一个<code>cpu</code>占用率上限，并实时监控进程是否超出此上限，而做出动态调整。从而可以控制进程的<code>cpu</code>使用率的上限值。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用<code>root</code>运行命令：</p>
<pre><code>#debian/ubuntu系统
apt install -y cpulimit

#RHEL/Centos/Fedora系统
yum install epel-release cpulimit</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><pre><code>cpulimit -h
Usage: cpulimit [OPTIONS...] TARGET
   OPTIONS
      -l, --limit=N          percentage of cpu allowed from 0 to 100 (required)//cpu限制的百分比
      -v, --verbose          show control statistics//显示版本号
      -z, --lazy             exit if there is no target process, or if it dies//如果限制的进程不存在了，则退出。
      -i, --include-children limit also the children processes//包括子进程。
      -h, --help             display this help and exit //帮助，显示参数
   TARGET must be exactly one of these:
      -p, --pid=N            pid of the process (implies -z) //进程的pid
      -e, --exe=FILE         name of the executable program file or path name //可执行程序
      COMMAND [ARGS]         run this command and limit it (implies -z)</code></pre><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p><strong>1、常规用法</strong></p>
<pre><code>#限制firefox使用30% cpu利用率
cpulimit -e firefox -l 30

#限制进程号1313的程序使用30%cpu利用率
cpulimit -p 1313 -l 30

#限制绝对路径下该软件的cpu利用率
cpulimit -e /usr/local/nginx/sbin/nginx -l 50</code></pre><p><strong>2、限制所有进程的CPU使用率</strong><br>默认情况下<code>cpulimit</code>只能对已经存在的进程进行限制，但是设置此脚本为随机自启动即可，它会对所有进程（包括新建进程）进行监控并限制（<code>3</code>秒检测一次，<code>CPU</code>限制为<code>75％</code>）</p>
<p>这就可以防止因为<code>CPU</code>使用率过高而被<code>ban</code>了！</p>
<pre><code>#!/bin/bash 

while true ; do

  id=`ps -ef | grep cpulimit | grep -v &quot;grep&quot; | awk &apos;{print $10}&apos; | tail -1`

  nid=`ps aux | awk &apos;{ if ( $3 &gt; 75 ) print $2 }&apos; | head -1`

  if [ &quot;${nid}&quot; != &quot;&quot; ] &amp;&amp; [ &quot;${nid}&quot; != &quot;${id}&quot; ] ; then

    cpulimit -p ${nid} -l 75 &amp;

    echo &quot;[`date`] CpuLimiter run for ${nid} `ps -ef | grep ${nid} | awk &apos;{print $8}&apos; | head -1`&quot; &gt;&gt; /root/cpulimit-log.log

  fi

  sleep 3

done</code></pre><p>保存到 <code>/root/cpulimit.sh</code>，会自动生成日志文件 <code>/root/cpulimit-log.log</code>。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><pre><code>l、后面限制的cpu使用量，要根据实际的核心数量而成倍减少。40%的限制生效在1核服务器中，如果是双核服务器，则应该限制到20%，四核服务器限制到10%以此类推。
2、root用户可以限制所有的进程，普通用户只能限制自己有权限管理的进程。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS通过安装CurlFtpFS来挂载FTP，可用来备份文件</title>
    <url>/1848/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>VPS</code>挂载网盘的方法，之前说了很多了，现在再说个挂载<code>FTP</code>的方法，就是通过安装<code>CurlFtpFS</code>来挂载<code>FTP</code>，不仅可以增加<code>VPS</code>空间，还可以进行文件备份，关键可以挂载虚拟主机的<code>FTP</code>空间，这是很不错的，毕竟虚拟主机便宜，而且出现数据丢失的情况也是很小的。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Debian</code>、<code>Ubuntu</code>、<code>CentOS</code></p>
<p><strong>1、安装CurlFtpFS</strong></p>
<pre><code>#CentOS系统
yum -y install epel-release
yum -y install curlftpfs

#Debian/Ubuntu系统
apt-get install curlftpfs -y</code></pre><p><strong>2、挂载FTP</strong></p>
<pre><code>#创建目录，路径及名称自己定
mkdir /home/ftp
#挂载FTP
curlftpfs ftp.yourserver.com /home/ftp -o user=username:password</code></pre><p>参数说明：</p>
<pre><code>ftp.yourserver.com  #FTP地址
/home/ftp  #本地目录
username  #FTP用户名
password  #FTP密码</code></pre><p><strong>3、检查</strong><br>输入<code>df -h</code>命令查看下是否挂载成功。<br><img src="https://www.southcat.net/usr/picture/CurlFtpFS_ftp.png" alt="请输入图片描述" title="请输入图片描述"><br>最后可以将文件上传至本地文件夹<code>/home/ftp</code>进行备份了。</p>
<p>如果在挂载的时候出现如下错误：</p>
<pre><code>fuse: mountpoint is not empty
fuse: if you are sure this is safe, use the &apos;nonempty&apos; mount option</code></pre><p>最简单的解决方法就是让挂载的本地目录变成空文件夹即可。</p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>Linux通过安装davfs2来挂载webdav网盘</li>
<li>CentOS通过安装davfs2来挂载Dropbox网盘</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS纯净版Debian/Ubuntu/CentOS/Windows系统一键安装脚本</title>
    <url>/2037/</url>
    <content><![CDATA[<p><strong>说明：</strong>本脚本是<code>Vicer</code>大佬将其<code>Debian</code>、<code>Ubuntu</code>、<code>CentOS</code>、<code>DD Windows</code>一键安装脚本合体了，使用更加方便了。</p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul>
<li>适用于由<code>GRUB</code>引导的<code>CentOS</code>、<code>Ubuntu</code>、<code>Debian</code>系统。</li>
<li>使用官方发行版去掉模板预装的软件。</li>
<li>同时也可以解决内核版本与软件不兼容的问题。</li>
<li>只要有<code>root</code>权限,还您一个纯净的系统。</li>
</ul>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul>
<li>Linux VPS纯净版CentOS系统一键安装脚本</li>
<li>Linux VPS无限制一键全自动DD安装Windows脚本</li>
<li>Linux VPS纯净版Debian/Ubuntu系统一键安装脚本</li>
</ul>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul>
<li>全自动安装默认<code>root</code>密码：<code>MoeClub.org</code>，安装完成后请立即更改密码。</li>
<li>能够全自动重装<code>Debian</code>/<code>Ubuntu</code>/<code>CentOS</code>等系统。</li>
<li>同时提供<code>dd</code>镜像功能，例如：全自动无救援dd安装windows系统。</li>
<li>全自动安装<code>CentOS</code>时默认提供<code>VNC</code>功能，可使用<code>VNC Viewer</code>查看进度。</li>
<li><code>VNC</code>端口为<code>1</code>或者<code>5901</code>，可自行尝试连接。(成功后<code>VNC</code>功能会消失)。</li>
<li>目前只支持<code>CentOS 6.9</code>及以下版本(<code>5.x</code>、<code>6.x</code>)。</li>
<li>特别注意：<code>OpenVZ</code>构架不适用。</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、安装依赖</strong></p>
<pre><code>#Debian/Ubuntu
apt-get install -y xz-utils openssl gawk file

#RedHat/CentOS
yum install -y xz openssl gawk file</code></pre><p>如果出现错误请运行：</p>
<pre><code>#Debian/Ubuntu
apt-get update

#RedHat/CentOS
yum update</code></pre><p><strong>2、下载脚本及使用</strong></p>
<pre><code>wget --no-check-certificate -qO InstallNET.sh &apos;https://moeclub.org/attachment/LinuxShell/InstallNET.sh&apos; &amp;&amp; chmod a+x InstallNET.sh
#脚本备份
https://www.southcat.net/usr/shell/InstallNET.sh</code></pre><p>使用方法：</p>
<pre><code>Usage:
        bash InstallNET.sh      -d/--debian [dist-name]
                                -u/--ubuntu [dist-name]
                                -c/--centos [dist-version]
                                -v/--ver [32/i386|64/amd64]
                                --ip-addr/--ip-gate/--ip-mask
                                -apt/-yum/--mirror
                                -dd/--image
                                -a/-m

# dist-name：发行版本代号
# dist-version：发行版本号
# -apt/-yum/--mirror：使用定义镜像
# -a/-m：询问是否能进入VNC自行操作。 -a为不提示(一般用于全自动安装)， -m为提示。</code></pre><p><strong>3、使用示例</strong></p>
<pre><code>#使用默认镜像全自动安装
bash InstallNET.sh -d 8 -v 64 -a

#使用自定义镜像全自动安装
bash InstallNET.sh -c 6.9 -v 64 -a --mirror &apos;http://mirror.centos.org/centos&apos;

# 以下示例中,将X.X.X.X替换为自己的网络参数.
# --ip-addr :IP Address/IP地址
# --ip-gate :Gateway   /网关
# --ip-mask :Netmask   /子网掩码

#使用自定义镜像自定义网络参数全自动安装
#bash InstallNET.sh -u 16.04 -v 64 -a --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x --mirror &apos;http://archive.ubuntu.com/ubuntu&apos;

#使用自定义网络参数全自动dd方式安装
#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &apos;https://moeclub.org/get-win7embx86-auto&apos;

#使用自定义网络参数全自动dd方式安装存储在谷歌网盘中的镜像
#bash InstallNET.sh --ip-addr x.x.x.x --ip-gate x.x.x.x --ip-mask x.x.x.x -dd &quot;$(echo &quot;https://drive.google.com/open?id=0B8SvBXZ3I5QMcUduTMJEanRkMzQ&quot; |xargs -n1 bash &lt;(wget --no-check-certificate -qO- &apos;https://moeclub.org/get-gdlink&apos;))&quot;</code></pre><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p><strong>1、在dd安装系统镜像时</strong></p>
<ul>
<li>在你的机器上全新安装，如果你有<code>VNC</code>，可以看到全部过程。</li>
<li>在<code>dd</code>安装镜像的过程中，不会走进度条(进度条一直显示为<code>0%</code>)，完成后将会自动重启。</li>
<li>分区界面标题一般显示为：“<code>Starting up the partitioner</code>“。</li>
<li>使用谷歌网盘中的镜像：Google Drive网盘文件直链获取一键脚本。</li>
</ul>
<p><strong>2、在全自动安装CentOS时</strong></p>
<ul>
<li>如果看到 “<code>Starting graphical installation</code>” 或者类似表达，则表示正在安装。</li>
<li>正常情况下只需要耐心等待安装完成即可。</li>
<li>如果需要查看进度，使用<code>VNC Viewer</code>(或者其他<code>VNC</code>连接工具)。</li>
<li>连接提示中的<code>IP</code>地址：端口进行连接，(端口一般为<code>1</code>或者<code>5901</code>)。</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux/Windows系统安装最新版JAVA教程</title>
    <url>/1443/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多时候都需要用到<code>JAVA</code>环境，这里博主就记录下安装过程。</p>
<p><strong>1、获取最新版JAVA下载链接</strong><br>首先进入<code>JAVA</code>下载地址：点击进入，再点击中间框框右下角的<code>JDK Download</code>按钮进入下载界面，然后点击<code>Accept License Agreement</code>，这时候就可以点击一下对应版本的<code>JAVA JDK</code>包，浏览器下载器会弹出来文件下载，这时候就可以复制下载链接了。</p>
<p>注意别直接将<code>jdk</code>包的超链接当成下载链接，这样下载会出错的。</p>
<p><strong>2、Linux安装</strong><br>这里<code>CentOS</code>、<code>Debian</code>、<code>Ubuntu</code>等常见<code>Linux</code>系统都可以用以下方法安装<code>JAVA</code>。</p>
<pre><code>#下载JAVA JRE包，将你获取的链接替换到后面，下载链接通常为http://xx/jdk_linux-x64.tar.gz?AuthParam=xx
wget -O jdk.tar.gz http://xx/jdk_linux-x64.tar.gz?AuthParam=xx
#解压文件
tar -zxvf jdk.tar.gz
#记住这时候解压出的文件夹路径，比如目前为/root/jdk1.8.0_191</code></pre><p>编辑<code>/etc/profile</code>文件：</p>
<pre><code>nano /etc/profile</code></pre><p>在后面添加以下代码：</p>
<pre><code>#前2行后面的参数为解压出的JAVA文件夹路径
JAVA_HOME=/root/jdk1.8.0_191
export JRE_HOME=/root/jdk1.8.0_191/jre 
export CLASSPATH=$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH 
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</code></pre><p>使配置生效：</p>
<pre><code>source /etc/profile</code></pre><p>查看<code>JAVA</code>版本：</p>
<pre><code>java -version</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>live/msn等微软绝版邮箱详细的注册教程</title>
    <url>/1954/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>live</code>、<code>msn</code>绝版邮箱注册教程网上有很多，不过很多都失效了，这里就分享个可以用的申请教程，博主刚刚用来申请了个<code>live.com</code>邮箱，一般<code>msn</code>、<code>live.in</code>、<code>live.ie</code>、只要是微软的都可以，方法都一样。</p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>1、先注册一个<code>outlook</code>邮箱(地区选择美国)。</p>
<p>2、注册别名邮箱，地址：<a href="https://account.live.com/AddAssocId。" target="_blank" rel="noopener">https://account.live.com/AddAssocId。</a></p>
<p>3、使用谷歌浏览器，右键选择检查。并选中输入框后的<code>outlook.com</code>， 往上找一个<code>ID</code>为<code>SingleDomain</code>的标签。<br><img src="https://www.southcat.net/usr/picture/live_msn(1).png" alt="请输入图片描述" title="请输入图片描述"><br>修改<code>value</code>为：<code>live.com</code>。<br><img src="https://www.southcat.net/usr/picture/live_msn(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>4、在输入框输入<code>aaa</code>(随意)，然后添加别名(也就是正常提交)。这时再次右键选择检查，寻找<code>ID</code>为<code>SingleDomain</code>的标签，复制其<code>value</code>值(系统自动加密<code>live.com</code>为密文)。<br><img src="https://www.southcat.net/usr/picture/live_msn(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>5、选中输入框后的<code>live.com</code>(具体看之前改的什么)，然后找到<code>ID</code>为<code>idSingleDomain</code>的标签。<br><img src="https://www.southcat.net/usr/picture/live_msn(4).png" alt="请输入图片描述" title="请输入图片描述"><br>找到<code>@live.com</code>替换成刚刚复制的<code>value</code>值，再确认。<br><img src="https://www.southcat.net/usr/picture/live_msn(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>6、最后正常输入想要注册的邮箱就行了。<br><img src="https://www.southcat.net/usr/picture/live_msn(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP一键安装后Nginx不能自启的解决方法</title>
    <url>/1519/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候可能遇到安装lnmp后，重启vps的时候，nginx未启动，这样就还需要手动启动，很麻烦，不过我们可以手动将nginx启动项添加到到开机启动文件中就可以了。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><pre><code>echo &quot;/etc/init.d/nginx start &quot; &gt;&gt;/etc/rc.local</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP一键安装包V1.5测试版已发布</title>
    <url>/1904/</url>
    <content><![CDATA[<p><strong>说明：</strong>前两天军哥发布了<code>lnmp1.5</code>测试版本，距离上一次的<code>lnmp1.4</code>测试版刚好一年，一般经常用军哥的<code>lnmp</code>的人都知道版本都是一年一更，博主基本一直在用，这次主要新增加<code>PHP7.2</code>支持、增加<code>Maria DB 10.2</code>、替换问题较多的<code>certbot</code>使用<code>acme.sh</code>不需要过多的依赖生成<code>SSL</code>更丝滑、<code>lnmp</code>管理脚本增加<code>pathinfo</code>选项、<code>lnmp.conf</code>中增加<code>PHP</code>模块<code>fileinfo</code>选项和<code>Nginx lua</code>模块选项、增加一些常用伪静态、<code>Apache 2.4</code>支持到<code>http2</code>、<code>Nginx</code>默认支持<code>stream</code>等功能。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>运行以下命令：</p>
<pre><code>#请注意最后的参数，需要其他模式就写哪个如lnmpa或lamp，./install.sh不带任何参数默认为LNMP模式。
wget -c http://soft.vpser.net/lnmp/lnmp1.5beta.tar.gz &amp;&amp; tar zxf lnmp1.5beta.tar.gz &amp;&amp; cd lnmp1.5 &amp;&amp; ./install.sh lnmp</code></pre><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>LNMP状态管理：lnmp {start|stop|reload|restart|kill|status}
LNMP各个程序的状态管理：lnmp {nginx|mysql|mariadb|php-fpm|pureftpd} {start|stop|reload|restart|kill|status}
虚拟主机管理：lnmp vhost {add|list|del}
数据库管理：lnmp database {add|list|edit|del}
FTP用户管理：lnmp ftp {add|list|edit|del|show}
SSL添加：lnmp ssl add</code></pre><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><pre><code>增加PHP 7.2支持；
增加MariaDB 10.2支持；
增加PHP模块fileinfo选项，安装或升级时可以选择是否安装开启，选项在安装包目录下lnmp.conf中 Enable_PHP_Fileinfo 默认为n不开启，如有安装设置为y；
增加Nginx lua模块选项，安装或升级时可以选择是否为nginx安装开启lua，选项在安装包目录下lnmp.conf中 Enable_Nginx_Lua 默认为n不开启，如有安装设置为y；
增加thinkphp、yii2、codeigniter、laravel伪静态；
增加使用acme.sh生成SSL证书，移除官方的certbot；
增加Nginx编译参数，默认开启stream；
增加Apache 2.4支持http2；
增加旧版本Ubuntu中国地区源；
增加添加虚拟主机时pathinfo可选项；
增加certbot升级到acme.sh的一键升级功能命令为./upgrade1.x-1.5.sh ssl按提示输入和原来SSL虚拟主机一样配置的信息就可以；
修复深度Deepin桌面版问题；
移除PHP禁用函数scandir；
调整默认PHP版本为5.6；
调整默认Apache版本为2.4；
调整MySQL/MariaDB安装时未输入密码由原来密码设为root调整为lnmp.org#随机数字 ；
调整MySQL国内下载源为科大的；
调整LAMP模式下SSL添加过程增加中间证书可选项；
其他一些功能优化及调整......</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP之php内存和nginx之CPU优化</title>
    <url>/1458/</url>
    <content><![CDATA[<p><strong>一、如果你使用的是lnmp默认的安装的php5.2.17sp1版本</strong></p>
<pre><code>/usr/local/php/etc/php-fpm.conf #优化的文件</code></pre><p>找到<code>&lt;value name=&quot;max_children&quot;&gt;</code>，按你的内存容量修改PHP进程的数量，一般128内存开启6个，256内存开启16个。这样能保证，在PHP大并发的情况下不会502错误。</p>
<p><strong>二、如果您升级到了5.3.x版本</strong></p>
<pre><code>/usr/local/php/etc/php-fpm.conf #优化的文件
pm.max_children = 32 #最多运行数量
pm.start_servers = 16 #开机启动数量
pm.min_spare_servers = 16 #最小运行数量
pm.max_spare_servers = 32 #最大运行数量</code></pre><p>需要同时修改这些数字，您可以自行定义，参考上述内容即可。</p>
<p><strong>三、Nginx性能优化CPU参数worker_cpu_affinity使用说明</strong><br>如果2核心：</p>
<pre><code>worker_processes     2;
worker_cpu_affinity 0101 1010;


worker_processes     4;
worker_cpu_affinity 0001 0010 0100 1000;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP删除和关闭Mysql日志</title>
    <url>/1503/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般mysql会生成一堆的mysql.bin.*的一堆的日志，针对我们这种小网站来说，确实没什么实际大的用处，还有可能塞满我们的硬盘。一般情况下，很多人都会选择关了它，反正有每个小时的mysqldump导出记录备档。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>删除Mysql日志</strong><br>第一、日志文件地址</p>
<pre><code>/usr/local/mysql/var/</code></pre><p>在上面的文件夹中，有几M到几个G不等，我们也不要急于全部删除，可以选择几个大的删除就可以。</p>
<p>第二、重启MYSQL</p>
<pre><code>/etc/init.d/mysql restart</code></pre><p><strong>关闭Mysql日志</strong><br>第一、找到文件 /etc/my.cnf 注释下面2行文件：</p>
<pre><code>#log-bin=mysql-bin
#binlog_format=mixed</code></pre><p>当然，如果你非要留着，也可以缩短日志的保存时间，默认是10天。</p>
<pre><code>expire_logs_days = 10 #修改此项即可


/etc/init.d/mysql restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP环境下php-fpm启动失败的解决方法</title>
    <url>/1728/</url>
    <content><![CDATA[<p><strong>说明：</strong>今天修改网站配置文件后执行命令<code>lnmp restart</code>重启<code>lnmp</code>时候，出现<code>Gracefully shutting down php-fpm ................. failed. Use force-quit</code>错误提示，在网上找了下方法就给解决了，这里说一下。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>执行如下命令即可：</p>
<pre><code>killall php-fpm
lnmp restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP环境下使用CDN后获取访客真实IP的方法</title>
    <url>/1607/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多时候为了加速网站快速访问都会上<code>CDN</code>，这样一来程序和<code>nginx</code>日志获取到的访客<code>IP</code>地址就是<code>CDN</code>的节点<code>IP</code>而不是用户的真实<code>IP</code>了，这时候可以通过设置<code>Nginx</code>下的<code>ngx_realip</code>的模块是可以解决这个问题的，一般这个模块是默认没有添加的，不过军哥的<code>lnmp</code>是有这个模块的，所以设置会简单很多，这里说下具体方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>以军哥的<code>lnmp</code>为例，只需要添加些参数即可！</p>
<p>1、在<code>lnmp</code>安装目录<code>/root/lnmp</code>下找到<code>lnmp.conf</code>并编辑<code>Nginx_Modules_Options</code>。</p>
<pre><code>Nginx_Modules_Options=&apos;--with-http_realip_module&apos;</code></pre><p>保存后执行<code>./upgrade.sh nginx</code>来升级下<code>Nginx</code>就可以了。</p>
<p>2、找到网站配置文件，即<code>/usr/local/nginx/conf/vhost/xx.com.conf</code>并编辑。在任意一个<code>location</code>里加入以下参数：</p>
<pre><code>set_real_ip_from  103.138.13.10/34;
set_real_ip_from  107.63.132.0/29;
set_real_ip_from  108.62.120.0/26;
set_real_ip_from  45.113.252.0/26;
real_ip_header    X-Forwarded-For;
real_ip_recursive on;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP中一些隐藏的安装脚本及目录详解</title>
    <url>/2069/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主一直在用军哥的<code>LNMP</code>一键脚本搭建网站，使用的人挺多的，而很多人只知道脚本是安装<code>Nginx</code>、<code>MySQL</code>/<code>MariaDB</code>、<code>PHP</code>、<code>phpMyAdmin</code>等建站主要环境的，却不知道该安装包的其它功能脚本，这里就说下隐藏的其它软件脚本及安装目录。</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p><strong>1、lnmp安装</strong></p>
<pre><code>#这里用的是最新测试版1.5
wget -c http://soft.vpser.net/lnmp/lnmp1.5beta.tar.gz &amp;&amp; tar zxf lnmp1.5beta.tar.gz &amp;&amp; cd lnmp1.5 &amp;&amp; ./install.sh lnmp</code></pre><p><strong>2、安装脚本</strong><br>以下脚本均在解压后的<code>lnmp</code>文件夹里执行，如<code>/root/lnmp1.5</code>，且适用于<code>1.2+</code>版本。</p>
<pre><code>#安装FTP服务器PureFTPd
cd /root/lnmp1.5 &amp;&amp; ./pureftpd.sh

#安装redis
cd /root/lnmp1.5 &amp;&amp; ./addons.sh install redis

#安装eAccelerator
cd /root/lnmp1.5 &amp;&amp; ./addons.sh install eaccelerator

#安装memcached
cd /root/lnmp1.5 &amp;&amp; ./addons.sh install memcached

#安装xcache
cd /root/lnmp1.5 &amp;&amp; ./addons.sh install xcache
安装时需选择版本和设置密码，http://IP/xcache/进行管理，用户名admin

#安装opcache
cd /root/lnmp1.5 &amp;&amp; ./addons.sh install opcache
进入http://IP/ocp.php进行管理，且与eaccelerator冲突

#安装imageMagick
cd /root/lnmp1.5 &amp;&amp; ./addons.sh install imageMagick
路径：/usr/local/imagemagick/bin

#安装ionCube
cd /root/lnmp1.5 &amp;&amp; ./addons.sh install ionCube</code></pre><p>如果要卸载的话，请将<code>install</code>换成<code>uninstall</code>即可。</p>
<p><strong>3、管理脚本</strong></p>
<pre><code>#lnmp卸载脚本，卸载前请备份好数据库，且不会删除网站文件
cd /root/lnmp1.5 &amp;&amp; ./uninstall.sh

#安装多PHP版本，适用于1.4+
cd /root/lnmp1.5 &amp;&amp; ./install.sh mphp

#重置MySQL/MariaDB的root密码
cd /root/lnmp1.5/tools &amp;&amp; ./reset_mysql_root_password.sh

#日志切割脚本
cd /root/lnmp1.5/tools &amp;&amp; ./cut_nginx_logs.sh

#删掉禁用函数
cd /root/lnmp1.5/tools &amp;&amp; ./remove_disable_function.sh

#防跨目录移除工具
cd /root/lnmp1.5/tools &amp;&amp; ./remove_disable_function.sh</code></pre><h2 id="安装目录"><a href="#安装目录" class="headerlink" title="安装目录"></a>安装目录</h2><p><strong>1、LNMP相关软件安装目录</strong></p>
<pre><code>Nginx目录：/usr/local/nginx/
MySQL目录：/usr/local/mysql/
MySQL数据库所在目录：/usr/local/mysql/var/
MariaDB 目录：/usr/local/mariadb/
MariaDB数据库所在目录：/usr/local/mariadb/var/
PHP目录：/usr/local/php/
多PHP版本目录：/usr/local/php5.5/，其他版本前面5.5的版本号换成其他即可
PHPMyAdmin目录：/home/wwwroot/default/phpmyadmin/，强烈建议将此目录重命名为其不容易猜到的名字。
默认网站目录：/home/wwwroot/default/
Nginx日志目录：/home/wwwlogs/
虚拟主机配置文件所在目录：/usr/local/nginx/conf/vhost/
PureFtpd目录：/usr/local/pureftpd/
PureFtpd web管理目录：/home/wwwroot/default/ftp/
Proftpd目录：/usr/local/proftpd/
Redis目录：/usr/local/redis/</code></pre><p><strong>2、LNMP相关配置文件位置</strong></p>
<pre><code>Nginx主配置(默认虚拟主机)文件：/usr/local/nginx/conf/nginx.conf
添加的虚拟主机配置文件：/usr/local/nginx/conf/vhost/域名.conf
MySQL配置文件：/etc/my.cnf
PHP配置文件：/usr/local/php/etc/php.ini
php-fpm配置文件：/usr/local/php/etc/php-fpm.conf
PureFtpd配置文件：/usr/local/pureftpd/etc/pure-ftpd.conf
PureFtpd MySQL配置文件：/usr/local/pureftpd/pureftpd-mysql.conf
Proftpd配置文件：/usr/local/proftpd/etc/proftpd.conf
Proftpd用户配置文件：/usr/local/proftpd/etc/vhost/xx.conf
Redis配置文件：/usr/local/redis/etc/redis.conf</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Linux VPS锐速破解版一键安装脚本</title>
    <url>/1514/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>锐速(<code>serverspeeder</code>)，是一款<code>TCP</code>加速程序，能够增强VPS服务器连接的稳定性，且有效的提高服务器的带宽利用率，进而提高访问速度。由于官方宣布之前永久免费的锐速已经不再免费，于是各路大神纷纷出动破解锐速，这里分享的是由<code>91yun</code>博主带来的锐速破解版本，本人已经用了很久了，很稳定。</p>
<p><strong>特别提示：</strong>锐速不支持<code>Openvz</code>！</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>CentOS</code>，<code>Ubuntu</code>和<code>Debian</code>。</p>
<p><strong>Github地址：</strong><a href="https://github.com/91yun/serverspeeder" target="_blank" rel="noopener">https://github.com/91yun/serverspeeder</a></p>
<p>使用<code>root</code>用户登录，运行以下命令：</p>
<pre><code>wget -N --no-check-certificate https://github.com/91yun/serverspeeder/raw/master/serverspeeder.sh &amp;&amp; bash serverspeeder.sh</code></pre><p><strong>锐速破解版卸载方法：</strong></p>
<pre><code>chattr -i /serverspeeder/etc/apx* &amp;&amp; /serverspeeder/bin/serverSpeeder.sh uninstall -f


/serverspeeder/bin/serverSpeeder.sh status</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP环境配置SSL证书最简单教程</title>
    <url>/1518/</url>
    <content><![CDATA[<p>现在腾讯提供免费的一年证书，地址：<a href="https://console.qcloud.com/ssl" target="_blank" rel="noopener">https://console.qcloud.com/ssl</a></p>
<p><strong>nginx重定向http自动跳转https</strong></p>
<pre><code>server
    {
        listen 80;
        server_name www.southcat.net;
        index index.html index.htm index.php;
        rewrite ^/(.*)$ https://www.southcat.net/$1 permanent;
    }</code></pre><p><strong>配置ssl证书</strong></p>
<pre><code>server
    {
        listen 443;
        #listen [::]:80;
        server_name www.southcat.net;
        index index.html index.htm index.php;
        root  /app;

        ssl on;
        ssl_certificate /ssl/www.southcat.net.crt; #ssl.crt文件位置
        ssl_certificate_key /ssl/www.southcat.net.key;  #ssl.key文件位置

        include typecho.conf;
        #error_page   404   /404.html;
        include enable-php-pathinfo.conf;

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
        {
            expires      30d;
        }

        location ~ .*\.(js|css)?$
        {
            expires      12h;
        }

        location ~ /\.
        {
            deny all;
        }

        access_log off;
    }</code></pre><p>最后重启<code>VPS</code>即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP环境下，利用Nginx反代Google网站的方法</title>
    <url>/1865/</url>
    <content><![CDATA[<p><strong>说明：</strong>反代的方法有很多，之所以选择<code>lnmp</code>的原因是方便，因为利用<code>Nginx</code>反代网站需要<code>--with-http_sub_module</code>拓展，而军哥的<code>lnmp</code>已经自动添加了，<code>1.4</code>版本的<code>lnmp</code>也可以自动签发<code>SSL</code>证书，不需要我们额外来申请，所以挺方便的，基本只要直接编辑配置文件即可！这里说下方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>本方法主要以反代<code>Google</code>为主，想反代其它网站的可以照葫芦画瓢，或者参考：利用Nginx反代来简单镜像HTTP(S)网站的方法，照搬配置文件就可以了。</p>
<p>首先得添加域名及自动签发<code>SSL</code>证书。然后编辑域名配置文件<code>/usr/local/nginx/conf/vhost/your.com.conf</code>。</p>
<pre><code>server {
        listen 443;
        server_name 你的域名;
        #为了安全考虑（例如IP被Q），强烈建议使用HTTPS
        ssl on;
        ssl_protocols TLSv1.2;
        ssl_certificate ~/站点证书
        ssl_certificate_key ~/站点证书密钥
        location / {
            proxy_pass                          https://www.google.com;
            #把返回的302重定向的域名替换成你的。这里关闭
            proxy_redirect                      off;
            #替换指定字符串
            sub_filter                          www.google.com 你的域名;
            #字符串只进行一次替换，即只替换第一个被匹配的字符串。这里关闭。
            sub_filter_once                     off;
            #指定头部：
            proxy_set_header  Host              &quot;www.google.com&quot;;
            proxy_set_header  Referer           $http_referer;
            proxy_set_header  X-Real-IP         $remote_addr;
            proxy_set_header  User-Agent        $http_user_agent;
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto https;
            #防止谷歌返回压缩的内容，因为压缩的内容无法替换字符串
            proxy_set_header  Accept-Encoding   &quot;&quot;;
            proxy_set_header  Accept-Language   &quot;zh-CN&quot;;
            #把cookie的作用域替换成你的域名
            proxy_cookie_domain                 www.google.com 你的域名;
            #传固定的cookie给谷歌，是为了禁止即时搜索，因为开启即时搜索无法替换内容
            proxy_set_header  Cookie            &quot;PREF=ID=047808f19f6de346:U=0f62f33dd8549d11:FF=2:LD=en-US:NW=1:TM=1325338577:LM=1332142444:GM=1:SG=2:S=rE0SyJh2W1IQ-Maw&quot;;
            #启用proxy_cache缓存
            proxy_cache                 proxycache;
            proxy_cache_valid           304 2h;
            proxy_cache_valid           403 444 2h;
            proxy_cache_valid           404 2h;
            proxy_cache_valid           500 502 2h;
            proxy_cache_use_stale       invalid_header http_404 http_500 http_502;
            proxy_cache_lock            on;
            proxy_cache_lock_timeout    5s;
        }
}</code></pre><p>这里启用了<code>proxy_cache</code>这个缓存。一般<code>lnmp</code>已经编译了<code>proxy_cache</code>，需要我们编辑下<code>nginx.conf</code>文件才能使用。</p>
<pre><code>#在http里面添加如下代码即可
http {
    proxy_cache_path  /home/cache levels=1:2 keys_zone=proxycache:60m max_size=120m inactive=2h use_temp_path=on;
    proxy_temp_path   /home/temp;
    proxy_cache_key   $host$uri;
}</code></pre><p><strong>注意：</strong>记得将配置文件里的<code>www.google.com</code>替换成你<code>VPS</code>所在国家的<code>Google</code>官网，不然可能会反代不成功，只出现域名跳转的情况。</p>
<p>之前是监控的<code>443</code>端口，然后再做域名的<code>301</code>跳转，将<code>80</code>端口的<code>http</code>跳转到<code>https</code>，编辑<code>conf</code>配置文件增加以下代码。</p>
<pre><code>server {                            
    listen 80;                            
    server_name southcat.net;
    return 301 https://www.southcat.net$request_uri;
     }</code></pre><p>最后重启<code>Nginx</code>即可。</p>
<pre><code>lnmp nginx restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP环境下WordPress后台只显示一个主题预览的解决方法</title>
    <url>/1751/</url>
    <content><![CDATA[<p><strong>说明：</strong>刚搭建了个<code>wordpress</code>博客玩玩，上传主题后，发现在外观-主题那里只能看到现在使用中的主题的预览图而看不到其它的，但是已经安装的主题都在，使用的环境是军哥的<code>LNMP1.4</code>，百度一下后发现可能的原因就是<code>php</code>已禁用<code>scandir</code>函数，而军哥的<code>LNMP</code>从<code>0.9</code>版本开始禁用了<code>scandir</code>函数，导致了<code>wordpress</code>无法缓存主题列表。所以后台无法显示安装好的<code>wordpress</code>主题，只显示当前使用的一个主题。解决方法就是把禁用的<code>scandir</code>函数恢复就可以了。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>修改<code>php.ini</code>解决，这里用的是军哥<code>lnmp</code>，文件位置<code>/usr/local/php/etc</code>。</p>
<pre><code>disable_functions=passthru,exec,system,chroot,scandir,...</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>lnmp环境typecho伪静态及后台404配置</title>
    <url>/1520/</url>
    <content><![CDATA[<p>首先找到域名配置文件，一般位于<code>/usr/local/nginx/conf/vhost/your.com.conf</code></p>
<p><strong>1.添加伪静态：</strong><br>打开这个文件，找到<code>include none.conf</code>改成<code>include typecho.conf</code></p>
<p><strong>2.增加pathinfo功能：</strong><br>找到<code>enable-php.conf</code>改成<code>enable-php-pathinfo.conf</code></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>LNMP网站出现No input file specified解决办法</title>
    <url>/1517/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候更改网站目录后，没修改<code>.user.ini</code>的时候网站会出现<code>No input file specified</code>该错误。这时可以通过修改<code>.user.ini</code>文件中的网站目录路径来解决。</p>
<p><strong>提示：</strong><code>.user.ini</code>文件无法直接修改，而且是隐藏文件，用WinSCP工具的话，需要打开隐藏文件选项，建议用vim编辑。</p>
<p><strong>1、编辑权限</strong></p>
<pre><code>chattr -i /网站目录/.user.ini  #操作此步骤后才可编辑</code></pre><p><strong>2、重新授权</strong></p>
<pre><code>chattr +i /网站目录/.user.ini


/etc/init.d/php-fpm restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>lnmp1.4安装及部署typecho或其它博客教程</title>
    <url>/1524/</url>
    <content><![CDATA[<p><strong>提示：</strong>使用Xshell等软件操作vps或服务器的时候，如果输入有错误需要删除时，可以按住Ctrl再按Backspace键进行删除。</p>
<h2 id="lnmp1-4安装"><a href="#lnmp1-4安装" class="headerlink" title="lnmp1.4安装"></a>lnmp1.4安装</h2><p><strong>1、使用Xshell或类似的SSH工具登陆VPS或服务器</strong></p>
<p>登陆后运行：</p>
<pre><code>screen -S lnmp</code></pre><p>如果提示<code>screen: command not found</code> 命令不存在可以执行：<code>yum install screen</code> 或 <code>apt-get install screen</code>安装</p>
<p><strong>2、下载并安装LNMP一键安装包</strong><br>lnmp一键包安装地址：<a href="https://lnmp.org/install.html" target="_blank" rel="noopener">https://lnmp.org/install.html</a></p>
<pre><code>wget -c http://soft.vpser.net/lnmp/lnmp1.4.tar.gz &amp;&amp; tar zxf lnmp1.4.tar.gz &amp;&amp; cd lnmp1.4 &amp;&amp; ./install.sh lnmp</code></pre><p><strong>3、精简lnmp文件夹</strong><br>安装完成后，对于硬盘比较小的可以瘦下身多出点空间，当然硬盘大的可以无视该步骤，删掉<code>/root</code>文件夹的<code>lnmp1.4</code>安装包及<code>root/lnmp1.4/</code>中的 <code>src</code>文件夹即可，这时候应该可以多出3G左右的空间，xshell登录vps运行</p>
<pre><code>rm -rf /root/lnmp1.4.tar.gz
rm -rf /root/lnmp1.4/src</code></pre><p>或者用WinSCP软件进入VPS手动删除</p>
<p><strong>4、修改PhpMyAdmin名称</strong><br>通常为了安全，很多人会通过修改<code>PhpMyAdmin</code>名称而改变数据库进入地址，可以用WinSCP登录vps修改，途径<code>/home/wwwroot/default</code>，将<code>PhpMyAdmin</code>文件夹修改成你喜欢的名称xx，此时登录PhpMyAdmin数据库的地址会变成<code>服务器ip/xx</code></p>
<h2 id="网站部署"><a href="#网站部署" class="headerlink" title="网站部署"></a>网站部署</h2><p><strong>1、添加网站</strong></p>
<pre><code>lnmp vhost add </code></pre><p>按步骤填对，具体可参考：<a href="https://lnmp.org/faq/lnmp-vhost-add-howto.html" target="_blank" rel="noopener">https://lnmp.org/faq/lnmp-vhost-add-howto.html</a></p>
<p><strong>2、域名解析</strong><br>记得去域名注册商或者接管商将网站解析到服务器ip</p>
<p><strong>3、添加ssl</strong></p>
<pre><code>lnmp ssl add</code></pre><p>申请过ssl证书的请将ssl文件上传到服务器，然后选择部署自己的证书，如果没有ssl的可以选择自动签发ssl证书。</p>
<h2 id="部署typecho"><a href="#部署typecho" class="headerlink" title="部署typecho"></a>部署typecho</h2><p><strong>1、上传typecho到网站目录</strong><br>由于typecho安装包很小，这时候为了方便可以直接用WinSCP来操作，这时候从官网（<a href="http://typecho.org/download）下载安装包，在电脑解压，通过WinSCP把解压的文件上传到`/home/wwwroot/www.xxx.com`及你的网站目录。" target="_blank" rel="noopener">http://typecho.org/download）下载安装包，在电脑解压，通过WinSCP把解压的文件上传到`/home/wwwroot/www.xxx.com`及你的网站目录。</a></p>
<p><strong>2、添加数据库</strong><br>访问<code>服务器ip/xx</code>（xx为PhpMyAdmin文件夹修改后的名称），登录用户 <code>root</code>，密码 <code>xx</code>（安装lnmp时候输入的密码），进入后新建typecho博客的数据库，如<code>typecho</code>，当然也可以是其它，到时候安装typecho的时候自己看着填对</p>
<p><strong>3、安装typecho</strong><br>直接访问网站进行安装typecho即可，此时可能因为伪静态的问题，访问不了后台，可参考lnmp环境 typecho 伪静态及后台404配置来解决问题</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>lowendscript：适用于64MB内存的LNMP一键安装包</title>
    <url>/1478/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>lowendscript lnmp一键安装脚本是由外国兄弟David Pennington制作的，优点:最大化节省资源开销。相比军哥的lnmp一键安装包要简单、轻巧的多，磁盘空间占用也少。安装lowendscript lnmp一键包适用于Ubuntu、Debian系统，综合其他版本Linux系统来讲，Debian 32位系统下安装相对占用资源最少。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、下载lowendscript安装脚本</strong></p>
<pre><code>wget --no-check-certificate https://raw.github.com/Xeoncross/lowendscript/master/setup-debian.sh</code></pre><p><strong>2、为setup-debian.sh设置可执行权限</strong></p>
<pre><code>chmod +x setup-debian.sh</code></pre><p><strong>3、添加dotdeb源</strong></p>
<pre><code>./setup-debian.sh dotdeb # 非必须，如果你安装的是Ubuntu系统 </code></pre><p><strong>4、设置debian系统，会安装一些小工具。</strong></p>
<pre><code>./setup-debian.sh system</code></pre><p>此命令会自动完成以下几个操作:</p>
<pre><code>update_timezone
remove_unneeded
update_upgrade
install_dash     
install_vim      安装vim编辑器
install_nano     安装nano编辑器
install_htop     比top好用的进程查看工具
install_mc
install_iotop    I/O监视工具
install_iftop    网卡实时流量监测工具
install_syslogd  系统日志
apt_clean        清除软件包</code></pre><p><strong>5、开始安装mysql</strong>（安装完成后，mysql管理员账户、密码存放于/root/.my.cnf文件中，vi命令打开此文件即可查看到相关信息，“vi /root/.my.cnf”）</p>
<pre><code>./setup-debian.sh mysql</code></pre><p><strong>6、开始安装nginx</strong>（nginx1.4+版本）</p>
<pre><code>./setup-debian.sh nginx</code></pre><p><strong>7、开始安装PHP</strong>（自动安装配置php5.3+APC缓存；默认以php5-fpm方式运行、开启3个进程，重启php5-fpm进程执行”service php5-fpm restart”即可）</p>
<pre><code>./setup-debian.sh php</code></pre><p><strong>8、创建nginx站点</strong>（军哥LNMP一键包中的”./vhost.sh”类似，输入site 空格 yourdomain.com，不要写成其他的，否则可能会导致站点创建失败。注:网站自动创建在”/var/www/“目录下）</p>
<pre><code>./setup-debian.sh site [yourdomain.com]</code></pre><p><strong>9、创建mysql用户</strong></p>
<pre><code>./setup-debian.sh mysqluser [yourdomain.com]</code></pre><p>到这里，Debian系统的nginx+mysql+php的环境就搭建好了。</p>
<h2 id="可选安装"><a href="#可选安装" class="headerlink" title="可选安装"></a>可选安装</h2><p><strong>说明：</strong>下面只列举了常用的几个，如想了解更多，请进入最下面的项目地址<br><strong>1、安装WordPress</strong>（lowendscript集成了wordpress安装，搭建wordpress站点非常easy）</p>
<pre><code>./setup-debian.sh wordpress [yourdomain.com]</code></pre><p><strong>2、安装exim</strong>（使用exim替代sendmail）</p>
<pre><code>./setup-debian.sh exim4</code></pre><p><strong>3、安装webmin管理面板</strong></p>
<pre><code>./setup-debian.sh webmin</code></pre><p><strong>4、安装vzfree</strong>（只适用于基于openvz架构的VPS主机，用于报告正确的内存使用情况，可查看母机的内存）</p>
<pre><code>./setup-debian.sh vzfree </code></pre><p><strong>5、查看系统信息</strong></p>
<pre><code>./setup-debian.sh info</code></pre><p><strong>6、创建SSH-Keys</strong></p>
<pre><code>./setup-debian.sh sshkey [optional argument_1]</code></pre><p><strong>7、测试硬盘I/O和网络</strong></p>
<pre><code>./setup-debian.sh test</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Markdown-Temp：一款不错的在线Markdown编辑器</title>
    <url>/1722/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Markdown-Temp</code>是一款在线<code>Markdown</code>编辑器，她不仅免费开源，而且简单适用。<code>Markdown-Temp</code>适用于编写临时文档与在线分享，由小<code>z</code>博客进行开发。</p>
<h2 id="Markdown-Temp说明"><a href="#Markdown-Temp说明" class="headerlink" title="Markdown-Temp说明"></a>Markdown-Temp说明</h2><ul>
<li>编辑器使用<code>Editor.md</code></li>
<li>后端使用<code>Parsedown</code>进行解析</li>
<li>使用<code>PHP</code>语言，不需要数据库</li>
<li>使用了<code>BootStrap</code>框架</li>
</ul>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul>
<li>实时预览</li>
<li>支持导出<code>.html</code>、<code>.md</code>等格式</li>
<li>生成唯一链接方便临时分享</li>
<li>每隔<code>30</code>秒自动保存一次</li>
</ul>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><ul>
<li>大部分核心代码均使用开源程序，小<code>z</code>博客只是在已有的轮子上进行组装。</li>
<li><code>Markdown-Temp</code>不支持上传图片，若您需要插入图片请使用小<code>z</code>图床。</li>
<li><code>Markdown-Temp</code>定位与临时在线文档，每个月的10号/25号会定期对用户文档进行清理，最长可保存15天，因此打算长期保存的用户并不适用，所以建议导出<code>.html</code>或<code>.md</code>格式。</li>
</ul>
<h2 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a>其它说明</h2><p><strong>源码：</strong>Markdown-Temp</p>
<p><strong>效果图：</strong><br><img src="https://www.southcat.net/usr/picture/Markdown-Temp.jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>MCSManager开服常见问题</title>
    <url>/603/</url>
    <content><![CDATA[<p>一款很优秀的开服客户端，今天也是尝试进行开服，几个常见问题在这里记录下</p>
<p>作者地址: <a href="https://github.com/Suwings/MCSManager" target="_blank" rel="noopener">https://github.com/Suwings/MCSManager</a></p>
<h2 id="客户端提示内存溢出"><a href="#客户端提示内存溢出" class="headerlink" title="客户端提示内存溢出"></a>客户端提示内存溢出</h2><p>请检查服务器安装的java版本是否正确</p>
<h2 id="lost-connection-Disconnected"><a href="#lost-connection-Disconnected" class="headerlink" title="lost connection: Disconnected"></a>lost connection: Disconnected</h2><p>这个问题比较常见一些，编辑服务器目录 去server.propeties 里面<br>把 online-mode 改成 false，这个是由于正版验证所引发的问题</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>MCSManager：轻量级我的世界服务器管理系统安装    附：一键脚本</title>
    <url>/640/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MCSManager是一款轻量级的 Minecraft Server 控制面板 ，操作简单，并且拥有多用户系统。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Windows版本"><a href="#Windows版本" class="headerlink" title="Windows版本"></a>Windows版本</h3><p>windows版本可以使用官方提供的一键打包环境使用，java环境还是需要你手动安装一下，自行百度即可，注意下载64为的java</p>
<p>地址:<a href="http://mcsm.suwings.top/" target="_blank" rel="noopener">http://mcsm.suwings.top/</a></p>
<h3 id="Linux系统版本"><a href="#Linux系统版本" class="headerlink" title="Linux系统版本"></a>Linux系统版本</h3><h4 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h4><pre><code>wget -N --no-check-certificate https://shell.southcat.net/MCSManager/install.sh &amp;&amp; bash install.sh
#上面的指令安装完成之后输入 ~/MC 选择启动方式</code></pre><h4 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h4><p>如果你比较喜欢折腾可以选择这个方法。</p>
<h5 id="nodejs环境部署"><a href="#nodejs环境部署" class="headerlink" title="nodejs环境部署"></a>nodejs环境部署</h5><p>首先先到nodejs官方网站选择版本,网址: <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/nodejs-1024x664.png" alt=""></p>
<p>选择适合你的安装包右键复制链接</p>
<p>然后SSH链接到你的服务器</p>
<p>输入指令:</p>
<pre><code>#网址需要你替换的，截止到发文的最新版本号是v12.9.1
wget https://npm.taobao.org/mirrors/node/v12.9.1/node-v12.9.1-linux-x64.tar.xz
tar -xvf node-v12.9.1-linux-x64.tar.xz    #文件名需要替换到相应的文件

# 软连接，软连接后就可以全局访问，需要软连接node和npm
## npm 可以直接软连接到 /usr/local/bin/下
ln -s /**下载nodejs的根目录**/bin/npm /usr/local/bin/npm
## 由于自己的电脑软连接到 /usr/local/bin/下无效因此指定到 /usr/bin/ 目录下
ln -s /**下载nodejs的根目录**/bin/node /usr/bin/node

# 检查安装是否成功
npm -v
node -v</code></pre><h5 id="java环境部署"><a href="#java环境部署" class="headerlink" title="java环境部署"></a>java环境部署</h5><p>这里提供一个捷径，安装宝塔面板，然后只安装Tomcat 8 环境即可完成java环境的部署。</p>
<p>首先我们先到Oracle官网下载合适的JDK版本，网址： <a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/jak.png" alt=""></p>
<p>根据系统选择</p>
<p>使用wget指令下载</p>
<pre><code>wget 下载地址</code></pre><p>解压文件到/usr/local/目录</p>
<pre><code>tar –xvf 下载的文件名 -C /usr/local</code></pre><p>配置java变量 <code>vi /etc/profile</code></p>
<p>添加以下代码：</p>
<pre><code># java env
export JAVA_HOME=/usr/local/文件名
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export PATH=$PATH:$JAVA_HOME/bin</code></pre><p>解压之后可以<code>cd /usr/local</code>进入/usr/local目录使用ls指令查看解压出来的文件名再进行上一步的操作。</p>
<p>添加完成之后需要重新加载配置文件</p>
<pre><code>source /etc/profile</code></pre><p>然后就可以使用<code>java -version</code>指令查看版本信息</p>
<p>nodejs和java环境都配置好之后就可以开始进行安装MCSManager。</p>
<p>输入指令:</p>
<p>git clone <a href="https://github.com/Suwings/MCSManager.git" target="_blank" rel="noopener">https://github.com/Suwings/MCSManager.git</a><br>cd MCSManager<br>npm install –production<br>sudo node app.js <em>#或 sudo npm star</em></p>
<p>然后ssh就会显示相关信息</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/mcsmanager.png" alt=""></p>
<p>默认账户#master</p>
<p>默认密码123456</p>
<p>访问ip:23333 即可进行开服操作啦，具体操作下个文章会有相关介绍。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>MCSManager小白开服攻略</title>
    <url>/646/</url>
    <content><![CDATA[<p>MCSManager面板搭建请看上一个文章 <a href="https://southcat.net/640/">https://southcat.net/640/</a></p>
<p>首先通过访问IP：23333进入你的管理面板首页，输入账号密码登陆（默认账号#mstaer密码123456）</p>
<p>进入之后可以看到如下界面，</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/%E4%B8%8B%E8%BD%BD-1-1024x419.png" alt=""></p>
<p>后台首页会显示你当前服务器当前的负载状态等。</p>
<p>然后我们点击左侧的服务端管理，选择引导创建服务器开始创建你的第一个服务器</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/image-3-1024x174.png" alt=""></p>
<p>然后开始填写服务器信息</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/image-4-1024x650.png" alt=""></p>
<p>从上个文章过来的第一个Java环境路径可以忽略，一般只要正确的安装了java环境并且配置了环境变量的第一个都可以不管</p>
<p>第二个是名字，这个就不多说了</p>
<p>启动附加参数一般是不填的，内存大小如果是给别人开服的话建议填写下限制，自用一般不用限制</p>
<p>第四步的目录我们可以自行创建或是由面板自动进行生成，第五步同上，小白建议直接创建服务器就好，只修改下名称即可。</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/QQ%E6%88%AA%E5%9B%BE20190904110158-1024x88.png" alt=""></p>
<p>第六步属于整个开服最重要的过程，你需要填写你的开服核心的名称。不同版本的服务器对应不同的开服核心，可以直接从百度搜索下载，如果你要开1.12.2的服务器个人建议使用 <a href="https://github.com/PFCraft/Mohist" target="_blank" rel="noopener">Mohist</a> 核心。 这一步建议在创建完成之后再进行操作。</p>
<p>然后底部创建服务器即可。</p>
<p>我们创建完成之后会自动跳转到服务端管理页面，如果没有配置开服核心就会像下面图示的一样。</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/QQ%E6%88%AA%E5%9B%BE20190904110758.png" alt=""></p>
<p>现在我们使用winscp或是FinaShell连接到你的服务器，当然你想用Xshell这种我也拦不住你，建议使用一个带有文件管理的SSH客户端，强烈建议使用FinaShell。</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/image-5-1024x297.png" alt=""></p>
<p>然后我们来到MC服务器的目录下会发现一片空白。 如果你是使用的一键脚本请到/home/MCSManager目录找到服务器文件夹 进行操作。</p>
<p>然后我们将下载好的核心拉到服务器上，或是你使用wget指令下载</p>
<p>下载完成后复制核心文件名称，回到MCSManager面板服务端管理页面，然后点击参数进行设置，将核心名称填写到服务端文件名，比如我的是Mohist-6113d52-server.jar</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/image-6.png" alt=""></p>
<p>开服核心一定要放在端根目录里面，然后点击保存回到服务端管理页面。</p>
<p>我们点击终端可以然后可以看到如下界面</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/image-7.png" alt=""></p>
<p>这里就是一个类似SSH的界面了OP等相关设置都可以在页面底部输入相关指令进行设置。然后点击右上角开启来开启服务器。</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/image-8.png" alt=""></p>
<p>第一次开启会提示需要你同意MC服务器目录下的eula.txt文件里的内容，windows用户使用部分核心时这里会温馨的提示你中文。</p>
<p>我们打开eula.txt文件将文件里的eula=false改为eula=true即可然后返回网页端再点击一次开启即可。</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/09/image-9.png" alt=""></p>
<p>一切就绪之后，就可以看到底部已经提示运行端口是25565这里你就可以在MC里面链接你的服务器了，如果你不是正版的话这个服务器你是链接不上的。</p>
<p>如果你不是正版入户你需要修改服务端目录下的server.properties文件 将online-mode=true改为online-mode=flase 即可关闭正版验证。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>Lstu：一款简单、美观的轻量级网址缩短程序</title>
    <url>/2418/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Lstu</code>是一个使用<code>Perl</code>编写的轻量级短网址程序，还提供<code>api</code>、二维码生成、统计面板、网址导入和导出等功能，界面挺简洁的，用起来还行，这里就发个手动和<code>Docker</code>安装。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Lstu(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Lstu(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Lstu(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>Github地址：</strong><a href="https://github.com/ldidry/lstu" target="_blank" rel="noopener">https://github.com/ldidry/lstu</a></p>
<p>教程只适用于<code>Debian</code>、<code>Ubuntu</code>系统，建议使用<code>Debian 9</code>。</p>
<pre><code>#安装依赖
apt update
apt install build-essential libssl-dev zlib1g-dev libpng-dev memcached sqlite git -y
#安装cpanm
curl -L http://cpanmin.us | perl - App::cpanminus
#安装carton
cpanm Carton
#拉取源码
git clone https://github.com/ldidry/lstu.git
cd lstu
#安装lstu，这里默认使用sqlite数据库
carton install --deployment --without=test --without=postgresql --without=mysql
#复制并编辑配置文件
cp lstu.conf.template lstu.conf
nano lstu.conf</code></pre><p>这里只说下部分参数：</p>
<pre><code>#端口监听，端口自行修改，如果想使用ip访问，就把127.0.0.1改为0.0.0.0
listen =&gt; [&apos;http://127.0.0.1:8080&apos;],
#联系邮箱(必开启)
contact       =&gt; &apos;admin[at]southcat.net&apos;,
#主题修改，默认的不太好看，建议修改为如下主题
theme         =&gt; &apos;milligram&apos;,
#给统计管理加密码，下面2个参数只需要开启一个
adminpwd      =&gt; &apos;moerats&apos;,  //明文密码，直接填字母就行
hashed_adminpwd =&gt; &apos;6a3123b&apos;,  //hash密码，在ssh客户端使用echo -n moerats | sha256sum即可生成

#其它参数就自己看着修改，比如api限制，黑名单，白名单之类的。</code></pre><p>修改好了后，使用<code>ctrl+x</code>、<code>y</code>保存退出。</p>
<p>接下来，继续操作，使用命令：</p>
<pre><code>#修改Systemd配置文件，修改lstu路径为自己的，这里默认/root/lstu/，记得后面加/
sed -i -e &quot;s#/var/www/lstu/#/root/lstu/#g&quot; -e &quot;s/www-data/root/g&quot; utilities/lstu.service
#移动配置文件
cp utilities/lstu.service /etc/systemd/system/
#启动
systemctl start lstu
#开机自启
systemctl enable lstu</code></pre><p>然后就可以打开<code>ip:8080</code>开始访问了，如果想用域名访问，可以参考后面。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、构建镜像</strong></p>
<pre><code>#拉取源码
git clone https://github.com/ldidry/lstu.git
cd lstu
#复制并编辑配置文件，参数修改方法看上面的手动教程，记得将监听地址127.0.0.1改为0.0.0.0，端口不变，并且新增一个dbtype =&gt; &apos;sqlite&apos;。
cp lstu.conf.template lstu.conf
nano lstu.conf
#构建镜像，如果中途出现kill中断字眼，可能说明你内存太小了，建议添加SWAP，教程：https://www.southcat.net/archives/722/
docker build -t lstu .
#启动镜像
docker run --restart=always --name lstu -d -p 8080:8080 -v &quot;$(pwd)/lstu.conf:/home/lstu/lstu.conf&quot; -v &quot;$(pwd)/lstu.db:/home/lstu/lstu.db&quot; lstu</code></pre><p>然后就可以打开<code>ip:8080</code>开始访问了，如果想用域名访问，可以参考后面。</p>
<h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名、端口后一起复制到SSH运行！
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:8080 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Memtester一键脚本，可检测VPS真实可分配内存及超售情况</title>
    <url>/2009/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Memtester</code>是一个检测<code>VPS</code>真实可分配内存的小工具，适用于检测<code>VPS</code>超售情况。本程序检测的可分配内存指的是用户使用时最大能占用的内存量。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/FunctionClub/Memtester" target="_blank" rel="noopener">https://github.com/FunctionClub/Memtester</a></p>
<p>运行命令：</p>
<pre><code>#CentOS/RHEL系统
yum install wget -y
yum groupinstall &quot;Development Tools&quot; -y
wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/Memtester/master/memtester.cpp
gcc -l stdc++ memtester.cpp
./a.out

#Ubuntu/Debian系统
apt-get update
apt-get install wget build-essential -y
wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/Memtester/master/memtester.cpp
gcc -l stdc++ memtester.cpp
./a.out

#脚本备份
https://www.southcat.net/usr/shell/memtester.cpp</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Microsoft Office365 E3 MSDN全局管理员修改自身和用户OneDrive存储大小方法</title>
    <url>/2304/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在<code>Microsoft Office365 E3 MSDN</code>默认是每用户<code>1T</code>储存空间，包括全局管理员。虽然我们可以直接在面板设置存储为<code>5T</code>或者是其它的大小，但是由于已经存在的用户包括全局管理员都是无法直接修改现有容量，所以该修改仅对新建用户生效。特别是全局管理员自身，如果不会修改会一直是<code>1T</code>，这里就说下全局管理员修改自身和已有用户<code>OneDrive</code>存储大小方法。</p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><pre><code>该方法只适用修改全局管理员自身的5T容量，修改现有用户看方法二</code></pre><p>1、管理员先访问修改地址：<a href="https://admin.onedrive.com/#v=StorageSettings，将容量设置为`5120" target="_blank" rel="noopener">https://admin.onedrive.com/#v=StorageSettings，将容量设置为`5120</a> G<code>，然后点保存即可。  
2、接下来新建的用户都会默认为</code>5T<code>，而旧用户就必须删掉账户重建才会有</code>5T<code>，不过管理员自身是不能删除自己的，所以我们需要重新创新一个新的全局管理员并登陆，然后再删掉旧的管理员用户，这样全局管理员就是</code>5T`空间了。</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><pre><code>该方法不需要删除全局管理员就可以更改为5T，也可以直接修改现有用户的容量。</code></pre><p>1、我们先安装最新的<code>SharePoint Online Management Shell</code>→下载地址。<br>2、点击电脑左下角开始按钮，搜索<code>PowerShell</code>，然后单击<code>Windows PowerShell</code>，此时会弹出一个命令框。<br>依次输入命令：</p>
<pre><code>#adminUPN为管理员邮箱，orgName为你设置的组织名
$adminUPN=&quot;admin@moerats.onmicrosoft.com&quot;
$orgName=&quot;moerats&quot;
#该步会弹出一个窗口，会要求你输入邮箱密码
$userCredential = Get-Credential -UserName $adminUPN -Message &quot;Type the password.&quot;
Connect-SPOService -Url https://$orgName-admin.sharepoint.com -Credential $userCredential
#这里默认修改为5T，如果你要修改为其它的可自行修改，单位为M，最大可修改为5T
Set-SPOTenant -OneDriveStorageQuota 5242880
#将后面的地址修改成你的OneDrive网盘地址，地址仿照下面的即可
Set-SPOSite -Identity https://moerats-my.sharepoint.com/personal/moerats_admin_onmicrosoft_com -StorageQuota 5242880</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Merger：一个美观的微信/支付宝/PayPal等付款二维码合并程序</title>
    <url>/2390/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Merger</code>是一个使用<code>JavaScript</code>实现大部分功能的付款二维码合并程序，界面使用了渐变色，看上去很美观，你可以使用<code>Merger</code>生成一张二维码，或者直接把你的<code>Merger</code>链接发送给对方。<code>Merger</code>会通过<code>User Agent</code>识别对方的客户端，随即展示相应的内容。部署起来也是很方便的，只需要做下简单的配置，再丢到任何一个能够托管静态网页的服务里即可，这样我们可以用来搭建一个属于自己的支付(打赏)页面。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Merge_qrcode.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul>
<li>最小化的请求数，最大化的速度。</li>
<li>拥有详尽的代码注释，方便二次开发。</li>
<li>结合实际使用场景为每一种支付方式独立定制的展示样式。</li>
<li>高度可定制化，页面上一切内容均可通过简单的<code>js</code>代码更改。无需任何编程技巧。</li>
<li>除图片外的所有静态文件均默认使用<code>jsDelivr</code>分发。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/hifocus/merger" target="_blank" rel="noopener">https://github.com/hifocus/merger</a><br><strong>使用文档：</strong><a href="https://merger.hxco.dev" target="_blank" rel="noopener">https://merger.hxco.dev</a></p>
<p><strong>1、安装Git</strong></p>
<pre><code>#CentOS系统
yum install git -y

#Debian/Ubuntu系统
apt install git -y</code></pre><p><strong>2、拉取源码</strong></p>
<pre><code>git clone https://github.com/hifocus/merger.git
cd merger
#重新命名
mv merger.html index.html</code></pre><p><strong>3、编辑信息</strong><br>这里只需要编辑<code>index.html</code>文件即可，也就是修改之前的<code>merger.html</code>，使用命令：</p>
<pre><code>nano index.html</code></pre><p>大致需要修改下面几个地方：</p>
<pre><code>#支付方式，需要将你的微信、QQ、支付宝收款码图片解析成链接填入即可，解析地址：https://www.sojson.com/deqr.html，paypal直接使用个人收款链接即可。
var wechat = &quot;wxp://f2f0xFuBE5tqPeKu&quot;;
var alipay = &quot;https://qr.alipay.com/fkx01299q&quot;;
var tenpay = &quot;https://i.qianbao.qq.com/wallet/sqrcode.&quot;;
var paypal = &quot;https://paypal.me/moerats&quot;;

#昵称和头像地址
var myname = &quot;MOERATS&quot;;
var profile =&quot;https://www.southcat.net/usr/picture/rats.png&quot;;

#界面文字提示，可以默认不用修改
var title = &quot;选择你的支付方式&quot;;
var subtitle = &quot;跟随进一步的指示以向&quot; + myname + &quot;付款&quot;;

#调试模式，可以使用#注释掉
var debugmode = &quot;true&quot;;

#二维码生成api接口，直接默认即可，不过也可以替换其它接口
var qrcodeapi = &quot;https://www.zhihu.com/qrcode?url=&quot;;

#配置页面标题，更改&lt;title&gt; &lt;/title&gt;中间的内容即可。
&lt;title&gt;Merger - Merge your qrcode together. Even quicker.&lt;/title&gt;

#配置页面图标，更改href后面的图片地址即可
&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; href=&quot;https://www.southcat.net/usr/picture/rats.png&quot;&gt;</code></pre><p>到这里基本上配置完成了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>MikuTools：一款在线的小工具合集，包括各种视频/歌曲解析下载、磁力搜索等</title>
    <url>/2409/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>MikuTools</code>是一款在线的小工具合集，包括各种视频/歌曲解析下载(比如<code>youtube-dl</code>支持的网站、<code>B</code>站、今日头条、抖音等)，还有磁力搜索、收款码合并、视频转<code>GIF</code>、根据截图查找动漫、抖音生成器、贴吧<code>2017</code>以前查询、知乎免登陆查看、身份证生成/加水印等多个功能，很强大。该工具近期也开源了，不过只包括了部分无需后端的工具，更多的只能等作者慢慢添加吧，搭建也挺简单的，这里就大概说下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><strong>1、完整截图</strong></p>
<pre><code>官方地址：https://miku.tools，建议直接访问该地址使用。</code></pre><p><img src="https://www.southcat.net/usr/picture/MikuTools(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、开源截图</strong></p>
<pre><code>截图自开源项目，目前工具不是很多，喜欢折腾的可以搭建一个。</code></pre><p><img src="https://www.southcat.net/usr/picture/MikuTools(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Ice-Hazymoon/MikuTools" target="_blank" rel="noopener">https://github.com/Ice-Hazymoon/MikuTools</a></p>
<p><strong>提示：</strong>内存建议<code>1G</code>，不然会构建失败，或者小内存的添加点虚拟内存，可以直接使用<code>Swap</code>一键脚本→传送门。</p>
<p><strong>1、安装Nodejs</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y nodejs git 

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs git -y</code></pre><p><strong>2、安装yarn</strong></p>
<pre><code>npm install -g yarn</code></pre><p><strong>3、拉取项目</strong></p>
<pre><code>#拉取项目
git clone https://github.com/Ice-Hazymoon/MikuTools
#进入文件夹
cd MikuTools
#安装依赖
yarn</code></pre><p><strong>4、构建</strong></p>
<pre><code>#开发模式运行，不知道有啥用的，可以跳过，直接构建
yarn dev

#构建
yarn generate</code></pre><p>此时打包后的源码在<code>dist</code>文件夹，然后就可以将文件夹里的源码丢到自己的网站根目录直接用了。</p>
<p>如果你想提前看下效果，那这里提供一个最快的运行方法，使用命令：</p>
<pre><code>#进入打包好的文件夹
cd dist
#运行端口4567，可自行修改
python -m SimpleHTTPServer 4567</code></pre><p>然后访问<code>ip:4567</code>即可，打不开的话就检查下防火墙。</p>
<p><strong>5、使用Caddy</strong><br>如果你服务器没有任何<code>Web</code>环境，比如<code>Nginx</code>、<code>Apache</code>等，那可以直接使用<code>Caddy</code>部署一个网站。</p>
<p>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名和dist文件夹绝对路径后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;www.southcat.net {
 root /root/MikuTools/dist
 gzip
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;ww.southcat.net {
 root /root/MikuTools/dist
 tls admin@southcat.net
 gzip
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>MinerGate：在Windows、Mac、Ubuntu、安卓手机上挖矿教程</title>
    <url>/1868/</url>
    <content><![CDATA[<p><strong>说明：</strong>如今虚拟货币被炒的很厉害，导致很多人都去挖矿了，之前说过几个挖矿教程，参考：Windows一键傻瓜式免编译Monero矿机，并用CPU挖矿Monero，CentOS 7下莱特币（Litecoin）挖矿教程，今天再说个<code>MinerGate</code>，挖矿超简单，可以使用<code>CPU</code>或者<code>GPU</code>挖矿，支持挖很多矿，博主用来挖<code>Monero</code>试了下，最低提取额为<code>0.1 XMR</code>，可以直观查看收益，而且支持的系统多，适合各种人群。</p>
<p><strong>提示：</strong>最好别在<code>VPS</code>上挖矿，这样很快就会因为<code>CPU</code>长时间跑满会被停掉，个别商家会直接给你删掉。建议使用独立服务器，如果真想用<code>VPS</code>挖的，可以限制下<code>VPS</code>使用率后再挖，参考：Linux VPS通过安装CPULimit来限制CPU使用率。</p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><strong>1、在MinerGate注册账号</strong><br>官网注册：<a href="https://minergate.com/reg，需要使用代理，因为`Google`验证被`Q`。" target="_blank" rel="noopener">https://minergate.com/reg，需要使用代理，因为`Google`验证被`Q`。</a><br>程序下载：<a href="https://minergate.com/downloads/gui。" target="_blank" rel="noopener">https://minergate.com/downloads/gui。</a></p>
<p><strong>2、Windows系统安装MinerGate挖矿</strong><br>适合32位系统：Minergate V5.20<br>适合64位系统：Minergate V7.0<br>安装简单，一路回车就行。<br>安装完，打开软件，输入注册时的邮箱就可以开挖了。可以选择你需要挖的矿。<br><img src="https://www.southcat.net/usr/picture/MinerGate(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/MinerGate(2).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>3、MAC系统安装MinerGate挖矿</strong><br>需<code>10.9</code>以上、<code>64</code>位系统，软件下载：Minergate V7.0</p>
<p><strong>4、Ubuntu系统安装MinerGate挖矿</strong><br>需<code>16.04</code>以上、<code>64</code>位系统。<br>官方推荐<code>Ubuntu</code>下挖矿效率可以达到<code>60%</code>以上的效果，强烈推荐使用！</p>
<p>运行命令：</p>
<pre><code>curl -L -o minergate-cli-release.deb https://minergate.com/download/deb-cli &amp;&amp; dpkg -i minergate-cli-release.deb
screen -S mine
minergate-cli -user YOUR-EMAI -fcn+xmr 4</code></pre><p>命令说明：</p>
<pre><code>YOUR-EMAI：你的注册邮箱
-fcn+xmr 3：用4个核挖FCN+XMR
-bcn 2：用2个核挖BCN（可额外添加其他矿）</code></pre><p><strong>5、安卓手机安装MinerGate挖矿</strong><br>最新安卓版是<code>2.4</code>，本地下载：minergate.miner_2.4.apk</p>
<h2 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h2><p><strong>1、使用机器的最高效率</strong><br>我自己的实验，<code>CPU</code>和<code>GPU</code>使用<code>50%</code>的资源，效果最好。</p>
<p><strong>2、查看收益</strong><br>动态更新：<a href="https://minergate.com/internal" target="_blank" rel="noopener">https://minergate.com/internal</a></p>
<p><strong>3、CPU和GPU算力查看</strong><br><a href="http://monerobenchmarks.info/list.php" target="_blank" rel="noopener">http://monerobenchmarks.info/list.php</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Miniflux：自建私有RSS订阅工具，可多用户使用</title>
    <url>/1805/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Miniflux</code>网站是一款免费的<code>RSS</code>订阅工具，空间支持<code>apache</code>、<code>PHP</code>、<code>Mysql</code>即可。支持<code>RTL</code>(<code>Right to Left</code>)语言，自动更新功能，支持多个用户，每个都有自己的<code>SQLite</code>数据。</p>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul>
<li>提供<code>Fever API</code>和自身的<code>API</code>。</li>
<li>可同步到<code>Pinboard</code>/<code>Wallabag</code>/<code>Shaarli</code>/<code>Instapaper</code>。</li>
<li>可导出、导入<code>OPML</code>。</li>
<li>支持中文。</li>
</ul>
<p><img src="https://www.southcat.net/usr/picture/Miniflux(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、下载安装</strong><br>源码下载：Miniflux-v1.2.3.zip</p>
<p>安装简单，下载并上传源码、创建数据库、修改<code>config.php</code>中的数据库信息，浏览器中输入域名即可安装。</p>
<p><strong>2、设置更新</strong><br>1、自动同步<br>使用的是<code>cronjob</code>。</p>
<pre><code>crontab -e</code></pre><p>添加如下代码（<code>/path/to/miniflux</code>为<code>miniflux</code>安装的绝对目录。请有选择的使用下面的同步命令。）：</p>
<pre><code># 每4小时更新所有订阅
0 */4 * * *  cd /path/to/miniflux &amp;&amp; php cronjob.php &gt;/dev/null 2&gt;&amp;1

# 每次更新10条最新消息
0 */4 * * *  cd /path/to/miniflux &amp;&amp; php cronjob.php --limit=10 &gt;/dev/null 2&gt;&amp;1

# 每60分钟更新所有订阅 (最多同步120条，每个订阅8条).
* */4 * * *  cd /path/to/miniflux &amp;&amp; php cronjob.php --call-interval=4 --update-interval=60 &gt;/dev/null 2&gt;&amp;1</code></pre><p>2、手动同步<br>不支持或者不会设置<code>cronjob</code>的，可直接登录进入<code>Miniflux</code>，点击右上角的订阅 ，然后点击全部刷新。<br><img src="https://www.southcat.net/usr/picture/Miniflux(2).png" alt="请输入图片描述" title="请输入图片描述"><br>3、直接浏览同步<br>浏览器输入：<code>https://www.xx.com/cronjob.php?call-interval=4&amp;update-interval=60&amp;token=XXXXX</code>，<code>XXXXX</code>替换为你的<code>API token</code>。<br>你的<code>API token</code>在：设置——接口——<code>Miniflux API</code>下的<code>API token</code>。<br><img src="https://www.southcat.net/usr/picture/Miniflux(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Minio：一款高性能的分布式对象存储服务器，带分享功能</title>
    <url>/2123/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Minio</code>是一个基于<code>Apache License v2.0</code>开源协议的对象存储服务。它兼容亚马逊<code>S3</code>云存储服务接口，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器/虚拟机镜像等，而一个对象文件可以是任意大小，从几<code>kb</code>到最大<code>5T</code>不等。且<code>Minio</code>足够轻便，可与应用程序捆绑在一起，类似于<code>NodeJS</code>，<code>Redis</code>和<code>MySQL</code>。</p>
<p><strong>官方网站：</strong><a href="https://minio.io" target="_blank" rel="noopener">https://minio.io</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Minio(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Minio(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>1、安装</strong></p>
<pre><code>wget https://dl.minio.io/server/minio/release/linux-amd64/minio -P /usr/local/bin/
chmod +x /usr/local/bin/minio
minio server /data</code></pre><p>后面的<code>/data</code>为存储目录，且在根目录下。如果你想建立更多存储目录，使用命令：</p>
<pre><code>minio server /data1 /data2 /data3 /data4</code></pre><p>然后会输出登录地址、<code>Accesskey</code>、<code>Secretkey</code>等信息。<br><img src="https://www.southcat.net/usr/picture/Minio(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后进入登录地址，输入<code>Accesskey</code>、<code>Secretkey</code>就可以进去了。<br><img src="https://www.southcat.net/usr/picture/Minio(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、开机自启</strong><br>新建<code>systemd</code>配置文件，适用<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>，使用命令：</p>
<pre><code>#输入你的运行命令，去掉开头的minio即可
minio=&quot;server /data&quot;
#将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/minio.service &lt;&lt;EOF
[Unit]
Description=minio
After=network.target

[Service]
Type=simple
ExecStart=$(command -v minio) ${minio}
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>然后启动并设置开机自启：</p>
<pre><code>systemctl start minio
systemctl enable minio</code></pre><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6系统
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu系统
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong></p>
<pre><code>docker run --restart=always --name minio -d \
-v /data:/data \
-p 9000:9000 \
minio/minio server /data</code></pre><p><code>/data</code>为存储文件夹。</p>
<p>然后再使用命令：</p>
<pre><code>head -8 /data/.minio*/config/config.json</code></pre><p>就可以获取<code>accessKey</code>和<code>secretKey</code>值，访问地址为<code>ip:9000</code>。</p>
<p>最后访问不了的记得打开防火墙端口，<code>CentOS</code>系统开启防火墙<code>9000</code>端口，命令如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 9000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=9000/tcp --permanent
firewall-cmd --reload</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>MKOnlineMusicPlayer 开源的在线音乐播放器</title>
    <url>/593/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MKOnlineMusicPlayer 是一款开源的基于 <code>Meting</code> 的在线音乐播放器。具有音乐搜索、播放、下载、歌词同步显示、个人网易云音乐播放列表同步等功能。</p>
<p>前端界面参照 QQ 音乐网页版进行布局，同时采用了流行的响应式设计，无论是在PC端还是在手机端，均能给您带来原生 app 般的使用体验。</p>
<h2 id="页面截图"><a href="#页面截图" class="headerlink" title="页面截图"></a>页面截图</h2><p><a href="https://tva1.sinaimg.cn/large/006srDtYly1ffqxu72p2zj311y0hlqcl.jpg" target="_blank" rel="noopener"><img src="https://tva1.sinaimg.cn/large/006srDtYly1ffqxu72p2zj311y0hlqcl.jpg" alt="MKOnlinePlayer v2.3 发布 &amp; v2.32更新"></a></p>
<p>主界面</p>
<p><a href="https://tva1.sinaimg.cn/large/a15b4afegy1fjdkc4i8m5j211y0hkgue.jpg" target="_blank" rel="noopener"><img src="https://tva1.sinaimg.cn/large/a15b4afegy1fjdkc4i8m5j211y0hkgue.jpg" alt="MKOnlinePlayer v2.3 发布 &amp; v2.32更新"></a></p>
<p>歌单界面</p>
<h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><p>php 5.4+, curl_exec, file_get_contents, json_decode, openssl_encrypt</p>
<h2 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h2><p><strong>GitHub</strong> <a href="https://github.com/mengkunsoft/MKOnlineMusicPlayer" target="_blank" rel="noopener">https://github.com/mengkunsoft/MKOnlineMusicPlayer</a></p>
]]></content>
      <categories>
        <category>Source</category>
      </categories>
  </entry>
  <entry>
    <title>MKOnlineMusicPlayer：一款开源的基于Meting的在线音乐播放器</title>
    <url>/1862/</url>
    <content><![CDATA[<p><strong>说明：</strong>今天一直在找一款绚丽，且功能强大的音乐播放器源码来替代博客的音乐<code>WEB</code>界面，最终找到了<code>MKOnlineMusicPlayer</code>，是一款基于<code>Meting</code>的在线音乐播放器，界面看上去很漂亮，可以同步网易云音乐歌单，且播放器音乐来自于<code>QQ</code>音乐，网易云音乐，虾米音乐，百度音乐，酷狗音乐，可以指定音乐平台搜索音乐，还可以直接下载，获取外链等，很强大，就分享一下。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>MKOnlineMusicPlayer</code>是一款开源的基于<code>Meting</code>的在线音乐播放器。具有音乐搜索、播放、下载、歌词同步显示、个人网易云音乐播放列表同步等功能。</p>
<p>前端界面参照<code>QQ</code>音乐网页版进行布局，同时采用了流行的响应式设计，无论是在<code>PC</code>端还是在手机端，均能给您带来原生<code>app</code>般的使用体验。</p>
<h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><strong>在线演示：</strong><a href="http://lab.mkblog.cn/music/" target="_blank" rel="noopener">http://lab.mkblog.cn/music/</a><br><strong>GitHub地址：</strong><a href="https://github.com/mengkunsoft/MKOnlineMusicPlayer" target="_blank" rel="noopener">https://github.com/mengkunsoft/MKOnlineMusicPlayer</a><br><strong>下载地址：</strong>点击下载</p>
<h2 id="界面欣赏"><a href="#界面欣赏" class="headerlink" title="界面欣赏"></a>界面欣赏</h2><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><pre><code>#运行环境
php5.4+, curl_exec, file_get_contents, json_decode, openssl_encrypt

#兼容性
本播放器设计支持IE9及以上的现代浏览器。并且已在Chrome、firefox、IE11等浏览器测试使用正常。

#歌曲
播放器中的歌曲来自各大音乐平台，歌曲版权归各大平台享有。请支持正版音乐。</code></pre><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><pre><code>#歌单读取失败-404
本程序需要上传至网站空间(服务器)使用，不支持在本地打开。

#歌单读取失败-200
请确保你的服务器支持PHP ，并且PHP版本&gt;=5.4。

#歌单页封面显示不出来
请打开api.php，将第十行的define(&apos;HTTPS&apos;, true); 修改为define(&apos;HTTPS&apos;, false);。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>mmPlayer：一款基于Vue的自适应Web在线音乐播放器</title>
    <url>/2397/</url>
    <content><![CDATA[<p><strong>说明：</strong>一两年前博主曾分享过一个美观的在线音乐播放器<code>MKOnlineMusicPlayer</code>→传送门，不过作者早已停止了维护，最近有小伙伴推荐了<code>mmPlayer</code>，一个使用<code>Vue</code>全家桶打造自适应<code>Web</code>音乐播放器，模仿<code>QQ</code>⾳乐⽹页版界⾯，主要以为<code>PC</code>端为主，移动端只做相应适配(未做歌词显⽰)，现已实现播放器、歌词滚动、排⾏榜、搜索、播放历史、同步⽹易云歌单六⼤功能。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/mmPlayer.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>播放器</li>
<li>快捷键操作</li>
<li>歌词滚动</li>
<li>正在播放</li>
<li>排行榜</li>
<li>歌单详情</li>
<li>搜索</li>
<li>播放历史</li>
<li>查看评论</li>
<li>同步网易云歌单</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/maomao1996/Vue-mmPlayer" target="_blank" rel="noopener">https://github.com/maomao1996/Vue-mmPlayer</a></p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y nodejs git screen 

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs git screen -y</code></pre><p><strong>2、运行播放器</strong></p>
<pre><code>git clone https://github.com/maomao1996/Vue-mmPlayer.git mmPlayer
cd mmPlayer
#安装依赖
npm install
#开发者运行
npm run serve</code></pre><p>访问地址为<code>ip:8080</code>，不过这里是用来调试的，先放着不动，然后再把后端服务器搭建好。</p>
<p>为了避免出现不必要的问题，这里就不直接使用项目中的源码了，直接拉取最新的<code>API</code>。</p>
<pre><code>git clone https://github.com/Binaryify/NeteaseCloudMusicApi.git
cd NeteaseCloudMusicApi
#安装依赖
npm install
#运行
node app.js

#或者后台运行
screen -dmS api node app.js</code></pre><p>后端地址为<code>ip:3000</code>，如果想改其它端口，比如<code>5555</code>，启动命令为<code>set PORT=5555 &amp;&amp; node app.js</code>。</p>
<p><strong>3、修改并打包</strong><br>这里只说下常见的几个修改地方，比如标题、后端<code>api</code>地址修改什么的。</p>
<pre><code>#修改后端api
路径src/config.js，修改const URL = &apos;http://ip:3000&apos;

#修改标题和提示话语
路径src/App.vue和src/components/mm-header/mm-header.vue，自己找关键词自行修改吧</code></pre><p>这里如果你想使用<code>https</code>访问该音乐播放器，那还需要使用<code>https</code>域名反代该<code>api</code>地址，然后将反代后的<code>https</code>域名填进去。</p>
<p>接下来再打开<code>ip:8080</code>查看修改效果，不过一般不在本地是用不了的，所以只看标题和提示啥的就行。</p>
<p>确定没啥问题了，就开始打包，使用<code>Ctrl+C</code>断开运行，使用命令：</p>
<pre><code>npm run build</code></pre><p>然后打包后的源码在<code>dist</code>文件夹，这时候就可以将文件夹里的源码丢到自己的网站根目录就可以直接用了，记得后端地址不要挂就行。</p>
<p>最后如果你只是想玩玩，那这里提供一个最快的运行方法，使用命令：</p>
<pre><code>#进入打包好的文件夹
cd dist
#运行端口4567，可自行修改
python -m SimpleHTTPServer 4567</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>mPing：一键测试服务器回程ping脚本</title>
    <url>/1879/</url>
    <content><![CDATA[<p><strong>说明：</strong>超级<code>ping</code>可以很方便的测试各地到服务器延迟，而<code>mping</code>则可以测试服务器回程到各地的延迟，这里就发个一键测试服务器回程<code>ping</code>脚本，由小<code>z</code>大佬写的。</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>脚本很简单，执行下面的命令即可：</p>
<pre><code>wget https://raw.githubusercontent.com/helloxz/mping/master/mping.sh
bash mping.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>MySSL：一个很详细的SSL测试工具网站</title>
    <url>/1798/</url>
    <content><![CDATA[<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Myurl：一个简洁开源的短网址程序</title>
    <url>/1802/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Myurl</code>取名我的网址也有墨渊网址的意思！由<code>AE</code>博客出品。</p>
<p><code>Myurl</code>基于<code>php</code>+<code>mysql</code>实现的网址缩短服务，程序主要靠<code>api.php</code>生成，前台是个静态页面，自己也可以进行美化！！</p>
<p>前台使用的乐视短网址的板子，看起来很简单。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Myurl.jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li><p>将程序上传至网站根目录。</p>
</li>
<li><p>将<code>install.sql</code>上传至数据库。</p>
</li>
<li><p>修改<code>config.php</code>数据库配置。</p>
</li>
<li><p><code>nginx</code>添加伪静态规则。</p>
<p>location / {</p>
<pre><code>index index.php index.html;
if (!-e $request_filename)
{
        rewrite ^/(.+)$ /do.php?uid=$1 last;
}</code></pre><p>}</p>
</li>
</ol>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Music-dl：一个音乐平台聚合搜索工具，支持下载QQ音乐、网易云、酷狗音乐等</title>
    <url>/2403/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前发过一个视频下载工具<code>Annie</code>→传送门，这里又找到了个音乐下载工具<code>Music-dl</code>，一个基于<code>Python3</code>的命令行工具，可以从多个网站搜索和下载音乐，方便寻找音乐，解决不知道哪个网站有版权的问题。目前支持<code>QQ</code>音乐、网易云音乐、虾米音乐、酷狗音乐和百度音乐，不过不能获取付费歌曲，总体使用还算不错。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Music-dl.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>部分歌曲支持无损音乐</li>
<li>优先搜索高品质音乐(<code>flac</code>-&gt;<code>320K</code>-&gt;<code>128K</code>)</li>
<li>支持<code>HTTP</code>和<code>SOCKS</code>代理</li>
<li>支持多线程搜索</li>
<li>支持搜索结果去重和排序</li>
<li>支持搜索关键字高亮</li>
<li>支持下载歌词和封面(部分)</li>
</ul>
<h2 id="安装Python3"><a href="#安装Python3" class="headerlink" title="安装Python3"></a>安装Python3</h2><p><strong>1、Linux安装</strong><br><code>CenOS 6</code>系统：</p>
<pre><code>#安装EPEL
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
#安装Python3
yum install python34 -y
#安装pip3
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py</code></pre><p><code>CenOS 7</code>系统：</p>
<pre><code>#安装EPEL
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#安装Python3
yum install python36 -y
#安装pip3
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py</code></pre><p><code>Debian</code>/<code>Ubuntu</code>系统：</p>
<pre><code>apt update
apt install python3-pip python3-setuptools python3-dev build-essential -y</code></pre><p><strong>2、Windows安装</strong><br>这里为了方便操作就不使用<code>CMD</code>了，直接使用<code>PowerShell</code>，需要的条件<code>PowerShell 5+</code>和<code>.NET Framework 4.5+</code>。</p>
<p>先在电脑左下角程序搜索框输入<code>PowerShell</code>，然后双击<code>Windows PowerShell</code>工具，再输入以下命令查看版本：</p>
<pre><code>$PSVersionTable.PSVersion</code></pre><p><code>Major</code>为版本号，一般目前常用电脑<code>Windows 10</code>符合条件，<code>Windiows 7</code>还需要升级，大致步骤如下：</p>
<pre><code>1、安装.Net 4.5.2全量包
下载地址：https://www.southcat.net/usr/down/powershell/NDP452-KB2901907-x86-x64-AllOS-ENU.exe

2、升级PowerShell的补丁包
32位下载地址：https://www.southcat.net/usr/down/powershell/Win7-KB3191566-x86.zip
64位下载地址：https://www.southcat.net/usr/down/powershell/Win7-KB3191566-x64.zip</code></pre><p>接下来安装一个命令行安装工具<code>Scoop</code>，使用命令：</p>
<pre><code>iex (new-object net.webclient).downloadstring(&apos;https://get.scoop.sh&apos;)</code></pre><p>再安装<code>Python3</code>：</p>
<pre><code>scoop install python</code></pre><p>该命令会默认给你安装<code>python 3</code>最新版本。</p>
<h2 id="安装Music-dl"><a href="#安装Music-dl" class="headerlink" title="安装Music-dl"></a>安装Music-dl</h2><p>以下方式选择一种即可，使用命令：</p>
<pre><code>#使用pip安装
pip3 install pymusic-dl

#从最新源码安装
git clone https://github.com/0xHJK/music-dl.git
cd music-dl
python3 setup.py install</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用命令：</p>
<pre><code>music-dl [OPTIONS]
#可用参数
Options:
  --version            Show the version and exit.
  -k, --keyword TEXT   Keyword
  -s, --source TEXT    Supported music source: qq netease kugou baidu xiami
                       flac
  -c, --count INTEGER  Number of search results
  -o, --outdir TEXT    Output directory
  -x, --proxy TEXT     Proxy (e.g. http://127.0.0.1:1087)
  -m, --merge          对搜索结果去重和排序（默认去重）
  -v, --verbose        Verbose mode
  -l, --lyrics         同时下载歌词
  -p, --picture        同时下载封面
  --help               Show this message and exit.</code></pre><p>说明：</p>
<pre><code>默认搜索qq netease kugou baidu xiami flac，每个数量限制为5，保存目录为当前目录。
指定序号时可以使用1-5 7 10的形式。
默认对搜索结果排序和去重，排序顺序按照歌手和歌名排序，当两者都相同时保留最大的文件。
无损音乐歌曲数量较少，如果没有无损会显示320K或128K。
支持http和socks代理，格式形如-x http://127.0.0.1:1087或-x socks5://127.0.0.1:1086</code></pre><p>比如搜索许嵩关键词，使用命令：</p>
<pre><code>music-dl -k 许嵩</code></pre><p>下载歌词，目前只支持百度音乐：</p>
<pre><code>music-dl -l -k 许嵩</code></pre><p>其它命令参数可以参考上面。</p>
<pre><code>echo &apos;export LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8&apos; &gt;&gt; /etc/profile
source /etc/profile</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>NameSilo注册/转入/续费域名后取消及退款方法</title>
    <url>/1949/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>NameSilo</code>是一家国外很火的域名商，自带隐私保护，价格也便宜，支持支付宝/<code>PayPal</code>等付款，首次注册和转入域名都可以使用优惠码便宜<code>1</code>美元，优惠码<code>Namesilo_1</code>。由于很多人误操作，可能需要取消/退款，这里就说下方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、域名注册</strong><br>域名注册后<code>3</code>天内取消注册才能退款，且你的账户之前没有过取消及退款。取消地址：点击进入，找到你要取消注册的订单号码，再点击“取消”栏中的红色“<code>X</code>”就可以了。</p>
<p><strong>2、域名转移</strong><br>一般在转入未成功前都可以立马取消并退款，转移成功后如果订单存在而且有取消那个状态也是可以退款的，不过一般很快就因为各种消失就不可以退了。取消地址：点击进入，找到下面转移的订单就可以取消了。</p>
<p><strong>3、域名续费</strong><br>域名续费<code>3</code>天内可以取消并退款，取消意味着永久删除域名，取消时请慎重考虑，取消地址：点击进入，找到续费订单，进入点取消即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Netch：一款开源的网络游戏加速工具</title>
    <url>/2422/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Netch</code>是一款今天开源的网络游戏加速器，支持<code>Socks5</code>、<code>55R</code>、<code>V2</code>等协议，<code>UDP NAT FullCone</code>及指定进程加速不需要难维护的<code>IP</code>规则，差不多功能上和SSTAP差不多，不过听说加速体验效果比后者要更好，甚至堪比一些付费的加速器，当然前提需要你的线路给力，不然加速就没意义了，这里就分享下，具体效果就需要自行体验了。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/netchx/Netch" target="_blank" rel="noopener">https://github.com/netchx/Netch</a></p>
<p><strong>下载地址：</strong><a href="https://github.com/netchx/Netch/releases" target="_blank" rel="noopener">https://github.com/netchx/Netch/releases</a></p>
<p>这里就说下大概使用演示，由于博主没有下海外游戏，所以先拿国产的<code>世纪佳缘3</code>来测试一下。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Nginx环境下对部分网站做防盗链设置及外链的跳转</title>
    <url>/1766/</url>
    <content><![CDATA[<p><strong>说明：</strong>对于<code>Nginx</code>防盗链的设置，之前发过一篇文章：Linux VPS下Nginx与Apache环境防盗链设置方法，而这个方法就是连所有的网站都屏蔽了，有时候并不适合有些网站，现在再分享一个<code>Nginx</code>限制部分网站外链权限的方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>以下代码均在站点配置文件添加即可！</p>
<p><strong>1、屏蔽部分网站和IP</strong></p>
<pre><code>if ($http_referer ~* abcd.com|bcde.org|cdef.me|103.35.13.4|235.35.3.2)
{
    rewrite ^/ https://www.google.com/logo.png;
 }</code></pre><p>意思是屏蔽那些网站或<code>IP</code>段的外链请求，并且替换图片为<code>https://www.google.com/logo.png</code>，为何还要屏蔽<code>IP</code>段呢? 因为好多大人网站会直接采用<code>IP</code>地址访问，所以加上了这个匹配规则。</p>
<p><strong>2、设置部分网站跳转</strong></p>
<pre><code>if ($http_referer ~* abcd.com|bcde.org|cdef.me)
{
  rewrite ^(.*)$ https://blog.southcat.net.com$1 permanent;
 }</code></pre><p>可以将以上的网址访问过来链接自动跳转到<code>https://blog.southcat.net</code>上，其他网站外链过来的话连接不变，这样可以把一部分访问量很大的网站流量转移到其他服务器上。</p>
<p><strong>3、设置部分文件夹跳转</strong></p>
<pre><code>if ($http_referer ~* abcd.com|bcde.org|cdef.me)
{
  rewrite ^/picture/(.*)$ https://blog.southcat.net/picture/$1 permanent;
 }</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Nginx环境使用auth_basic密码保护wordpress后台登录界面</title>
    <url>/1572/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在很多使用<code>wordpress</code>的人，或多或少都会出现后台被登录很多次的现象，运气不好就被进去了，通常大家都会通过修改<code>wp-login</code>文件来保护<code>wordpress</code>后台，但是这种方法有个不方便的地方就是每次<code>WP</code>升级就又要重改一遍，感觉很麻烦，不过使用<code>Nginx</code>的<code>auth_basic</code>基本<code>http</code>验证功能可以保护<code>web</code>目录下的文件，于是我们就可以使用此文件来保护<code>wp-login.php</code>文件，效果就是进入后台之前，还需要验证成功，这样感觉很有效。这里以军哥的<code>lnmp</code>环境为例。<br><img src="https://www.southcat.net/usr/picture/nginxyz.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>更多设置请参考：Nginx给网站添加用户认证配置（ Basic HTTP authentication）</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、生成用户名密码</strong><br>进入网站：<a href="http://tool.oschina.net/htpasswd，然后输入用户名密码后选择`Crypt`加密算法。在`vps`上的`/home`目录下新建一个`htpasswd`文件，然后编辑`htpasswd`文件将刚才生成的用户名密码复制进去。可以通过`Ftp`工具完成，也可以执行这个命令：" target="_blank" rel="noopener">http://tool.oschina.net/htpasswd，然后输入用户名密码后选择`Crypt`加密算法。在`vps`上的`/home`目录下新建一个`htpasswd`文件，然后编辑`htpasswd`文件将刚才生成的用户名密码复制进去。可以通过`Ftp`工具完成，也可以执行这个命令：</a></p>
<pre><code>#以下3种加密任选其一，记得修改用户名rats和密码moerats
#crypt加密
printf &quot;rats:$(openssl passwd -crypt moerats)\n&quot; &gt;&gt; /home/htpasswd

#apr1加密
printf &quot;rats:$(openssl passwd -apr1 moerats)\n&quot; &gt;&gt; /home/htpasswd

#MD5加密
printf &quot;rats:$(openssl passwd -1 moerats)\n&quot; &gt;&gt; /home/htpasswd</code></pre><p><strong>2、修改网站conf文件</strong><br>这里我们用<code>vim</code>命令编辑，或者直接用<code>WinSCP</code>工具修改</p>
<pre><code>vim /usr/local/nginx/conf/vhost/southcat.net.conf   </code></pre><p>下面一段加到<code>include enable-php.conf;</code>后面</p>
<pre><code>location = /wp-login.php {
auth_basic &quot;Please enter your username and password&quot;;
auth_basic_user_file /home/htpasswd;
fastcgi_pass unix:/tmp/php-cgi.sock;
fastcgi_index wp-login.php;
include fastcgi.conf;
}</code></pre><p>主要修改<code>auth_basic_user_file</code>这一行后面为你的密码文件位置就可以了。</p>
<p><strong>3、重启Nginx生效</strong></p>
<pre><code>/etc/init.d/nginx restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Nginx环境开启ssl后强制https 301全部指向www的方法</title>
    <url>/1567/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前说过LNMP环境配置SSL证书最简单教程和Nginx环境强制http 301跳转https的方法，可能有人强制<code>http</code>跳转到<code>https://www.yourdomain.com</code>后，会出现这样的情况，浏览器直接输入<code>https://yourdomain.com</code>跳转不到之前设置的<code>https://www.yourdomain.com</code>，相信很多强迫症的人会很不习惯，这可能之前只设置了<code>80</code>端口的跳转，没设置<code>443</code>端口，这里说下方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>找到<code>Nginx</code>配置文件<code>nginx.conf</code>文件，编辑。</p>
<pre><code>server {                            
    listen 443 ssl;                            
    server_name southcat.net;
    rewrite ^(.*) https://www.southcat.net$1 permanent;
    ssl on;
    ssl_certificate /root/ssl.crt;       #你的ssl.crt文件地址
    ssl_certificate_key /root/ssl.key;   #你的ssl.crt文件地址
     }</code></pre><p>或者：</p>
<pre><code>server {                            
    listen 443 ssl;                            
    server_name southcat.net;
    return 301 https://www.southcat.net$request_uri;
    ssl on;
    ssl_certificate /root/ssl.crt;       #你的ssl.crt文件地址
    ssl_certificate_key /root/ssl.key;   #你的ssl.crt文件地址
     }</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Nginx环境强制http 301跳转https的方法</title>
    <url>/1492/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在越来越多的人开始为网站启用ssl证书了，安装了ssl后我们都需要让http强制跳转https，并确定网站唯一性，这里介绍了几种方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>提示：</strong>以军哥的lnmp一键安装包为例，<code>Nginx</code>配置文件修改地址为<code>/usr/local/nginx/conf/vhost/xx.com.conf</code>。<br><img src="https://www.southcat.net/usr/picture/https.png" alt="请输入图片描述" title="请输入图片描述"><br><strong>方法一：</strong></p>
<pre><code>if ($scheme = http ) {
return 301 https://$host$request_uri;
}</code></pre><p><strong>方法二：</strong></p>
<pre><code>server_name southcat.net ;
rewrite ^(.*) https://southcat.net$1 permanent;</code></pre><p><strong>方法三：</strong></p>
<pre><code>if ($server_port = 80 ) {
return 301 https://$host$request_uri;
}</code></pre><p><strong>方法四：</strong></p>
<pre><code>server_name southcat.net ;
return 301 https://$server_name$request_uri;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Nginx端口被异常占用导致无法启动的解决方法</title>
    <url>/1473/</url>
    <content><![CDATA[<p><strong>说明：</strong>在安装<code>LNMP</code>一键包的时候，安装和启动<code>Nginx</code>的时候，会出现错误提示：<code>Starting nginx: nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)</code>，意思是<code>Nginx</code>的<code>80</code>端口被占用导致的。</p>
<p><strong>1、检查80端口被哪个进程占用</strong></p>
<pre><code>fuser -n tcp 80</code></pre><p>后面的数字即为进程号<code>xx</code>。</p>
<pre><code>kill -9 xx    #xx为前面所查到的进程号
/etc/init.d/nginx start  #启动Nginx</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>NIXStats：又一款Linux VPS服务器信息监控工具</title>
    <url>/1707/</url>
    <content><![CDATA[<p><strong>说明：</strong>像这样的<code>VPS</code>监控工具之前发过几个了，参考：多服务器，云探针，云监控：ServerStatus一键管理脚本，一个基于Web界面的Linux性能监控工具：pyDash安装教程，现在再说一个安装很简单的监控工具<code>NIXStats</code>。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/NIXStats/nixstatsagent" target="_blank" rel="noopener">https://github.com/NIXStats/nixstatsagent</a><br><strong>注册地址：</strong><a href="https://nixstats.com/signup" target="_blank" rel="noopener">https://nixstats.com/signup</a></p>
<p>去注册页面输入邮箱、密码注册一个账号，然后会生成如下代码。<br><img src="https://www.southcat.net/usr/picture/NIXStats(1).png" alt="请输入图片描述" title="请输入图片描述"><br>之后把出现的这段代码在服务器上执行就可。</p>
<pre><code>wget --no-check-certificate -N https://www.nixstats.com/nixstatsagent.sh &amp;&amp; bash nixstatsagent.sh xxxxxxxx  #将代码替换成你自己的</code></pre><p>然后再去服务器控制面板就可以看到信息了。<br><img src="https://www.southcat.net/usr/picture/NIXStats(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>NodeInfo：一款简易的NodeQuery服务器监控信息平台</title>
    <url>/2033/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前介绍了个漂亮的服务器监控信息的工具<code>NodeQuery</code>，小<code>Z</code>大佬就根据<code>NodeQuery API</code>提供的数据，写了款简易的服务器监控信息平台<code>NodeQuery</code>，使用<code>PHP</code>开发，可以很方便的放到自己网站，供管理员查看。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/NodeInfo.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/helloxz/nodeinfo" target="_blank" rel="noopener">https://github.com/helloxz/nodeinfo</a><br><strong>NodeInfo下载：</strong>Github下载，本地下载。</p>
<p>首先我们需要去<code>NodeQuery</code>上部署服务器，教程查看：NodeQuery：一款好看的Linux VPS服务器信息监控工具。</p>
<p>然后直接将<code>NodeInfo</code>源码放到站点根目录，再修改<code>ListServers.php</code>填写自己的<code>NodeQuery API</code>即可。</p>
<pre><code>#大概在21行，将xxx换成你的API
//设置Nodequery API
$data = $api-&gt;ListServer(&quot;xxxxxx&quot;);</code></pre><p>然后打开网站查看即可。</p>
<h2 id="NodeInfo说明"><a href="#NodeInfo说明" class="headerlink" title="NodeInfo说明"></a>NodeInfo说明</h2><ul>
<li><code>NodeQuery API</code>提供的数据3分钟刷新一次，不断的刷新<code>NodeInfo</code>页面如果信息未变更属正常现象。</li>
<li><code>NodeInfo</code>每3分钟自动刷新页面。</li>
<li><code>NodeQuery</code>服务器在海外，如果是国内服务器安装，可用性数据不太准确。</li>
</ul>
<h2 id="删除NodeQuery"><a href="#删除NodeQuery" class="headerlink" title="删除NodeQuery"></a>删除NodeQuery</h2><p>输入下面的命令卸载<code>NodeQuery</code>：</p>
<pre><code>rm -R / etc / nodequery &amp;&amp;（crontab -u nodequery -l | grep -v“/etc/nodequery/nq-agent.sh”）| crontab -u nodequery  - &amp;&amp;  userdel nodequery</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>NodeQuery：一款好看的Linux VPS服务器信息监控工具</title>
    <url>/1981/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Node Query</code>是一个轻量级的<code>Linux</code>服务器监控服务系统，界面很好看，监控信息很全，安装只需要几秒钟。博主用了下，好像和之前分享的<code>NIXStats</code>监控工具安装方法是差不多的，查看：NIXStats：又一款Linux VPS服务器信息监控工具，不过这个界面好看很多，免费用户可以监控<code>10</code>台<code>VPS</code>服务器，对于我们一般是够的。有兴趣的可以试试。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/nodequery(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/nodequery(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/nodequery(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>1、先去注册账号，官网：<a href="https://nodequery.com/，记得挂梯子，不然谷歌验证码出不来。" target="_blank" rel="noopener">https://nodequery.com/，记得挂梯子，不然谷歌验证码出不来。</a></p>
<p>2、点击右上角<code>New Server</code>新建节点监控，填上名称并设置，然后<code>Create Server</code>，会出来安装代码，在<code>VPS</code>上运行即可。<br><img src="https://www.southcat.net/usr/picture/nodequery(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/nodequery(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>NoFile：一个免费超大文件上传和分享的服务型网站</title>
    <url>/1711/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>NoFile</code>是国外的一个免费超大文件上传和分享的服务型站点，支持单文件最大<code>10GB</code>上传并生成分享外链，同时还对所上传的文件进行加密功能，让你的文件更安全。当然国内速度比较一般，<code>NoFile</code>文件存储的服务经过测试是法国的。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>NtrQQ：一款功能强大的QQ辅助增强插件（显IP、去广告等）</title>
    <url>/1776/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>腾讯，国内最大流氓软件制造商之一。</p>
<p>或许你可以躲过<code>360</code>和百度，但是你一定躲不开它，谁让身边的人都在用。</p>
<p>于是一群<code>dalao</code>们决定对腾讯宣战，开发了<code>NtrQQ</code>。</p>
<p>好吧，也许中二病犯了。。。</p>
<p>这个插件我自己用了大概半年，感觉不错，由于官方版需要自己封装，发个绿色版给不会的人用。</p>
<p><img src="https://www.southcat.net/usr/picture/ntrqq.jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>NtrQQ</code>是一款功能强大的<code>QQ</code>辅助增强插件，主要功能为<code>QQ</code>显<code>IP</code>和<code>QQ</code>去广告，为了应大家的需求，增加了一系列强悍的功能，但是从本质上，<code>NtrQQ</code>就是一款传统的<code>QQ</code>显<code>IP</code>插件，仅此而已。关于<code>QQ</code>显<code>IP</code>插件的历史，大家自行度娘，我不做过多解释。</p>
<p>更多功能查看：<a href="http://www.ntrqq.net/help.html" target="_blank" rel="noopener">http://www.ntrqq.net/help.html</a><br><code>NtrQQ</code>常见问题：<a href="https://bbs.ntrqq.net/thread-2395-1-1.html" target="_blank" rel="noopener">https://bbs.ntrqq.net/thread-2395-1-1.html</a></p>
<h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p>1、下载<code>NtrQQ.7z</code>并解压，复制文件夹到要安装的位置。<br>2、然后以管理员权限运行<code>VC2010.exe</code>和<code>TXSSOSetup.exe</code>。<br>3、打开<code>Bin</code>文件夹，运行<code>QQ.exe</code>即可。</p>
<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><strong>Onedrive：</strong>NtrQQ.7z<br><strong>本地下载：</strong>NtrQQ.7z<br><strong>解压密码：</strong><code>ixh.me</code></p>
<p><strong>NtrQQ官网：</strong><a href="https://ntrqq.net/" target="_blank" rel="noopener">https://ntrqq.net/</a><br><strong>NtrQQ论坛：</strong><a href="https://bbs.ntrqq.net/" target="_blank" rel="noopener">https://bbs.ntrqq.net/</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>offcloud：一个强大的支持离线下载和网盘下载/上传的网站</title>
    <url>/1770/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在国内很多下载工具都不行了，<code>QQ</code>旋风也被关停了，迅雷也是惨不忍睹，下载国外资源和冷门资源的时候基本没速度，这时候就需要个工具来拯救了，今天介绍个强大的离线下载站<code>offcloud</code>，对于下载冷门资源和国外资源还是很给力的。<br><img src="https://www.southcat.net/usr/picture/offcloud(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>offcloud</code>是一款网盘+离线下载的网站，提供<code>10GB</code>免费空间(付费后无限空间)，支持离线下载磁力链接，<code>BT</code>种子文件，<code>HTTP</code>，<code>HTTPS</code>等直链，同时还提供国外视频网站的下载，包括<code>Youtube</code>、<code>Youjizz</code>等，此外<code>offcloud</code>还支持把下载好的离线上传，支持<code>FTP</code>、<code>WebDAV</code>、<code>Google Drive</code>、<code>Dropbox</code>还有<code>OneDrive</code>等。</p>
<p>支持的网盘和视频网站列表：<code>https://offcloud.com/list</code>，好像还看到了百度网盘。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>进入网站：<code>https://offcloud.com/</code>直接在首页输入邮箱就提示注册成功，再进入邮件设置一下密码就行了。<br><img src="https://www.southcat.net/usr/picture/offcloud(2).png" alt="请输入图片描述" title="请输入图片描述"><br>进入后台后点左侧<code>Instant</code>直接下载，有遍布全球的服务器，选择距离比较近的，直接<code>Download</code>即可。点击左侧<code>Cloud</code>就可以离线下载磁力链接，更多功能就自己慢慢看。</p>
<h2 id="价格"><a href="#价格" class="headerlink" title="价格"></a>价格</h2><p><code>offcloud</code>注册后就是免费账号，每个月只能下载<code>3</code>次。偶尔用用还是不错的。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Onedrivecmd：OneDrive的命令行客户端，可直接上传/下载文件等</title>
    <url>/2205/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>onedrivecmd</code>是一个<code>OneDrive</code>的命令行客户端，可以直接在<code>VPS</code>上对<code>OneDrive</code>网盘进行上传/下载/编辑等操作，还可以直接将文件离线到网盘，支持<code>OneDrive</code>个人版和商业版等，该工具和博主以前发个<code>2</code>款<code>Google Drive</code>命令行工具差不多，查看：skicka、Gdrive，对<code>Google Drive</code>更有兴趣的可以试试。</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>根据路径取文件。</li>
<li>配置文件 (<code>~/.onedrive.json</code>)。</li>
<li>可对单个文件上传下载。</li>
<li>可列远程目录，包括文件大小和时间戳。</li>
<li>上传与下载有进度条，也可用aria2进行下载。</li>
<li>离线下载（此功能仅通过API提供，Web和官方客户端都是没有的）。</li>
<li>直接获取直链！。</li>
<li><code>Python 2</code>和<code>3</code>通用。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/cnbeining/onedrivecmd" target="_blank" rel="noopener">https://github.com/cnbeining/onedrivecmd</a></p>
<p><strong>说明：</strong>博主使用<code>Python 2</code>和<code>3</code>测试了下，发现<code>Python 2</code>下会出现点小问题，不过也还是可以用的，这里建议通过<code>Python 3</code>安装<code>Onedrivecmd</code>。</p>
<p><strong>1、安装pip或pip3</strong><br>如果你想用<code>Python 2</code>，一般系统都自带<code>Python 2</code>，可以使用以下命令安装<code>pip</code>：</p>
<pre><code>#CentOS 6.x 32位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 6.x 64位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 7.x
yum install -y epel-release
yum install -y python-pip
#如果CentOS 7安装出现No package python-pip available，可以用以下命令进行安装
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py

#Debian/Ubuntu系统
apt-get -y update
apt-get -y install python-pip</code></pre><p>如果你想用<code>Python 3</code>，可以使用以下脚本自动安装<code>Python 3</code>和<code>pip3</code>：</p>
<pre><code>#Ubuntu很多系统自带Python 3，就不说安装方法了
#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh

#查看是否安装成功
python3 -V</code></pre><p><strong>2、安装onedrivecmd</strong></p>
<pre><code>#Python 2安装
pip install onedrivecmd

#Python 3安装
pip3 install onedrivecmd</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、使用命令</strong></p>
<pre><code>#注意根目录为od:/，后面带/为目录，不带为文件
Usage onedrivecmd:
onedrivecmd -h 
onedrivecmd [OPTIONS] init 个人版登陆
onedrivecmd [OPTIONS] init_business 企业/Office 365/Education登陆
onedrivecmd [OPTIONS] list od:/foo/bar/ 列目录
onedrivecmd [OPTIONS] share od:/foo/bar/ 共享
onedrivecmd [OPTIONS] direct od:/foo/bar/ 取直链！这个直链不过期
onedrivecmd [OPTIONS] get od:/foo/file.txt /tmp/ 下载
onedrivecmd [OPTIONS] put /tmp/hello.txt od:/bar/ 上传
onedrivecmd [OPTIONS] delete od:/foo/bar 删除
onedrivecmd [OPTIONS] mkdir od:/foo/bar/ 建目录
onedrivecmd [OPTIONS] search foobar 搜索
onedrivecmd [OPTIONS] remote http://thecatapi.com/api/images/get?format=src&amp;type=gif 离线下载
onedrivecmd [OPTIONS] quota 看容量

[OPTIONS]
-conf=&quot;~/.onedrive.json&quot;: 配置文件，此文件和密码一样重要
-h: 帮助
-hack: 用SDK上传/aria2下载
-recursive=false: 递归列目录，速度比想象中慢得多
-chunk=62914560: 上传分片大小，必须是320K的倍数，不能超过60MB
-url=False: 只列出文件下载URL，这个URL失效很快</code></pre><p><strong>2、使用示例</strong><br>首先使用命令登录<code>OneDrive</code>。</p>
<pre><code>#个人版登录命令
onedrivecmd init

#企业/Office 365/Education登录命令
onedrivecmd init_business</code></pre><p>然后将那串网址复制到浏览器登录账号，再将验证码输到<code>SSH</code>客户端确认。<br><img src="https://www.southcat.net/usr/picture/onedrivecmd.png" alt="请输入图片描述" title="请输入图片描述"><br>注意默认配置文件是<code>/root/.onedrive.json</code>，可以自己设置。此文件和你的密码一样重要！泄露会导致你的盘被随便查看！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OneIndex：一个OneDrive网盘的目录列表程序，可直接下载/查看</title>
    <url>/2059/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>OneIndex</code>是一个可以将<code>OneDrive</code>网盘的目录索引出来的程序，可以供多人查看/下载，也就是变成了公共的网盘。而且不占用服务器空间，也不消耗服务器流量，很强大。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/OneIndex_2.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>响应式，支持小屏设备。</li>
<li>图片在线预览。</li>
<li>视频在线播放。</li>
<li>代码在线查看（<code>js</code>、<code>css</code>、<code>html</code>、<code>sh</code>、<code>php</code>、<code>java</code>、<code>md</code>等）。</li>
<li><code>README.md</code>支持，解析各目录下(<code>onedirive</code>目录下) <code>README.md</code>文件，在页面尾部展示。</li>
<li>音频在线播放。</li>
<li><code>HEAD.md</code>支持，在页面头部展示。</li>
<li><code>.password</code>文件夹加密。</li>
</ul>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p><code>OneIndex 3.0</code>更新内容：</p>
<pre><code>1、接口转为使用graph接口，支持个人账号
2、不在集成secret，请按照安装流程进行获取
3、增加管理后台(地址?/admin  初始密码：oneindex)
4、不同后缀文件展示方式自定义
5、&lt;5M 文件，可以自定义直接输出（可解决跨域调用，比如字幕等问题）
6、cli文件夹上传（单线程）
7、后台文件夹上传（多线程）
8、图床(OneImages),还比较简陋。
9、新增 index.html 特性，如果目录下存在index.html 直接输出index.html而不列目录</code></pre><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul>
<li><code>PHP</code>空间，<code>PHP 5.6+</code> 打开<code>curl</code>支持。</li>
<li><code>Onedrive</code>账号 (个人、企业版或教育版/工作或学校帐户)。</li>
<li><code>oneindex</code>程序：Github下载、本地下载。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>以下为手动安装教程，如果还不会安装的可以使用一键脚本安装：OneIndex一键安装脚本 for Debian。</p>
<pre><code>1、上传oneindex程序到根目录，设置config/、config/base.php、 cache/可读写权限。
2、浏览器访问、绑定账号
3、可以使用</code></pre><p>更多使用方法查看<code>Github</code>：<a href="https://github.com/donwa/oneindex" target="_blank" rel="noopener">https://github.com/donwa/oneindex</a></p>
<pre><code>if (!-f $request_filename){
    set $rule_0 1$rule_0;
}
if (!-d $request_filename){
    set $rule_0 2$rule_0;
}
if ($rule_0 = &quot;21&quot;){
    rewrite ^(/.*)$ /?/$1 last;
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OneinStack：lnmp、lamp、lnmpa一键安装包（支持HHVM）</title>
    <url>/1484/</url>
    <content><![CDATA[<p><strong>说明：</strong>这个脚本是使用shell编写，为了快速在生产环境上部署lnmp/lamp/lnmpa（Linux、Nginx/Tengine、MySQL/MariaDB/Percona、PHP），适用于CentOS 5~7（包括redhat）、Debian 6～8、Ubuntu 12.04～15.04的32位和64位。</p>
<p>如果要支持HHVM，仅支持CentOS 6（7） 64位。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、CentOS/Redhat下的安装</strong></p>
<pre><code>yum -y install wget screen
wget http://mirrors.linuxeye.com/lnmp-full.tar.gz
tar xzf lnmp-full.tar.gz
cd lnmp
screen -S lnmp
./install.sh</code></pre><p><strong>2、Debian/Ubuntu下的安装</strong></p>
<pre><code>apt-get -y install wget screen curl python
wget http://mirrors.linuxeye.com/lnmp-full.tar.gz
tar xzf lnmp-full.tar.gz
cd lnmp
screen -S lnmp
./install.sh</code></pre><p>之后按自己要求安装所需版本。<br>如果网路出现中断，可以执行命令<code>screen -r lnmp</code>重新连接安装窗口。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、添加虚拟主机</strong></p>
<pre><code>./vhost.sh</code></pre><p><strong>2、删除虚拟主机</strong></p>
<pre><code>./vhost.sh del</code></pre><p><strong>3、管理ftp账号</strong></p>
<pre><code>./pureftpd_vhost.sh </code></pre><p><strong>4、数据备份</strong></p>
<pre><code>./backup_setup.sh # 备份参数设置
./backup.sh # 立即执行备份</code></pre><p>crontab -e # 可添加到计划任务，如每天凌晨1点自动备份</p>
<pre><code>0 1 * * * cd ~/lnmp;./backup.sh  &gt; /dev/null 2&gt;&amp;1 &amp;</code></pre><p><strong>5、安装Let’s Encrypt client</strong></p>
<pre><code>./addons.sh</code></pre><p>选择7，安装即可。（Let’s Encrypt client是免费的SSL证书）</p>
<p><strong>6、管理服务</strong><br>Nginx/Tengine:</p>
<pre><code>service nginx {start|stop|status|restart|reload|configtest}</code></pre><p>MySQL/MariaDB/Percona:</p>
<pre><code>service mysqld {start|stop|restart|reload|status}</code></pre><p>PHP:</p>
<pre><code>service php-fpm {start|stop|restart|reload|status}</code></pre><p>Apache:</p>
<pre><code>service httpd {start|restart|stop}</code></pre><p>HHVM:</p>
<pre><code>service supervisord {start|stop|status|restart|reload}</code></pre><p>Pure-Ftpd:</p>
<pre><code>service pureftpd {start|stop|restart|status}</code></pre><p>Redis:</p>
<pre><code>service redis-server {start|stop|status|restart|reload}</code></pre><p>Memcached:</p>
<pre><code>service memcached {start|stop|status|restart|reload}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Opage：一个定制化上网首页，集成搜索，网站，天气，备忘录</title>
    <url>/2165/</url>
    <content><![CDATA[<p><strong>说明：</strong>应昨天某位同学的要求，研究了下<code>Opage</code>，<code>Opage</code>是一个客制化上网首页，基于<code>Material Design &amp; Vue.js</code>，集成搜索，网站，天气，<code>TODO</code>(备忘录)，完美的支持<code>PC</code>端和手机端，由于源码的天气接口和某个文件链接出现了问题，博主就小小的修改了下，这里分享下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/opage_.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>搜索：<code>Google</code> + <code>Bing</code> + 百度。</li>
<li>网站：可自定义网站列表。</li>
<li>天气：全国城市 + <code>4</code>天预测。</li>
<li><code>TODO</code>：简单的<code>Todo</code>列表。</li>
</ul>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github原地址：</strong><a href="https://github.com/viosey/opage" target="_blank" rel="noopener">https://github.com/viosey/opage</a></p>
<p><strong>系统要求：</strong><code>CentOS</code>、<code>Debian</code>、<code>Ubuntu</code></p>
<p><strong>1、安装npm等依赖</strong></p>
<pre><code>#Ubuntu系统
curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
sudo apt-get install -y nodejs git screen

#Debian系统
curl -sL https://deb.nodesource.com/setup_9.x | bash -
apt-get install -y nodejs git screen

#Centos系统
curl -sL https://rpm.nodesource.com/setup_9.x | bash -
yum install nodejs -y git screen</code></pre><p><strong>2、下载源码并安装</strong></p>
<pre><code>git clone https://github.com/iiiiiii1/opage
cd opage &amp;&amp; npm install</code></pre><p><strong>3、后台运行</strong></p>
<pre><code>screen -S opage
npm run dev</code></pre><p>运行了后先按<code>Ctrl+A</code>，再按<code>D</code>隐藏并保留当前窗口。然后可以通过<code>http://ip:8080</code>进行查看，由于博主只倾向于<code>https</code>，所以天气功能不能在<code>http</code>上使用。要使用该功能的可以用域名（<code>https</code>）进行反代，下面会用最简单的<code>Caddy</code>进行反代。</p>
<h2 id="域名反代"><a href="#域名反代" class="headerlink" title="域名反代"></a>域名反代</h2><p>这里需要准备<code>2</code>个(二级)域名，一个用来反代主页面，一个反代天气接口地址，且<code>2</code>个域名需提前解析到服务器。</p>
<p><strong>1、安装Caddy</strong><br>使用命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p><strong>2、配置Caddy</strong></p>
<pre><code>#以下全部内容是一个整体，修改2个域名、IP、邮箱后一起复制到SSH运行！
echo &quot;www.southcat.net {
 gzip
 tls www@southcat.net
 proxy / 1.1.1.1:8080
}
tianqi.southcat.net {
 gzip
 tls tianqi@southcat.net
 proxy / www.94994.com
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p><strong>3、修改源码天气接口</strong></p>
<pre><code>#将天气反代域名修改成自己的再运行
sed -i &apos;s/www.94994.com/tianqi.southcat.net/g&apos; &apos;/root/opage/src/App.vue&apos;</code></pre><p><strong>4、启动Caddy</strong></p>
<pre><code>/etc/init.d/caddy start</code></pre><p>最后可以打开反代主页面的域名就可以访问了，这时候右上角的天气就会显示了。</p>
<p>如果你想经常用该首页，可以在浏览器将默认主页修改成该首页地址。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OneIndex一键安装脚本 for Debian</title>
    <url>/2177/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>OneIndex</code>很久前就介绍过了，一个目录列表程序，可以将<code>OneDrive</code>网盘里面的文件列出来供我们查看/下载，而且并不会消耗服务器的流量和空间，很是强大，之前该程序只适用于<code>OneDrive Business</code>账号，很多人不知道怎么搞，博主也没怎么在意，现在已经支持<code>OneDrive</code>个人账号了，估计很多人会用到，这里为了让部分小白快速上手，这里就整了个一键脚本，如果你不喜欢脚本或者服务器已有<code>Web</code>网站环境，可参考教程：OneIndex安装教程，进行手动安装。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/oneindex(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/oneindex(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/oneindex(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2018.12.30】
修复重定向次数过多的问题，现已修复(这个抱歉，忘记在脚本里注释部分$，导致出了点小问题)。
【2018.12.22】
替换伪静态规则，调整缓存刷新时间
【2018.12.21】
修复一点小问题，并增加定时刷新缓存和token，并优化脚本步骤信息的提示</code></pre><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><pre><code>#以下为大致功能
缩略图功能
命令行上传功能
响应式，支持小屏设备
图片、视频、音频在线预览
代码在线查看（js、css、html、sh、php、java、md等）
README.md支持，解析各目录下(onedirive目录下)README.md文件，在页面尾部展示。
HEAD.md支持，在页面头部展示
.password文件夹加密
在线视频播放器替换成Dplayer
在线视频播放支持mp4、webm,avi、mpg、mpeg、rm、rmvb、mov、wmv、mkv、asf。
cli文件夹上传（单线程）
不同后缀展示设置
文件直接输出
文件上传管理（后台）
图床功能</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/donwa/oneindex" target="_blank" rel="noopener">https://github.com/donwa/oneindex</a></p>
<p><strong>系统要求：</strong>脚本只适用于<code>Debian 8、9</code>，且无网站环境，会自动签发<code>Let&#39;s Encrypt SSL</code>证书，请提前将域名解析至<code>VPS</code>服务器。</p>
<p>运行命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/OneIndex.sh &amp;&amp; bash OneIndex.sh</code></pre><p>安装完成后，打开域名，按照提示进行安装配置。<br><img src="https://www.southcat.net/usr/picture/oneindex(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/oneindex(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/oneindex(6).png" alt="请输入图片描述" title="请输入图片描述"><br>后台地址：<code>https://xx.com/?/admin</code>，默认密码：<code>oneindex</code>，网站根目录<code>/home/wwwroot/xx.com</code>。</p>
<pre><code>提示：这里好几个同学反映进不去后台，博主看了下原因，顺便再说下，安装好了后，需要先访问自己的域名，然后绑定OneDrive账号了才能访问后台，不然是进不去后台的！</code></pre><p>绑定<code>OneDrive</code>后建议先访问后台，如果前台出现<code>HTTP ERROR 500</code>的情况，可以重新下载源码后再绑定账号，使用命令：</p>
<pre><code>#将domain.com改成你的域名再运行以下命令
cd /home/wwwroot/domain.com
rm -rf ./*
git clone https://github.com/donwa/oneindex.git
mv oneindex/* ./
chmod -R 777 config/ cache/</code></pre><h2 id="特殊文件实现功能"><a href="#特殊文件实现功能" class="headerlink" title="特殊文件实现功能"></a>特殊文件实现功能</h2><p><code>README.md</code>、<code>HEAD.md</code>、.<code>password</code>特殊文件使用。</p>
<pre><code>#在文件夹底部添加说明
在onedrive的文件夹中添加README.md文件，使用markdown语法。

#在文件夹头部添加说明  
在onedrive的文件夹中添加HEAD.md文件，使用markdown语法。  

#加密文件夹
在onedrive的文件夹中添加.password文件，填入密码，密码不能为空。 

#直接输出网页
在onedrive的文件夹中添加index.html文件，程序会直接输出网页而不列目录，配合文件展示设置-直接输出效果更佳。</code></pre><h2 id="命令行功能"><a href="#命令行功能" class="headerlink" title="命令行功能"></a>命令行功能</h2><p>仅能在<code>php cli</code>模式下运行，且以下命令均在网站根目录<code>/home/wwwroot/xx.com</code>运行。</p>
<pre><code>#清除缓存 
php one.php cache:clear

#刷新缓存 
php one.php cache:refresh

#刷新令牌:  
php one.php token:refresh

#上传文件  
php one.php upload:file 本地文件 [onedrive文件]

#上传文件夹
php one.php upload:folder 本地文件夹 [onedrive文件夹]</code></pre><p><strong>上传示例：</strong></p>
<pre><code>#上传demo.zip 到onedrive 根目录  
php one.php upload:file demo.zip  

#上传demo.zip 到onedrive /test/目录  
php one.php upload:file demo.zip /test/  

#上传demo.zip 到onedrive /test/目录并命名为 d.zip  
php one.php upload:file demo.zip /test/d.zip  

#上传up/ 到onedrive /test/  
php one.php upload:file up/ /test/</code></pre><h2 id="获取OneDrive-5T网盘"><a href="#获取OneDrive-5T网盘" class="headerlink" title="获取OneDrive 5T网盘"></a>获取OneDrive 5T网盘</h2><p>如果我们使用个人版网盘的话，容量好像不够，这时候我们就可以使用<code>OneDrive Business</code>账号了，总共有<code>5T</code>容量，如果你有钱可以直接去官网买，没钱就可以使用方法免费获取了，这里推荐如有乐享博客分享的获取<code>OneDrive 5T</code>网盘的方法，查看：申请OneDrive 5T 网盘便民方法和邮箱。</p>
<p>申请方法大致流程：</p>
<pre><code>1、进入注册地址https://products.office.com/en-us/student?tab=students
2、输入如有乐享提供的临时邮箱
3、填入密码，和从临时邮箱获取的验证码


#修改为你的域名
domain=&quot;www.southcat.net&quot;
service nginx stop
~/.acme.sh/acme.sh --issue -d ${domain} --standalone -k ec-256 --force
~/.acme.sh/acme.sh --installcert -d ${domain} --fullchainpath /home/wwwroot/ssl/OneIndex.crt --keypath /home/wwwroot/ssl/OneIndex.key --ecc
service nginx start</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Openload：一个可以赚钱的免费文件/视频分享平台</title>
    <url>/2090/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Openload</code>是一个免费的视频和文件分享平台，不需要登录即可上传，不限制下载次数，最大可上传<code>10G</code>的文件，支持远程<code>FTP</code>上传，用户可通过分享链接在线观看或者下载，并且还提供自动转码，注册的用户可以对分享的视频进行相关操作，比如防止用户下载，允许用户增加字幕，删除修改文件等，也可以将分享的视频嵌入到自己的网站，支持调整嵌入的大小，最重要的是网站提供推广功能，下载或者流量达到一定数就可以获得一定金额，每个地区的提成金额都不一样，可以说很强大了。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Openload(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Openload(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Openload(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Openload(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Openload(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OpenVZ安装BBR新方法：LKL一键安装包（比UML简单）</title>
    <url>/1542/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>简单的说<code>LKL</code>相比<code>uml</code>好处还是不少的，只需要转发端口，无论是<code>55r</code>都是装在母鸡上，和你平时使用无差，而<code>UML</code>需要在<code>UML</code>系统里安装。<code>LKL</code>的占用资源也更少。不过据说<code>LKL</code>的加速效果没有<code>UML</code>好。</p>
<h2 id="LKL使用前置需求"><a href="#LKL使用前置需求" class="headerlink" title="LKL使用前置需求"></a>LKL使用前置需求</h2><p>1、LKL要求ldd的版本至少在<code>2.14</code>，目前我测试下来，如果不想折腾建议直接安装<code>CentOS7</code>，<code>Debian8</code>和<code>Ubuntu16</code>。<br>2、安装包只使用<code>64bit</code>的系统。<br>3、默认的端口转发只转发了<code>9000-9999</code>的端口，如果你不想费心修改，请把<code>55r</code>等应用的端口设在这个范围。<br>4、只适用<code>openvz</code>，后台需开启<code>TUN/TAP</code>。</p>
<h2 id="安装LKL"><a href="#安装LKL" class="headerlink" title="安装LKL"></a>安装LKL</h2><p><strong>1、LKL一键包命令</strong></p>
<pre><code>wget --no-check-certificate https://github.com/91yun/uml/raw/master/lkl/install.sh &amp;&amp; bash install.sh</code></pre><p><strong>2、如何判断是否安装成功</strong></p>
<pre><code>ping 10.0.0.2</code></pre><p>如果 10.0.0.2 能 ping 通说明成功， ping 不通说明失败</p>
<p><strong>3、如果修改转发端口</strong><br>1、修改<code>/root/lkl/run.sh</code>，查找<code>9000-9999</code>，改成你想要的端口段<br>2、修改<code>/root/lkl/haproxy.cfg</code>查找<code>9000-9999</code>，改成你想要的端口段<br>3、重启vps</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OpenVZ平台安装魔改BBR：LKL一键安装脚本</title>
    <url>/1822/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>OpenVZ</code>安装<code>BBR</code>之<code>LKL</code>方法，记得很久前转过<code>91yun</code>博主的，参考：OpenVZ安装BBR新方法：LKL一键安装包，其优势也已经提过了，占用资源少，而魔改<code>BBR</code>也出来了许久，于是<code>nanqinlang</code>大佬就做了个魔改<code>BBR-LKL</code>一键安装脚本。有兴趣的可以试试。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>项目地址：</strong><a href="https://github.com/nanqinlang-tcp/tcp_nanqinlang" target="_blank" rel="noopener">https://github.com/nanqinlang-tcp/tcp_nanqinlang</a></p>
<p><strong>系统要求：</strong><code>Debian 8+ 64</code>位、<code>CentOS 7 64</code>位。</p>
<p><strong>注意：</strong>只适用<code>OpenVZ</code>，后台需开启<code>TUN/TAP</code>。且<code>OpenVZ via LKL</code>版，尚处于测试版，请勿在重要环境下使用。</p>
<p>运行以下命令：</p>
<pre><code># Debian 8+
# 64 bit
# ldd &gt; = 2.14
# tun/tap enabled
wget https://github.com/tcp-nanqinlang/lkl-haproxy/releases/download/1.1.1/tcp_nanqinlang-haproxy-debian.sh
bash tcp_nanqinlang-haproxy-debian.sh

# CentOS 7
# 64 bit
# ldd &gt; = 2.14
# tun/tap enabled
wget https://github.com/tcp-nanqinlang/lkl-haproxy/releases/download/1.1.1/tcp_nanqinlang-haproxy-centos.sh
bash tcp_nanqinlang-haproxy-centos.sh</code></pre><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>以下进行脚本使用说明：</p>
<p><strong>1、安装LKL</strong><br>此命令用于安装<code>LKL</code></p>
<ul>
<li>在<code>/home/tcp_nanqinlang</code>进行安装，所以安装完成后不要动这个文件夹了（除非你想修改端口）。</li>
<li>安装过程中，会提示你选择单个端口或端口段输入，具体已在运行脚本的提示中有说明，这里不再赘述。</li>
<li>安装完成后，会开启<code>LKL</code> ，以后重启机器也会随开机自启。</li>
<li>以后若需要修改转发端口，请将<code>/home/tcp_nanqinlang/haproxy.cfg</code>中的端口号和<code>/home/tcp_nanqinlang/running.sh</code>中的端口号改为你想要的端口或端口段，修改完成后重启<code>vps</code>。</li>
<li>使用前请注意自己的<code>iptables</code>相关设置。</li>
</ul>
<p><strong>2、检查LKL运行状态</strong><br>此命令用于检查<code>LKL</code>运行与否，可通过返回的提示判断。</p>
<p><strong>3、卸载LKL</strong><br>运行此命令会卸载<code>haproxy</code> 、删除<code>/home/tcp_nanqinlang</code> 、清空<code>iptables</code>规则、移除<code>/etc/rc/local</code>中的开机自启项。</p>
<p>当然也可以尝试下扩软博主的<code>OVZ</code>魔改<code>BBR</code>方法：OpenVZ平台Google BBR一键安装脚本。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OpenVZ平台魔改BBR一键脚本之Rinetd方式</title>
    <url>/1942/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Rinetd</code>就是另外一种<code>lkl bbr</code>，好处是不需要开启<code>TUN/TAP</code>，对于后台没有或者找不到这个模块的，刚好可以用一下。其实这种方式的<code>BBR</code>加速很早前就提过了，参考：OpenVZ平台Google BBR加速TCP之Rinetd方式，不过就是需要手动安装，对新手有点不友好，这里<code>loc</code>南琴浪大佬根据这种方式，写了个魔改<code>BBR</code>一键脚本，就发一下。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>【2018年3月24日】<br>新增多网卡适配。</p>
<p>【2018年3月10日】<br>做了一个更暴力的<code>rinetd-bbr module</code>，即加强版魔改<code>BBR</code>，具体效果因线路而定。并修改部分代码细节。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>要求：</strong><code>OpenVZ</code>架构，<code>64 Bit</code>系统。</p>
<p>使用命令：</p>
<p><strong>1、Debian or Ubuntu系统</strong></p>
<pre><code>#适用于单网卡（单IP）服务器：
wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-debianorubuntu.sh
bash tcp_nanqinlang-rinetd-debianorubuntu.sh
#如果提示only support OpenVZ !，则使用下面这个脚本
wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt.sh
bash tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt.sh

#适用于多网卡（多IP）服务器，会为所有网卡（所有IP）提供加速：
wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-debianorubuntu-multiNIC.sh
bash tcp_nanqinlang-rinetd-debianorubuntu-multiNIC.sh
#如果提示only support OpenVZ !，则使用下面这个脚本
wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.sh
bash tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.sh</code></pre><p><strong>2、CentOS 7系统</strong></p>
<pre><code>#和上面一样，也分单网卡和多网卡版本
#单网卡
wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-centos.sh
bash tcp_nanqinlang-rinetd-centos.sh
#如果提示only support OpenVZ !，则使用下面这个脚本
wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-centos-nocheckvirt.sh
bash tcp_nanqinlang-rinetd-centos-nocheckvirt.sh

#多网卡
wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-centos.sh
bash tcp_nanqinlang-rinetd-centos.sh
#如果提示only support OpenVZ !，则使用下面这个脚本
wget https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0-nocheckvirt/tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.sh
bash tcp_nanqinlang-rinetd-debianorubuntu-nocheckvirt-multiNIC.sh</code></pre><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>在<code>/home/tcp_nanqinlang</code>进行安装，所以安装完成后不要动这个文件夹了（除非你想修改端口）。</p>
<p>安装过程中，会提示输入端口号。多个端口号用空格隔开。不支持端口段。</p>
<p>安装完成后，会开启<code>rinetd-bbr</code>。以后重启机器也会随开机自启。</p>
<p>使用前请注意自己的<code>iptables</code>相关设置。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OpenVZ平台Alpine Linux一键安装脚本</title>
    <url>/2170/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Alpine Linux</code>是一个社区开发的面向安全应用的轻量级<code>Linux</code>发行版操作系统，占用资源很少，初始状态基本只占用几<code>M</code>内存和几十<code>M</code>硬盘，而且还很稳定，适合很多小型服务器和设备使用，这里就分享一个<code>OVZ</code>的<code>Alpine</code>脚本，基本几秒安装完成。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>说明：</strong>脚本在<code>CentOS</code>、<code>Debian</code>和<code>Ubuntu</code>大多数版本上测试通过，且仅支持<code>OpenVZ</code>。</p>
<p>运行命令：</p>
<pre><code>#脚本会安装最新的Alpine Linux，并会清除服务器数据，请先备份好数据
wget https://www.southcat.net/usr/shell/alpine.sh &amp;&amp; bash alpine.sh</code></pre><p>等待几秒钟完成，然后使用原密码进入<code>Alpine</code>系统。</p>
<p>下面的截图为系统资源占用情况，可以说很低了。<br><img src="https://www.southcat.net/usr/picture/OVZ_Alpine.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>如果服务器不停的修改<code>/etc/inittab</code>并添加一堆重新生成的<code>getty</code>，可运行命令：</p>
<pre><code>apk add e2fsprogs-extra
chattr +i /etc/inittab</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OpenVZ虚拟化(架构)VPS一键安装Windows系统</title>
    <url>/2272/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前博主发了很多<code>KVM</code>架构一键安装<code>Windows</code>系统的教程，查看：Linux VPS纯净版Windows系统一键安装脚本，不过只适用于<code>KVM</code>，现在分享个适用于<code>OpenVZ</code>的脚本。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre><code>提示：该脚本使用的是QEMU项目，可能处于第N层虚拟化，CPU容易暴走，极其容易违反TOS，所以使用的时候有心理准备或者提前咨询主机商。</code></pre><p><strong>Github地址：</strong><a href="https://github.com/dylanbai8/Onekey\_OpenVZ\_Install_Windows" target="_blank" rel="noopener">https://github.com/dylanbai8/Onekey\_OpenVZ\_Install_Windows</a></p>
<p>测试环境为<code>Debian 7</code>(理论上支持<code>Debian</code>、<code>Ubuntu</code>系列的大部分系统)</p>
<pre><code>wget -N --no-check-certificate git.io/w.sh &amp;&amp; chmod +x w.sh &amp;&amp; bash w.sh</code></pre><p>使用方法：</p>
<pre><code>#为Debian、Ubuntu安装远程桌面
依次执行1、4
如果需要使用浏览器，依次执行1、2、4

#为Debian/Ubuntu安装WindowsXP
依次执行3、4
默认启动内存为512M；如果需要修改启动内存，依次执行3、6、4

#安装自定义Windows系统(iOS镜像)
执行7按提示操作</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><pre><code>1、如果安装完后VNC桌面空白，查看是否有Sub-process /usr/bin/dpkg returned an error code (1)报错
解决办法1：
执行rm /var/lib/dpkg/info/$nomdupaquet* -f后重新安装
解决办法2：
更换源或者更换系统

2、关于OpenVZ
在OpenVZ构架的VPS内安装Windows系统CPU很容易100%运行
长期CPU、内存爆满，一般主机商不允许这样做，可能被判定为滥用而封停</code></pre><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><pre><code>编辑/etc/rc.local
在exit 0前新增加一行粘贴以下代码（具体配置可以自行修改）
qemu-system-x86_64 -hda /root/IMG/win.img -m 512M -smp 1 -daemonize -vnc :2 -net nic,model=virtio -net user -redir tcp:3389::3389

【修改端口映射】
默认主机仅将远程桌面3389端口转发至Windows系统 如果是用来运行程序（如建站）可能需要转发如80、443、22等端口
只需修改末尾 添加多个端口即可 如：-redir tcp:3389::3389 -redir tcp:443::443 -redir tcp:80::80
具体格式为 -redir [tcp|udp]:host-port::guest-port

查看端口是否正常映射：
lsof -i:&quot;3389&quot;
有返回内容即为映射正常

【修改其它配置】
-m 512M表示内存为512M
-smp 2表示使用两个CPU核心
-daemonize在后台运行虚拟机
-nographic不显示图形界面
-vnc :2开启vnc远程访问 其中:2标识vnc端口
-net nic,model=virtio -net user即网络为NAT方式 OpenVZ充当虚拟机的网关和防火墙
-redir tcp:3389::3389重定向虚拟机的3389端口到主机的网络界面上</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OpenVZ平台Google BBR加速TCP之Rinetd方式</title>
    <url>/1650/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Rinetd</code>这种方式其实两三个月前就已经有了，是<code>v2ex</code>网友<code>@linhua</code>的成果，他直接将<code>BBR</code>内置到了<code>Rinetd</code>里边，比较方便的就能配置出来。也就是由于配置比较简单，先说一下手动搭建的方法。后续扩软博主可能会制作出通用的<code>rinetd-bbr</code>一键脚本，到时候更新一键包方法。</p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>Github地址：</strong><a href="https://github.com/linhua55/lkl_study" target="_blank" rel="noopener">https://github.com/linhua55/lkl_study</a><br><strong>系统支持：</strong>仅支持64位系统。<br>1、下载文件到<code>/usr/bin/rinetd-bbr</code></p>
<pre><code>wget -O /usr/bin/rinetd-bbr https://github.com/linhua55/lkl_study/releases/download/v1.2/rinetd_bbr_powered</code></pre><p>2、设置权限</p>
<pre><code>chmod a+x /usr/bin/rinetd-bbr</code></pre><p>3、创建配置文件</p>
<pre><code>vi /etc/rinetd-bbr.conf</code></pre><p>输入以下内容</p>
<pre><code># bindadress bindport connectaddress connectport

0.0.0.0 443 0.0.0.0 443</code></pre><p>其中的<code>443</code>请改为你的端口，<code>IP</code>地址统一写<code>0.0.0.0</code>。</p>
<p>4、获取接口名称</p>
<pre><code># ip addr
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: venet0: &lt;BROADCAST,POINTOPOINT,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN
    link/void
    inet 127.0.0.2/32 scope host venet0
    inet 10.10.10.10/32 brd 10.10.10.10 scope global venet0:0</code></pre><p>看具有公网<code>IP</code>的接口名称（比如我的公网<code>IP</code>是<code>10.10.10.10</code>），上面这种的接口是<code>venet0:0</code>而不是<code>venet0</code>，搬瓦工的<code>OpenVZ</code>应该都是<code>venet0:0</code>接口。</p>
<p>5、启动</p>
<pre><code>/usr/bin/rinetd-bbr -f -c /etc/rinetd-bbr.conf raw venet0:0 &amp;</code></pre><p>注意：将最后的接口改为你上面获取到的接口。在命令最后面加<code>&amp;</code>以使其能后台运行。</p>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>正常情况下的输出：</p>
<pre><code>[    0.000000] Linux version 4.10.0+ (root@gcc) (gcc version 4.9.4 (Ubuntu 4.9.4-2ubuntu1~14.04.1) ) #1 Mon Jul 31 04:50:50 UTC 2017
[    0.000000] bootmem address range: 0x7f2acc000000 - 0x7f2acffff000
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 16159
[    0.000000] Kernel command line:  virtio_mmio.device=268@0x1000000:1
[    0.000000] PID hash table entries: 256 (order: -1, 2048 bytes)
[    0.000000] Dentry cache hash table entries: 8192 (order: 4, 65536 bytes)
[    0.000000] Inode-cache hash table entries: 4096 (order: 3, 32768 bytes)
[    0.000000] Memory available: 64492k/0k RAM
[    0.000000] SLUB: HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] NR_IRQS:4096
[    0.000000] lkl: irqs initialized
[    0.000000] clocksource: lkl: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000001] lkl: time and timers initialized (irq2)
[    0.000003] pid_max: default: 4096 minimum: 301
[    0.000021] Mount-cache hash table entries: 512 (order: 0, 4096 bytes)
[    0.000023] Mountpoint-cache hash table entries: 512 (order: 0, 4096 bytes)
[    0.009053] console [lkl_console0] enabled
[    0.009056] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
[    0.009128] NET: Registered protocol family 16
[    0.009265] clocksource: Switched to clocksource lkl
[    0.009324] NET: Registered protocol family 2
[    0.009418] TCP established hash table entries: 512 (order: 0, 4096 bytes)
[    0.009421] TCP bind hash table entries: 512 (order: 0, 4096 bytes)
[    0.009503] TCP: Hash tables configured (established 512 bind 512)
[    0.009971] UDP hash table entries: 128 (order: 0, 4096 bytes)
[    0.009976] UDP-Lite hash table entries: 128 (order: 0, 4096 bytes)
[    0.010060] virtio-mmio: Registering device virtio-mmio.0 at 0x1000000-0x100010b, IRQ 1.
[    0.010186] workingset: timestamp_bits=62 max_order=14 bucket_order=0
[    0.010203] virtio-mmio virtio-mmio.0: Failed to enable 64-bit or 32-bit DMA.  Trying to continue, but this might not work.
[    0.010350] NET: Registered protocol family 10
[    0.010849] Segment Routing with IPv6
[    0.010859] sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    0.010993] Warning: unable to open an initial console.
[    0.011006] This architecture does not have kernel memory protection.
[    2.169284] random: fast init done</code></pre><p>查看<code>iptables</code>规则：</p>
<pre><code># iptables -t raw -nL
Chain PREROUTING (policy ACCEPT)
target     prot opt source               destination
ACCEPT     tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:443 /* LKL_RAW */
DROP       tcp  --  0.0.0.0/0            0.0.0.0/0            tcp dpt:443 /* LKL_RAW */

Chain OUTPUT (policy ACCEPT)
target     prot opt source               destination</code></pre><p>已经有两条规则了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>OpenVZ平台Google BBR一键安装脚本</title>
    <url>/1544/</url>
    <content><![CDATA[<p><strong>说明：</strong>此前用的一直是91yun大神制作的<code>openvz</code>的<code>BBR</code>一键包，今天看到扩软博主也制作了个<code>openvz</code>的<code>BBR</code>一键包，就转过来了。不过对于<code>VPS</code>，还是建议选择<code>KVM</code>架构，可玩性高，推荐款性价比高的<code>VPS</code>：搬瓦工VPS。</p>
<p><strong>更新：</strong><br>[2017.07.24]<br>更新了<code>liblkl-hijack.so</code>并打上了最近网上很火的“魔改版”<code>BBR</code>补丁，同时更新了<code>haproxy</code>。老版本的朋友可以重新下载安装脚本再安装一遍，需要先停止当前的服务。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>已测试通过的系统：<code>Ubuntu 14.04 x64</code>、<code>Ubuntu 16.04 x64</code>、<code>CentOS 6 x64</code>、<code>CentOS 7 x64</code>只支持<code>64</code>位系统，要求<code>glibc</code>版本<code>2.14</code>以上。</p>
<pre><code>wget --no-check-certificate https://raw.githubusercontent.com/kuoruan/shell-scripts/master/ovz-bbr/ovz-bbr-installer.sh
chmod +x ovz-bbr-installer.sh
./ovz-bbr-installer.sh</code></pre><p><strong>注意：</strong>安装失败的话，可能后台没有开启<code>TUN/TAP</code>。<br><strong>需要配置的有如下几个选项：</strong><br>1、需要加速的端口，即的<code>55</code>端口。加速开启之后，流量会先经过<code>BBR</code>处理，之后再发送给后端的<code>55</code>。<br>2、可能需要配置 “公网接口名称”，即你服务器上具有公网<code>IP</code>的接口名称。搬瓦工<code>OpenVZ</code>上默认都是<code>venet0</code>，但是有朋友可能需要安装在其他服务器上，所以我加入了此选项。</p>
<p><strong>注意：</strong>在有<code>firewalld</code>的服务器上安装的时候，<code>firewalld</code>会干扰<code>iptables</code>的规则，造成网络不通（现在具体原因未知，谁有解决方案可以提示一下）。所以在装有<code>firewalld</code>的服务器上需要先退出<code>firewalld</code>：</p>
<pre><code>systemctl stop firewalld
systemctl stop firewalld</code></pre><p><strong>如需卸载，请使用：</strong></p>
<pre><code>./ovz-bbr-installer.sh uninstall</code></pre><h2 id="错误说明"><a href="#错误说明" class="headerlink" title="错误说明"></a>错误说明</h2><p>有些机器一切正常，但是加速失败。从网友的反馈来看，可能需要将<code>55</code>的监听地址从<code>vps IP</code>改到<code>127.0.0.1</code>或者 <code>0.0.0.0</code>，具体未测试，加速失败的朋友可以试一试。</p>
<h2 id="多端口加速"><a href="#多端口加速" class="headerlink" title="多端口加速"></a>多端口加速</h2><p>安装的时候只配置了一个加速端口，但是你可以配置多端口加速，配置方法非常简单。修改文件</p>
<pre><code># vi /usr/local/haproxy-lkl/etc/port-rules</code></pre><p>在文件里添加需要加速的端口，每行一条，可以配置单个端口或者端口范围，以<code>#</code>开头的行将被忽略。 例如：<code>8800</code>或者<code>8800-8810</code>配置完成之后，只需要重启<code>haproxy-lkl</code>即可。</p>
<p><strong>注：</strong>最初版本的实现是需要再开一个新端口，后来经人提醒，我又看了一下<code>HAproxy</code>的配置说明，可以直接代理后端端口，不必再开新端口。请注意，使用该方法后，如果<code>HAproxy</code>进程异常退出，会造成无法连接原有端口。所以，请确保在退出 <code>HAproxy</code>时是通过命令正常退出的，在退出时会自动清理原有的防火墙规则。</p>
<p>使用<code>systemctl</code>或者<code>service</code>命令来启动、停止和重启<code>HAporxy-lkl</code>：</p>
<pre><code>systemctl {start|stop|restart} haproxy-lkl


service haproxy-lkl {start|stop|restart}</code></pre><p><code>/usr/local/haproxy-lkl/etc/haproxy.cfg</code>这个文件是通过<code>port-rules</code>自动生成的，每次启动都会重新生成，所以直接修改它的配置没用。 如果想要自定义配置，请修改启动文件：</p>
<pre><code>/usr/local/haproxy-lkl/sbin/haproxy-lkl</code></pre><h2 id="更新glibc"><a href="#更新glibc" class="headerlink" title="更新glibc"></a>更新glibc</h2><p><strong>1、<code>CentOS 6</code>更新<code>glibc</code>，首先下载如下几个文件：</strong></p>
<pre><code>wget http://ftp.redsleeve.org/pub/steam/glibc-2.15-60.el6.x86_64.rpm \
http://ftp.redsleeve.org/pub/steam/glibc-common-2.15-60.el6.x86_64.rpm \
http://ftp.redsleeve.org/pub/steam/glibc-devel-2.15-60.el6.x86_64.rpm \
http://ftp.redsleeve.org/pub/steam/glibc-headers-2.15-60.el6.x86_64.rpm \
http://ftp.redsleeve.org/pub/steam/nscd-2.15-60.el6.x86_64.rpm</code></pre><p><strong>2、然后安装：</strong></p>
<pre><code># rpm -Uvh glibc-2.15-60.el6.x86_64.rpm \
glibc-common-2.15-60.el6.x86_64.rpm \
glibc-devel-2.15-60.el6.x86_64.rpm \
glibc-headers-2.15-60.el6.x86_64.rpm \
nscd-2.15-60.el6.x86_64.rpm</code></pre><p><strong>3、如果以上步骤无法更新，可以手动编译更新</strong></p>
<pre><code>wget http://ftp.gnu.org/gnu/glibc/glibc-2.15.tar.gz
wget http://ftp.gnu.org/gnu/glibc/glibc-ports-2.15.tar.gz
tar -zxf glibc-2.15.tar.gz
tar -zxf glibc-ports-2.15.tar.gz
mv glibc-ports-2.15 glibc-2.15/ports
mkdir glibc-build-2.15
cd glibc-build-2.15
../glibc-2.15/configure --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin
make all &amp;&amp; make install</code></pre><p><strong>4、检查一下：</strong></p>
<pre><code># ldd --version
ldd (GNU libc) 2.15
Copyright (C) 2012 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Written by Roland McGrath and Ulrich Drepper.</code></pre><p>已经升级到<code>glibc 2.15</code>了。</p>
<h2 id="判断BBR已正常工作"><a href="#判断BBR已正常工作" class="headerlink" title="判断BBR已正常工作"></a>判断BBR已正常工作</h2><p>判断<code>bbr</code>是否正常启动可以尝试<code>ping 10.0.0.2</code>，如果能通，说明<code>bbr</code>已经启动。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>PanHelper：百度云盘搜索工具，可自动获取部分加密文件密码</title>
    <url>/2173/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>PanHelper</code>是一个百度网盘搜索工具，我们可以搜索很多网盘里的资源，就算是加密文件，有的也会自动获取密码，但不是全部都能获取到，总体来说还是很强大的。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/PanHelper(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PanHelper(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>下载地址：</strong>PanHelper.7z</p>
<p>下载后打开，输入搜索内容后，搜索，双击列表将会自动打开该网盘链接，若有密码将自动复制密码，再将密码粘贴进去。</p>
<h2 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h2><ul>
<li>Speedpan：百度网盘满速下载工具，无需登录，也可直接下载BT种子</li>
<li>YunDownload重制版：新增扫描百度网盘重复文件、和谐文件、空文件夹功能</li>
<li>利用IDM工具高速下载百度云大文件教程</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Parkomat：Linux下自建WebDav+DNS+Web服务器教程</title>
    <url>/1721/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Parkomat.io</code>，是一个<code>Linux</code>下创建<code>DNS</code>+<code>Web</code>+<code>WebDav</code>的脚本。当您有很多域名并且通过典型的托管面板进行管理变得太复杂时，<code>Parkomat</code>很有用。下面是创建<code>WebDav</code>服务器过程，<code>DNS</code>和<code>web</code>为同样配置文件。</p>
<h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><ul>
<li><code>DNS</code>服务器带有全部功能</li>
<li>具有<code>SSL</code>支持的<code>Web</code>服务器（可以在一个<code>IP</code>上运行许多证书）</li>
<li><code>WebDav</code>可轻松上传文件到网页</li>
</ul>
<p><strong>Github地址：</strong><a href="https://github.com/parkomat/parkomat" target="_blank" rel="noopener">https://github.com/parkomat/parkomat</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>本安装在<code>Centos 7</code>下测试成功。<br><strong>1、安装Go 1.8.3</strong><br>下载并安装<code>Go</code></p>
<pre><code>wget https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz --no-check-certificate
tar zxvf go1.8.3.linux-amd64.tar.gz
mv go /usr/local/</code></pre><p>添加环境变量</p>
<pre><code>vi /etc/profile</code></pre><p>添加如下内容：</p>
<pre><code>export PATH=$PATH:/usr/local/go/bin
export GOROOT=/usr/local/go</code></pre><p>使配置生效：</p>
<pre><code>source /etc/profile</code></pre><p>查看<code>Go</code>是否安装成功</p>
<pre><code>go version</code></pre><p><strong>2、安装parkomat</strong></p>
<pre><code>go get github.com/parkomat/parkomat</code></pre><p>配置文件<code>config.toml</code>（<code>/your/parkomat/directory</code>，其中<code>your</code>为放置文件的根目录）（<code>127.0.0.1</code>改为自己的服务器IP）</p>
<pre><code># if you set it to true, Parkomat will serve any domain pointing at it
catch_all = true

[[domains]]
name = &quot;example.domain&quot;

[[domains]]
name = &quot;parkomat.io&quot;
    # supports per domain zone settings
    [domains.zone]
    A = &quot;192.168.0.1&quot;
    MX = &quot;&quot;&quot;
1 better.mail.server
&quot;&quot;&quot;
    TXT = &quot;&quot;&quot;
hello world
&quot;&quot;&quot;

# each domain will use following zone settings
[zone]
# for both .domain and www.domain
A = &quot;127.0.0.1&quot;
MX = &apos;&apos;&apos;
1 test1.mail.server
10 test2.mail.server
&apos;&apos;&apos;

[web]
ip = &quot;127.0.0.1&quot;
port = 80
path = &quot;./www&quot;

# make sure that path exists
# for example issue mkdir -p /var/log/parkomat
access_log = &quot;/var/log/parkomat/access.log&quot;

[webdav]
enabled = true
username = &quot;hello&quot;
password = &quot;world&quot;
# your share will be under http://example.domain/dav/
mount = &quot;/dav/&quot;

[dns]
ip = &quot;127.0.0.1&quot;
port = 53

# details of dns servers for NS record
[[dns.servers]]
name = &quot;ns1.parkomat.co&quot;
ip = &quot;127.0.0.1&quot;

[[dns.servers]]
name = &quot;ns2.parkomat.co&quot;
ip = &quot;127.0.0.1&quot;</code></pre><p><code>./web</code>目录</p>
<pre><code>.
├── default
│   └── public_html
│       └── index.html
├── parkomat.io
|   ├── parkomat.io.crt
|   ├── parkomat.io.key
|   └── public_html
|       └── index.html
└── config.toml</code></pre><p>要添加新域名，只需创建具有该域名的新目录。如果你想使用<code>SSL</code>，只需复制<code>domain.crt</code>和<code>domain.key</code>文件复制到该域目录（注意不要将它们上传到<code>public_html</code>目录）。您需要重新启动<code>parkomat</code>。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>PassWord：一个简单的记录和管理多个账号密码的工具</title>
    <url>/1850/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们有时候在很多网站都有账号，而且单个网站就有不少，这时候就很容易忘记了，而且有时候密码都喜欢搞一样，这样是很不安全的，这里就分享个很简单的工具，由吾爱的<code>cc20911</code>制作。可以记录和管理你的账号和密码，而且还支持生成很复杂的密码功能。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>该工具功能简单，不花哨，单文件绿色，不写注册表，不生成配置文件，只会生成一个密码存储的文件（没有加密）。而且没有联网功能，也就是说不存在后门。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/passwd_re.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>简单的记录帐号密码，及使用的网站地址。</li>
<li>双击列表即调用默认浏览器打开所用的网站地址。</li>
<li>密码生成功能：可以生成最多<code>64</code>位（字母数字特殊字符）密码（如果需要，请把结构体体积改大，可以生成更多位）。</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Photon：一款基于Aria2的多线程BT/直链下载工具</title>
    <url>/2140/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Photon</code>是一款基于<code>Aria2</code>的轻量级多线程下载软件，拥有易用、友好的图形界面，支持<code>HTTP/HTTPS</code>，<code>BT</code>磁力，种子和<code>Metalink</code>。现在支持<code>macOS</code>和<code>Windows</code>版本，并且很快就会发布<code>Linux</code>版本。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Photon(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Photon(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>项目地址：</strong><a href="https://github.com/alanzhangzm/Photon" target="_blank" rel="noopener">https://github.com/alanzhangzm/Photon</a><br><strong>下载地址：</strong><a href="https://github.com/alanzhangzm/Photon/releases" target="_blank" rel="noopener">https://github.com/alanzhangzm/Photon/releases</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>PHP版Sorry 真香GIF在线生成--添加GIF模板</title>
    <url>/590/</url>
    <content><![CDATA[<p>上文写了如何搭建PHP版本的Sorry，现在来讲如何进行添加模板</p>
<p>首先我们下载 aegisub 字幕编辑工具，百度下载即可。</p>
<p>下载完成后打开软件点击视频选项打开一个视频</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/08/QQ%E5%9B%BE%E7%89%8720190810204313.png" alt=""></p>
<p>选择合适的开始位置点击箭头①的位置将当前帧作为字幕开始帧，然后选择结尾位置再点击箭头②设置为结束帧，如果字幕需要添加多个可以在下方右键选择插入即可，字幕内容统一填写 <code>&lt;?=[n]=?&gt;</code> n是代表数字依次填写 比如你有3条字幕 那么三条字幕依次分别为 <code>&lt;?=[0]=?&gt; &lt;?=[1]=?&gt; &lt;?=[2]=?&gt;</code> 。</p>
<p>然后点击左上角的文件导出字幕即可，默认是ass后缀 我们需要将文件修改为<code>template.</code>ejs 直接进行修改即可</p>
<p>然后我们需要编辑 <code>templates/index.php</code> 文件 ，按照之前同样的格式添加一个新的模板信息。</p>
<p>然后将文件上传至<code>templates/你设置的模板名称/</code>目录下需要上传原视频.mp4（不要字幕版本）和你的字幕文件 视频文件需要更名为template.mp4</p>
<p>然后你就可以重新访问你的网站查看效果了</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>PHP版Sorry 真香GIF在线生成网站搭建</title>
    <url>/586/</url>
    <content><![CDATA[<p>首先感谢大佬<a href="https://github.com/xtyxtyx/sorry" target="_blank" rel="noopener">xtyxtyx</a>制作了最初的ruby版本，然后感谢大佬 <a href="https://github.com/PrintNow/php-sorry-gif" target="_blank" rel="noopener">PrintNow</a> 制作了 PHP版本</p>
<p>演示站:<a href="https://gif.southcat.net" target="_blank" rel="noopener">gif.southcat.net</a></p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作:"></a>准备工作:</h3><p>首先你需要一台服务器，可以选择腾讯云或是阿里云的机器 24岁一下可以享受优惠（腾讯是25岁），一般来说多数虚拟机是无法使用的。</p>
<h3 id="操作环境"><a href="#操作环境" class="headerlink" title="操作环境:"></a>操作环境:</h3><p>1.安装PHP 和web服务器这里不写了，小白建议使用宝塔一键</p>
<p>2.安装 <code>ffmpeg</code> 依赖命令</p>
<h3 id="CentOS-下安装-ffmpeg"><a href="#CentOS-下安装-ffmpeg" class="headerlink" title="CentOS 下安装 ffmpeg"></a>CentOS 下安装 <code>ffmpeg</code></h3><pre><code># 安装 epel 库，如果以前装过可以不用
yum install -y epel-release

# 引入 nux.ro 的库
rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro  
rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm

# 执行安装
yum install ffmpeg

#其他系统版本呢请自行百度</code></pre><p>3.安装字体 linux系统一般是不带中文字体的需要自行安装如果不安装会造成生成图片乱码的情况出现</p>
<h2 id="Centos下安装字体"><a href="#Centos下安装字体" class="headerlink" title="Centos下安装字体"></a>Centos下安装字体</h2><pre><code>yum -y install fontconfig</code></pre><p>这时在/usr/shared目录就可以看到fonts和fontconfig目录了（腾讯云centos7.6的64位版本貌似有预装）</p>
<p>然后我们在 /usr/shared/fonts 目录下新建一个chinese目录然后可以将你的windows系统的字体文件拷贝上去 这里推荐使用finashell工具</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/08/QQ%E6%88%AA%E5%9B%BE20190810113815-1024x466.png" alt=""></p>
<p>紧接着需要修改chinese目录的权限：</p>
<pre><code>yum -y install ttmkfdir</code></pre><p>然后执行ttmkfdir命令即可：</p>
<pre><code>ttmkfdir -e /usr/share/X11/fonts/encodings/encodings.dir</code></pre><p>最后一步就是修改字体配置文件了，首先通过编辑器打开配置文件：</p>
<pre><code>vi /etc/fonts/fonts.conf</code></pre><p>添加</p>
<pre><code>&lt;!-- Font directory list --&gt;          &lt;dir&gt;/usr/share/fontconfig/myfonts&lt;/dir&gt;  </code></pre><p>然后输入:wq保存退出， 刷新内存中的字体缓存fc-cache 查看是否成功<code>fc-list</code></p>
<p>然后我们下载相关的PHP源码:<a href="https://github.com/PrintNow/php-sorry-gif" target="_blank" rel="noopener">https://github.com/PrintNow/php-sorry-gif</a>将源码上传建站即可</p>
<p>注意:需要开启PHP的 system 函数才能使用</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>PHP VPS库存监控系统搭建教程</title>
    <url>/1687/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>定时对所需要的<code>VPS</code>提供商所提供的<code>VPS</code>产品进行监控，更新指定<code>VPS</code>产品是否有货。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/vps_jk.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>本地下载：</strong>vpsstock.zip<br><strong>Git地址：</strong><a href="http://git.fungj.com/fungj/VpsStock" target="_blank" rel="noopener">http://git.fungj.com/fungj/VpsStock</a><br><strong>准备工作：</strong>需要搭建<code>WEB</code>环境，数据库为<code>mysql</code>。<br><strong>安装：</strong>上传程序到根目录，修改<code>DB</code>目录下的数据库文件相对应所需监控的<code>vps</code>信息，并导入数据库。并修改<code>mysql.php</code>文件下的数据库配置。</p>
<h2 id="自动更新"><a href="#自动更新" class="headerlink" title="自动更新"></a>自动更新</h2><p><code>linux</code>设置定时任务，将<code>http://youhostname/function.php</code>加入计划中即可（建议5分钟执行一次）。关于定时设置方法参考：Linux系统Crontab的安装及定时任务的命令详解。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>phpStudy：lnmp+lamp一键安装包</title>
    <url>/1469/</url>
    <content><![CDATA[<p><strong>说明：</strong>基于Linux VPS，在centos-6.5,debian-7.4.,ubuntu-13.10测试成功。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>下载版：</strong><code>http://lamp.phpstudy.net/phpstudy.bin</code><br><strong>完整版：</strong><code>http://lamp.phpstudy.net/phpstudy-all.bin</code></p>
<pre><code>wget -c http://lamp.phpstudy.net/phpstudy.bin  #自己选择下载版还是完整版
chmod +x phpstudy.bin
./phpstudy.bin</code></pre><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p><strong>服务进程管理</strong>：phpstudy (start|stop|restart|uninstall)<br><strong>站点主机管理</strong>：phpstudy (add|del|list)<br><strong>ftpd用户管理：</strong>phpstudy ftp (add|del|list)</p>
<p><strong>如何切换php版：</strong><br>假如你先安装的<code>apache+php5.3</code><br>想切换成<code>nginx+php5.4</code><br>你就再走一次<code>./phpstudy.bin</code><br>但是你会发现有一行是否安装<code>mysql</code>提示选不安装<br>这样只需要编译<code>nginx+php5.4</code><br>从而节省时间，这样只需要几分钟即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>ping.pe：一个可以在线测试服务器延迟和丢包的网站</title>
    <url>/1537/</url>
    <content><![CDATA[<p><strong>说明：</strong>一个简单实用的在线测试延迟及丢包的网站，测试服务器在全球各地的连接表现，支持<code>PING&amp;MTR</code>。点击各个节点绿色的<code>show</code>可以看到详细的路由。<br><img src="https://www.southcat.net/usr/picture/ping.me.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>ProjectSECURITY：一款多功能强大的网站安全程序</title>
    <url>/1624/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>ProjectSECURITY</code>是一个功能强大的网站安全应用程序，可以保护您的网站免受黑客，攻击和其他威胁。它可以保护您的网站免受 <code>SQLi</code>攻击（<code>SQL</code>注入），大规模请求（<code>Flood</code>/<code>DDOS</code>），<code>XSS</code>漏洞，代理访问者，垃圾邮件发送者，恶意文件（<code>Shell</code>）以及许多其他类型的威胁。</p>
<p><strong>本地下载地址：</strong>ProjectSECURITY<br><strong>官方正版及技术支持：</strong>点击查看</p>
<p><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(1).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h2><p>通过<code>FTP</code>从主机上的 “源” 文件夹上传文件，创建一个<code>MySQL</code>数据库（您的主机提供商可以协助)，访问您上传文件的网站（<code>yourwebsite.com/projectsecurity_folder/</code>）安装向导将自动打开，只需按照步骤操作即可。<br>PS: 最好先重命名主站点下的<code>.htaccess</code></p>
<h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>类似<code>Wordpress</code>程序进行附截图（网页已汉化）安装脚本部分汉化，运行<code>yourwebsite.com/projectsecurity_folder/</code>，自动跳转到安装程序.<br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(2).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(3).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<p>配置网站后台管理员用户<br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(4).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<p>成功安装<code>ProjectSECURITY</code><br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(5).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<p>输入方才填写的管理员后台帐号密码即可进入后台<br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(6).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<p>在你的程序的<code>heade.php</code>或所需保护的页面添加<code>API</code>调用即可<br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(7).jpg" alt="请输入图片描述" title="请输入图片描述"><br>至此完成对接可在<code>ProjectSecurity</code>后台设置方可生效</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>对于<code>ProjectSECURITY</code>如果真的靠<code>WEB</code>脚本来防止<code>DDOS</code>和<code>CC</code>等，那么抗攻击机房就没有什么事情做了。有兴趣的可以安装试试。只是起到一定作用，不能抱太大希望。</p>
<h2 id="后台功能一览"><a href="#后台功能一览" class="headerlink" title="后台功能一览"></a>后台功能一览</h2><p><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(8).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(9).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(10).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(11).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(12).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/ProjectSECURITY(13).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Proxyer：一款简单且带Web面板的内网穿透工具</title>
    <url>/1437/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于内网穿透的工具，博主已经介绍的非常多了，比如frp、lanproxy、nps、holer、sish和serveo等，用起来都还行，不过有些在安装和使用上对于一些新手来说，还是比较复杂的，最近博主发现了个新的内网穿透项目<code>Proxyer</code>，目前仅支持<code>TCP</code>协议、虽然看起来功能比较简单，但基本可以满足日常使用了，特别是在安装和使用方面，对于新手是比较友好的，这里就分享下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/proxyer(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/proxyer(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><p><strong>Github地址：</strong><a href="https://github.com/khvysofq/proxyer" target="_blank" rel="noopener">https://github.com/khvysofq/proxyer</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Docker Compose</strong></p>
<pre><code>curl -L &quot;https://get.daocloud.io/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)&quot; -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>3、安装Proxyer</strong></p>
<pre><code>wget https://raw.githubusercontent.com/khvysofq/proxyer/master/docker-compose.yml
#请将后面1.1.1.1改成你的服务器ip地址后再运行
export PROXYER_PUBLIC_HOST=1.1.1.1
docker-compose up -d</code></pre><p>安装完成后，就可以通过<code>ip:6789</code>访问服务端<code>WEB</code>管理面板了，进去后需要设置一个客户端认证密码。</p>
<p>然后<code>CentOS</code>系统建议关闭防火墙使用，或者打开部分端口也行，关闭命令：</p>
<pre><code>#CentOS 6系统
service iptables stop
chkconfig iptables off

#CentOS 7系统
systemctl stop firewalld
systemctl disable firewalld</code></pre><p>像阿里云等服务器，还需要去安全组那里开放下端口。</p>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>进入服务端面板后，界面会提供<code>Linux</code>、<code>Windows</code>、<code>macOS</code>客户端版本，然后自行根据自身系统下载指定版本的压缩包即可。</p>
<p><code>Windows</code>可以直接下载界面版本，然后双击可执行文件，会弹出一个网页界面，输入上面的认证密码，即可开始配置穿透。</p>
<p><code>Linux</code>下载压缩包后，解压出二进制文件，直接在当前目录使用<code>./proxyer</code>命令运行即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Proxyee-down：HTTP下载神器，支持百度云下载/全网嗅探/B站视频下载</title>
    <url>/1933/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前介绍了很多下载神器，比如<code>IDM</code>，<code>EagleGet</code>等，今天再介绍个下载神器<code>Proxyee-down</code>，速度非常快，内置了百度云插件，支持分段下载和断点下载，亲测下载百度云大文件很给力，这里分享下。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>使用本地<code>http</code>代理服务器方式嗅探下载请求，支持所有操作系统和浏览器(<code>IE9+</code>)，支持分段下载和断点下载。内置许多插件功能，比如，百度云大文件、合并下载限制突破，百度云合并下载解压工具(可解压<code>4G</code>大文件)。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2018.11.23】
由于该软件全新改版，增加了百度云下载、全网嗅探、B站视频下载插件，也支持MAC和Linux系统，所以这里就更新下文章。</code></pre><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Proxyee-down(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Proxyee-down(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p><strong>Github地址：</strong><a href="https://github.com/proxyee-down-org/proxyee-down" target="_blank" rel="noopener">https://github.com/proxyee-down-org/proxyee-down</a><br><strong>软件下载：</strong>点击进入，请根据自己操作系统选择正确版本下载。</p>
<p><strong>1、Windows系统</strong><br>下载<code>Windows</code>版本的压缩包以后，将压缩包解压至任意目录，执行文件夹里的<code>Proxyee Down.exe</code>文件即可。</p>
<pre><code>注：360可能会报毒，请将报毒文件加入白名单，或者直接卸载360(建议少用辣鸡360)。</code></pre><p><strong>2、MacOS系统</strong><br>下载<code>MacOS</code>版本的压缩包之后，解压至任意目录，将目录内的<code>Proxyee Down</code>应用复制到<code>Application</code>(或者应用程序，取决于系统版本以及语言设定)文件夹，双击运行即可。</p>
<pre><code>注：如果启动闪退，把APP复制到其他目录即可正常运行；因为MacOS切换代理以及安装证书需要管理员权限，所以每次应用启动时都会提示输入用户密码。</code></pre><p><strong>3、Linux系统</strong><br><code>Linux</code>系统目前没有打原生包，要下载<code>jar</code>包运行，需安装<code>JRE</code>或<code>JDK</code>(要求版本不低于<code>1.8</code>)。</p>
<p>首先输入<code>java -version</code>查看有没有安装<code>java</code>或者安装版本，如果未安装/版本过低，查看安装教程：Linux系统安装最新版JAVA教程。</p>
<p>然后找到最新版<code>jar</code>包链接地址→传送门，目前为<code>3.4</code>，再使用命令：</p>
<pre><code>#下载jar包
wget https://github.com/proxyee-down-org/proxyee-down/releases/download/3.4/proxyee-down-main.jar
#开始运行
java -jar proxyee-down-main.jar</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Pxder：P站(Pixiv)插画批量下载器</title>
    <url>/2202/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本下载器可按根据指定画师<code>UID</code>解析并下载插画（包括动图）、一键下载所有你关注的画师的插画或收藏的插画、智能增量更新下载过的画师的插画。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/Tsuk1ko/pxder" target="_blank" rel="noopener">https://github.com/Tsuk1ko/pxder</a></p>
<p><strong>说明：</strong>该工具支持全平台，本文只写<code>VPS</code>使用教程，<code>Windows</code>下载教程可以查看<code>Github</code>地址或者作者博客。</p>
<p><strong>1、安装Node.js</strong></p>
<pre><code>#Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
sudo apt-get install -y nodejs

#Debian系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt-get install -y nodejs

#Centos系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs -y</code></pre><p><strong>2、安装Pxder</strong></p>
<pre><code>#安装
npm i -g pxder
#卸载
npm uninstall -g pxder</code></pre><p><strong>3、登录P站</strong></p>
<pre><code>#登录P站，请输入账号和密码
pxder --login
#登出P站
pxder --logout</code></pre><p><strong>4、设置</strong></p>
<pre><code>#进入Pxder的设置界面
pxder --setting

#有五项设置，按下数字键选择一项进行设置，然后按照要求输入之后回车即可
[1] Download path       # 下载目录，必须设置
[2] Download thread     # 下载线程数
[3] Download timeout    # 下载超时时间
[4] Auto rename         # 自动重命名（文件夹）
[5] Proxy               # 使用代理，如果你是国外的服务器可以跳过</code></pre><p>选项说明：</p>
<pre><code>#下载目录
请注意相对路径与绝对路径的区别，不过不用担心，输入完路径后会显示绝对路径以方便你检查
目录无需手动建立，下载图片的时候会自动建立

#下载线程数
即同时下载的图片数，默认为5，最小为1，最大为10，因为其实不推荐使用过多的线程
下载图片时最左侧的一列实际上就是线程编号

#下载超时
如果这么多秒之后一张图还没被下载完则算作超时，超时后会自动重试，默认值为30
下载图片时如果线程编号是黄色底的就代表此次是重试

#自动重命名
开启了以后，例如这个画师原来叫abc，今天你再次去下载（更新）他的画作，但是他改名叫def了，那么程序会自动帮你重命名画师文件夹

#使用代理
支持使用HTTP或SOCKS
输入格式为&lt;协议&gt;://[用户名:密码@]&lt;IP&gt;:&lt;端口&gt;，例如：
http://127.0.0.1:1080
socks://abc:def@127.0.0.1:1080
如果什么也不输入就回车则关闭代理</code></pre><p><code>Pxder</code>的配置文件通常存放于<code>npm安装路径/lib</code>。</p>
<h2 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h2><p>1、会将同一画师的作品下载在(<code>UID</code>)画师名格式的文件夹内，图片命名格式为(<code>PID</code>)作品名，并且，画师名会自动删除名字中<code>@</code>符号及以后的文字（因为这些基本上都是画师的摊位信息之类的与名字无关的信息）。<br>2、文件（夹）名均会过滤掉所有<code>Windows</code>和<code>Linux</code>中不能或不推荐做文件名的符号。<br>3、动图下下来会是所有帧的压缩包。<br>4、下载时会忽略掉已经下载的插画，但是如果你下载到一半退出，会在<code>temp</code>文件夹内残留未下载完整的坏图片，你可以自行删除，或者当你再次开始同一画师的下载时也会自动被删除。<br>5、下载超时或网络错误会自动重试。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>1、下载某画师的所有插画作品</strong><br>使用<code>-u</code>或<code>--uid</code>参数，后跟画师的<code>UID</code>，可单个可多个，如果多个则用英文半角逗号隔开。</p>
<pre><code>pxder -u uid1,uid2,uid3,...
# 例如
pxder -u 5899479,724607,11597411</code></pre><p><strong>2、下载你关注的所有画师的所有插画作品</strong><br>该操作同时也会更新已下载的关注画师的作品，并且效率远高于<code>3</code>，比较推荐使用。</p>
<pre><code>#公开关注的画师
pxder -f
# or
pxder --follow

#私密关注的画师
pxder -F
# or
pxder --follow--private</code></pre><p><strong>3、更新已下载的画师的画作</strong><br>会对下载目录中检测到的所有下载过的画师的插画进行增量更新下载，与<code>2</code>的区别是可以更新下载你使用<code>1</code>下载了的但是未关注的，但是效率远低于<code>2</code>。</p>
<pre><code>pxder -U
# or
pxder --update


#公开收藏，插画会被下载至[bookmark] Public文件夹中
pxder -b
# or
pxder --bookmark

#私密收藏，插画会被下载至[bookmark] Private文件夹中
pxder -B
# or
pxder --bookmark--private</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>py12306：一个带Web管理界面的12306购票助手，支持多账号/多线程/微信电话通知</title>
    <url>/2339/</url>
    <content><![CDATA[<p><strong>说明：</strong>前几天看到了个很强大的新项目，<code>py12306</code>购票助手，支持分布式，多账号，多任务购票，还带了很方便的<code>Web</code>管理界面，支持各种通知，比如微信，电话语音，邮件等。现在貌似到了抢票的季节了，所以博主就分享一下该工具的手动安装和<code>Docker</code>安装，有需求的可以用下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/py12306(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/py12306(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>多日期查询余票</li>
<li>自动打码下单</li>
<li>用户状态恢复</li>
<li>电话语音通知</li>
<li>多账号、多任务、多线程支持</li>
<li>单个任务多站点查询</li>
<li>分布式运行</li>
<li><code>Docker</code>支持</li>
<li>动态修改配置文件</li>
<li>邮件通知</li>
<li><code>Web</code>管理页面</li>
<li>微信消息通知</li>
</ul>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><strong>Github地址：</strong><a href="https://github.com/pjialin/py12306" target="_blank" rel="noopener">https://github.com/pjialin/py12306</a></p>
<p><strong>环境要求：</strong><code>Python 3.6</code>以上的版本。</p>
<p><strong>1、安装Python 3.6</strong><br>这里博主还是和以前一样提供一个脚本安装，要是你会手动安装的话，还是建议手动下。</p>
<pre><code>#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh

#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh

#由于Ubuntu 16+自带Python3，所以只需要安装pip3就可以了
apt install python3-pip -y</code></pre><p><strong>2、安装依赖</strong></p>
<pre><code>git clone https://github.com/pjialin/py12306
cd py12306
pip3 install -r requirements.txt</code></pre><p><strong>3、配置程序</strong></p>
<pre><code>#复制配置文件
cp env.py.example env.py</code></pre><p>然后编辑该配置文件，填入你的账号等信息，建议使用<code>FTP</code>工具访问<code>VPS</code>后编辑该文件。</p>
<pre><code>#部分配置说明，其它配置就参考配置文件里面的说明，挺详细了
1、自动打码
目前支持免费打码，和若快打码    
注：免费打码无法保证持续可用，如失效请手动切换到若快平台，需要先到http://www.ruokuai.com注册一个账号后填写到配置中。

2、语音通知
语音验证码使用的是阿里云API市场上的一个服务商，需要到https://market.aliyun.com/products/57126001/cmapi019902.html 购买后将appcode填写到配置中。</code></pre><p><strong>4、测试程序</strong><br>目前提供了一些简单的测试，包括用户账号检测，乘客信息检测，车站检测等</p>
<pre><code>#开始测试
python3 main.py -t

#测试通知消息(语音, 邮件)
python3 main.py -t -n</code></pre><p><strong>5、启动程序</strong><br>测试无误后，就可以开始启动了，使用命令：</p>
<pre><code>#启动命令
python3 main.py

#可用参数列表，用法见4步骤
-t 测试配置信息
-t -n 测试配置信息以及通知消息
-c 指定自定义配置文件位置</code></pre><p>然后<code>Web</code>管理界面自动开启，访问地址为<code>ip:8008</code>。如果打不开建议检查下防火墙端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8008 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8008/tcp --permanent
firewall-cmd --reload</code></pre><p>像有些服务商可能还需要在后台开启下端口。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、配置程序</strong></p>
<pre><code>#新建文件夹存放配置文件
mkdir py12306 &amp;&amp; cd py12306
wget -O env.py https://raw.githubusercontent.com/pjialin/py12306/master/env.docker.py.example</code></pre><p>然后编辑<code>env.py</code>配置文件，可以参考上面的手动安装步骤。</p>
<p><strong>3、启动容器</strong></p>
<pre><code>#该命令记得在步骤2建立的py12306文件夹运行，data为存放数据的文件夹
docker run -d -p 8008:8008 -v $(pwd):/config -v data:/data pjialin/py12306</code></pre><p>然后<code>Web</code>界面访问地址就是<code>ip:8008</code>，其它的问题参考上面的吧。</p>
<h2 id="关于防封"><a href="#关于防封" class="headerlink" title="关于防封"></a>关于防封</h2><p>目前查询和登录操作是分开的，查询是不依赖用户是否登录，放在腾讯云和阿里云上容易被限制<code>ip</code>，建议在其它网络环境下运行。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>pyLoad：一款开源、免费带Web面板的多功能下载神器</title>
    <url>/2405/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>pyLoad</code>是一款免费和开源下载管理器，用<code>Python</code>编写，旨在通过<code>Web</code>实现极其轻量级，易于扩展和完全可管理的下载器，不仅可以直接下载直链，而且也可以从很多网站中解析出文件/视频等进行下载，比如<code>115网盘</code>，<code>youtube</code>等，包括很多男同学们很喜欢的某些视频网站，不过还是建议少看点好，得注意身体，这里就发个大概搭建方法。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/pyload(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/pyload(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/pyload/pyload" target="_blank" rel="noopener">https://github.com/pyload/pyload</a></p>
<p><strong>1、安装依赖</strong></p>
<pre><code>#Debian/Ubuntu系统，Ubuntu系统需要将python-imaging换成python-pil后再运行命令
apt update
apt install -y python-setuptools python-requests python-pycurl python-crypto python-imaging python-pyxmpp python-jinja2 python-thrift python-feedparser python-beautifulsoup python-pip tesseract-ocr python-beaker python-django unzip screen

#CentOS 7系统
yum install unzip screen -y 
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py
pip install pycryptodome pycurl django jinja jinja2 beaker thrift feedparser beautifulsoup tesseract pillow</code></pre><p><strong>2、安装ffmpeg</strong></p>
<pre><code>wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz
tar xvf ffmpeg-git-*-static.tar.xz
mv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/bin/
rm -rf ffmpeg-git-*</code></pre><p><strong>3、安装pyLoad</strong></p>
<pre><code>#下载最新稳定版
wget https://github.com/pyload/pyload/archive/stable.zip
unzip stable.zip
cd pyload-stable
#配置，不知道怎么选择的，除了账号设置那里，全部默认即可
python pyLoadCore.py</code></pre><p>配置好了就直接启动：</p>
<pre><code>python pyLoadCore.py
#后台运行
screen -dmS pyload python pyLoadCore.py</code></pre><p>访问地址为<code>ip:8000</code>，以你配置期间填的运行端口为准。</p>
<p><code>CentOS 7</code>需要开一下防火墙端口，使用命令：</p>
<pre><code>firewall-cmd --zone=public --add-port=8000/tcp --permanent
firewall-cmd --reload</code></pre><p>登录<code>Web</code>面板后可以点击上面<code>Config</code>-<code>Plugin</code>，根据插件类型就可以查看支持哪些网站了，也可以进行适当设置，然后添加下载任务的时候，直接填上文件直链地址，或者支持的视频网站地址就可以了，该程序会自动根据你给的视频地址，解析出视频链接并且下载到本地。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Pyone一款支持多网盘挂载和离线下载的OneDrive管理工具</title>
    <url>/550/</url>
    <content><![CDATA[<h2 id="Pyone"><a href="#Pyone" class="headerlink" title="Pyone"></a>Pyone</h2><p>个人感觉这是用着最舒服的onedrive的管理工具，支持多网盘挂载，离线下载并且自动上传至OneDrive。</p>
<h2 id="安装脚本说明"><a href="#安装脚本说明" class="headerlink" title="安装脚本说明"></a>安装脚本说明</h2><pre><code>#脚本来自萌鼠大佬:https://www.southcat.net/archives/806/
#脚本会一键安装PyOne所需要的Mongodb、Redis、Aria2等环境，域名使用Caddy反代，自动配置SSL证书。

#本脚本使用的Aria2为某大佬编译的多线程版本，其特点可以将下载速度最大化优化，博主已配置完毕，如服务器性能不足，可将线程自行调整。
方法：修改配置文件/root/.aria2/aria2.conf，线程参数split=64，请自行调整。

#Aria2已添加了BT-Trackers服务器，并定时自动更新服务器地址。

#脚本使用systemctl替换了程序所使用的supervisord进程守护，所以程序的重启等命令会和官方文档上的不一样，详细的使用命令可以看文章后面。

#选择域名访问的，需要提前让解析生效，不然脚本会自动断开，因为后面需要签发SSL证书，ip必须为服务器ip。</code></pre><h2 id="安装要求"><a href="#安装要求" class="headerlink" title="安装要求"></a>安装要求</h2><p>系统要求：<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>，建议<code>Debian 9</code>，脚本会自动进行检测 精简版系统无法使用 SSH使用命令：</p>
<pre><code>wget -N --no-check-certificate https://www.southcat.net/usr/shell/PyOne/PyOne.sh
bash PyOne.sh</code></pre><p>然后跟着设置访问方式和aria2密钥即可。默认<code>34567</code>端口 ，部分服务商需要开放端口。</p>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>#以下程序均已配置开机自启，所以就不说开机自启命令了。

#Redis使用命令
启动：systemctl start redis-server
重启：systemctl restart redis-server
停止：systemctl stop redis-server
状态：systemctl status redis-server

#Mongodb使用命令
启动：systemctl start mongod
重启：systemctl restart mongod
停止：systemctl stop mongod
状态：systemctl status mongod

#Aria2使用命令
启动：systemctl start aria2
重启：systemctl restart aria2
停止：systemctl stop aria2
状态：systemctl status aria2

#Caddy使用命令(使用域名的才会安装Caddy)
启动：systemctl start caddy
重启：systemctl restart caddy
停止：systemctl stop caddy
状态：systemctl status caddy

#PyOne使用命令
启动：systemctl start pyone
重启：systemctl restart pyone
停止：systemctl stop pyone
状态：systemctl status pyone</code></pre><p>作者Gayhub:<a href="https://github.com/abbeyokgo/PyOne" target="_blank" rel="noopener" title="https://github.com/abbeyokgo/PyOne">https://github.com/abbeyokgo/PyOne</a></p>
<h2 id="相关截图"><a href="#相关截图" class="headerlink" title="相关截图"></a>相关截图</h2><p><img src="https://images.weserv.nl/?url=https://img03.sogoucdn.com/app/a/100520146/fe097d20ccb1426a0bb39e3df44973a9" alt="QQ截图20190730143342.png"> <img src="https://images.weserv.nl/?url=https://img04.sogoucdn.com/app/a/100520146/bca7495ed44aed6c3a952ef04ce59366" alt="QQ截图20190730143359.png"> <img src="https://images.weserv.nl/?url=https://img02.sogoucdn.com/app/a/100520146/41e430a5d98456f9cf4f5a2ffe67804c" alt="QQ截图20190730143242.png"></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>PyOne一键安装脚本 for CentOS 7/Debian 8+/Ubuntu 16+</title>
    <url>/2298/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>PyOne</code>最近凭着离线下载(完成并自动上传至<code>Onedrive</code>)和绑定多网盘的功能被越来越多的人使用，如果你还不知道<code>PyOne</code>是何物的可以查看该教程→点击查看。作者更新也勤奋，所以得支持一下，之前博主发过基于宝塔的手动安装教程和<code>Docker</code>安装教程，查看：手动安装、Docker安装。不过由于宝塔的<code>Mongodb</code>很容易出错，有些小白也不会解决，而<code>Docker</code>也不支持<code>OpenVZ</code>，所以博主写了个一键脚本，这里分享下。</p>
<h2 id="脚本说明"><a href="#脚本说明" class="headerlink" title="脚本说明"></a>脚本说明</h2><pre><code>#脚本会一键安装PyOne所需要的Mongodb、Redis、Aria2等环境，域名使用Caddy反代，自动配置SSL证书。

#本脚本使用的Aria2为某大佬编译的多线程版本，其特点可以将下载速度最大化优化，博主已配置完毕，如服务器性能不足，可将线程自行调整。
方法：修改配置文件/root/.aria2/aria2.conf，线程参数split=64，请自行调整。

#Aria2已添加了BT-Trackers服务器，并定时自动更新服务器地址。

#脚本使用systemctl替换了程序所使用的supervisord进程守护，所以程序的重启等命令会和官方文档上的不一样，详细的使用命令可以看文章后面。

#选择域名访问的，需要提前让解析生效，不然脚本会自动断开，因为后面需要签发SSL证书，ip必须为服务器ip。</code></pre><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2020.02.14】
由于程序模块改动，手动改了下，不过只限于Debian 9、10，Ubuntu 18.04、18.10、19.04系统安装使用
【2019.9.28】
新增Debian 10，升级MongoDB版本到4.0，有问题可以留言。
【2019.6.27】
修复部分CentOS 7安装出错的问题，并新增Ubuntu系统，已在Vultr的Ubuntu 16.04、18.04、18.10、19.04上测试通过
【2019.2.23】
鉴于有人需要3.0版本，现已增加安装3.0版本选项，多个选择，并使用的3.0最后一个版本。
【2019.2.16】
修改脚本部分安装步骤，使其支持PyOne4.0
【2019.1.31】
修复部分系统安装启动pyone失败的问题
【2018.11.30】
修复PyOne刷新不出文件夹/文件的问题。</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>，建议<code>Debian 9</code>，且为刚安装好的系统，尽量不要用精简版系统。</p>
<p>使用命令：</p>
<pre><code>wget -N --no-check-certificate https://www.southcat.net/usr/shell/PyOne/PyOne.sh
bash PyOne.sh</code></pre><p>根据需求选择是否使用域名访问，然后输入域名和<code>Aria2</code>密匙即可。<br><img src="https://www.southcat.net/usr/picture/PyOne_shell.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>安装完成后，如果打不开网站的，可以使用命令一起查看下各程序状态。</p>
<pre><code>#使用域名访问的
systemctl status aria2 mongod redis-server pyone caddy
#使用IP访问的
systemctl status aria2 mongod redis-server pyone</code></pre><p>如果有显示<code>Active:inactive</code>的，可以留言说下具体程序和系统。反之如果都为<code>running</code>，可以检查下防火墙端口，比如阿里云，谷歌云等，还需要在服务器管理面板上开放<code>34567</code>端口才行。</p>
<h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>#以下程序均已配置开机自启，所以就不说开机自启命令了。

#Redis使用命令
启动：systemctl start redis-server
重启：systemctl restart redis-server
停止：systemctl stop redis-server
状态：systemctl status redis-server

#Mongodb使用命令
启动：systemctl start mongod
重启：systemctl restart mongod
停止：systemctl stop mongod
状态：systemctl status mongod

#Aria2使用命令
启动：systemctl start aria2
重启：systemctl restart aria2
停止：systemctl stop aria2
状态：systemctl status aria2

#Caddy使用命令(使用域名的才会安装Caddy)
启动：systemctl start caddy
重启：systemctl restart caddy
停止：systemctl stop caddy
状态：systemctl status caddy

#PyOne使用命令
启动：systemctl start pyone
重启：systemctl restart pyone
停止：systemctl stop pyone
状态：systemctl status pyone</code></pre><h2 id="相关目录"><a href="#相关目录" class="headerlink" title="相关目录"></a>相关目录</h2><pre><code>PyOne程序目录：/root/PyOne
Caddy配置文件目录：/root/.caddy
Aria2配置文件目录：/root/.aria2</code></pre><h2 id="相关说明"><a href="#相关说明" class="headerlink" title="相关说明"></a>相关说明</h2><pre><code>#关于操作说明
由于更换了原程序进程守护，所以网站右上角的重启网站按钮已失效，请在SSH客户端使用systemctl restart pyone命令重启程序。

#关于离线下载
Aria2配置文件的下载路径为/root/Download，但该程序自带的离线下载不调用配置文件，所以使用本程序离线下载的目录为/root/PyOne/upload。

由于本程序离线下载不调用配置文件，所以Aria2多线程可能会发挥不出来，BT服务器也无效，不过会玩的，可以通过修改根目录的aria2.py文件某些参数达到目的，或者直接研究该教程：https://www.southcat.net/archives/697/，使用Aria2面板来离线下载更好，毕竟后者用的脚本比自带离线下载更稳定。

#刷新缓存问题
如果你在后台执行缓存刷新操作，可能短时间不会生效，建议直接在SSH客户端使用python /root/PyOne/function.py UpdateFile命令刷新</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>PyOne：一款支持绑定多网盘的OneDrive文件本地化浏览系统</title>
    <url>/2285/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前博主介绍过一个<code>OneDrive</code>网盘的目录索引程序<code>OneIndex</code>，而且发了不少安装和使用教程了，介绍查看：OneIndex，今天再介绍个类似的工具<code>PyOne</code>，基于<code>Flask</code>开发的，由于是模仿的<code>OneIndex</code>，自然功能就差不多，就是界面好看很多，后台也可以直接上传编辑文件，目前作者新增多网盘和离线下载，该功能刚出来，<code>BUG</code>肯定是有的，可以向作者反映修复下，这里说一下安装教程。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/PyOne(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PyOne(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PyOne(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PyOne(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019.2.16】
PyOne代码组织大变更！更新版本号为4.0！
【2018.11.19】
新增离线下载功能，依赖Aria2。
【2018.11.15】
PyOne喜迎3.0版本，支持绑定多个onedrive网盘，再也不怕5T小姐姐不够看了。</code></pre><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><pre><code>#简单易用
只需简单设置，即可做一个onedrive文件列表分享程序。

#功能丰富
可设置文件夹密码。只需在文件夹添加.password文件，内容为密码内容，即可在该文件夹设置密码
可设置README。

#后台强大
防盗链设置。
后台上传文件。
后台更新文件。
后台设置统计代码
后台管理onedrive文件。
直接删除onedrive文件
直接在后台给文件夹添加.password和README和HEAD
直接在后台编辑文本文件。
上传本地文件至onedrive
支持创建文件夹
支持移动文件（仅限单文件）

#支持绑定多网盘

#支持离线下载</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/abbeyokgo/PyOne" target="_blank" rel="noopener">https://github.com/abbeyokgo/PyOne</a><br><strong>使用文档：</strong><a href="https://wiki.pyone.me/" target="_blank" rel="noopener">https://wiki.pyone.me/</a><br><strong>账号支持：</strong>只支持<code>onedrive</code>商业版、教育版、个人版<br><strong>环境要求：</strong><code>Python2.7</code>、<code>Redis</code>、<code>Mongodb</code>、<code>Nginx</code></p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#Centos系统
yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>Nginx</code>、<code>Redis</code>、<code>MongoDb</code>。注意<code>Debian</code>安装<code>MongoDb</code>之前还需要使用命令<code>apt install sudo</code>，不然可能存在<code>MongoDb</code>启动不了的情况。</p>
<p><strong>2、拉取源码</strong><br>使用命令：</p>
<pre><code>git clone https://github.com/abbeyokgo/PyOne.git</code></pre><p><strong>3、开始依赖</strong></p>
<pre><code>cd /root/PyOne
pip install -r requirements.txt</code></pre><p><strong>4、开始运行</strong></p>
<pre><code>#复制配置文件
cp self_config.py.sample self_config.py
cp supervisord.conf.sample supervisord.conf</code></pre><p>如果当前不是在<code>root</code>目录下(本文是默认<code>root</code>目录下)，则需要修改<code>self_config.py</code>的<code>config_dir</code>参数和<code>supervisord.conf</code>的<code>directory</code>参数为正确的目录！</p>
<pre><code>#运行
gunicorn -w4 -b 0.0.0.0:34567 run:app</code></pre><p>然后试着访问：<code>http://ip:34567</code>看看能正常显示，如果不能，请在宝塔的安全里开启端口。</p>
<p><strong>5、安装Aria2</strong></p>
<pre><code>git clone https://github.com/abbeyokgo/aria2_installer.git
cd aria2_installer
sh install_aria2.sh</code></pre><h2 id="域名设置"><a href="#域名设置" class="headerlink" title="域名设置"></a>域名设置</h2><p>点击左侧网站，添加站点，然后再点击添加好了的域名名称，这时候就进入了站点配置，点击反向代理，目标<code>URL</code>填入<code>http://127.0.0.1:34567</code>，再启用反向代理即可。</p>
<p>然后再点击配置文件，进行如下修改：</p>
<pre><code>#加上中间三句
location / 
    {
        ...

        proxy_buffering off;
        proxy_cache off;
        proxy_set_header X-Forwarded-Proto $scheme;

        ...
    }</code></pre><p>最后就可以进入域名打开授权页面了。<br><img src="https://www.southcat.net/usr/picture/PyOne(5).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/PyOne(6).png" alt="请输入图片描述" title="请输入图片描述"><br>授权成功即可，首次访问，会显示登录后台，输入初始密码：<code>PyOne</code>后会自动跳转到绑定网盘页面。如果没有跳转到绑定网盘页面，可以按照：后台-文件管理-添加网盘进行下一步。</p>
<h2 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h2><p>网站源码下有个<code>supervisord.conf</code>，主要内容如下：</p>
<pre><code>[program:pyone]
command = gunicorn -k eventlet -b 0.0.0.0:34567 run:app
directory = /root/PyOne
autorestart = true</code></pre><p>主要修改两个地方：</p>
<pre><code>端口号：即34567那个端口号，修改为自己选的，或者不改动
源码目录：directory修改为你选的网站目录</code></pre><p>修改之后运行下面的命令（记得修改为正确的目录），设置开机启动：</p>
<pre><code>echo &quot;supervisord -c /root/PyOne/supervisord.conf&quot; &gt;&gt; /etc/rc.d/rc.local
chmod +x /etc/rc.d/rc.local</code></pre><p>重启生效。</p>
<p>本次不用重启生效的方法：</p>
<pre><code>supervisord -c /root/PyOne/supervisord.conf</code></pre><h2 id="绑定多网盘"><a href="#绑定多网盘" class="headerlink" title="绑定多网盘"></a>绑定多网盘</h2><p>绑定好第一个网盘之后，登录后台(<code>/admin</code>)-文件管理，即可看到网站顶部还有两个“添加网盘”的链接，点进去即可继续绑定更多网盘。</p>
<pre><code>注意：为确保可以正确绑定网盘，请开一个隐私窗口或者清除cookies后再绑定新网盘！</code></pre><p>目前默认是只能绑定<code>3</code>个网盘，如果你需要绑定更多的网盘，可以编辑<code>self_config.py</code>文件。</p>
<pre><code>#修改od_users字典参数。参考已有内容，添加更多的位置，比如：D、E、F等
od_users={
    &quot;A&quot;:{
        &quot;client_id&quot;:&quot;&quot;,
        &quot;client_secret&quot;:&quot;&quot;,
        &quot;share_path&quot;:&quot;/&quot;,
        &quot;other_name&quot;:&quot;网盘1区&quot;,
        &quot;order&quot;:1
    },
    &quot;B&quot;:{
        &quot;client_id&quot;:&quot;&quot;,
        &quot;client_secret&quot;:&quot;&quot;,
        &quot;share_path&quot;:&quot;/&quot;,
        &quot;other_name&quot;:&quot;网盘2区&quot;,
        &quot;order&quot;:2
    },
    &quot;C&quot;:{
        &quot;client_id&quot;:&quot;&quot;,
        &quot;client_secret&quot;:&quot;&quot;,
        &quot;share_path&quot;:&quot;/&quot;,
        &quot;other_name&quot;:&quot;网盘3区&quot;,
        &quot;order&quot;:3
    }
}</code></pre><h2 id="解绑网盘"><a href="#解绑网盘" class="headerlink" title="解绑网盘"></a>解绑网盘</h2><p>如果绑定了网盘想要进行解绑，或者绑定网盘出错，但是网站已经显示了这个盘符的情况下，需要解绑网盘。</p>
<p>可按照以下步骤操作：</p>
<pre><code>1、编辑self_config.py文件。
2、找到od_users字典参数。
3、参数od_users下找到对应的盘符。
4、将对应盘符的client_id参数和client_secret参数置为空值。</code></pre><h2 id="离线下载"><a href="#离线下载" class="headerlink" title="离线下载"></a>离线下载</h2><pre><code>1、离线下载依赖aria2；请确保已经安装了aria2并在后台配置了正确信息！
2、离线下载支持：http(s)直链、磁力链接。
3、添加任务时，一行一个下载链接。
4、在哪个目录下点击离线下载按钮，最终就会上传到哪个目录下。</code></pre><h2 id="命令行操作"><a href="#命令行操作" class="headerlink" title="命令行操作"></a>命令行操作</h2><p><strong>1、单文件上传</strong></p>
<pre><code>#请确保PyOne源码路径正确
python /root/PyOne/function.py Upload 服务器文件绝对路径 onedrive路径 盘符</code></pre><p>参数说明：</p>
<pre><code>#服务器文件绝对路径：服务器下存在的一个文件绝对路径。比如：/home/test.mp4。

#onedrive路径：即onedrive下的路径。这里分两种情况：
上传后不用重命名，比如我直接上传到测试目录下，onedrive路径为：/测试/。目录最后面必须带/。
上传后重命名，比如我上传到测试目录下，并重命名为new.mp4，onedrive路径为：/测试/new.mp4。最后面不能带/。
看出区别了吗？带/和不带/的区别！

#盘符：默认为A。如果需要上传到其他网盘，或者你修改过盘符，则修改这个盘符参数。</code></pre><p>示例：</p>
<pre><code>#上传服务器的/home/test.mp4到盘符A的onedrive的测试目录下：
python /root/PyOne/function.py Upload /home/test.mp4 /测试/ A

#上传服务器的/home/test.mp4到盘符A的onedrive的测试目录下，并重命名为new.mp4：
python /root/PyOne/function.py Upload /home/test.mp4 /测试/new.mp4 A</code></pre><p><strong>2、上传文件夹所有文件</strong></p>
<pre><code>#请确保PyOne源码路径正确
python /root/PyOne/function.py UploadDir 服务器目录绝对路径 onedrive路径 盘符</code></pre><p>参数说明：</p>
<pre><code>#服务器目录绝对路径：服务器下存在的目录绝对路径。比如：/home/test

#onedrive路径：即onedrive下的路径。比如：/test/

#盘符：默认为A。如果需要上传到其他网盘，或者你修改过盘符，则修改这个盘符参数。</code></pre><p>示例：</p>
<pre><code>#上传服务器的/home下的所有文件到盘符A的onedrive的测试目录下：
python /root/PyOne/function.py UploadDir /home/test /测试/ A</code></pre><p><strong>3、更新缓存</strong><br>全量更新(默认)，即全量更新文件目录。推荐在文件目录结构发生变化的情况下才进行本操作。</p>
<pre><code>#请确保PyOne源码路径正确
python /root/PyOne/function.py UpdateFile</code></pre><p>增量更新，即只有当文件夹大小发生变化时才进行更新操作。推荐在文件目录结构没有发生变化的情况下进行操作。</p>
<pre><code>#请确保PyOne源码路径正确
python /root/PyOne/function.py UpdateFile new</code></pre><h2 id="更新源码"><a href="#更新源码" class="headerlink" title="更新源码"></a>更新源码</h2><pre><code>#PyOne旧版本升级到3.0，请重装！

#PyOne3.0内小版本更新
拉最新代码：git pull
重新安装依赖，看是否有新增的依赖包：pip install -r requirements.txt
重启网站：supervisorctl -c supervisord.conf restart pyone
最好更新一下文件缓存：python function.py UpdateFile</code></pre><h2 id="错误指导"><a href="#错误指导" class="headerlink" title="错误指导"></a>错误指导</h2><p><strong>1、502 Bad Gateway</strong><br>一般是网站没有运行导致的。在网站目录运行</p>
<pre><code>supervisord -c supervisord.conf</code></pre><p>如果运行上面的命令出现类似<code>Error:Another program is alright listening on a port</code>的错误，说明已经运行过这个命令，可以运行以下命令重启网站</p>
<pre><code>supervisorctl -c supervisord.conf restart pyone</code></pre><p><strong>2、500 Internal Server Error</strong><br>一般是因为服务器内部出现问题，可检查<code>Redis</code>、<code>MongoDB</code>是否安装？是否运行？<br>如果上诉没问题，可清空<code>Redis</code>缓存：</p>
<pre><code>redis-cli #进入redis命令行
 &gt; FLUSHALL</code></pre><p>如清空<code>Redis</code>缓存还有问题，可手动运行网站查看错误</p>
<pre><code>supervisorctl -c supervisord.conf stop pyone &amp;&amp; gunicorn -k eventlet -b 0:34567 run:app</code></pre><p>然后再访问页面，查看<code>ssh</code>的错误提示。</p>
<h2 id="便捷教程"><a href="#便捷教程" class="headerlink" title="便捷教程"></a>便捷教程</h2><ul>
<li>PyOne一键安装脚本 for Debian 8+/CentOS 7</li>
<li>使用Docker安装OneDrive网盘管理工具PyOne</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Python 3.6一键安装脚本 for CentOS/Debian</title>
    <url>/1948/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近一直在玩爬虫，需要使用到<code>python3</code>和<code>pip3</code>，手动安装又有点麻烦，就搞了个一键脚本，<code>Python</code>版本为<code>3.6.4</code>，脚本安装了很多依赖包，不会因为缺少依赖而出问题，这里就分享下。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、检查下系统是否有Python3</strong></p>
<pre><code>python3 -V</code></pre><p><strong>2、安装Python3</strong></p>
<pre><code>#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</code></pre><p>然后再输入<code>python3 -V</code>看是否安装成功。一般安装成功就可以使用<code>python3</code>、<code>pip3</code>了。</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>如果想修改系统默认的<code>Python</code>版本的话，还需要创建软链接，可使用命令：</p>
<pre><code>cd /usr/bin
mv python python.backup
ln -s /usr/local/bin/python3 /usr/bin/python</code></pre><p>然后重启运行<code>python -V</code>查看即可。</p>
<pre><code>vi /usr/bin/yum
将文件首行
#!usr/bin/python
修改为python之前的版本，如：
#!/usr/bin/python2.7</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>qBittorrent+Deluge+rTorrent+Transmission+H5ai多功能一键脚本</title>
    <url>/2163/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主今天逛了下<code>Github</code>，发现了一个大佬写的一个脚本，很强大，这里分享一下，脚本可安装<code>qBittorrent</code>、<code>Deluge</code>、<code>rTorrent</code>、<code>Transmission</code>、<code>H5ai</code>、<code>Flood</code>、<code>Remote</code> <code>Desktop</code>、<code>wine &amp; mono</code>、<code>Flexget</code>、<code>rclone</code>、<code>BBR</code>及一些功能，如<code>ffmpeg</code>、<code>mediainfo</code>、<code>mkvtoolnix</code>、<code>eac3to</code>、<code>bluray</code>脚本、<code>mktorrent</code>，基本上该有的都有了，可能有些有人都没听说过，博主在后面会说明下。</p>
<h2 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h2><p><strong>Github地址：</strong><a href="https://github.com/Aniverse/inexistence" target="_blank" rel="noopener">https://github.com/Aniverse/inexistence</a></p>
<p><strong>系统要求：</strong><code>Ubuntu 16.04</code>、<code>18.04</code>；<code>Debian 8</code>、<code>9</code> ；<code>Ubuntu 14.04</code>、<code>Debian 7</code>可以选择用脚本升级系统，且尽量使用纯净系统，即刚重装的系统。</p>
<p>运行命令：</p>
<pre><code>bash -c &quot;$(wget --no-check-certificate -qO- https://github.com/Aniverse/inexistence/raw/master/inexistence.sh)&quot;
#或者
wget --no-check-certificate -qO inexistence.sh https://github.com/Aniverse/inexistence/raw/master/inexistence.sh
bash inexistence.sh</code></pre><p>然后会出现以下选项：</p>
<pre><code>##关于选项及说明请先看文章后面，然后再进行选择

#是否升级系统，本选项只在Ubuntu 14.04、Debian 7中出现
You are now running Ubuntu 14.04.5, which is not supported by this script

01) Upgrade to Ubuntu 16.04 (Default)
02) Upgrade to Ubuntu 18.04
03) Do NOT upgrade system and exit script
Would you like to upgrade your system? (Default 01): 

#添加账号和密码
The script needs a username
This will be your primary user. It can be an existing user or a new user 
Enter username: rats
Confirm that username is rats, [Y]es or [N]o? y

The script needs a password, it will be used for Unix and WebUI 
The password must consist of characters and numbers and at least 8 chars,
or you can leave it blank to generate a random password
Enter the password: moerats
Enter the new password again: moerats

#改变系统源
Would you like to change sources list? [Y]es or [N]o: y
/etc/apt/sources.list will be replaced

01) Use all available threads (Default)
02) Use half of available threads
03) Use one thread
04) Use two threads
How many threads do you want to use when compiling? (Default 01): 

#安装时是否添加虚拟内存，本选项只在2G以下的服务器中显示
Note that Your RAM is below 1926MB, memory may got exhausted when compiling
Would you like to use swap when compiling? [Y]es or [N]o: 

#安装Deluge
01) Deluge 1.3.11
02) Deluge 1.3.12
03) Deluge 1.3.13
04) Deluge 1.3.14
05) Deluge 1.3.15
30) Select another version
40) Deluge 1.3.13 from repo
99) Do not install Deluge
Which version of Deluge do you want? (Default 05): 

#安装qBittorrent
01) qBittorrent 3.3.7
02) qBittorrent 3.3.11
03) qBittorrent 3.3.14
04) qBittorrent 3.3.16
11) qBittorrent 4.0.2
12) qBittorrent 4.0.3
13) qBittorrent 4.0.4
14) qBittorrent 4.1.0
15) qBittorrent 4.1.1
30) Select another version
40) qBittorrent 3.3.7 from repo
99) Do not install qBittorrent
Which version of qBittorrent do you want? (Default 13): 

#安装rTorrent，包括ruTorrent，nginx，ffmpeg 3.4.2，rar 5.5.0，h5ai
14) rTorrent 0.9.6 (feature-bind branch on Jun 6, 2018)
15) rTorrent 0.9.7 (with IPv6 support)
99) Do not install rTorrent
Note that Debian 9 and Ubuntu 18.04 is only supported by rTorrent 0.9.6 and later
Which version of rTorrent do you want? (Default 14): 

#安装flood，rTorrent的一个面板
Would you like to install flood?  [Y]es or [N]o: 

#安装Transmission
01) Transmission 2.77
02) Transmission 2.82
03) Transmission 2.84
04) Transmission 2.92
05) Transmission 2.93
06) Transmission 2.94
30) Select another version
40) Transmission 2.92 from repo
99) Do not install Transmission
Which version of Transmission do you want? (Default 40): 

#安装VNC和X2Go
01) VNC  with xfce4
02) X2Go with xfce4
99) Do not install remote desktop
Would you like to install remote desktop? (Default 99): 

#安装wine和mono
Would you like to install wine and mono? [Y]es or [N]o: 

#安装MKVToolnix、mktorrent、eac3to、mediainfo、ffmpeg
MKVToolnix, mktorrent, eac3to, mediainfo, ffmpeg ...
Would you like to install the above additional softwares? [Y]es or [N]o: 

#安装Flexget
Would you like to install Flexget? [Y]es or [N]o: 

#安装rclone
Would you like to install rclone? [Y]es or [N]o: 

#安装BBR
Your kernel is newer than 4.9, but BBR is not enabled
Would you like to use BBR?  [Y]es or [N]o: 

#系统设置
Would you like to do some system tweaks?  [Y]es or [N]o: </code></pre><p>选择好后，会进行确认：<br><img src="https://www.southcat.net/usr/picture/qDrth(1).png" alt="请输入图片描述" title="请输入图片描述"><br>如果没问题，选择<code>y</code>开始安装，直到安装完成。<br><img src="https://www.southcat.net/usr/picture/qDrth(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="选项说明"><a href="#选项说明" class="headerlink" title="选项说明"></a>选项说明</h2><p>本选项说明可能不会及时更新，不过以后脚本更新的话，大都差不多，请自行选择安装。</p>
<p><strong>1、是否升级系统</strong><br>如果你的系统是<code>Debian 7</code>或<code>Ubuntu 14.04</code>，你可以用本脚本来升级到<code>Debian 8</code>、<code>9</code>或<code>Ubuntu 16.04</code>、<code>18.04</code>，理论上整个升级过程应该是无交互的，应该不会碰到什么问题，升级完后会直接执行重启命令，重启完后你需要再次运行脚本来完成软件的安装</p>
<p><strong>2、输入账号密码</strong><br>你输入的账号密码会被用于各类软件以及<code>SSH</code>的登录验证，用户名需要以字母开头，长度<code>4-16</code>位；密码最好同时包含字母和数字，长度至少8位，请记住用户名和密码。</p>
<p><strong>3、改变系统源</strong><br>其实大多数情况下无需换源；但某些盒子默认的源可能有点问题，所以这里干脆做成默认都换源了。</p>
<p><strong>4、安装时是否添加虚拟内存</strong><br>一些内存不够大的<code>VPS</code>在编译安装时可能物理内存不足，使用<code>swap</code>可以解决这个问题，实测<code>1GB</code>内存的<code>Vultr VPS</code>安装 <code>Flood</code>不开启<code>swap</code>的话会失败，开启就没问题了，目前对于物理内存小于<code>1926MB</code>的都默认启用<code>swap</code>，如果内存大于这个值那么你根本就不会看到这个选项。</p>
<p><strong>5、安装Deluge</strong><br>默认选项为从源码安装<code>1.3.15</code>，此外还会安装一些实用的<code>Deluge</code>第三方插件。</p>
<pre><code>AutoRemovePlus是自动删种插件，支持WebUI与GtkUI。
ltconfig是一个调整libtorrent-rasterbar参数的插件，在安装完后就启用了High Performance Seed模式。
Stats、TotalTraffic、Pieces、LabelPlus、YaRSS2、NoFolder 都只能在GUI下设置，WebUI下无法显示。
Stats和TotalTraffic、Pieces分别可以实现速度曲线和流量统计、区块统计。
LabelPlus是加强版的标签管理，支持自动根据Tracker对种子限速，刷Frds可用；也只有GUI可用。
YaRSS2是用于RSS的插件；NoFolder可以让Deluge在下载种子时不生成文件夹，辅种可用。</code></pre><p><strong>6、安装qBittorrent</strong><br><code>Debian 8</code>下安装<code>qBittorrent 4.0</code>目前还在测试阶段，隐藏选项<code>21</code>，是可以在<code>WebUI</code>下跳过校验的<code>3.3.11</code>版本，使用修改版客户端、跳过校验存在风险，后果自负。</p>
<p><strong>7、安装rTorrent</strong><br>这部分是调用修改的<code>rtinst</code>来安装的，默认选项为安装原版<code>0.9.4</code>。</p>
<pre><code>安装rTorrent，ruTorrent，nginx，ffmpeg 3.4.2，rar 5.5.0，h5ai目录列表程序。
0.9.2-0.9.4支持IPv6用的是打好补丁的版本，属于修改版客户端。
0.9.6支持IPv6用的是feature-bind分支，原生支持IPv6（Debian 9 强制使用此版本）。
不修改SSH端口，FTP使用vsftpd，端口号21，监听IPv6。
设置了Deluge、qBittorrent、Transmission WebUI的反代。
ruTorrent版本为来自master分支的3.8版，此外还安装了如下的插件和主题。
club-QuickBox MaterialDesign第三方主题。
AutoDL-Irssi（原版rtinst自带）。
Filemanager插件可以在ruTorrent上管理文件、右键创建压缩包、生成mediainfo和截图。
ruTorrent Mobile插件可以优化ruTorrent在手机上的显示效果（不需要的话可以手动禁用插件）。
spectrogram插件可以在ruTorrent上获取音频文件的频谱。
Fileshare插件创建有时限、可自定义密码的文件分享链接。
Mediastream插件可以在线观看盒子的视频文件。</code></pre><p>隐藏选项<code>11-15</code> ，分别对应<code>1.3.5-1.3.9</code>版本，隐藏选项<code>21</code>，是可以跳过校验、全磁盘预分配的<code>1.3.15</code>版本，使用修改版客户端、跳过校验 存在风险，后果自负。</p>
<p><strong>8、安装flood</strong><br>选择不安装<code>rTorrent</code>的话这个选项不会出现，<code>Flood</code>是<code>rTorrent</code>的另一个<code>WebUI</code>，界面美观，加载速度快，不过功能上不如<code>ruTorrent</code>。</p>
<p><strong>9、安装Transmission</strong><br><code>Transmission</code>默认选择从仓库里安装，节省时间(<code>ban 2.93</code>以前版本的站点也不是很多），此外还会安装美化版的<code>WebUI</code>，更方便易用。隐藏选项<code>11</code>和<code>12</code>，分别对应可以跳过校验、无文件打开数限制的<code>2.92</code>、<code>2.93</code>版本，使用修改版客户端、跳过校验存在风险，后果自负。</p>
<p><strong>10、安装VNC和X2Go</strong><br>远程桌面选项，默认不安装，远程桌面可以完成一些<code>CLI</code>下做不了或者<code>CLI</code>实现起来很麻烦的操作，比如<code>BD-Remux</code>，<code>wine uTorrent</code>，<code>VNC</code>目前在<code>Debian</code>下安装完后无法连接，建议<code>Debian</code>系统用<code>X2Go</code>或者另外想办法安装<code>VNC</code>。</p>
<p><strong>11、安装wine和mono</strong><br>这两个默认也是不安装的，<code>wine</code>可以实现在<code>Linux</code>上运行<code>Windows</code>程序，比如<code>DVDFab</code>、<code>uTorrent</code>，<code>mono</code>是一个跨平台的<code>.NET</code>运行环境，<code>BDinfoCLI</code>、<code>Jackett</code>、<code>Sonarr</code>等软件的运行都需要<code>mono</code>。</p>
<p><strong>12、安装ffmpeg、MKVToolnix等</strong><br>安装最新版本的<code>ffmpeg</code>、<code>mediainfo</code>、<code>mkvtoolnix</code>、<code>eac3to</code>、<code>bluray</code>脚本、<code>mktorrent</code>。</p>
<pre><code>mediainfo用最新版是因为某些站发种填信息时有这方面的要求，比如HDBits。
mkvtoolnix主要是用于做BD-Remux。
ffmpeg对于大多数盒子用户来说主要是拿来做视频截图用，采用git的Static Builds。
eac3to需要wine来运行，做remux时用得上。
mktorrent由于1.1版的实际表现不是很理想，因此选择从系统源安装1.0版本。
BDinfoCLI已经自带了，需要mono来运行。
bluray其实也自带了。</code></pre><p><strong>13、安装Flexget</strong><br>默认不安装；这里启用了<code>daemon</code>模式和<code>WebUI</code>，还预设了一些模板，仅供参考，因为配置文件里的<code>passkey</code>需要用户自己修改，所以这里也没有启用<code>schedules</code>或<code>crontab</code>，需要的话自己设置</p>
<p><strong>14、安装rclone</strong><br>默认不安装。安装好后自己输入<code>rclone config</code>进行配置。</p>
<p><strong>15、安装BBR</strong><br>如果你想安装魔改版<code>BBR</code>或锐速，请移步到：BBR+BBR魔改+Lotsever(锐速)一键脚本，脚本会检测你当前的内核版本，大于<code>4.9</code>是默认不安装新内核与<code>BBR</code>，高于<code>4.9</code>是默认直接启用<code>BBR</code>（不安装新内核）。</p>
<p><strong>16、系统设置</strong><br>默认启用，具体操作如下：</p>
<pre><code>修改时区为UTC+8
语言编码设置为en.UTF-8
设置alias简化命令
提高系统文件打开数
修改screen设置
释放最大分区的保留空间</code></pre><h2 id="增加功能"><a href="#增加功能" class="headerlink" title="增加功能"></a>增加功能</h2><pre><code>#Password
修改SSH、Deluge、ruTorrent、Transmission、qBittorrent、Flexget密码的脚本

#Version
升级、降级Deluge、ruTorrent、Transmission、qBittorrent版本的脚本

#Box
考虑把各种客户端的安装每个都做成单独的脚本，然后在inexistence、banben中需要安装的时候直接调用，这个思路是从 QuickBox那边学到的，最后的命令大概这样子box install vnc、box purge qbittorrent。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>R-STUDIO：Windows平台超强的数据恢复软件</title>
    <url>/1792/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们都喜欢在电脑备份一些资料，图片和存一些大姐姐视频等等，有时候由于手误等一些因素，不小心给删了，特别是对于一些重要资料的丢失就很蛋疼了，这时候就需要个数据恢复软件了，网上很多软件很多都没啥用，这里推荐个很叼的软件<code>R-STUDIO</code>，听说没有它恢复不了的数据。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>R-Studio</code>号称是损坏硬盘上资料的救星，是一款功能超强的数据恢复工具，采用全新恢复技术，它亦可针对严重毁损或未知的文件系统，使用原始文件恢复（扫描已知的文件类型）。亦可用于本地和网络磁盘，即使已格式化、毁损或删除该分区。弹性参数设置，让您得以全面控制数据恢复过程。</p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>官方下载：</strong>R-Studio8.exe<br><strong>本地下载：</strong>R-Studio8.exe</p>
<pre><code>名称：www.Cisoar.com
公司：Cisoar.Inc
注册码：Do1z6USGB+sPvR7JD+zAKwU9hlBQE/8MTYGbKXdFvuou+7k8egArDY+EsRigGExVhdx/pRoAgwrumwtOLEu7Gg5+AG4adwdwJ3Pnhg5qOXJlZ6HbHv8Eka3iAOn4</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>RSSHub：一个轻量、易于扩展的RSS生成器，支持B站/微博/网易云音乐等</title>
    <url>/2054/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>RSSHub</code>是一个轻量、易于扩展的<code>RSS</code>生成器，该工具可以给任何奇奇怪怪的内容生成<code>RSS</code>订阅源。支持<code>B</code>站、微博、网易云音乐、知乎、简书、掘金、自如、快递等。该工具后续可能还会增加更多网站的<code>RSS</code>。</p>
<h2 id="支持"><a href="#支持" class="headerlink" title="支持"></a>支持</h2><p><strong>bilibili</strong></p>
<pre><code>番剧、 UP主投稿、 UP主动态、UP主收藏夹、分区视频</code></pre><p><strong>微博</strong></p>
<pre><code>博主</code></pre><p><strong>网易云音乐</strong></p>
<pre><code>歌单歌曲、用户歌单、歌手专辑</code></pre><p><strong>简书</strong></p>
<pre><code>首页、7日热门、30日热门、专题、作者</code></pre><p><strong>知乎</strong></p>
<pre><code>收藏夹</code></pre><p><strong>掘金</strong></p>
<pre><code>分类</code></pre><p><strong>自如</strong></p>
<pre><code>房源</code></pre><p><strong>快递</strong></p>
<pre><code>所有快递公司</code></pre><p><strong>贴吧</strong></p>
<pre><code>帖子列表</code></pre><p><strong>妹子图</strong></p>
<pre><code>首页、分类、所有专题、专题详情、详情</code></pre><p><strong>pixiv</strong></p>
<pre><code>用户收藏、用户动态、排行榜</code></pre><p><strong>豆瓣</strong></p>
<pre><code>正在上映的电影、正在上映的高分电影、即将上映的电影、北美票房榜</code></pre><p><strong>煎蛋</strong></p>
<pre><code>无聊图</code></pre><p><strong>喷嚏</strong></p>
<pre><code>图卦</code></pre><p><strong>Dockone</strong></p>
<pre><code>周报</code></pre><p><strong>腾讯吐个槽</strong></p>
<pre><code>吐槽新帖</code></pre><p><strong>开发者头条</strong></p>
<pre><code>今日头条、独家号</code></pre><p><strong>笔趣阁</strong></p>
<pre><code>小说章节</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/DIYgod/RSSHub" target="_blank" rel="noopener">https://github.com/DIYgod/RSSHub</a></p>
<p><strong>项目地址：</strong><a href="https://docs.rsshub.app/" target="_blank" rel="noopener">https://docs.rsshub.app/</a></p>
<p><strong>环境要求：</strong><code>Redis</code>、<code>Node.js</code>，这里只讲<code>CentOS</code>系统安装方法。</p>
<p><strong>1、安装EPEL</strong></p>
<pre><code>#CentOS/RHEL 6：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
#CentOS/RHEL 7：
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</code></pre><p><strong>2、安装Redis</strong></p>
<pre><code>#安装Redis
yum install redis
#返回结果PONG，则安装成功。
redis-cli ping</code></pre><p><strong>3、安装Node.js</strong></p>
<pre><code>curl -sL https://rpm.nodesource.com/setup_8.x | bash -
yum install nodejs -y</code></pre><p><strong>4、安装RSSHub</strong></p>
<pre><code>yum -y install git
git clone https://github.com/DIYgod/RSSHub.git
cd RSSHub &amp;&amp; npm install</code></pre><p><strong>5、运行RSSHub</strong><br>这里使用<code>Screen</code>运行程序。防止程序中断。</p>
<pre><code>yum -y install screen
screen -S RSSHub
cd RSSHub
node lib/index.js</code></pre><p>然后使用<code>IP:1200</code>就可以访问了，如果需要使用域名并添加<code>SSL</code>的，接着看。</p>
<h2 id="添加SSL"><a href="#添加SSL" class="headerlink" title="添加SSL"></a>添加SSL</h2><p>这是使用<code>Caddy</code>反代。并自动添加<code>SSL</code>证书。</p>
<p>安装<code>Caddy</code></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>编辑配置文件</p>
<pre><code>#以下全部内容是一个整体，修改域名、IP、邮箱后一起复制到SSH运行！
echo &quot;https://xx.com {
 tls admin@southcat.net
 proxy / 111.111.111.111:1200
 log /var/log/caddy.log
 gzip
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>启动<code>Caddy</code></p>
<pre><code>/etc/init.d/caddy restart</code></pre><p>最后就可以通过域名<code>https</code>访问了。</p>
<h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><pre><code>提示：由于官方接口用不了，这里博主提供个，地址：https://rsshub.southcat.net</code></pre><p><strong>示例域名：</strong><code>rsshub.southcat.net</code>，缓存时间<code>5</code>分钟。你用你自己搭建好的域名也行。<br><strong>1、bilibili</strong></p>
<pre><code>#番剧
举例:https://rsshub.southcat.net/bilibili/bangumi/21680
路由:/bilibili/bangumi/:seasonid
参数:seasonid，番剧id，可在番剧主页URL中找到

#UP主投稿
举例: https://rsshub.southcat.net/bilibili/user/video/2267573
路由: /bilibili/user/video/:uid
参数:uid，用户id，可在UP主主页中找到

#UP主动态
举例:https://rsshub.southcat.net/bilibili/user/dynamic/2267573
路由:/bilibili/user/dynamic/:uid
参数:uid，用户id，可在UP主主页中找到

#UP主收藏夹
举例:https://rsshub.southcat.net/bilibili/user/fav/2267573
路由:/bilibili/user/fav/:uid
参数:uid，用户id，可在UP主主页中找到

#UP主投币视频
举例:https://rsshub.southcat.net/bilibili/user/coin/2267573
路由:/bilibili/user/coin/:uid
参数:uid，用户id，可在UP主主页中找到

#分区视频
举例:https://rsshub.southcat.net/bilibili/partion/33
路由:/bilibili/partion/:tid
参数:tid，分区id
id参数查看：https://rsshub.js.org，请移至B站分区视频栏查看。</code></pre><p><strong>2、微博</strong></p>
<pre><code>#博主
举例:https://rsshub.southcat.net/weibo/user/3306934123
路由:/weibo/user/:uid
参数:uid，用户id，博主主页打开控制台执行/uid=(\d+)/. exec(document.querySelector(&apos;.opt_box .btn_bed&apos;).getAttribute(&apos;action-data&apos;))[1]获取</code></pre><p><strong>3、网易云音乐</strong></p>
<pre><code>#歌单歌曲
举例:https://rsshub.southcat.net/ncm/playlist/35798529
路由:/ncm/playlist/:id
参数:id，歌单id，可在歌单页URL中找到

#用户歌单
举例:https://rsshub.southcat.net/ncm/user/playlist/45441555
路由:/ncm/user/playlist/:uid
参数:uid，用户uid，可在用户主页URL中找到

#歌手专辑
举例:https://rsshub.southcat.net/ncm/artist/2116
路由:/ncm/artist/:id
参数:id，歌手id，可在歌手详情页URL中找到</code></pre><p><strong>4、掘金</strong></p>
<pre><code>#分类
举例:https://rsshub.southcat.net/juejin/category/frontend
路由:/juejin/category/:category
参数:category，分类名，可在分类链接地址最后获取</code></pre><p><strong>5、简书</strong></p>
<pre><code>#首页
举例:https://rsshub.southcat.net/jianshu/home
路由:/jianshu/home
参数:无

#7日热门
举例:https://rsshub.southcat.net/jianshu/trending/weekly
路由:/jianshu/trending/weekly
参数: 无

#30日热门
举例:https://rsshub.southcat.net/jianshu/trending/monthly
路由:/jianshu/trending/monthly
参数:无

#专题
举例:https://rsshub.southcat.net/jianshu/collection/xYuZYD
路由:/jianshu/collection/:id
参数:id，专题id，可在专题页URL中找到

#作者
举例:https://rsshub.southcat.net/jianshu/user/yZq3ZV
路由:/jianshu/user/:id
参数:id，作者id，可在作者主页URL中找到</code></pre><p><strong>6、自如</strong></p>
<pre><code>#房源
举例:https://rsshub.southcat.net/ziroom/room/sh/1/2/五角场
路由:/ziroom/room/:city/:iswhole/:room/:keyword
参数：
city:城市，北京bj；上海sh；深圳sz；杭州hz；南京nj；广州gz；成都cd；武汉wh；天津tj
iswhole:是否整租
room:房间数
keyword:关键词</code></pre><p><strong>7、快递</strong><br>快递送达后请及时取消订阅，以免不必要地浪费服务器资源</p>
<pre><code>举例:https://rsshub.southcat.net/express/youzhengguoji/CV054432809US
路由: /express/:company/:number
参数：company:快递公司代码、number:快递单号</code></pre><p>快递公司代码参考：API URL 所支持的快递公司及参数说明</p>
<p><strong>8、知乎</strong></p>
<pre><code>#收藏夹
举例:https://rsshub.southcat.net/zhihu/collection/26444956
路由:/zhihu/collection/:id
参数:id，收藏夹id，可在收藏夹页面URL中找到</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>SC private letter： 一个基于serverchan微信推送服务的私信发送站</title>
    <url>/1920/</url>
    <content><![CDATA[<p><strong>说明：</strong>对于我们很多有博客的人来说，都需要一个能让访客即时联系到的功能，而友链博主<code>Tsuk1ko</code>花时<code>N</code>天打造了这么一款工具<code>SC private letter</code>，一个基于<code>serverchan</code>微信推送服务的私信发送站，通过微信提醒访客能很快的联系到博主。</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先，必须要例行感谢的是<code>@Easy</code>大大，<code>Server</code>酱的作者。<code>Server</code>酱这一项目提供了简单易用的微信推送接口，使得无数人节省了大量的时间和精力，可以说是即时推送强迫症患者的一大福音。</p>
<p>本页面结构以及样式基本来自于<code>https://sc.ftqq.com</code>，当然含有一定的个人修改部分。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/SC_private_letter.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/Tsuk1ko/serverchan-private-letter" target="_blank" rel="noopener">https://github.com/Tsuk1ko/serverchan-private-letter</a></p>
<p><strong>环境要求：</strong><code>Nginx</code>/<code>Apache</code>、<code>PHP</code>。<br>进入<code>Github</code>地址，下载源码，修改<code>.key.php</code>，写上你的<code>SCKEY</code>即可使用。不知道方糖<code>SCKEY</code>的，请去<a href="https://sc.ftqq.com了解下。" target="_blank" rel="noopener">https://sc.ftqq.com了解下。</a></p>
<p>如果需要修改背景图片之类的请编辑<code>index.php</code>修改<code>head</code>中的<code>css</code>内容。</p>
<p>另外，访问时带上<code>get</code>参数<code>nobg</code>可以将背景图变成透明，方便在<code>iframe</code>中使用。</p>
<pre><code>https://xxx.com/?nobg</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Screen-linux下的多窗口管理器小白快速上手</title>
    <url>/600/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>** Screen**是一款由GNU计划开发的用于命令行终端切换的自由软件。用户可以通过该软件同时连接多个本地或远程的命令行会话，并在其间自由切换。</p>
<p>简单来说可以理解为将linux命令行变成windows那样，可以同时进行多窗口操作.</p>
<h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><h3 id="安装Screen"><a href="#安装Screen" class="headerlink" title="安装Screen"></a>安装Screen</h3><pre><code># yum安装
yum install screen
# apt-get安装
sudo apt-get update
sudo apt-get install screen</code></pre><h3 id="创建第一个窗口"><a href="#创建第一个窗口" class="headerlink" title="创建第一个窗口"></a>创建第一个窗口</h3><p>使用<code>screen -S &lt;name&gt;</code>指令来创建你的第一个窗口，比如</p>
<pre><code>screen -S sorry</code></pre><p>创建完成之后会自动进入创建的screen窗口 此时你就可以进行操作操作</p>
<h3 id="如何退出当前窗口"><a href="#如何退出当前窗口" class="headerlink" title="如何退出当前窗口"></a>如何退出当前窗口</h3><p>我们可以使用ctrl+a+d快捷键来退出当前窗口</p>
<h3 id="如何回到创建的窗口"><a href="#如何回到创建的窗口" class="headerlink" title="如何回到创建的窗口"></a>如何回到创建的窗口</h3><p>如果说你不记得窗口名称可以通过<code>screen -ls</code>命令来查看窗口，比如:</p>
<p><img src="https://southcat.net/wp-content/uploads/2019/08/QQ%E6%88%AA%E5%9B%BE20190812144227.png" alt=""></p>
<p>然后我们输入指令<code>screen -r &lt;name&gt;</code>来进入指定名称窗口，比如<code>screen -r sorry</code></p>
<h3 id="如何结束创建的窗口"><a href="#如何结束创建的窗口" class="headerlink" title="如何结束创建的窗口"></a>如何结束创建的窗口</h3><p>很简单的一个方法 <code>kill pid</code>,比如上面图片sorry窗口对应的pid是12078我们只需要输入<code>kill 12078</code>命令即可快速结束sorry窗口</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>掌握上面的几个指令就可以快速的上手screen，想要更深的掌握screen可以自行百度，或是收藏本站，我会在后面继续继续更新相关文章.</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>sccreen新手上手</tag>
        <tag>screen</tag>
        <tag>screen快速上手</tag>
      </tags>
  </entry>
  <entry>
    <title>Serveo：一款简单的内网穿透工具，无需安装即可使用</title>
    <url>/2443/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Serveo</code>是一个<code>SSH</code>服务器，仅用于远程端口转发，可以快速将本地端口暴露在外网。官方声称其为<code>Ngrok</code>的绝佳替代品，对其优点是使用现有的<code>SSH</code>客户端，无需安装客户端即可完成端口转发。当用户连接到<code>Serveo</code>时，他们会获得一个公共<code>URL</code>，任何人都可以使用它来连接到他们的<code>localhost</code>服务器。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>官方地址：</strong><a href="http://serveo.net" target="_blank" rel="noopener">http://serveo.net</a></p>
<p><strong>使用要求：</strong>可以使用<code>SSH</code>，并且能连接到互联网，<code>Linux</code>、<code>Windows</code>等系统都行。</p>
<p><strong>1、转发HTTP</strong><br>将本地<code>3000</code>端口穿透到公网中，使用命令：</p>
<pre><code>#要转发其它端口的自行替换
ssh -R 80:localhost:3000 serveo.net</code></pre><p>第一次如果有提示，选择<code>yes</code>即可，之后会为你随机生成一个<code>serveo.net</code>二级域名，然后就可以使用浏览器间接访问本地的<code>localhost:3000</code>了。</p>
<p>如果要指定二级域名，可以使用命令：</p>
<pre><code>#这里默认为moerats.serveo.net，自行替换即可
ssh -R moerats:80:localhost:3000 serveo.net</code></pre><p>此时你就可以在外网使用<code>moerats.serveo.net</code>访问你本地的<code>localhost:3000</code>了。</p>
<p><strong>2、转发SSH</strong><br>将本地<code>22</code>端口穿透到公网中，使用命令：</p>
<pre><code>#可以自行设置名称，这里默认rats
ssh -R rats:22:localhost:22 serveo.net</code></pre><p>接下来就可以登录该内网服务器了，使用命令：</p>
<pre><code>ssh -J serveo.net root@rats</code></pre><p><strong>3、转发TCP</strong><br>将本地<code>1492</code>端口穿透到公网中，使用命令：</p>
<pre><code>#可以自行设置公网端口，这里默认1492
ssh -R 1492:localhost:1492 serveo.net</code></pre><h2 id="进程守护"><a href="#进程守护" class="headerlink" title="进程守护"></a>进程守护</h2><p>这里官方推荐使用<code>AutoSSH</code>，作用是一旦<code>SSH</code>连接超时或停止传递流量，则根据需要重新启动它。</p>
<p><strong>1、安装AutoSSH</strong></p>
<pre><code>#Debian/Ubuntu系统
apt install autossh -y

#CentOS系统
yum install autossh -y</code></pre><p><strong>2、使用Systemd</strong></p>
<p>只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>等。</p>
<pre><code>#输入你的转发命令，去掉开头的ssh即可
serveo=&quot;-R 80:localhost:3000 serveo.net&quot;
#将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/autossh.service &lt;&lt;EOF
[Unit]
Description=autossh
After=network.target

[Service]
Type=simple
Environment=&quot;AUTOSSH_GATETIME=0&quot;
ExecStart=$(command -v autossh) -M 0 -o &quot;ServerAliveInterval 30&quot; -o &quot;ServerAliveCountMax 3&quot; $serveo
Restart=on-abort

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>开始启动并设置开机自启：</p>
<pre><code>systemctl start autossh
systemctl enable autossh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>serverreview-benchmark：Linux服务器性能测试脚本</title>
    <url>/1893/</url>
    <content><![CDATA[<p><strong>说明：</strong>该脚本由一个国外大佬写的，测试结果有系统详细信息，及到亚洲、太平洋、欧洲、美洲等<code>Speedtest</code>测试速度和<code>Ping</code>值，<code>CPU</code>运行速度，内存、硬盘读取速度。还自动生成测试分享链接。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/sayem314/serverreview-benchmark" target="_blank" rel="noopener">https://github.com/sayem314/serverreview-benchmark</a></p>
<p>运行命令：</p>
<pre><code>#完整测试，含有系统信息，硬盘/CPU/内存速度，CDN等各个地区测速及Ping值
curl -LsO git.io/bench.sh; chmod +x bench.sh &amp;&amp; ./bench.sh -a share

#简单测试，只含有系统信息，硬盘/CPU/内存速度，CDN测速
curl -LsO git.io/bench.sh; chmod +x bench.sh &amp;&amp; ./bench.sh -b share


apt-get -y install curl  #debian/ubuntu
yum -y install curl  #centos</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>Superbench.sh：VPS服务器一键测试脚本</li>
<li>Superspeed：一键测试服务器到国内的速度</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>ServerStatus酷炫高逼格的中文云探针</title>
    <url>/1526/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>ServerStatus</code>中文版是一个酷炫高逼格的云探针、云监控、服务器云监控、多服务器探针~，该云监控（云探针）是<code>ServerStatus</code>(<code>https://github.com/BotoX/ServerStatus</code>)项目的中文优化版。</p>
<h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><p><strong>项目地址：</strong><a href="https://github.com/tenyue/ServerStatus" target="_blank" rel="noopener">https://github.com/tenyue/ServerStatus</a><br><strong>在线演示：</strong><a href="https://tz.cloudcpp.com" target="_blank" rel="noopener">https://tz.cloudcpp.com</a></p>
<p>使用命令：</p>
<pre><code>git clone https://github.com/tenyue/ServerStatus.git</code></pre><p><strong>服务端配置（服务端程序在ServerStatus/web下）</strong><br>一、生成服务端程序</p>
<pre><code>cd ServerStatus/server
make
./sergate</code></pre><p>如果没错误提示，<code>OK</code>，<code>ctrl+c</code>关闭；如果有错误提示，检查<code>35601</code>端口是否被占用</p>
<p>二、修改配置文件<br>修改<code>config.json</code>文件，注意<code>username</code>，<code>password</code>的值需要和客户端对应一致</p>
<pre><code>{&quot;servers&quot;:
    [
        {
            &quot;username&quot;: &quot;s01&quot;,
            &quot;name&quot;: &quot;Mainserver 1&quot;,
            &quot;type&quot;: &quot;Dedicated Server&quot;,
            &quot;host&quot;: &quot;GenericServerHost123&quot;,
            &quot;location&quot;: &quot;Austria&quot;,
            &quot;password&quot;: &quot;some-hard-to-guess-copy-paste-password&quot;
        },
    ]
}</code></pre><p>三、拷贝<code>ServerStatus/status</code>到你的网站目录<br>例如：</p>
<pre><code>sudo cp -r ServerStatus/web/* /home/wwwroot/default</code></pre><p>四、运行服务端<br><code>web-dir</code>参数为上一步设置的网站根目录，务必修改成自己网站的路径</p>
<pre><code>./sergate --config=config.json --web-dir=/home/wwwroot/default </code></pre><p><strong>客户端配置（客户端程序在ServerStatus/clients下）</strong><br>客户端有两个版本，<code>client-linux</code>为普通<code>linux</code>，<code>client-psutil</code>为跨平台版，普通版不成功，换成跨平台版即可。</p>
<p>一、client-linux版配置：<br>1、<code>vim client-linux.py</code>, 修改<code>SERVER</code>地址，<code>username</code>帐号，<code>password</code>密码<br>2、<code>python client-linux.py</code> 运行即可。</p>
<p>二、client-psutil版配置:<br>1、安装<code>psutil</code>跨平台依赖库<br>2、<code>vim client-psutil.py</code>, 修改<code>SERVER</code>地址，<code>username</code>帐号，<code>password</code>密码<br>3、<code>python client-psutil.py</code> 运行即可。</p>
<pre><code>#Centos
sudo yum -y install epel-release
sudo yum -y install python-pip
sudo yum clean all
sudo yum -y install gcc
sudo yum -y install python-devel
sudo pip install psutil

#Ubuntu/Debian
sudo root
apt-get -y install python-setuptools python-dev build-essential
apt-get -y install python-pip
pip install psutil

#Windows
打开网址：https://pypi.python.org/pypi?:action=display&amp;name=psutil#downloads
下载psutil for windows程序包
安装即可</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>ServerStatus-Toyo 服务器探针安装</title>
    <url>/406/</url>
    <content><![CDATA[<h1 id="ServerStatus-Toyo："><a href="#ServerStatus-Toyo：" class="headerlink" title="ServerStatus-Toyo："></a>ServerStatus-Toyo：</h1><ul>
<li>ServerStatus-Toyo版是一个酷炫高逼格的云探针、云监控、服务器云监控、多服务器探针~，该云监控（云探针）是ServerStatus（ <a href="https://github.com/tenyue/ServerStatus" target="_blank" rel="noopener">https://github.com/tenyue/ServerStatus</a> ）项目的优化/修改版。</li>
<li>在线演示：<a href="https://tz.toyoo.pw/" target="_blank" rel="noopener">https://jk.southcat.net</a></li>
</ul>
<h1 id="目录介绍："><a href="#目录介绍：" class="headerlink" title="目录介绍："></a>目录介绍：</h1><ul>
<li>clients 客户端文件</li>
<li>server 服务端文件</li>
<li>web 网站文件</li>
</ul>
<h1 id="更新说明："><a href="#更新说明：" class="headerlink" title="更新说明："></a><a href="https://github.com/ToyoDAdoubi/ServerStatus-Toyo#%E6%9B%B4%E6%96%B0%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener"></a>更新说明：</h1><ul>
<li>2018.08.21, 修改新样式，效果见 <a href="https://tz.toyoo.pw/" target="_blank" rel="noopener">https://jk.southcat.net</a></li>
<li>2017.10.12, 负载Load 优化，并且支持CentOS6系统</li>
<li>2017.10.10, 修改负载 Load 的值为：当前服务器上链接SSR等软件的IP总数(只要软件监听IPv6那么就能统计，例如SSH)</li>
<li>2017.04.30, 优化手机显示式样</li>
<li>2017.04.29, 去除主机名设定</li>
<li>2017.04.27, 增加一键部署脚本</li>
</ul>
<h1 id="安装教程："><a href="#安装教程：" class="headerlink" title="安装教程："></a>安装教程：</h1><p>执行下面的代码下载并运行脚本。</p>
<p>wget -N –no-check-certificate <a href="https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/status.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/status.sh</a> &amp;&amp; chmod +x status.sh  </p>
<p>下载脚本后，根据需要安装客户端或者服务端：</p>
<p># 显示客户端管理菜单<br>bash status.sh c</p>
<p># 显示服务端管理菜单<br>bash status.sh s</p>
<p>运行脚本后会出现脚本操作菜单，选择并输入<code>1</code>就会开始安装。 一开始会提示你输入 网站服务器的域名和端口，如果没有域名可以直接回车代表使用 <code>本机IP:8888</code></p>
<h2 id="简单步骤："><a href="#简单步骤：" class="headerlink" title="简单步骤："></a>简单步骤：</h2><p>首先安装服务端，安装过程中会提示：</p>
<p>是否由脚本自动配置HTTP服务(服务端的在线监控网站)[Y/n]</p>
<p># 如果你不懂，那就直接回车，如果你想用其他的HTTP服务自己配置，那么请输入 n 并回车。<br># 注意，当你曾经安装过 服务端，同时没有卸载Caddy(HTTP服务)，那么重新安装服务端的时候，请输入 n 并回车。</p>
<p>然后 添加或修改 初始示例的节点配置，注意用户名每个节点配置都不能重复，其他的参数都无所谓了。 然后安装客户端，根据提示填写 服务端的IP 和前面添加/修改 对应的 节点用户名和密码（用于和服务端验证），然后启动就好了，有问题请贴出 详细步骤+日志(如果有)联系我。</p>
<h1 id="使用说明："><a href="#使用说明：" class="headerlink" title="使用说明："></a><a href="https://github.com/ToyoDAdoubi/ServerStatus-Toyo#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener"></a>使用说明：</h1><p>进入下载脚本的目录并运行脚本：</p>
<p># 客户端管理菜单<br>./status.sh c<br># 服务端管理菜单<br>./status.sh s</p>
<p>然后选择你要执行的选项即可。</p>
<p>ServerStatus 一键安装管理脚本 [vx.x.x]<br>-- Toyo | doub.io/shell-jc3 –</p>
<p>0. 升级脚本<br>————————————<br>1. 安装 服务端<br>2. 卸载 服务端<br>————————————<br>3. 启动 服务端<br>4. 停止 服务端<br>5. 重启 服务端<br>————————————<br>6. 设置 服务端配置<br>7. 查看 服务端信息<br>8. 查看 服务端日志<br>————————————<br>9. 切换为 客户端菜单</p>
<p>当前状态: 服务端 已安装 并 已启动</p>
<p>请输入数字 [0-9]:</p>
<h1 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a><a href="https://github.com/ToyoDAdoubi/ServerStatus-Toyo#%E5%85%B6%E4%BB%96%E6%93%8D%E4%BD%9C" target="_blank" rel="noopener"></a>其他操作</h1><h3 id="客户端："><a href="#客户端：" class="headerlink" title="客户端："></a><a href="https://github.com/ToyoDAdoubi/ServerStatus-Toyo#%E5%AE%A2%E6%88%B7%E7%AB%AF" target="_blank" rel="noopener"></a>客户端：</h3><p>启动：service status-client start 停止：service status-client stop 重启：service status-client restart 查看状态：service status-client status</p>
<h3 id="服务端："><a href="#服务端：" class="headerlink" title="服务端："></a><a href="https://github.com/ToyoDAdoubi/ServerStatus-Toyo#%E6%9C%8D%E5%8A%A1%E7%AB%AF" target="_blank" rel="noopener"></a>服务端：</h3><p>启动：service status-server start 停止：service status-server stop 重启：service status-server restart 查看状态：service status-server status</p>
<h3 id="Caddy（HTTP服务）："><a href="#Caddy（HTTP服务）：" class="headerlink" title="Caddy（HTTP服务）："></a><a href="https://github.com/ToyoDAdoubi/ServerStatus-Toyo#caddyhttp%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener"></a>Caddy（HTTP服务）：</h3><p>启动：service caddy start 停止：service caddy stop 重启：service caddy restart 查看状态：service caddy status Caddy配置文件：/usr/local/caddy/caddy 默认脚本只能一开始安装的时候设置配置文件。 —————————————————————————————————————— 安装目录：/usr/local/ServerStatus 网页文件：/usr/local/ServerStatus/web 配置文件：/usr/local/ServerStatus/server/config.json 客户端查看日志：tail -f tmp/serverstatus_client.log 服务端查看日志：tail -f /tmp/serverstatus_server.log</p>
<h1 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a><a href="https://github.com/ToyoDAdoubi/ServerStatus-Toyo#%E5%85%B6%E4%BB%96%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener"></a>其他说明</h1><p>网络实时流量单位为：G=GB/s，M=MB/s，K=KB/s 服务器总流量单位为：T=TB，G=GB，M=MB，K=KB</p>
<h3 id="CentOS7系统-负载显示异常的问题"><a href="#CentOS7系统-负载显示异常的问题" class="headerlink" title="CentOS7系统 负载显示异常的问题"></a><a href="https://github.com/ToyoDAdoubi/ServerStatus-Toyo#centos7%E7%B3%BB%E7%BB%9F-%E8%B4%9F%E8%BD%BD%E6%98%BE%E7%A4%BA%E5%BC%82%E5%B8%B8%E7%9A%84%E9%97%AE%E9%A2%98" target="_blank" rel="noopener"></a>CentOS7系统 负载显示异常的问题</h3><p>CentOS7系统 默认可能没有安装 netstat 依赖，所以会造成IP检测(负载)出错，手动安装即可： <code>yum install net-tools -y</code></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>Sharecmd：一个可以将文件上传至Google Drive/Dropbox并自动生成分享链接的工具</title>
    <url>/2300/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Sharecmd</code>是一个用<code>Golang</code>编写的<code>Cmdline</code>工具，可以直接将文件上传到配置的网盘类型，并自动生成分享链接的工具，并将该链接复制到系统剪贴板。支持<code>Windows</code>、<code>Linux</code>、<code>Macos</code>系统。</p>
<pre><code>#目前支持的网盘类型
Dropbox、Google Drive、Seafile、Nextcloud/Owncloud</code></pre><p>貌似这是个新项目，作者也天天在更新，所以以后可能会支持更多网盘或功能，有兴趣的可以多关注下。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>Github地址：</strong><a href="https://github.com/mschneider82/sharecmd" target="_blank" rel="noopener">https://github.com/mschneider82/sharecmd</a></p>
<p>这里只说<code>Linux</code>系统的使用方法，我们先根据自身系统版本找到编译好的二进制文件下载链接→下载地址。</p>
<pre><code>#下载二进制文件
wget https://github.com/mschneider82/sharecmd/releases/download/v0.0.46/sharecmd_0.0.46_Linux_x86_64.tar.gz
#解压文件
tar zxvf sharecmd*.tar.gz
#移动文件
mv share /usr/local/bin
#删掉没用的文件
rm -rf sharecmd*.tar.gz README.md LICENSE</code></pre><p>然后开始设置网盘，使用命令：</p>
<pre><code>share --setup</code></pre><p><img src="https://www.southcat.net/usr/picture/Sharecmd(1).png" alt="请输入图片描述" title="请输入图片描述"><br>使用上下键选择，然后<code>Enter</code>确认。这里博主选择的是<code>Google Drive</code>，会给个链接你打开，然后登录账号授权获取验证码，再输入<code>SSH</code>客户端确认即可。<br><img src="https://www.southcat.net/usr/picture/Sharecmd(2).png" alt="请输入图片描述" title="请输入图片描述"><br>最后就可以上传了，上传命令：</p>
<pre><code>#使用命令
share 文件路径

#比如将home文件夹的MOERATS文件上传至网盘
share /home/MOERATS
或者
cd /home
share MOERATS</code></pre><p><img src="https://www.southcat.net/usr/picture/Sharecmd(3).png" alt="请输入图片描述" title="请输入图片描述"><br>如果后面出现<code>Can&#39;t copy link to clipboard</code>报错，可以无视，就是不能使用剪切板而已，影响不大。</p>
<h2 id="上传目录"><a href="#上传目录" class="headerlink" title="上传目录"></a>上传目录</h2><pre><code>#文件将上传到网盘的以下目录
Dropbox：/Apps/sharecmd
Google drive：/sharecmd
Seafile：/sharecmd
Own/Nextcloud：/sharecmd</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Shiori：一个简单、美观且带Web界面的书签管理器</title>
    <url>/2456/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Shiori</code>是一个用<code>Go</code>语言编写的简单书签管理器，样式直接模仿的<code>Pocket</code>，有着基本书签管理功能，即添加，编辑，删除和搜索。支持导入和导出成<code>Netscape</code>书签文件，也可以从<code>Pocket</code>导入书签。可以通过命令行操作，也自带简单而漂亮的<code>Web</code>界面，适合那些不想使用命令行的，也可以内页浏览书签首页，用起来还行，这里就分享下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Shiori(1).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Shiori(3).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Shiori(2).jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/go-shiori/shiori" target="_blank" rel="noopener">https://github.com/go-shiori/shiori</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong></p>
<pre><code>docker run -d --name shiori --restart=always -p 8080:8080 -v ~/shiori:/srv/shiori radhifadlillah/shiori</code></pre><p>安装好了后，访问地址：<code>http://ip:8080</code>，初始管理员用户名和密码为<code>shiori</code>和<code>gopher</code>。</p>
<p>如果<code>CentOS</code>系统打不开的话，可能还需要开启<code>8080</code>端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 8080 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=8080/tcp --permanent
firewall-cmd --reload</code></pre><p>像阿里云等服务器，还需要去安全组那里开放下端口。</p>
<p>最后你想绑定域名，那么就进行第<code>3</code>步，直接<code>ip</code>访问就不用绑定了。</p>
<p><strong>3、绑定域名</strong><br>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;www.southcat.net {
 gzip
 proxy / 127.0.0.1:8080 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;www.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:8080 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可，后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Simple Torrent：一个支持边下边播、无版权限制和自动上传的BT离线下载程序</title>
    <url>/2466/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主很久以前水过一个<code>BT</code>下载工具Cloud Torrent，不过好像<code>2</code>年没维护了，这里就介绍个基于<code>Cloud Torrent</code>开发的项目<code>Simple Torrent</code>，同样的使用<code>Golang</code>编写，功能在原有的基础上加了些适用的功能，下载/上传速度限制、无版权限制，<code>RSS</code>订阅和自定义添加<code>BT-Trackers</code>等，而且还有<code>api</code>接口，同时还支持下载后自动调用外部命令，可玩性还是很高的，比如我们可以和<code>aria2</code>一样，将下载完成的资源自动上传到<code>OneDrive</code>或<code>Google Drive</code>等网盘，博主大概用了下，感觉还可以，这里就分享下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/simple_torrent(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/simple_torrent(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/boypt/simple-torrent" target="_blank" rel="noopener">https://github.com/boypt/simple-torrent</a></p>
<p>使用<code>SSH</code>客户端登录服务器，运行命令：</p>
<pre><code>bash &lt;(wget -qO- https://raw.githubusercontent.com/boypt/simple-torrent/master/scripts/quickinstall.sh)</code></pre><p>然后使用<code>ip:3000</code>访问即可。</p>
<p>顺便提供个博主经常用的<code>BT-Trackers</code>服务器地址，效果不错，如下：</p>
<pre><code>https://trackerslist.com/all.txt</code></pre><p>直接在<code>Web</code>界面修改即可。</p>
<p>相关命令：</p>
<pre><code>启动：systemctl start cloud-torrent
重启：systemctl restart cloud-torrent
停止：systemctl stop cloud-torrent
查看状态：systemctl status cloud-torrent</code></pre><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6系统
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu系统
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、安装Simple Torrent</strong></p>
<pre><code>docker run --restart=always --name simple-torrent -d \
-p 3000:3000 \
-v ~/downloads:/downloads \
-v ~/torrents:/torrents \
boypt/cloud-torrent</code></pre><p>然后使用<code>ip:3000</code>访问即可。</p>
<p>最后如果你访问不了<code>Web</code>端，可能要检查下防火墙端口，有安全组的也要放行下相关端口。</p>
<p>这里提供个<code>CentOS</code>系统防火墙开启命令，大致如下：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 3000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=3000/tcp --permanent
firewall-cmd --reload</code></pre><h2 id="API使用"><a href="#API使用" class="headerlink" title="API使用"></a>API使用</h2><p>关于<code>API</code>的用法，官方文档说的很详细了，这里就大概列举几个，如下：</p>
<pre><code>#通过远程地址添加种子
curl --data &quot;http://domain.com/file.torrent&quot; &quot;http://localhost:3000/api/url&quot;
#通过本地文件添加种子
curl --data-binary &quot;my.torrent&quot; &quot;http://localhost:3000/api/url&quot;
#通过磁力链接添加种子
curl --data &quot;magnet:?xt=urn:btih:...&quot; &quot;http://localhost:3000/api/url&quot;

#开始种子任务
curl --data &quot;start:${HASH}&quot; &quot;http://localhost:3000/api/torrent&quot;
#停止种子任务
curl --data &quot;stop:${HASH}&quot; &quot;http://localhost:3000/api/torrent&quot;
#删除种子任务
curl --data &quot;delete:${HASH}&quot; &quot;http://localhost:3000/api/torrent&quot;

#查看文件和种子信息
/api/files和/api/torrents</code></pre><h2 id="外部程序调用"><a href="#外部程序调用" class="headerlink" title="外部程序调用"></a>外部程序调用</h2><p>先修改配置文件，通过上面脚本安装的配置文件在你的主目录，比如<code>/root</code>目录，配置文件<code>cloud-torrent.json</code>。</p>
<p>修改以下参数：</p>
<pre><code>#外部程序调用参数
&quot;donecmd&quot;: &quot;&quot;,

#比如我要下载完成后，直接运行/home目录下的rats.sh脚本
&quot;donecmd&quot;: &quot;/home/rats.sh&quot;,</code></pre><p>那么下载完成后就会运行该脚本。</p>
<p>一般种子下载完成后，会返回以下参数变量，这里列举下主要的：</p>
<pre><code>CLD_DIR为下载路径，且为绝对路径
CLD_PATH为下载文件名称
CLD_SIZE为文件大小
CLD_TYPE为调用事件类型，分为files和torrent，分别为种子里单个文件和整体文件
CLD_HASH为文件HASH值</code></pre><p>这里随便放一个下载后自动移动的脚本，针对<code>rclone</code>挂载的文件夹。</p>
<pre><code>#!/bin/bash

#下载后移动的文件夹路径
RemoteDIR=&quot;/down/moerats&quot;;  

if [[ ${CLD_TYPE} == &quot;torrent&quot; ]]; then
eval mv \&apos;&quot;${CLD_DIR}/${CLD_PATH}&quot;\&apos; &quot;${RemoteDIR}&quot;;
#移动后停止该任务
curl --data &quot;stop:${CLD_HASH}&quot; &quot;http://127.0.0.1:3000/api/torrent&quot;;
#停止后清除该任务，也就是不会出现在Web界面了
curl --data &quot;delete:${CLD_HASH}&quot; &quot;http://127.0.0.1:3000/api/torrent&quot;;
fi</code></pre><p>这里还可以结合<code>TG</code>机器人啥的一起使用，玩法很多，可以自行结合<code>API</code>一起使用。</p>
<p>要注意的是，配置调用脚本的时候，需要给予脚本可执行权，并重启程序生效，比如：</p>
<pre><code>#给予可执行权，脚本路径/root/rats.sh
chmod +x /root/rats.sh
#重启程序
systemctl restart cloud-torrent</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>在Linux VPS上使用rclone挂载OneDrive网盘</li>
<li>在Linux VPS上使用rclone挂载Google Drive网盘</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>sish：一个开源、轻量且类似于Servo/Ngrok的内网穿透工具</title>
    <url>/2455/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>sish</code>是一个<code>SSH</code>服务器，仅用于远程端口转发，可以快速将本地端口暴露在外网，作者声称其为<code>Servo</code>/<code>Ngrok</code>替代方案，仅使用<code>SSH</code>的<code>HTTP(S)</code>、<code>WS(S)</code>、<code>TCP</code>隧道连接到他们的<code>localhost</code>服务器，该工具和Servo差不多一样，不同就是<code>Servo</code>官方提供了免费的<code>SSH</code>客户端，而<code>sish</code>作者提供的客户端貌似因为滥用关闭了，所以就需要我们自己搭建了，这里就水下<code>Docker</code>和手动安装。</p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>Github地址：</strong><a href="https://github.com/antoniomika/sish" target="_blank" rel="noopener">https://github.com/antoniomika/sish</a></p>
<p><strong>1、安装Docker</strong></p>
<pre><code>#CentOS 6
rpm -iUvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum update -y
yum -y install docker-io
service docker start
chkconfig docker on

#CentOS 7、Debian、Ubuntu
curl -sSL https://get.docker.com/ | sh
systemctl start docker
systemctl enable docker</code></pre><p><strong>2、拉取镜像</strong><br>这里由于直接使用<code>ip</code>的话，只能用于转发<code>TCP</code>，<code>HTTP(S)</code>等就需要配置下域名了，所以以下全部默认使用域名。</p>
<p>先解析一个主/泛域名到服务器<code>ip</code>，比如解析<code>southcat.net</code>、<code>*.southcat.net</code>到服务器<code>ip</code>。</p>
<p>然后再参考下面的参数详解，再自行修改部分参数后，使用命令：</p>
<pre><code>#配置http域名
docker run -d --name sish \
  --restart=always \
  -v ~/sish/keys:/keys \
  -v ~/sish/pubkeys:/pubkeys \
  --net=host antoniomika/sish \
  -sish.addr=:3333 \
  -sish.http=:80 \
  -sish.keysdir=/pubkeys \
  -sish.pkloc=/keys/ssh_key \
  -sish.forcerandomsubdomain=false \
  -sish.domain southcat.net \
  -sish.bindrandom=false \
  -sish.redirectrootlocation https://www.baidu.com 

#配置https域名，这里需要提供泛域名证书
docker run -d --name sish \
  --restart=always \
  -v ~/sish/ssl:/ssl \
  -v ~/sish/keys:/keys \
  -v ~/sish/pubkeys:/pubkeys \
  --net=host antoniomika/sish \
  -sish.addr=:3333 \
  -sish.https=:443 \
  -sish.http=:80 \
  -sish.httpsenabled=true \
  -sish.httpspems=/ssl \
  -sish.keysdir=/pubkeys \
  -sish.pkloc=/keys/ssh_key \
  -sish.forcerandomsubdomain=false \
  -sish.domain southcat.net \
  -sish.bindrandom=false \
  -sish.redirectrootlocation https://www.baidu.com</code></pre><p>部分参数如下：</p>
<pre><code>-sish.addr=:3333  #ssh监听地址
-sish.forcerandomsubdomain=false  #是否强制随机子域，这个建议关掉
-sish.bindrandom=false  #是否随机绑定端口，这个建议关掉
-sish.domain southcat.net  #使用的域名
-sish.redirectrootlocation https://www.baidu.com  #主域名(-sish.domain参数)强制跳转到该地址
-sish.httpspems=/ssl  #泛域名SSL证书路径，存放路径~/sish/ssl，证书命名格式fullchain.pem和privkey.pem</code></pre><p>其他参数默认即可，也可以自行添加或修改其它参数。</p>
<p>全部参数如下：</p>
<pre><code>Usage of sish:
  -sish.addr string
        The address to listen for SSH connections (default &quot;localhost:2222&quot;)
  -sish.auth
        Whether or not to require auth on the SSH service
  -sish.bannedcountries string
        A comma separated list of banned countries
  -sish.bannedips string
        A comma separated list of banned ips
  -sish.bannedsubdomains string
        A comma separated list of banned subdomains (default &quot;localhost&quot;)
  -sish.bindrandom
        Bind ports randomly (OS chooses) (default true)
  -sish.bindrange string
        Ports that are allowed to be bound (default &quot;0,1024-65535&quot;)
  -sish.cleanupunbound
        Whether or not to cleanup unbound (forwarded) SSH connections (default true)
  -sish.debug
        Whether or not to print debug information
  -sish.domain string
        The domain for HTTP(S) multiplexing (default &quot;ssi.sh&quot;)
  -sish.forcerandomsubdomain
        Whether or not to force a random subdomain (default true)
  -sish.http string
        The address to listen for HTTP connections (default &quot;localhost:80&quot;)
  -sish.httpport int
        The port for HTTP connections. This is only for output messages (default 80)
  -sish.https string
        The address to listen for HTTPS connections (default &quot;localhost:443&quot;)
  -sish.httpsenabled
        Whether or not to listen for HTTPS connections
  -sish.httpspems string
        The location of pem files for HTTPS (fullchain.pem and privkey.pem) (default &quot;ssl/&quot;)
  -sish.httpsport int
        The port for HTTPS connections. This is only for output messages (default 443)
  -sish.keysdir string
        Directory for public keys for pubkey auth (default &quot;pubkeys/&quot;)
  -sish.password string
        Password to use for password auth (default &quot;S3Cr3tP4$$W0rD&quot;)
  -sish.pkloc string
        SSH server private key (default &quot;keys/ssh_key&quot;)
  -sish.pkpass string
        Passphrase to use for the server private key (default &quot;S3Cr3tP4$$phrAsE&quot;)
  -sish.proxyprotoenabled
        Whether or not to enable the use of the proxy protocol
  -sish.proxyprotoversion string
        What version of the proxy protocol to use. Can either be 1, 2, or userdefined. If userdefined, the user needs to add a command to SSH called proxy:version (ie proxy:1) (default &quot;1&quot;)
  -sish.redirectroot
        Whether or not to redirect the root domain (default true)
  -sish.redirectrootlocation string
        Where to redirect the root domain to (default &quot;https://github.com/antoniomika/sish&quot;)
  -sish.subdomainlen int
        The length of the random subdomain to generate (default 3)
  -sish.usegeodb
        Whether or not to use the maxmind geodb
  -sish.verifyorigin
        Whether or not to verify origin on websocket connection (default true)
  -sish.verifyssl
        Whether or not to verify SSL on proxy connection (default true)
  -sish.whitelistedcountries string
        A comma separated list of whitelisted countries
  -sish.whitelistedips string
        A comma separated list of whitelisted ips</code></pre><p>看不懂的，可以使用下谷歌翻译。</p>
<p>最后<code>CentOS</code>系统建议关闭防火墙使用，或者打开部分端口也行，关闭命令：</p>
<pre><code>#CentOS 6系统
service iptables stop
chkconfig iptables off

#CentOS 7系统
systemctl stop firewalld
systemctl disable firewalld</code></pre><p>像阿里云等服务器，还需要去安全组那里开放下端口。</p>
<h2 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h2><p><code>Docker</code>虽然方便很多，但也有人会喜欢手动安装，这里作者没直接给出二进制文件，所以就需要我们手动来构建二进制文件了。</p>
<p><strong>1、安装Go</strong><br>这里由于需要新版的<code>Go</code>环境，所以这里就使用<code>Go</code>二进制包安装环境，下载地址→传送门。</p>
<p>然后根据自己的服务器架构下载对应的最新安装包，一般可以直接使用命令：</p>
<pre><code>#32位系统下载
wget -O go.tar.gz https://dl.google.com/go/go1.13.3.linux-386.tar.gz
#64位系统下载
wget -O go.tar.gz https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz

#解压压缩包
tar -zxvf go.tar.gz -C /usr/local
#设置环境变量，将以下一起复制进ssh客户端运行
mkdir $HOME/go
echo &apos;export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin&apos; &gt;&gt; /etc/profile
source /etc/profile
#查看go版本，有输出即为安装成功
go version</code></pre><p><strong>2、安装sish</strong></p>
<pre><code>#下载源码到主目录
git clone https://github.com/antoniomika/sish
cd sish
#编译二进制文件
go install</code></pre><p>这里提示<code>-bash: git: command not found</code>的，可以先使用命令：</p>
<pre><code>#CentOS
yum -y install git

#Debian、Ubuntu
apt install git -y</code></pre><p><strong>3、运行sish</strong><br>运行参数这里就不贴了，直接参考上面<code>Docker</code>安装最下面的全部参数就行了。</p>
<p>先解析一个主/泛域名到服务器<code>ip</code>，比如解析<code>southcat.net</code>、<code>*.southcat.net</code>到服务器<code>ip</code>。</p>
<p>这里就贴个大概需要使用的参数，其它的根据需求自行修改，使用命令：</p>
<pre><code>#配置http域名
sish -sish.addr=:3333 -sish.http=:80 -sish.domain southcat.net -sish.forcerandomsubdomain=false -sish.bindrandom=false -sish.redirectrootlocation https://www.southcat.net -sish.keysdir=/sish/pubkeys -sish.pkloc=/sish/keys/ssh_key 

#配置https域名
sish -sish.addr=:3333 -sish.https=:443 -sish.http=:80 -sish.domain southcat.net -sish.forcerandomsubdomain=false -sish.bindrandom=false -sish.httpsenabled=true -sish.redirectrootlocation https://www.southcat.net -sish.keysdir=/sish/pubkeys -sish.pkloc=/sish/keys/ssh_key -sish.httpspems=/sish/ssl</code></pre><p>部分参数详解：</p>
<pre><code>-sish.addr=:3333  #ssh监听地址，这里为3333
-sish.forcerandomsubdomain=false  #是否强制随机子域，这个建议关掉
-sish.bindrandom=false  #是否随机绑定端口，这个建议关掉
-sish.domain southcat.net  #使用的域名
-sish.redirectrootlocation https://www.baidu.com  #主域名(-sish.domain参数)强制跳转到该地址
-sish.httpspems=/sish/ssl  #泛域名SSL证书存放路径，证书命名格式fullchain.pem和privkey.pem
-sish.keysdir=/sish/pubkeys  #pubkey auth的公共密钥存放文件夹
-sish.pkloc=/sish/keys/ssh_key  #SSH服务器私钥</code></pre><p>这里<code>/sish/ssl</code>、<code>/sish/pubkeys</code>、<code>/sish/keys</code>目录需要自己提前创建下，使用命令：</p>
<pre><code>mkdir -p /sish/ssl /sish/pubkeys /sish/keys</code></pre><p><strong>4、开机自启</strong><br>如果你使用手动命令没问题了，先使用<code>Ctrl+C</code>断开命令。</p>
<p>再新建<code>systemd</code>配置文件，适用<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>。</p>
<pre><code>#修改成你手动运行命令的全部参数
command=&quot;-sish.addr=:3333 -sish.http=:80 -sish.domain southcat.net -sish.forcerandomsubdomain=false -sish.bindrandom=false -sish.redirectrootlocation https://www.southcat.net -sish.keysdir=/sish/pubkeys -sish.pkloc=/sish/keys&quot;
#将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/sish.service &lt;&lt;EOF
[Unit]
Description=sish
After=network.target

[Service]
Type=simple
ExecStart=$(command -v sish) ${command}
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>启动并设置开机自启：</p>
<pre><code>systemctl start sish
systemctl enable sish</code></pre><p>最后<code>CentOS</code>系统建议关闭防火墙使用，或者打开部分端口也行，关闭命令：</p>
<pre><code>#CentOS 6系统
service iptables stop
chkconfig iptables off

#CentOS 7系统
systemctl stop firewalld
systemctl disable firewalld</code></pre><p>像阿里云等服务器，还需要去安全组那里开放下端口。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用要求：可以使用<code>SSH</code>，并且能连接到互联网，<code>Linux</code>、<code>Windows</code>等系统都行。</p>
<p>以下所使用的的<code>southcat.net</code>为上面配置好的客户端域名地址，自行修改成自己的即可。</p>
<p><strong>1、转发HTTP(S)</strong><br>将本地<code>3000</code>端口穿透到公网中，使用命令：</p>
<pre><code>#要转发其它端口的自行替换
ssh -p 3333 -R 80:localhost:3000 southcat.net</code></pre><p>第一次如果有提示，选择<code>yes</code>即可，之后会为你随机生成一个<code>southcat.net</code>的二级域名，然后就可以使用浏览器间接访问本地的<code>localhost:3000</code>了。</p>
<p>如果要指定二级域名，可以使用命令：</p>
<pre><code>#这里默认为no1.southcat.net，自行替换即可
ssh -p 3333 -R no1:80:localhost:3000 southcat.net</code></pre><p>此时你就可以在外网使用<code>no1.southcat.net</code>访问你本地的<code>localhost:3000</code>了。</p>
<p><strong>2、转发TCP</strong><br>将本地<code>6789</code>端口穿透到公网的<code>9876</code>端口中，使用命令：</p>
<pre><code>#可以自行设置公网端口，这里默认6789，如果你要转发SSH端口，那就改成你的SSH端口
ssh -p 3333 -R 9876:localhost:6789 southcat.net</code></pre><p>这里只说了下简单用法，客户端我们还可以设置国家/地区、<code>IP</code>白名单等，使用参考→传送门。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Smart Resize：基于HTML5的在线批量裁剪图片工具</title>
    <url>/1744/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Smart Resize</code>——也许是世界上最快且最智能的在线批量裁剪图片工具。</p>
<p><img src="https://www.southcat.net/usr/picture/Smart_Resize.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>网站地址：</strong><a href="https://www.smartresize.com/zh-cn（简体中文）" target="_blank" rel="noopener">https://www.smartresize.com/zh-cn（简体中文）</a></p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><p><strong>1、基于HTML5的图片裁剪利器</strong><br>和其它在线图片裁剪工具不一样的是，<code>Smart Resize</code>全部基于<code>HTML5</code>，所有的图片裁剪及尺寸调整都在您的浏览器中进行，不需要上传至后端服务器，这也就意味着它能极速地处理您的图片，无任何文件大小及尺寸的限制。也不需要安装额外的软件或插件，更没有繁琐的注册登录。</p>
<p><strong>2、最智能的图片裁剪工具</strong><br><code>Smart Resize</code>能智能地检测到每张图片的主次部分并自动裁剪、缩放到目标尺寸，它也能将图片中的人脸作为关键点加入到主体识别的算法中（可选），这个在批量裁剪中是非常方便实用的。所以您无需对每张图片犹豫该裁剪哪，全部交给<code>Smart Resize</code>吧。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>snag.gy：一个快捷在线保存截图的网站</title>
    <url>/1815/</url>
    <content><![CDATA[<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>SmartPing：一个服务器Ping值监测工具，带报警功能</title>
    <url>/2198/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前博主发过一个雨落大神写的<code>Ping</code>值监测工具uPing，不过有点单一，也缺少<code>Web</code>界面，今天再分享个<code>SmartPing</code>工具，可以同时<code>Ping</code>多个<code>IP</code>，支持正向<code>Ping</code>绘制，反向<code>Ping</code>绘制，互<code>Ping</code>拓扑绘制及报警功能。支持自定义延迟、丢包阈值报警。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/SmartPing(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/SmartPing(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/gy-games/smartping" target="_blank" rel="noopener">https://github.com/gy-games/smartping</a></p>
<p>运行命令：</p>
<pre><code>mkdir smartping &amp;&amp; cd smartping
#请去https://github.com/gy-games/smartping/releases下载最新版本的smartping
wget https://github.com/gy-games/smartping/releases/download/v0.5.0/smartping-v0.5.0.tar.gz
tar zxvf smartping-v0.5.0.tar.gz
./control start</code></pre><p>然后可以使用<code>ip:8899</code>打开<code>Web</code>界面查看了，管理界面默认密码为<code>smartping</code>，若需要修改请修改<code>conf/config.json</code>或<code>conf/config-base.json</code>。</p>
<pre><code>#如果你是CentOS系统，且打不开Web页面的，则需要开启防火墙端口
#Centos 6系统
iptables -I INPUT -p tcp --dport 8899 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7系统
firewall-cmd --zone=public --add-port=8899/tcp --permanent 
firewall-cmd --reload</code></pre><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><pre><code>./control build|run|start|stop|restart|status

build   : 源码编译，最终构建成至 bin
run     : 直接启动smartping
start   : 以nohup(deamon)形式启动smartping
stop    : 关闭smartping
restart : 执行 stop &amp; start
status  : 查看smartping的运行状态
version : 查看当前smartping版本
pack    : 执行Build并进行二进制包制作</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>SpartanHost：512MB内存/10GB硬盘/1T流量/DDoS防御/KVM/西雅图/最低月付$2</title>
    <url>/2364/</url>
    <content><![CDATA[<p><strong>说明：</strong>博客这个月搬了好几次，最终搬到了<code>SpartanHost</code>商家的西雅图<code>KVM</code>，目前体验了<code>1</code>星期，效果很不错，<code>CPU</code>采用 高性能的<code>E5 2690 V2</code>，编译速度非常快。<code>IO</code>很高，不会出现时间越长越低的情况，带宽为<code>1G</code>，自带<code>20G/s</code>的<code>DDOS</code>防护，很适合做站，工单回复也快，态度不错，而且还是<code>5</code>年老商家，不用担心跑路什么的，这里就推荐下，目前已支持支付宝付款。</p>
<h2 id="套餐"><a href="#套餐" class="headerlink" title="套餐"></a>套餐</h2><pre><code>提示：过了大半年，E5又上货了，建站很稳定，有需求快买，估计很快卖完。</code></pre><p><strong>注意：</strong>以下套餐<code>1GB</code>内存以上的可以使用优惠码<code>KVM20</code>，节省<code>20%</code>。</p>
<p>CPU：1核<br>内存：512MB<br>硬盘：10GB SSD<br>带宽：1Gbps<br>流量：1TB/月<br>价格：$2.5/月($24/年)<br>链接：点击购买</p>
<p>CPU：2核<br>内存：1024MB<br>硬盘：15GB SSD<br>带宽：1Gbps<br>流量：2TB/月<br>价格：$5/月($38/年)<br>链接：点击购买</p>
<p>CPU：2核<br>内存：2GB<br>硬盘：30GB SSD<br>带宽：1Gbps<br>流量：3TB/月<br>价格：$10/月($76/年)<br>链接：点击购买</p>
<p>CPU：3核<br>内存：3GB<br>硬盘：45GB SSD<br>带宽：1Gbps<br>流量：3.5TB/月<br>价格：$15/月($115/年)<br>链接：点击购买</p>
<p>更多套餐直接访问官网：点击进入。</p>
<p><strong>IP测试：</strong>104.37.29.141<br><strong>速度测试：</strong><a href="http://lg.sea.spartanhost.net/100MB.test" target="_blank" rel="noopener">http://lg.sea.spartanhost.net/100MB.test</a></p>
<h2 id="测试图"><a href="#测试图" class="headerlink" title="测试图"></a>测试图</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Socat一键安装脚本，可转发TCP和UDP流量</title>
    <url>/2094/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般用海外服务器的都会遇到线路爆炸，网络不好的情况，导致我们用<code>55R</code>等软件的效果很差，这时候就可以用端口转发来改善这种情况，常见的转发有<code>rinetd</code>、<code>Haproxy</code>、<code>iptables</code>、<code>socat</code>，前面<code>2</code>种只能转发<code>TCP</code>，后面<code>TCP</code>/<code>UDP</code>都可以转发，如果用来玩游戏的话就需要转发<code>UDP</code>了，博主就写了个<code>Socat</code>一键安装脚本，这里分享下。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong>支持<code>CentOS 6+</code> 、<code>Debian 7+</code>、<code>Ubuntu 14+</code>。<br><strong>脚本说明：</strong>脚本默认开启<code>UDP</code>、<code>TCP</code>转发，带开机自启功能，且一次只能转发单个端口，如果想转发多个端口请重复运行本脚本。<br><strong>提示：</strong>该脚本在<code>Vultr</code>各个系统均测试通过，包括最新的<code>Ubuntu 18.04</code>，如果有其它问题可以留言。</p>
<p>使用<code>root</code>运行以下命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/socat.sh &amp;&amp; bash socat.sh</code></pre><p>按要求输入以下信息：</p>
<pre><code>#如果你要用本地服务器的3333端口转发IP为1.1.1.1服务器的6666端口，那就依次填入指定参数。
请输入本地端口:3333
请输入远程端口:6666
请输入远程IP:1.1.1.1</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>SSH密钥安装器升级，一键安装VPS密钥安全登录</title>
    <url>/1801/</url>
    <content><![CDATA[<p><strong>说明：</strong>使用<code>vps</code>的基本都会有被扫描的情况，可参考：通过Auth.log来查看VPS服务器是否被扫描和暴力破解。一般我们都会修改<code>SSH</code>端口来防止这种事发生，不过安全性更高的操作当属使用密钥登录。之前分享过一个教程，参考：为Linux VPS配置SSH-KEY登录并禁用root密码，感觉有点麻烦，这里分享个由<code>KiritoMiao</code>大佬制作的一键安装脚本，安装很快。</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有大佬说可以读<code>Github</code>帐号的公钥，可以不需要再<code>fork</code>修改了（据说可以支持多个公钥，未测试）。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先准备<code>SSH Key</code>和<code>Github</code>账号。<code>SSH Key</code>配置方法参考：<a href="https://www.southcat.net/archives/229/。" target="_blank" rel="noopener">https://www.southcat.net/archives/229/。</a></p>
<p>然后前往：<a href="https://github.com/settings/keys登记你的公钥。" target="_blank" rel="noopener">https://github.com/settings/keys登记你的公钥。</a></p>
<p>再用服务器运行以下命令：</p>
<pre><code>wget https://raw.githubusercontent.com/KiritoMiao/SSHKEY_Installer/master/key.sh
bash key.sh [你的Github用户名]</code></pre><p>完成后，就可以使用密钥登入了（同时会关闭密码登入提高安全性）。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Speedpan：百度网盘满速下载工具，无需登录，也可直接下载BT种子</title>
    <url>/2151/</url>
    <content><![CDATA[<p><strong>说明：</strong>博主好像分享了好多个度盘下载工具，有些需要登录账号，对于曾经经历过封号的人来说，或多或少都会有点排斥，现在再分享个无需登录就可以高速下载百度文件的工具<code>Speedpan</code>(速盘)，还可以直接在线搜索资源，下载分享链接，<code>BT</code>种子等，速度都很快，可以说功能很强了。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Speedpan(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Speedpan(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Speedpan(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Speedpan(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>百度网盘不限速下载（正常情况下都可以满宽带）。</li>
<li>分享链接下载（不需要登录）。</li>
<li>分享资源搜索并下载（不需要等录）。</li>
<li>离线<code>BT</code>下载（离线下载需要登录）。</li>
<li>其它网盘常规操作，如创建文件夹，创建分享链接，删除等（访问自己的网盘需要登录），登录时调用的是百度的登录页，只记录登录<code>cookie</code>，不会保存用户密码等信息。</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>点击下载：</strong>本地下载，官方下载</p>
<h2 id="相关问题解答"><a href="#相关问题解答" class="headerlink" title="相关问题解答"></a>相关问题解答</h2><pre><code>#连接少，速度慢怎么办？
如果遇到连接数不少，但是速度上不去，或者连接数少但又不是IP限制（少于5）时，请尝试下载中直接关闭并重新启动程序，说不定会有惊喜（Aria2抽风对策）

#帐号或者ip被限制了怎么办？
分享，然后用分享链接下载，新版本中分享链接下载速度比以前更快了。

#使用第三方下载工具是否会被封号？
据说去年有过一波封号，不过从最近几个月使用情况来看并没有发现封号现象，只是经常出现IP的现象，过几小时就恢复正常了。

#什么是IP限制？
IP限制是我们的一种说法，指的是百度服务器主动断开多个连接，只保留很少的几个连接，导致下载速度非常慢，这种情况换个IP地址，或者等几个小时通常会自动恢复正常。

#大的压缩文件下载后提示压缩包已损坏？
设置中打开文件校验可以确保下载文件的完整性，新版本中已经默认开启

#连接数只有5,是不是被封号了？
通常是被限制IP了，封号情况目前为止还没遇到过，这种情况下可以尝试换个IP，或者过几个小时就能恢复正常。

#为什么的我下载速度还是慢？
下载速度快慢主要跟带宽和资源的多少有关，资源少的文件速度会慢些（确认资源多少可以在下载过程中查看连接数，如果连接数小于设置的连接数很多，比如设置为64，却只有2,3十个连接，那说明资源比较少），至于带宽，理论下载峰值 = 带宽/8

#为什么一启动就提示缺少bcrypt.dll?
通常出现在XP系统中，Aria2的新版本并不支持XP，若需要在XP下使用，请到Aria2的官网下载1.16-1.18之间的版本，替换到目录中的aria2c.exe即可正常使用。(注：老版本可以在aria2的官方网站上下载到，本程序不支持1.16以前的版本)

#是不是你们的软件不登陆就没多少速度？
登录与否与速度无关，登录情况下分享链接，速度跟不登录下分享链接是一样，等录只是能下自己网盘上的东西，另外，自己网盘上的东西往往能获取到一大堆来源（下载地址），所以连接数会比下分享链接多不少，当然速度也快不少。分享链接正常情况下都只会得到一个真实下载地址，一个资源Aria2只会最多16个连接，资源如果够健康（出口带宽够高，不拥挤），那还是可以达到满速的，只是达到满速的可能性比下自己网盘的东西低。

#为什么越接近完成速度越慢？
这是因为下载是分块同步进行的，每个块都有不少连接，接近完成时块已经很少了，连接数自然也少了，速度也就降低了，这属于正常现象。设置分块大小小一点，例如1M，可以在一定程序上缓解这个问题。

#为什么同一局域内不同的电脑下载差异非常大？
这个问题是Aria2的环境差异性引起的，原因不明，遇到这种情况可以尝试使用不同版本的aria2或者修改aria2的配置，网上可以轻松找到多个版本的aria2。

#为什么登录不了？
由于软件的登录是调用IE浏览器，如果电脑里的IE本身被破坏或者有问题，可能会导致登录页面显示不了。

#不支持下载目录吗？
支持的，只是下载列表里并不会显示文件夹，实际上已经在你指定的保存路径为你按网盘上文件夹的结构创建好文件夹了，文件也会按路径自动保存。</code></pre><p><strong>注：</strong>由于重未对外发布过，第一次运行有可能会出现“未知发行者”的提示，点击继续运行即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Spike-使用PHP实现的内网穿透工具</title>
    <url>/1630/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li>之前由于要与一个同事远程协作开发一款<code>app</code>需要用到内网穿透服务，在网上找到了<code>frp</code>与<code>ngrok</code>； 后来我在想能不能用<code>php</code>也写出来一个这样的服务软件？ 大家都知道<code>php</code>多进程多线程不够友好，在<code>window</code>上还不支持； 写服务确实很吃力； 不过幸运的是有<code>ReactPHP</code>的存在，关于<code>ReactPHP</code>不做赘述有兴趣的同学可以自行百度。</li>
<li>基于<code>ReactPHP</code>的<code>IO</code>多路复用，使得<code>Spike</code>并没有比<code>Frp</code>性能差太多； 下面是我简单做的一个<code>benchmark</code>，基于<code>apache ab</code>检验<code>http</code>隧道的服务性能； 客户端与服务端都搭在本地，代理同事电脑上的<code>http</code>服务。不是特别符合应用场景，大家简单看一下。</li>
<li>从下面的信息可以看出<code>Spike</code>性能似乎是稍微好点的，不过这个地方有点不公平，我在做<code>spike</code>的测试时只开启了服务端的日志，客户端的日志是关闭的； 而<code>FRP</code>的两端日志都是开启的；我不知道怎么关 frp 的日志；</li>
<li>在这里简单提一点由于<code>Spike</code>的日志 IO 是同步的所以日志的读写会耗掉部分性能，提升日志等级减少日志写入可以提升不少的性能；</li>
<li>这个项目是我比较上心的一个作品，算是证明了一点，<code>php</code>除了可以做网站也可以做服务，并且也没有太差。项目地址：<a href="https://github.com/slince/spike欢迎`star`，欢迎`fork`。" target="_blank" rel="noopener">https://github.com/slince/spike欢迎`star`，欢迎`fork`。</a></li>
</ul>
<p><strong>Spike：</strong></p>
<pre><code>Concurrency Level:      10
Time taken for tests:   37.727 seconds
Complete requests:      100
Failed requests:        0
Total transferred:      2569900 bytes
HTML transferred:       2514600 bytes
Requests per second:    2.65 [#/sec] (mean)
Time per request:       3772.747 [ms] (mean)
Time per request:       377.275 [ms] (mean, across all concurrent requests)
Transfer rate:          66.52 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   0.4      0       3
Processing:   533 3602 591.9   3714    4096
Waiting:      516 3587 592.3   3701    4076
Total:        534 3602 591.9   3715    4097

Percentage of the requests served within a certain time (ms)
  50%   3715
  66%   3791
  75%   3822
  80%   3844
  90%   3970
  95%   4015
  98%   4053
  99%   4097
 100%   4097 (longest request)</code></pre><p><strong>Frp：</strong></p>
<pre><code>Concurrency Level:      10
Time taken for tests:   38.230 seconds
Complete requests:      100
Failed requests:        0
Total transferred:      2569900 bytes
HTML transferred:       2514600 bytes
Requests per second:    2.62 [#/sec] (mean)
Time per request:       3823.045 [ms] (mean)
Time per request:       382.304 [ms] (mean, across all concurrent requests)
Transfer rate:          65.65 [Kbytes/sec] received

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:        0    0   0.2      0       1
Processing:   379 3650 644.4   3809    4140
Waiting:      360 3633 645.5   3789    4124
Total:        380 3650 644.4   3809    4140

Percentage of the requests served within a certain time (ms)
  50%   3809
  66%   3847
  75%   3909
  80%   3923
  90%   4026
  95%   4053
  98%   4129
  99%   4140
 100%   4140 (longest request)</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>SSTap：可以用55R来进行海外游戏加速的工具</title>
    <url>/1587/</url>
    <content><![CDATA[<p><strong>说明：</strong>该软件是一款利用虚拟网卡技术在网络层实现的<code>DaiLi</code>工具，并能在网络层拦截所有连接并转发给<code>HTTP</code>、<code>SOCKS4</code>、<code>55R</code>等，而无需对其它的应用程序做任何修改或设置。它能同时转发<code>TCP</code>，<code>UDP</code>数据包。很稳定，非常适合于游戏玩家使用。</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>【2017.11.20】<br>作者已弃更，官网下载地址已失效，博主分享多个历史版本，包括最新版供大家使用。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>下载地址：</strong><a href="https://down.southcat.net/55Tap/" target="_blank" rel="noopener">https://down.southcat.net/55Tap/</a></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Superbench.sh：VPS服务器一键测试脚本</title>
    <url>/1709/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>之前写<code>Superspeed</code>的时候，参考：Superspeed：一键测试服务器到国内的速度，就有人让我整合到<code>teddysun</code>大佬的<code>bench.sh</code>脚本里面，当时没啥时间弄，而且人家写的东西也不能直接抄，今天花了点时间弄了一下，去查询了相关的<code>Linux</code>命令，发现写来写去，那些基本的获取参数的命令都是一样的，变不出啥花样了，就偷懒参照了<code>bench.sh</code>改了一份，一会就弄完了，测试了一下没啥大问题，就放出来了。</p>
<h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul>
<li>改进了显示的模式，基本参数添加了颜色，方面区分与查找。</li>
<li><code>I/O</code>测试，更改了原来默认的测试的内容，采用小文件，中等文件，大文件，分别测试<code>IO</code>性能，然后取平均值。</li>
<li>速度测试替换成了<code>Superspeed</code>里面的测试，第一个默认节点是，<code>Speedtest</code>默认，其他分别测试到中国电信，联通，移动，各三个不同地区的速度。</li>
</ul>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>增加<code>GEOIP</code>信息，包含国家，地区，机房，<code>AS</code>号，分享模式，方便分享测试结果等功能。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/superbench.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>执行下列命令即可：</p>
<pre><code>wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>swizzin：一个轻量级的多用户SeedBox，一键安装网盘/BT下载/多媒体应用等</title>
    <url>/2155/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>swizzin</code>是一个轻量级模块化种子箱安装脚本，和博客之前谈到的<code>QuickBox</code>差不多，它可以一键安装<code>btsync</code>、<code>rtorrent</code>、<code>deluge</code>、<code>plex</code>、<code>nextcloud</code>等软件，让我们很方便的搭建网盘，同步盘，挖矿，刷<code>PT</code>及其它操作，而且支持多用户，非常的强大。</p>
<p>目前支持：</p>
<pre><code>autodl、btsync、couchpotato、config server firewall、deluge、emby、ffmpeg、headphones、jackett、letsencrypt、medusa、nextcloud、netdata、nginx、nzbget、nzbhydra、ombi、plex、plexpy、pyload、quassel、quickbox panel、quota、radarr、rapidleech、rclone、rtorrent、sabnzbd、shellinabox、sickgear、sickrage、sonarr、subsonic、syncthing、the lounge、vsftpd、x2go、xmr-stak、znc</code></pre><p>即将支持：</p>
<pre><code>Blocking public torrent、Qbittorrent、Lidarr package、Ftps with letencrypt、Organizr、Watcher3、Speedtest module、Webmin、Openv屁n、NZBHydra2、Seafile、monitorr、Tuning with BBR</code></pre><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/swizzin(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Debian 8+</code>、<code>Ubuntu 16.04+</code></p>
<p>运行命令：</p>
<pre><code>bash &lt;(wget -O- -q https://raw.githubusercontent.com/liaralabs/swizzin/master/setup.sh)
#或者
bash &lt;(curl -s https://raw.githubusercontent.com/liaralabs/swizzin/master/setup.sh)</code></pre><p>输入用户名和密码后，再运行<code>source /root/.bashrc</code>使配置生效。</p>
<p>接下来安装<code>Nginx</code>和<code>panel</code>面板，运行命令：</p>
<pre><code>box install nginx panel</code></pre><p>安装完成后，就可以使用<code>IP</code>登录面板了。由于是<code>https</code>的开头，浏览器可能会提示不安全，无视即可。接下来讲下域名配置。</p>
<h2 id="签发Let’s-Encrypt证书"><a href="#签发Let’s-Encrypt证书" class="headerlink" title="签发Let’s Encrypt证书"></a>签发Let’s Encrypt证书</h2><p>如果你使用<code>IP</code>访问面板不方便，那我们可以配置下域名，请先解析一个域名到服务器。</p>
<p>运行命令：</p>
<pre><code>apt-get -y install git
box install letsencrypt </code></pre><p>依次输入你的域名、<code>y</code>、<code>n</code>，如果使用了<code>CF</code>，那第三个选<code>y</code>，没有就<code>n</code>，最后我们就可以用域名访问面板了。</p>
<h2 id="使用命令"><a href="#使用命令" class="headerlink" title="使用命令"></a>使用命令</h2><pre><code>#列出所有可用包
box list
#安装可用包，以nginx为例
box install nginx
#移除安装的包，以nginx为例
box remove nginx
#添加新用户，用户为moerats
box adduser moerats
#删除指定的用户
box deluser moerats
#修改用户密码
box chpasswd moerats
#更新最新包
box update
#升级指定的包，以nginx为例
box upgrade nginx
#启动r(u)Torrent附加管理界面
box rtx or rtx</code></pre><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>基本上很多软件都是一条命令就安装上了，有的安装时需要在<code>SSH</code>上填下配置信息，这里以<code>Nextcloud</code>为例。</p>
<p>使用命令：</p>
<pre><code>box install nextcloud</code></pre><p>按要求输入<code>Nextcloud</code>用户名和数据库信息。<br><img src="https://www.southcat.net/usr/picture/swizzin(2).png" alt="请输入图片描述" title="请输入图片描述"><br>然后直接使用所给的地址，或者从面板左侧的<code>Nextcloud</code>入口进入即可。<br><img src="https://www.southcat.net/usr/picture/swizzin(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/swizzin(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该盒子前途很大，作者后期会慢慢添加更多的应用包，会发展的更全面，如果这些应用并没有你想要的，可以看看博主以前分享的一个教程，查看：一个可以自动安装多网站程序的面板 ：YunoHost安装教程，基本上该有的都有了。对于用来挂<code>PT</code>什么的，注意下版权，请选择罗马尼亚、俄罗斯等版权非常宽松的地区的服务器进行测试。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Superspeed：一键测试服务器到国内的速度</title>
    <url>/1693/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul>
<li>利用<code>Speedtest</code>测试你的国外主机到国内不同省市的速度。</li>
<li>集成了<code>Speedtest</code>提供的电信，联通，移动线路。</li>
<li>一键选择，一键测试。</li>
<li>全面测速，添加一键全面测速功能，测试服务器到全国北方南方，电信，联通，移动的速度。</li>
</ul>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><strong>1、全面测速</strong><br><img src="https://www.southcat.net/usr/picture/Superspeed(1).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>2、地区测速</strong><br><img src="https://www.southcat.net/usr/picture/Superspeed(2).jpg" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Superspeed(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>执行下列命令即可：</p>
<pre><code>wget https://raw.githubusercontent.com/oooldking/script/master/superspeed.sh
chmod +x superspeed.sh
./superspeed.sh</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Telegram MTProxy一键安装脚本</title>
    <url>/2134/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们一般使用<code>Telegram</code>的时候，都需要先爬<code>Q</code>，这样还是比较麻烦的，而在<code>Telegram</code>最新版本中内置了<code>MTProxy</code>代理，占用小，耗电量也小，只需要我们简单设置下，就可以让<code>Telegram</code>和本地应用一样，即开即用，而不需要额外的爬<code>Q</code>了。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>说明：</strong>这里使用的是逗比针对<code>Go 语言版</code>写的一键脚本，相比官方版本主要是不容易出错，而且功能更完善。</p>
<p><strong>系统要求:</strong> <code>CentOS 6+</code>、<code>Debian 7+</code>、<code>Ubuntu 14+</code></p>
<p>安装命令：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/iiiiiii1/doubi/master/mtproxy_go.sh &amp;&amp; bash mtproxy_go.sh</code></pre><p>运行脚本后，会出现如下选项：<br><img src="https://www.southcat.net/usr/picture/MTProxy-Go.png" alt="请输入图片描述" title="请输入图片描述"><br>安装完成后会得到相应的配置信息。</p>
<pre><code>1、将链接复制到浏览器或者TG对话框打开并添加。
2、进入Settings(设置)—Data and Storage(数据和存储)，找到相应的应用填入信息即可。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>TestRace：Linux VPS回程路由一键测试脚本</title>
    <url>/1935/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这是一个用于在<code>Linux</code>上测试回程路由的脚本，这里的回程路由是指从你的机器出发到指定节点的路由。</p>
<p><strong>Github地址：</strong><a href="https://github.com/nanqinlang-script/testrace" target="_blank" rel="noopener">https://github.com/nanqinlang-script/testrace</a></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>运行命令：</p>
<pre><code>wget https://raw.githubusercontent.com/nanqinlang-script/testrace/master/testrace.sh
bash testrace.sh</code></pre><p>在运行脚本后，会出现三个选项供以选择：</p>
<ul>
<li>选择一个节点进行测试</li>
<li>四网路由快速测试</li>
<li>手动输入<code>ip</code>进行测试</li>
</ul>
<p><strong>选项说明：</strong></p>
<pre><code>1、选择一个节点进行测试
本脚本以内置移动/联通/电信/教育网四网的多个节点。
选择1回车后，会列出这些节点的列表。
选择其中一个测试完成后，可以继续选择节点测试。

2、四网路由快速测试
此模式会对以下几个节点进行回程路由测试。
此模式测试的节点包括：
电信
上海电信(天翼云)
厦门电信CN2
联通
浙江杭州联通
移动
浙江杭州移动
教育网
北京教育网

3、手动输入ip进行测试
此模式是由用户 手动输入要测试的目标ip
每次测试完成后，可选择继续测试其它ip</code></pre><h2 id="相关目录"><a href="#相关目录" class="headerlink" title="相关目录"></a>相关目录</h2><p>脚本的安装目录位于<code>/home/testrace</code>。<br>测试完成并退出脚本后，会生成测试的记录文件于<code>/home/testrace/testrace.log</code>。</p>
<h2 id="演示截图"><a href="#演示截图" class="headerlink" title="演示截图"></a>演示截图</h2><p><strong>1、菜单</strong><br><img src="https://www.southcat.net/usr/picture/testrace(1).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>2、选择节点</strong><br><img src="https://www.southcat.net/usr/picture/testrace(2).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>3、测试过程</strong><br><img src="https://www.southcat.net/usr/picture/testrace(3).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>4、继续测试其它节点</strong><br><img src="https://www.southcat.net/usr/picture/testrace(4).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>5、退出脚本</strong><br><img src="https://www.southcat.net/usr/picture/testrace(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>TeleShellBot：通过Telegram机器人远程执行shell命令</title>
    <url>/1731/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>TeleShellBot</code>是我脑洞大开的时候写的一个简单的<code>telegram</code>机器人，可以帮你远程执行<code>shell</code>命令，从而让你可以在手机上操作你的服务器。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/TeleShellBot.gif" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p><strong>Github地址：</strong><a href="https://github.com/marknote/TeleShellBot" target="_blank" rel="noopener">https://github.com/marknote/TeleShellBot</a></p>
<p><strong>1、安装</strong></p>
<pre><code>git clone https://github.com/marknote/TeleShellBot.git
cd TeleShellBot
npm install</code></pre><p><code>git</code>和<code>npm</code>安装请参考：Debian/Ubuntu/CentOS安装最新版的Node.js和NPM教程，Debian/Ubuntu/CentOS安装Git教程。</p>
<p><strong>2、配置</strong><br>根据Telegram instructions去创建一个机器人的<code>UserID</code>，然后将<code>UserID</code>和<code>BOT token</code>放到<code>config.js</code>里面。</p>
<pre><code>module.exports = {
    config:function(){
        return (
            {
                adminUsers:[ADMIN_ID], //admin users&apos; telegram id, should be numbers
                botToken: &apos;YOUR_BOT_TOEKN&apos;, // bot token

            }
        );
    }
};</code></pre><p><strong>3、运行</strong></p>
<pre><code>npm start</code></pre><p>or</p>
<pre><code>node index.js</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>TinyPNG：一个可以在线压缩图片的网站</title>
    <url>/1579/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>TinyPNG</code>可以在线压缩图片大小，支持<code>PNG</code>、<code>JPG</code>格式的图片。我们写博客贴图片要尽可能的压缩下图片的大小，尤其是文章多了网站流量不够用的情况下，如果你手上没有<code>PS</code>之类的图像处理软件来压缩图片的话，这个网站还是挺有用的。直接上传图片，然后自动压缩，然后下载下来就行了。肉眼基本看不出什么分别，不过测试中还是偶尔发现有图片压缩了质量变差的情况。<br><img src="https://www.southcat.net/usr/picture/ystp.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>thefuck：Linux中一款可以自动纠正前一个命令行错误的工具</title>
    <url>/2007/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>你是不是经常在终端敲错命令？敲错命令，删掉重敲，很烦有没有？当你一再敲错的时候，内心一定是崩溃的，一定在默念<code>What The FUCK!</code>。就这样<code>thefuck</code>神器就诞生了。<code>thefuck</code>不仅能修复字符输入顺序的错误，在很多别的你想说<code>fuck</code>的情况下，<code>thefuck</code>依然有效，反正只要你因为命令的问题报错，就请<code>fuck</code>一下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/thefuck_l.gif" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p><strong>1、命令拼写不对</strong></p>
<pre><code># puthon
No command &apos;puthon&apos; found, did you mean:
 Command &apos;python&apos; from package &apos;python-minimal&apos; (main)
 Command &apos;python&apos; from package &apos;python3&apos; (main)
zsh: command not found: puthon

# fuck
python
Python 3.4.2</code></pre><p><strong>2、命令输错</strong></p>
<pre><code># git brnch
git: &apos;brnch&apos; is not a git command. See &apos;git --help&apos;.

Did you mean this?
    branch

# fuck
git branch
* master</code></pre><p><strong>3、权限不够</strong></p>
<pre><code># apt-get install vim
E: Could not open lock file /var/lib/dpkg/lock - open (13: Permission denied)
E: Unable to lock the administration directory (/var/lib/dpkg/), are you root?

# fuck
sudo apt-get install vim
[sudo] password for nvbn:
Reading package lists... Done</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装thefuck</strong><br>运行以下命令：</p>
<pre><code>#CentOS系统
yum -y update &amp;&amp; yum -y install gcc 
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py &amp;&amp; yum -y install python-devel
sudo -H pip install thefuck

#Ubuntu/Debian系统
sudo apt update
sudo apt install python3-dev python3-pip
sudo pip3 install thefuck</code></pre><p>更多安装及使用方法查看<code>Github</code>项目地址：<a href="https://github.com/nvbn/thefuck。" target="_blank" rel="noopener">https://github.com/nvbn/thefuck。</a></p>
<p><strong>2、配置</strong></p>
<pre><code>#编辑bashrc配置文件
vim ~/.bashrc
#在文件尾加入一行
eval &quot;$(thefuck --alias fuck)&quot;
#使生效
source ~/.bashrc</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>tinyPortMapper端口转发一键脚本，可转发UDP和TCP流量</title>
    <url>/2105/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>tinyPortMapper</code>是一个易安装配置的端口转发工具，可转发<code>UDP</code>和<code>TCP</code>流量，其实和博主之前发的<code>Socat</code>差不多，查看：Socat一键安装脚本，都只能一次转发单个端口。虽然没啥明显区别，但此类工具不嫌多，就拿出来说下。</p>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p><strong>系统要求：</strong>支持<code>CentOS 6+</code> 、<code>Debian 7+</code>、<code>Ubuntu 14+</code>。<br><strong>脚本说明：</strong>脚本默认开启<code>UDP</code>、<code>TCP</code>转发，带开机自启功能，且一次只能转发单个端口，如果想转发多个端口请重复运行本脚本。</p>
<p>使用<code>root</code>运行以下命令：</p>
<pre><code>wget https://www.southcat.net/usr/shell/tinyPortMapper.sh &amp;&amp; bash tinyPortMapper.sh</code></pre><p>按要求输入以下信息：</p>
<pre><code>#如果你要用本地服务器的2222端口转发IP为1.2.3.4服务器的8888端口，那就依次填入指定参数。
请输入本地端口:2222
请输入远程端口:8888
请输入远程IP:1.2.3.4</code></pre><p>输入后直到配置完成。</p>
<h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><p><strong>1、删除tinyPortMapper</strong></p>
<pre><code>rm -rf /tinyPortMapper


#CentOS系统，编辑/etc/rc.d/rc.local，删除tinyPortMapper启动命令。
#Debian/Ubuntu系统，编辑/etc/rc.local，删除tinyPortMapper启动命令。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Transfer.sh：Linux VPS使用命令行快速的分享文件</title>
    <url>/1988/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Transfer.sh</code>是一个可以让我们将<code>Windows</code>/<code>Linux</code>系统里的文件快速分享出去的平台，特别是<code>Linux VPS</code>，只需要一条命令就可以将文件快速分享出去，很方便，而且上传文件最大可达<code>10GB</code>，有效期<code>14</code>天。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>官方网站：</strong><a href="https://transfer.sh/" target="_blank" rel="noopener">https://transfer.sh/</a></p>
<p><strong>1、Windows系统</strong><br><code>Windows</code>系统直接进入官网，点击<code>click to browse</code>就可以上传文件，之后会给我们一个文件分享链接。<br><img src="https://www.southcat.net/usr/picture/Transfer.sh_w.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、Linux VPS服务器</strong><br>使用命令：</p>
<pre><code>curl --upload-file 文件 https://transfer.sh/文件名
#如
curl --upload-file /root/hello.txt https://transfer.sh/hello.txt </code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>TopDocs：一款美观实用的在线文档编辑系统，支持Markdown语法</title>
    <url>/2461/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近博主对文档程序小有需求，找了很久发现都是单页，而且还不支持移动端，不是很理想，所以萌JJ大雕就专门花了半天时间，给博主写了一个，该文档程序基于<code>graphql</code>、<code>nuxtjs</code>、<code>mongodb</code>、<code>keystonejs</code>的实时在线文档编辑系统，可用作各种在线文档编辑和展示，支持<code>markdown</code>语法，对移动端特别友好，这里就开源分享出来，给对文档有需求的人。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/TopDocs(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/TopDocs(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Gitee地址：</strong><a href="https://gitee.com/quazero/topdocs" target="_blank" rel="noopener">https://gitee.com/quazero/topdocs</a></p>
<p><strong>所需环境：</strong><code>NodeJS</code>、<code>MongoDB</code>。</p>
<p><strong>1、安装NodeJS</strong></p>
<pre><code>#Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_10.x | bash -
apt install -y git nodejs 

#CentOS系统
curl -sL https://rpm.nodesource.com/setup_10.x | bash -
yum install nodejs git -y</code></pre><p><strong>2、安装Mongodb</strong></p>
<pre><code>#CentOS 6系统，将下面命令一起复制进SSH客户端运行
cat &lt;&lt;EOF &gt; /etc/yum.repos.d/mongodb.repo
[mongodb-org-4.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/6/mongodb-org/4.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc
EOF
yum -y install mongodb-org

#CentOS 7系统，将下面命令一起复制进SSH客户端运行
cat &lt;&lt;EOF &gt; /etc/yum.repos.d/mongodb.repo
[mongodb-org-4.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/7/mongodb-org/4.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc
EOF
yum -y install mongodb-org

#Debian 8系统
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo &quot;deb http://repo.mongodb.org/apt/debian jessie/mongodb-org/4.0 main&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt update -y
apt install -y mongodb-org

#Debian 9系统
curl https://www.mongodb.org/static/pgp/server-4.0.asc | apt-key add -
echo &quot;deb http://repo.mongodb.org/apt/debian stretch/mongodb-org/4.0 main&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt-get update -y
apt-get install -y mongodb-org

#Debian 10系统
curl https://www.mongodb.org/static/pgp/server-4.2.asc | apt-key add -
echo &quot;deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.2.list
apt update -y
apt install -y mongodb-org

#Ubuntu 16.04系统
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo &quot;deb https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt update -y
apt install -y mongodb-org

#Ubuntu 18.04、18.10、19.04系统
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo &quot;deb https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse&quot; | tee /etc/apt/sources.list.d/mongodb-org-4.0.list
apt update -y
apt install -y mongodb-org</code></pre><p>如果导入公匙时出现<code>gnupg, gnupg2 and gnupg1 do not seem to be installed</code>错误，使用<code>apt install -y gnupg2</code>，然后重新导入即可。</p>
<p>启动<code>Mongodb</code>并设置开机自启：</p>
<pre><code>#CentOS 6系统
service mongod start
chkconfig mongod on

#CentOS 7、Debian、Ubuntu系统
systemctl start mongod
systemctl enable mongod</code></pre><p><strong>3、新建数据库</strong></p>
<pre><code>#数据库用户名和密码均为topdocs，将下面命令一起复制进SSH客户端运行
cat &lt;&lt;EOF &gt; createdb
use topdocs
db.createUser( { user: &quot;topdocs&quot;, pwd: &quot;topdocs&quot;, roles: [ { role: &quot;readWrite&quot;, db: &quot;topdocs&quot; } ] } )
EOF
mongo&lt;createdb &amp;&amp; rm -rf createdb</code></pre><p><strong>4、安装TopDocs</strong></p>
<pre><code>#拉取源码
git clone https://gitee.com/quazero/topdocs /opt/topdocs
cd /opt/topdocs
#安装yarn和依赖
npm i -g yarn
yarn
#编辑index.js
vi index.js</code></pre><p>修改以下代码：</p>
<pre><code>endpoint: &apos;http://127.0.0.1:3000/admin/api&apos;,

#如果我后面使用docs.southcat.net域名反代本地地址127.0.0.1:3000，那么修改为：
endpoint: &apos;http://docs.southcat.net/admin/api&apos;,
或
endpoint: &apos;https://docs.southcat.net/admin/api&apos;,

#如果我后面直接使用ip地址1.2.3.4访问，那么修改为：
endpoint: &apos;http://1.2.3.4:3000/admin/api&apos;,</code></pre><p><code>vi</code>编辑步骤：使用<code>i</code>进入编辑状态，编辑完成使用<code>esc</code>退出编辑状态，再输入<code>:wq</code>，然后<code>Enter</code>确定退出。</p>
<p>开始打包并运行：</p>
<pre><code>yarn build
yarn start

#后台运行
nohup yarn start&amp;</code></pre><p>这里访问地址为<code>index.js</code>中修改域名或<code>http://服务器ip:3000</code>。</p>
<p>对于<code>IP</code>访问的，如果<code>CentOS</code>系统打不开的话，可能还需要开启<code>3000</code>端口，使用命令：</p>
<pre><code>#CentOS 6
iptables -I INPUT -p tcp --dport 3000 -j ACCEPT
service iptables save
service iptables restart

#CentOS 7
firewall-cmd --zone=public --add-port=3000/tcp --permanent
firewall-cmd --reload</code></pre><p>像阿里云等服务器，还需要去安全组那里开放下端口。</p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>如果你在上面编辑<code>index.js</code>的时候填的域名，那么就需要绑定下域名，反代下<code>http://127.0.0.1:3000</code>即可，反之，使用的<code>ip</code>就不用。</p>
<p>这里依旧使用<code>Caddy</code>，如果你安装过<code>Nginx</code>或者<code>Apache</code>，就自行搜索反代教程了。</p>
<p>安装<code>Caddy</code>：</p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>配置<code>Caddy</code>：</p>
<pre><code>#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！

#http访问，该配置不会自动签发SSL
echo &quot;docs.southcat.net {
 gzip
 proxy / 127.0.0.1:3000 {
    websocket
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile

#https访问，该配置会自动签发SSL，请提前解析域名到VPS服务器
echo &quot;docs.southcat.net {
 gzip
 tls admin@southcat.net
 proxy / 127.0.0.1:3000 {
    websocket
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p><code>tls</code>参数会自动帮你签发<code>ssl</code>证书，如果你要使用自己的<code>ssl</code>，改为<code>tls /root/xx.crt /root/xx.key</code>即可。后面为<code>ssl</code>证书路径。</p>
<p>启动<code>Caddy</code>：</p>
<pre><code>/etc/init.d/caddy start</code></pre><p>就可以打开域名进行访问了。</p>
<h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>这里新建一个简单的<code>Systemd</code>配置文件，只适用于<code>CentOS 7</code>、<code>Debian 8+</code>、<code>Ubuntu 16+</code>等。</p>
<pre><code>#新建systemd配置文件，将以下代码一起复制到SSH运行
cat &gt; /etc/systemd/system/topdocs.service &lt;&lt;EOF
[Unit]
Description=topdocs
After=network.target

[Service]
Type=simple
WorkingDirectory=/opt/topdocs
ExecStart=$(command -v yarn) start
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF</code></pre><p>如果你使用的宝塔，还需要做下软连接，不然启动可能会失败，反之不需要，使用命令：</p>
<pre><code>ln -sf $(which node) /usr/bin/node</code></pre><p>开始启动并设置开机自启：</p>
<pre><code>systemctl start topdocs
systemctl enable topdocs</code></pre><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p>后台地址<code>/admin</code>，账号为<code>admin@admin.com</code>，密码为<code>adminadmin</code>，自己进后台修改。</p>
<p>设置中<code>index</code>中是首页的展示内容，需要注意的是：</p>
<pre><code>-logo-/logo.png-logo-
-title-跨世代文档编辑系统-title-
-subtitle-实时动态markdown文档编辑系统，基于graqhql、mongodb、keystonejs、nuxtjs开发的移动优先的服务端渲染文档系统。-subtitle-
-button-查看文档$https://gitee.com/quazero/topdocs-button-
===header===
header下面就是完全的markdown语法的编写区域，编辑完成之后，首页可查看变化。</code></pre><p>参数大致意思：</p>
<pre><code>-logo-之间的是LOGO图片，可链接也可路径。
-title-之间的是首页展示大标题。
-subtitle-之间的是首页展示的项目介绍。
-button-是首页展示按钮需要的内容。其中&lt;按钮名&gt;$&lt;链接&gt;，链接可链接也可路径，按需更改。
===header===下面的就是正常的markdown语句，自己根据需要编写。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>torrent2magnet：一个BT种子转磁力链的小工具</title>
    <url>/1703/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>最近学<code>Vue</code>、<code>Webpack</code>等一系列前端框架和工具，算练手了，写了一个种子转磁力链的小工具，前端直接用的<code>github pages</code>，后端用的<code>openshift</code>的云服务。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/torrent2magnet.jpg" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>在线地址：</strong><a href="https://wuhaoworld.github.io/torrent2magnet/" target="_blank" rel="noopener">https://wuhaoworld.github.io/torrent2magnet/</a><br><strong>本地下载：</strong>torrent2magnet.zip<br><strong>Github地址：</strong><a href="https://github.com/wuhaoworld/torrent2magnet" target="_blank" rel="noopener">https://github.com/wuhaoworld/torrent2magnet</a></p>
<p>当然，你也可以自己搭建，前提搭建好<code>WEB</code>环境后，把小工具文件上传到网站根目录，或者二级目录再进行访问即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Typecho博客首页和分类页不显示文章全文</title>
    <url>/1459/</url>
    <content><![CDATA[<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>1、登陆博客后台，把鼠标移至“控制台”，在下拉菜单中选择“外观”选项<br>2、在进入的页面中点击“编辑当前外观”<br>3、在<code>index.php</code>和<code>archive.php</code>文件找到代码</p>
<pre><code>&lt;?php $this-&gt;content(&apos;阅读剩余部分...&apos;); ?&gt;</code></pre><p>将其替换为</p>
<pre><code>&lt;?php $this-&gt;excerpt(); ?&gt;</code></pre><p>如果要按制摘要的输出字数，可以修改代码为</p>
<pre><code>&lt;?php $this-&gt;excerpt(200, &apos;...&apos;); ?&gt;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Torrench：一个命令行BT种子搜索工具，可直接下载资源</title>
    <url>/2142/</url>
    <content><![CDATA[<p><strong>说明：</strong>前几天博主分享过一个命令行搜索<code>BT</code>磁力的教程，查看：使用torrent-cli命令行获取电影BT磁力，不过好像功能比较单一，只有搜索功能，今天再分享个命令行<code>BT</code>种子搜索工具<code>Torrench</code>，该工具不仅可以搜索<code>BT</code>种子，还可以将种子传输到<code>transmission</code>、<code>deluge</code>、<code>qBittorrent</code>客户端进行下载，还支持多个站点搜索，比较强大。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/kryptxy/torrench" target="_blank" rel="noopener">https://github.com/kryptxy/torrench</a><br><strong>系统要求：</strong><code>Windows</code>、<code>Linux</code>、<code>MacOs</code>，这里就说下<code>Linux VPS</code>安装，建议使用<code>CentOS</code>系统。</p>
<p><strong>1、安装Python3</strong><br>一般大多数<code>Ubuntu</code>自带<code>Python3</code>，而<code>Centos</code>、<code>Debian</code>就需要我们安装了。</p>
<pre><code>#查看是否有Python3
python3 -V

#安装Python3
#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</code></pre><p>然后再输入<code>python3 -V</code>看是否安装成功。</p>
<p><strong>2、安装Torrench</strong><br>官方说了<code>pip</code>和源码安装两种方法，博主感觉<code>pip</code>安装好像容易出问题，所以这里只说源码安装。</p>
<pre><code>#CentOS系统
yum install git -y
#Ubuntu和Debian系统
apt-get install git -y

#下载源码并安装
git clone https://github.com/kryptxy/torrench.git
cd torrench
pip3 install -r requirements.txt
python3 setup.py install</code></pre><p>安装<code>wcwidth</code>使其支持中日韩文：</p>
<pre><code>pip3 install wcwidth</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>如果想要使用更多功能就需要配置文件。只是想简单的使用搜索功能，那这步可以跳过。</p>
<p><strong>1、配置多站点搜索</strong></p>
<pre><code>#下载config.ini并配置
cd /root/torrench
wget -O config.ini https://pastebin.com/raw/reymRHSL
sed -i &apos;s/enable = 0/enable = 1/g&apos; &apos;/root/torrench/config.ini&apos;
#复制配置文件
cp /root/torrench/config.ini /root/.config/torrench
#更新配置文件
torrench -U</code></pre><p><strong>2、添加到客户端下载</strong><br>本配置可以将你搜索的<code>BT</code>种子直接添加到客户端进行下载，编辑<code>torrench.ini</code>文件</p>
<pre><code>nano /root/.config/torrench/torrench.ini</code></pre><p>修改如下信息：</p>
<pre><code>#CLIENT为BT客户端类型，支持transmission-qt、deluge、qBittorrent、rtorrent、transmission-remote、transmission-gtk，这里博主建议使用rtorrent客户端，当然你会用其它的也可以自己修改
CLIENT = rtorrent
#下面参数为服务器和端口，默认localhost:9091，客户端填了rtorrent后，以下参数不用管
SERVER = 
PORT =</code></pre><p>接下来需要在服务器上安装<code>rtorrent</code>：</p>
<pre><code>#CentOS系统
yum install rtorrent -y  

#Debian/Ubuntu系统
apt-get update -y
apt-get install rtorrent -y </code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、基本命令</strong></p>
<pre><code>torrench 参数 搜索名称</code></pre><p>参数介绍：</p>
<pre><code>#由于部分站点关闭，跨站点不能用，只说下简单参数
可选参数：
    -h, --help            显示帮助并退出
    -v, --version         显示版本并退出
    -U, --update-config   更新config.ini文件
    -p, --page-limit      搜索页数

可选BT站点参数：需要config.ini(默认禁用)    
    -t, --thepiratebay
    -k, --kickasstorrent
    -x, --x1337
    -r, --rarbg
    -n, --nyaa
    -l, --limetorrents
    -i, --idope
    -b, --xbit</code></pre><p><strong>2、示例命令</strong></p>
<pre><code>#在idope站点搜索逃学威龙，且默认搜索第一页，如果运行命令出错或者无搜索结果，请换个站点搜索
torrench -i &quot;逃学威龙&quot;

#如果搜索多页，比如搜索2页的资源
torrench -i &quot;逃学威龙&quot; -p 2</code></pre><p>搜索演示：</p>
<pre><code>[root@rats ~]# torrench -i &quot;逃学威龙&quot;

[Idope]

Fetching from page: 1
[in 0.90 sec]

+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| NAME                                                                                             | INDEX   | SIZE     |   SEEDS | AGE      |
+==================================================================================================+=========+==========+=========+==========+
| [逃学威龙2].Fight.Back.to.School.II.1992.DVDRip.X264                                             | --1--   | 1.8 GB   |     112 | 9 months |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| [2015.04.19]逃学威龙2[1992年中国香港喜剧(BD)][国粤双语]                                          | --2--   | 4.9 GB   |      25 | 1 years  |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| 逃学威龙I II III合集.D9终极收藏.1991-1993                                                        | --3--   | 5.0 GB   |      22 | 1 years  |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| [2009.10.01]逃学威龙II[1992年中国香港喜剧动作][国语]                                             | --4--   | 570.8 MB |      16 | 5 months |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| 逃学威龙1 粤语版[周星驰 吴孟达]_超清.kux                                                         | --5--   | 885.5 MB |      11 | 1 years  |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| 逃学威龙1-3.Fight.Back.to.School.1991-1993.BD720P.X264.AAC.Cantonese&amp;Mandarin.CHS.Mp4Ba          | --6--   | 6.8 GB   |       8 | 1 years  |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| 逃学威龙ⅠⅡⅢ合集.1991-1993.国粤双语.中文字幕                                                   | --7--   | 8.6 GB   |       6 | 1 years  |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| 逃学威龙3之龙过鸡年.国粤双语中字.Fight.Back.to.School.III.1993.BD720P.X264.AAC.2Audios.CHS-882FX | --8--   | 2.6 GB   |       5 | 4 months |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| 逃学威龙1-3【国语中文字幕】                                                                      | --9--   | 1.2 GB   |       4 | 7 months |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+
| 逃学威龙1-3【粤语中文字幕】                                                                      | --10--  | 1.2 GB   |       3 | 1 years  |
+--------------------------------------------------------------------------------------------------+---------+----------+---------+----------+

Total 10 torrents [1 pages]
Total time: 0.90 sec

Enter torrent&apos;s INDEX value

(q = quit)
(r = return)
index &gt; 1  #输入数字进行选择

Selected index [1] - [逃学威龙2].Fight.Back.to.School.II.1992.DVDRip.X264

[1] Print links (magnetic, upstream)
[2] Load torrent to client
---
[r] Return
[q] Quit

Option &gt; 2  #1是将磁力和链接地址打印到SSH客户端，2是直接将种子添加到客户端下载

(rtorrent)
Success (PID: 13817)

#使用Ctrl+C退出，下载的文件在/root文件夹</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Typecho升级助手：一个可以将Typecho升级到最新版本的插件</title>
    <url>/1985/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这是一个<code>Typecho</code>升级插件，它能帮你把<code>Typecho</code>升级到最新版本。</p>
<p>你可以选择升级到最新的<code>developer</code>版本或者<code>release</code>版本，当然你也可以在两者之间切换。</p>
<p>从此告别手动更新的繁琐步骤，随心所欲升级到最新版本。</p>
<p>每次升级前均会有备份操作，保证你的数据安全。</p>
<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ol>
<li>插件目录有可写权限。</li>
<li><code>zip</code>扩展。</li>
<li><code>curl</code>扩展/设置<code>allow_url_fopen = 1</code>在你的<code>php.ini</code>中。</li>
</ol>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol>
<li>下载这个插件，Github下载、本地下载。</li>
<li>添加到你的项目中并启用它。</li>
</ol>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol>
<li>设置是否升级到<code>developer</code>版本(默认为<code>true</code>)。</li>
<li>在控制面板执行升级操作。</li>
</ol>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Typecho中去除URL中的index.php</title>
    <url>/1470/</url>
    <content><![CDATA[<p>在默认情况下，Typecho能够正常工作后，所有文章的URL都会是类似</p>
<pre><code>http://yourdomain.com/index.php/archives/sample.html</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>TypExport-Typecho数据导出工具,可搬家转换到wordpress博客</title>
    <url>/1645/</url>
    <content><![CDATA[<p><strong>说明：</strong>对于很多<code>typecho</code>博客想搬到<code>wordpress</code>博客的人来说，这插件是再好不过了，利用此插件可导出一份<code>xml</code>文件，方便后续再导入<code>wordpress</code>就完成了转换，非常简单。文章、评论、分类目录和标签完全无损，不过插件不会导出友链的内容，这就到时候记得备份下友链就行了。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Typecho</code>导出<code>WXR</code>插件，<code>WXR</code>全称为<code>WordPress eXtended Rss</code>，是<code>wordpress</code>导出数据的一种格式，它包含了您的全部文章、页面、评论、自定义字段、分类目录和标签。<br><strong>测试平台：</strong><code>typecho 1.0</code> &amp; <code>wordpress 4.x</code>,具体版本自己测试。<br><strong>项目地址：</strong><a href="https://github.com/panxianhai/TypExport" target="_blank" rel="noopener">https://github.com/panxianhai/TypExport</a><br><strong>下载地址：</strong>TypExport-0.9.zip</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>TypechoEX-Typecho博客程序二次开发/平滑覆盖安装</title>
    <url>/1664/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>TypechoEX</code>在<code>Typecho</code>的基础上改进，实现了数据库缓存、静态缓存等功能，计划加入站点统计、数据备份、多语言支持，页面加载只需<code>0-5</code>查询。</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>Tyoecho EX</code>是在<code>Typecho</code>稳定版的基础上进行的二次开发，所以并不保证适用于<code>Typecho</code>开发版。</p>
<p><strong>原下载地址：</strong>typecho-ex-alpha.zip</p>
<p><strong>备用地址：</strong>typecho-ex-alpha.zip</p>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>此为升级包，不包含<code>usr</code>目录和默认主题，安装后显示<code>500 Server Error</code>，添加主题，后台启用即可。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下载文件解压到博客安装根目录覆盖全部访问<code>install</code>目录即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Typecho博客首页显示文章摘要的方法</title>
    <url>/1452/</url>
    <content><![CDATA[<p><strong>说明：</strong>Typecho 博客默认没有自动摘要的功能，博客首页和分类归档页面显示的文章都是全文输出的，对于内容文字很多的文章，会把页面拉伸得很长，显示得也不怎么美观。但博主可以在发表文章的时候手动摘要。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>在发表文章的时候，在文章内容中添加<code>&lt;!–more–&gt;</code>标签即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Ubuntu/Debian上安装和启用ipmitool教程</title>
    <url>/1683/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多时候都要用到<code>ipmitool</code>，这是说下方法。</p>
<p>首先需要启用两个内核模块：</p>
<pre><code>modprobe ipmi_si
modprobe ipmi_devintf
echo ipmi_si &gt;&gt; /etc/modprobe
echo ipmi_devintf &gt;&gt; /etc/modprobe</code></pre><p>然后安装<code>ipmitool</code>：</p>
<pre><code>apt-get install ipmitool</code></pre><p>列出IPMI网络信息：</p>
<pre><code>ipmitool lan print


ipmitool user list 1</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Ubuntu 18.04/18.10快速开启Google BBR的方法</title>
    <url>/2083/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Ubuntu 18.04</code>前几天发布了，改变挺大的，内核也直接升到了正式版<code>4.15</code>，而<code>BBR</code>内核要求为<code>4.9</code>，也就是说满足了，所以我们不需要换内核就可以很快的开启<code>BBR</code>，这里简单说下方法。</p>
<pre><code>提示：Ubuntu 18.10依然可以用该方法开启BBR，而对于19.04和20.04、貌似官方直接给你开启了BBR，不需要重复开启了。</code></pre><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、修改系统变量</strong></p>
<pre><code>echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf
echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf</code></pre><p><strong>2、保存生效</strong></p>
<pre><code>sysctl -p</code></pre><p><strong>3、查看内核是否已开启BBR</strong></p>
<pre><code>sysctl net.ipv4.tcp_available_congestion_control</code></pre><p>显示以下即已开启：</p>
<pre><code># sysctl net.ipv4.tcp_available_congestion_control
net.ipv4.tcp_available_congestion_control = bbr cubic reno</code></pre><p><strong>4、查看BBR是否启动</strong></p>
<pre><code>lsmod | grep bbr


# lsmod | grep bbr
tcp_bbr                20480  14</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Ubuntu/Debian/CentOS系统Ghost博客一键安装脚本</title>
    <url>/1596/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们现在常用的博客程序有<code>WordPress</code>、<code>Typecho</code>、<code>ZBLOG</code>，本博客就使用的<code>Typecho</code>，很轻快，简洁，具体安装方法可以参考：lnmp1.4安装及部署typecho或其它博客教程，不过喜欢折腾的人还可以试试安装<code>Ghost</code>轻博客程序，该博客挺适合个人日志类或者技术网站记录使用。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Ghost</code>是一款个人博客系统，它是使用<code>Node.js</code>语言和<code>MySQL</code>数据库开发的，同时支持<code>MySQL</code>、<code>MariaDB</code>、<code>SQLite</code>和<code>PostgreSQL</code>。用户可以在支持<code>Node.js</code>的服务器上使用自己的博客。它是由两位<code>WordPress</code>前工程师开发，特点就是轻、快、高效，并原生支持<code>Markdown</code>语法。</p>
<h2 id="关于脚本"><a href="#关于脚本" class="headerlink" title="关于脚本"></a>关于脚本</h2><p>本脚本可以一键搭建你自己的<code>Ghost</code>博客平台。支持<code>Ubuntu</code>,<code>Debian</code>和<code>CentOS</code>系统。为了达到更佳的性能与安全性，将同时安装<code>Nginx</code>(作为反向代理)，以及<code>Web</code>应用防火墙<code>ModSecurity</code>或者<code>Naxsi</code>。并且可以在同一台服务器上安装多个博客！只需再次运行脚本，并指定新的完整域名作为参数。</p>
<p><strong>Github地址：</strong><a href="https://github.com/hwdsl2/setup-ghost-blog" target="_blank" rel="noopener">https://github.com/hwdsl2/setup-ghost-blog</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Ubuntu 16.04</code>、<code>14.04</code>、<code>12.04</code>；<code>Debian 8</code>、<code>9</code>；<code>CentOS 6</code>、<code>7</code>。</p>
<p><strong>1、更新系统</strong></p>
<pre><code>apt-get update &amp;&amp; apt-get dist-upgrade  #Ubuntu/Debian系统
yum update  #CentOS系统</code></pre><p><strong>2、下载并运行Ghost一键脚本</strong></p>
<p>选择<code>ModSecurity</code>防火墙：</p>
<pre><code>wget --no-check-certificate https://git.io/ghost-nginx-modsecurity -O ghost-setup.sh
sh ghost-setup.sh www.southcat.net</code></pre><p>选择<code>Naxsi</code>防火墙：</p>
<pre><code>wget --no-check-certificate https://git.io/ghost-nginx-naxsi -O ghost-setup.sh
sh ghost-setup.sh www.southcat.net</code></pre><p>安装时将域名修改成自己的，并解析到服务器<code>ip</code>即可！</p>
<p><strong>2、安装及使用过程</strong><br>（1）出现以下界面说明检测后系统是支持的，如果检测不支持会另有提示。输入<code>y</code>回车进行安装直到安装完成！<br><img src="https://www.southcat.net/usr/picture/Ghost(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>（2）浏览器访问<code>http://your_domain/ghost</code>配置<code>Ghost</code>基本设置，输入邮箱账号，密码，等等！<br><img src="https://www.southcat.net/usr/picture/Ghost(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Ghost(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Ubuntu使用Snap快速安装NextCloud网盘，并配置域名及SSL证书</title>
    <url>/1853/</url>
    <content><![CDATA[<p><strong>说明：</strong>关于<code>NextCloud</code>安装方法之前说了两种了，常规的<code>lnmp</code>环境搭建和使用<code>Docker</code>安装，参考：一款不错的个人私有云：NextCloud安装教程，使用Docker快速安装NextCloud个人私有云盘，现在再说另一种安装方法，使用<code>Snap</code>快速安装，由于<code>Snap</code>包自带<code>NextCloud</code>，所以安装快速简单，是这几种方法中最简单的一个，也很实用，有兴趣的可以尝试下。</p>
<h2 id="Snap是什么？"><a href="#Snap是什么？" class="headerlink" title="Snap是什么？"></a>Snap是什么？</h2><p><code>Snap</code>的安装包扩展名是<code>.snap</code>，类似于一个容器，完全独立于系统，它包含一个应用程序需要用到的所有文件和库（<code>snap</code>包包含一个私有的<code>root</code>文件系统，里面包含了依赖的软件包）。它们会被安装到单独的目录，各个应用程序之间相互隔离，互不影响。而且安装快捷、创建简单、运行安全，易管理。目前支持的主流发行版有<code>Ubuntu</code>、<code>Debian</code>等。</p>
<h2 id="Snap的用法"><a href="#Snap的用法" class="headerlink" title="Snap的用法"></a>Snap的用法</h2><p>这里只简单说下，初步了解下就行了。</p>
<pre><code>#查看snap版本信息
snap --version
#找出所有snap应用
snap find
#安装应用
snap install 包名
#重启应用
snap restart 应用名
#升级应用
snap refresh 应用名
#查看安装的应用
snap list
#卸载应用
snap remove 应用名</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>由于<code>Ubuntu 16.04</code>系统自带<code>Snap</code>，为了方便，可以直接使用该系统。</p>
<p><code>Snap</code>包自带<code>NextCloud</code>，所以我们可以直接安装。</p>
<pre><code>#更新系统
apt-get update -y
#安装NextCloud
snap install nextcloud</code></pre><p>这时候就可以打开<code>http://your_ip</code>进入登录页面了，如果想用域名登录并配置<code>SSL</code>证书的话，先别登录，请直接看后面。</p>
<h2 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h2><p>将域名解析至<code>VPS</code>的<code>IP</code>就可以使用域名登录了，然后再添加 <code>Let’s encrypt SSL</code>证书并使用<code>https</code>访问。</p>
<h2 id="添加SSL证书"><a href="#添加SSL证书" class="headerlink" title="添加SSL证书"></a>添加SSL证书</h2><p>使用命令：</p>
<pre><code>nextcloud.enable-https lets-encrypt</code></pre><p>根据要求输入你的邮箱，域名即可！</p>
<p>然后就可以打开域名并设置账号和密码登录了。<br><img src="https://www.southcat.net/usr/picture/NextCloud_snap(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/NextCloud_snap(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>unlock-music：支持解密网易云/QQ音乐的加密文件和ID3信息补全</title>
    <url>/1441/</url>
    <content><![CDATA[<p><strong>说明：</strong>最近有小伙伴推荐了个解密工具<code>unlock-music</code>，支持网易云音乐/<code>QQ</code>音乐的<code>VIP</code>音乐文件批量解密导出为<code>MP3</code>或无损格式，包括<code>ncm</code>、<code>qmc0</code>、<code>qmc3</code>、<code>mcflac</code>、<code>qmcogg</code>、<code>mflac</code>格式及补全<code>ncm</code>的<code>ID3</code>信息，挺实用的，毕竟通常情况下，当这些客户端<code>VIP</code>会员到期后会自动删除已下载的<code>VIP</code>音乐文件。而且文件是加密格式的只能用客户端播放，会员到期后就算保留音乐文件也无法使用，而且加密格式无法在汽载音响或其他设备上播放，用起来限制很大，该程序可以部署在远程服务上或者本地离线使用，解密速度非常快，任务完成后还可以在线播放和批量下载，这里就介绍下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/unlock-music(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/ix64/unlock-music" target="_blank" rel="noopener">https://github.com/ix64/unlock-music</a></p>
<h3 id="本地使用"><a href="#本地使用" class="headerlink" title="本地使用"></a>本地使用</h3><p>如果你想在<code>Windows</code>电脑上使用的话，可以直接下载作者打包好的文件→传送门，下载最新的<code>legacy</code>版本压缩包。</p>
<p>然后将压缩包解压到桌面，打开解压出来的文件夹里面的<code>index</code>文件就可以直接使用。</p>
<h3 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h3><p>如果服务器上已经装有<code>Nginx</code>、<code>Apache</code>或<code>Caddy</code>等<code>Web</code>服务的，可以直接将作者打包好的文件，下载并解压到网站根目录就可以直接使用了，下载地址→传送门，选择最新的<code>modern</code>版本压缩包解压即可。</p>
<p>没有这些<code>Web</code>程序的，可以随便搞个临时用用也行，具体步骤如下：</p>
<pre><code>#下载最新modern版压缩包
curl -O -L https://github.com/ix64/unlock-music/releases/download/`curl -s https://api.github.com/repos/ix64/unlock-music/releases|grep -w tag_name|head -n 1|cut -d&apos;&quot;&apos; -f4`/modern.tar.gz
#解压并删除压缩包
tar zxvf modern.tar.gz &amp;&amp; rm -rf $_
cd dist
#运行端口4567，可自行修改
nohup python -m SimpleHTTPServer 4567&amp;</code></pre><p>然后访问<code>ip:4567</code>即可，打不开的话就检查下防火墙。</p>
<h2 id="网易云用法"><a href="#网易云用法" class="headerlink" title="网易云用法"></a>网易云用法</h2><pre><code>提示：这里只列举博主知道的一种玩法，有意的可以了解下，毕竟该玩法可以节省很多硬盘空间。</code></pre><p>该工具支持补全<code>ncm</code>的<code>ID3</code>信息，就方便我们配合网易云音乐自带的云盘一起使用。</p>
<p>首先将下载的<code>VIP</code>音乐文件解密，然后再将已经解密的音乐文件上传到网易云的我的音乐云盘。<br><img src="https://www.southcat.net/usr/picture/unlock-music(2).png" alt="请输入图片描述" title="请输入图片描述"><br>上传成功后，系统会自动根据文件<code>ID3</code>信息进行匹配，该上传文件会永久有效，此后不管你还是不是<code>VIP</code>会员或者该歌曲有没有下架，你都可以完整的播放该<code>VIP</code>歌曲和无损格式歌曲，也就是会直接从你的网盘调用，即<code>PC</code>/手机端歌曲信息会包含云盘字眼。<br><img src="https://www.southcat.net/usr/picture/unlock-music(3).png" alt="请输入图片描述" title="请输入图片描述"><br>注意非<code>VIP</code>会员也可以上传解密后的<code>VIP</code>歌曲，且已经下架的歌曲评论区无法使用，其它正常。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>uPing：一个简单的服务器Ping值监测小工具</title>
    <url>/1952/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>uPing</code>是一个简单<code>Ping</code>值监测小工具，相对于其他延迟监测工具来说，只有一个<code>py</code>文件非常容易运行部署。本工具经过<code>48</code>小时测试后未发现明显问题，可以显示一些关于线路延迟的信息。这部分数据仅供参考，也许根本就说明不了什么，也就看看吧。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/upping.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>时间说明：</strong></p>
<pre><code>上午：6点至11点
下午：12点至17点
晚上：18点至23点
半夜：0点至5点</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="http://github.com/FunctionClub/uPing" target="_blank" rel="noopener">http://github.com/FunctionClub/uPing</a></p>
<p>开个<code>screen</code>，在<code>VPS</code>上挂一天即可。<code>24</code>小时后自动停止。你只需要填写你想<code>Ping</code>什么地址就行。比如在你的美国<code>VPS</code>上运行这个工具，<code>Ping</code>你的上海腾讯云机器，挂个一天，就可以提供<code>24</code>小时内的两个节点间线路<code>Ping</code>值信息。</p>
<p><strong>1、依赖安装</strong></p>
<pre><code>#Debian/Ubuntu
apt-get update
apt-get install python wget screen -y
#CentOS/RHEL
yum install screen wget python -y</code></pre><p><strong>2、运行脚本</strong></p>
<pre><code>screen -S uping
wget -N --no-check-certificate https://raw.githubusercontent.com/FunctionClub/uPing/master/uping.py
python uping.py</code></pre><p>关于<code>screen</code>更多用法参考：使用screen来实现多任务不断线操作命令。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Uptime Robot ：免费且功能强大的在线网站服务器监控工具</title>
    <url>/1755/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候我们网站多了后，都来不及管，所以这时候我们就需要个在线监控工具了，这里推荐个海外比较知名免费监控工具<code>Uptime Robot</code>，功能强大，界面也是很好看的，下面是利用<code>Uptime Robot</code>的<code>API</code>，创建属于自己的<code>PHP</code>网站监控。</p>
<p><strong>1、申请ptime Robot的API</strong><br>首先进入官网：<a href="https://uptimerobot.com申请账号，然后进入后台点上面的`My" target="_blank" rel="noopener">https://uptimerobot.com申请账号，然后进入后台点上面的`My</a> Settings<code>，拉到最底部，</code>API Settings<code>这块点击</code>Create the main API key<code>申请</code>API`，如下图：<br><img src="https://www.southcat.net/usr/picture/uptimerobot(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、使用uptime-robot建立监控站</strong><br>上传<code>uptime-robot</code>源码到监控站根目录，支持<code>PHP</code>即可。源码下载：uptime-robot.zip。</p>
<p>修改<code>/php</code>目录下的<code>config.php</code>文件，第<code>9</code>行 修改为自己的<code>API</code>改为自己的<code>API</code>。</p>
<p><strong>3、添加网站</strong><br>看后台左上角，点击<code>Add New Monitor</code>添加需要监控的网站。<br><img src="https://www.southcat.net/usr/picture/uptimerobot(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>UDPSpeeder+Udp2raw使用教程，并配合SSTap加速优化网络游戏</title>
    <url>/2149/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>UDPSpeeder</code>很早前博客就介绍过，是一个双边网络加速工具，本身是加速<code>UDP</code>流量，但也可以加速<code>TCP</code>/<code>UDP</code>/<code>ICMP</code>，而网络游戏也是走的<code>UDP</code>，我们可以用来配合<code>SSTap</code>来最大改善我们的游戏体验，近期作者发布<code>windows</code>版本客户端，使用更加方便了，这里就大概的讲下方法。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>UDPspeeder</code>作用是给<code>udp</code>流量加冗余和纠错(<code>RS code</code>)，牺牲一定的流量(通常可小于<code>0.5</code>倍)，让网络达到接近零丢包。 可以单独加速<code>udp</code>，或配合<code>V皮N</code>加速全流量(<code>tcp</code>/<code>udp</code>/<code>icmp</code>)。 最佳的适用场景是加速游戏，也可加速在线视频和网页浏览。</p>
<p><code>udp2raw</code>不是加速器，只是一个帮助你绕过<code>UDP</code>限制的工具，作用是把<code>udp</code>流量混淆成<code>tcp</code>流量，可以突破<code>udp</code>流量限制或<code>Udp QOS</code>，极大提升稳定性。可以配合<code>kcptun</code>加速<code>tcp</code>，或配合<code>UDPspeeder</code>加速<code>udp</code>，防止各种限速断流。</p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>这里分别说下<code>Udp2raw</code>配置和<code>UDPSpeeder</code>配置，及其串联使用方法。且<code>Udp2raw</code>和<code>UDPspeeder</code>不配合<code>V皮N</code>的情况下只能转发<code>UDP</code>。对于<code>55R</code>等来讲，转发<code>UDP</code>的同时也需要转发<code>TCP</code>，不然<code>UDP</code>功能无法使用，这里会配合<code>tinyPortMapper</code>一起使用。</p>
<p>本文只讲结合<code>SSTap</code>的玩法，也适用<code>55R</code>，还有更多玩法可以去下面留的<code>Github</code>项目地址进行研究，有问题请去<code>Issues</code>栏提问，作者很热情，会很快回答你。</p>
<h2 id="配置Udp2raw"><a href="#配置Udp2raw" class="headerlink" title="配置Udp2raw"></a>配置Udp2raw</h2><p><strong>1、VPS服务器配置</strong><br>首先需要在<code>VPS</code>上下载服务端并解压<code>Udp2raw</code>，地址：点击进入，使用命令：</p>
<pre><code>#目前最新版本20180225.0，如果以后有更新的话，方法基本一样
wget https://github.com/wangyu-/udp2raw-tunnel/releases/download/20180225.0/udp2raw_binaries.tar.gz
tar zxvf udp2raw_binaries.tar.gz</code></pre><p>此时假设你服务器<code>ip</code>为<code>44.55.66.77</code>，有一个服务监听在<code>udp 7777</code>端口上，比如<code>55R</code>，运行如下命令：</p>
<pre><code>./udp2raw_amd64 -s -l0.0.0.0:4096 -r 127.0.0.1:7777  -a -k &quot;passwd&quot; --raw-mode faketcp</code></pre><p>会输出如下界面：<br><img src="https://www.southcat.net/usr/picture/js_sstap(1).png" alt="请输入图片描述" title="请输入图片描述"><br>如果关闭<code>SSH</code>客户端，<code>Udp2raw</code>会停止运行，建议配合<code>nohup</code>或<code>screen</code>保持后台运行，查看教程：使用screen来实现多任务不断线操作命令。</p>
<p><strong>2、Win客户端配置</strong><br>首先下载并安装<code>winpcap</code>，地址：<code>https://www.winpcap.org/install/default.htm</code>。<br>也可使用<code>npcap</code>，据说性能更好一些，但是安装时一定要把”开启<code>winpcap</code>的兼容模式”打勾。地址：<a href="https://nmap.org/npcap/。" target="_blank" rel="noopener">https://nmap.org/npcap/。</a></p>
<p>下载<code>Udp2raw</code>客户端并解压，地址：点击进入。建议解压后直接放到<code>C</code>盘<code>C:\Users\Administrator</code>文件夹。</p>
<p>然后点击<code>Win+R</code>，然后输入<code>cmd</code>，运行命令：</p>
<pre><code>udp2raw_mp_nolibnet.exe -c -l0.0.0.0:3333  -r44.55.66.77:4096 -k &quot;passwd&quot; --raw-mode easy-faketcp
#如果你的udp2raw文件在其它盘，比如D盘的xx文件夹，则需要先运行命令
cd /d d:\xx</code></pre><p>然后别关掉<code>CMD</code>界面。</p>
<p>这时候基本就算完成了。 现在在<code>Windows</code>上访问本机的<code>3333</code>即相当于访问<code>VPS</code>的<code>7777</code>端口，通过<code>udp2raw</code>的所有流量都会被混淆成<code>tcp</code>。</p>
<h2 id="配置UDPSpeeder"><a href="#配置UDPSpeeder" class="headerlink" title="配置UDPSpeeder"></a>配置UDPSpeeder</h2><p>其实方法和<code>Udp2raw</code>差不多，这里就不仔细讲了，只说个大概。</p>
<p><strong>1、VPS服务器配置</strong><br>先下载<code>UDPSpeeder</code>服务端并解压，下载地址：点击进入，使用命令：</p>
<pre><code>#目前最新编译好的二进制文件版本20180522.0
wget https://github.com/wangyu-/UDPspeeder/releases/download/20180522.0/speederv2_binaries.tar.gz
tar zxvf speederv2_binaries.tar.gz</code></pre><p>此时假设你服务器<code>ip</code>为<code>44.55.66.77</code>，有一个服务监听在<code>udp 7777</code>端口上，比如<code>55R</code>，运行如下命令：</p>
<pre><code>#此为游戏场景的推荐设置
./speederv2_amd64 -s -l0.0.0.0:4096 -r127.0.0.1:7777   -k &quot;passwd&quot;  -f2:4 --timeout 1</code></pre><p>会输出如下界面：<br><img src="https://www.southcat.net/usr/picture/js_sstap(2).png" alt="请输入图片描述" title="请输入图片描述"><br>如果关闭<code>SSH</code>客户端，<code>UDPSpeeder</code>会停止运行，同样建议配合<code>nohup</code>或<code>screen</code>保持后台运行，更多推荐配置查看：点击查看。</p>
<p><strong>2、Win客户端配置</strong><br>客户端下载地址和上面一样，点击进入。下载<code>speederv2_windows.zip</code>文件，并解压到<code>C</code>盘<code>C:\Users\Administrator</code>文件夹。</p>
<p>然后点击<code>Win+R</code>，然后输入<code>cmd</code>，运行命令：</p>
<pre><code>speederv2.exe -c -l0.0.0.0:3333 -r44.55.66.77:4096 -k &quot;passwd&quot;  -f2:4 --timeout 1</code></pre><p>然后别关掉<code>CMD</code>界面。</p>
<h2 id="UDPSpeeder-Udp2raw串联"><a href="#UDPSpeeder-Udp2raw串联" class="headerlink" title="UDPSpeeder+Udp2raw串联"></a>UDPSpeeder+Udp2raw串联</h2><p>本文所讲的方法就是使用<code>UDPSpeeder</code>+<code>Udp2raw</code>串联配合<code>SSTap</code>加速优化网游，这里就大概的讲下方法。</p>
<p><strong>1、VPS服务器配置</strong></p>
<pre><code>#分别下载UDPSpeeder和Udp2raw服务端文件
wget https://github.com/wangyu-/udp2raw-tunnel/releases/download/20180225.0/udp2raw_binaries.tar.gz
wget https://github.com/wangyu-/UDPspeeder/releases/download/20180522.0/speederv2_binaries.tar.gz
tar zxvf speederv2_binaries.tar.gz
tar zxvf udp2raw_binaries.tar.gz</code></pre><p>假设你服务器<code>ip</code>为<code>44.55.66.77</code>，有一个服务监听在<code>udp 7777</code>端口上，比如<code>55R</code>，运行如下命令：</p>
<pre><code>#监听端口填对，其它端口不一定要依次挨着，只要首尾对应就行
./speederv2_amd64 -s -l127.0.0.1:7776  -r127.0.0.1:7777 --mode 0 -f2:4 --timeout 1
./udp2raw_amd64 -s -l0.0.0.0:7775 -r127.0.0.1:7776 -k &quot;passwd&quot; --raw-mode faketcp -a</code></pre><p>请使用<code>Screen</code>后台运行。</p>
<p><strong>2、Win客户端配置</strong><br><code>UDPSpeeder</code>和<code>Udp2raw</code>客户端文件下载：UDPSpeeder、Udp2raw，下载后都解压到<code>C</code>盘<code>C:\Users\Administrator</code>文件夹。</p>
<p>然后点击<code>Win+R</code>，然后输入<code>cmd</code>，运行命令：</p>
<pre><code>udp2raw_mp_nolibnet.exe -c -l127.0.0.1:7774 -r44.55.66.77:7775 -k &quot;passwd&quot; --raw-mode faketcp
speederv2.exe -c -l0.0.0.0:7773 -r127.0.0.1:7774 --mode 0 -f2:4 --timeout 1</code></pre><p>可以双开<code>CMD</code>界面分别运行<code>2</code>条命令。</p>
<h2 id="TCP端口转发"><a href="#TCP端口转发" class="headerlink" title="TCP端口转发"></a>TCP端口转发</h2><p>只转发<code>UDP</code>在<code>55R</code>上是用不了<code>UDP</code>功能，这里还需要转发下<code>TCP</code>，在<code>VPS</code>上先安装<code>BBR</code>加速<code>TCP</code>。</p>
<pre><code>#使用秋水的脚本
wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;&amp; chmod +x bbr.sh &amp;&amp; ./bbr.sh</code></pre><p>然后在电脑上下载<code>Win</code>版<code>tinyPortMapper</code>，下载地址：点击查看，下载<code>tinymapper_windows.zip</code>然后解压到<code>C</code>盘<code>C:\Users\Administrator</code>文件夹。</p>
<p>依然点击<code>Win+R</code>，然后输入<code>cmd</code>，运行命令：</p>
<pre><code>#使用本地的7773端口转发服务器的7777端口，记得转发的TCP的端口和上面的UDP端口一致。
tinymapper.exe -l0.0.0.0:7773 -r44.55.66.77:7777 -t</code></pre><p>好了，这里差不多配置完了，差不多总共需要开<code>2</code>个<code>SSH</code>窗口，<code>3</code>个<code>CMD</code>窗口。</p>
<h2 id="配置SSTap"><a href="#配置SSTap" class="headerlink" title="配置SSTap"></a>配置SSTap</h2><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul>
<li><strong>UDPspeeder项目地址：</strong><a href="https://github.com/wangyu-/UDPspeeder" target="_blank" rel="noopener">https://github.com/wangyu-/UDPspeeder</a></li>
<li><strong>Udp2raw项目地址：</strong><a href="https://github.com/wangyu-/udp2raw-tunnel" target="_blank" rel="noopener">https://github.com/wangyu-/udp2raw-tunnel</a></li>
<li><strong>tinymapper项目地址：</strong><a href="https://github.com/wangyu-/tinyPortMapper" target="_blank" rel="noopener">https://github.com/wangyu-/tinyPortMapper</a></li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Verstory：可以查询各种开发框架/程序语言/CMS/软件/系统等最新版本的网站</title>
    <url>/1726/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Verstory</code>这个网站集合了各种开发框架、程序语言、<code>CMS</code>、操作系统、浏览器等的最新版本信息，让你一键查询各种开发工具的最新版本信息。对于想知道这些最新版本的人来说是很方便的。</p>
<p><img src="https://www.southcat.net/usr/picture/verstory.png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VestaCP多PHP(v5.5,v5.6,v7)一键安装脚本</title>
    <url>/1643/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前很多时候都在用宝塔面板，近期发现<code>SSL</code>配置有点问题，就改用了<code>VestaCP</code>面板，挺好用的，顺便发了<code>VestaCP</code>安装教程：一款强大的Linux免费web管理面板：VestaCP安装教程，现在再发个多<code>PHP</code>版本的<code>Vestacp</code>安装方法，可能会有需要。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Centos 6.7</code>和<code>Centos 7</code>。</p>
<pre><code>wget http://mirror.skamasle.com/vestacp/PHP/sk-phpinstaller_beta02_3.sh
bash sk-phpinstaller_beta02_3.sh</code></pre><p>安装其他模块</p>
<p>搜索</p>
<pre><code>yum search php70 --enablerepo=remi |grep opcache
#output:
php70-php-opcache.x86_64 : The Zend OPcache</code></pre><p>安装</p>
<pre><code>yum install php70-php-opcache --enablerepo=remi</code></pre><p>查找需要的<code>ini</code>文件</p>
<pre><code>/usr/bin/php70 --ini |grep opcache
Additional .ini files parsed:      /etc/opt/remi/php70/php.d/10-opcache.ini,</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VestaCP通过优化PHP-FPM来获得最佳性能</title>
    <url>/1623/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前已经发了个<code>VestaCP</code>面板安装教程：一款强大的Linux免费web管理面板：VestaCP安装教程，<code>VestaCP</code>提供易于使用的<code>Web</code>界面来管理和维护您的数据中心。<code>VestaCP</code>带有<code>PHP-FPM</code>，有很多不同的方法来有效地配置它，以获得最佳性能。这里说下方法。</p>
<p>1、<code>VestaCP</code>有一堆在创建新站点时使用的模板。其中一个配置模板用于<code>PHP-FPM</code>设置。您可以在以下位置找到2个模板文件。</p>
<pre><code>/usr/local/vesta/data/templates/web/php-fpm/default.tpl
/usr/local/vesta/data/templates/web/php-fpm/socket.tpl</code></pre><p>接下来可以对模板文件进行更改以减少内存使用，在<code>default.tpl</code>和<code>socket.tpl</code>中，将<code>pm = dymanic</code>的行更改为<code>pm=ondemand</code>，并在<code>pm.max_spare_servers</code>下面添加以下行：</p>
<pre><code>pm.process_idle_timeout = 10s  #将在10秒钟的不活动状态后终止PHP进程，以减少PHP-FPM内存使用量
pm.max_requests = 500  #防止PHP或其他可能使用的PHP模块出现内存泄漏</code></pre><p>2、重建<code>PHP-FPM</code>配置文件，重建前先备份<code>nginx.conf</code>和<code>snginx.conf</code>。</p>
<pre><code>/usr/local/vesta/ bin
./v-rebuild-web-domains [USER]  #[USER]将是重新生成Web域的用户名</code></pre><p>3、使用命令<code>service php-fpm restart</code>重新启动<code>PHP-FPM</code>即可！</p>
<p>此后，您可以创建一个新的网站，它将使用优化的配置创建，并且不需要重建。优化之后数据中心的资源利用率大约比原来的40％低。还是很不错的。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS一键测试脚本bench.sh</title>
    <url>/1494/</url>
    <content><![CDATA[<p><strong>说明：</strong>经过几个版本的演化，一键测试脚本 bench.sh 已经几乎全面适用于各种 Linux 发行版的网络（下行）和 IO 测试。<br>并将测试结果以较为美观的方式显示出来。</p>
<p><strong>总结一下 bench.sh 特点：</strong><br>1、显示当前测试的各种系统信息；<br>2、取自世界多处的知名数据中心的测试点，下载测试比较全面；<br>3、支持 IPv6 下载测速；<br>4、IO 测试三次，并显示平均值。</p>
<p>再配合unixbench.sh脚本测试，即可全面测试 VPS 的性能。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>命令1：</strong></p>
<pre><code>wget -qO- bench.sh | bash</code></pre><p>或者</p>
<pre><code>curl -Lso- bench.sh | bash</code></pre><p><strong>命令2：</strong></p>
<pre><code>wget -qO- 86.re/bench.sh | bash</code></pre><p>或者</p>
<pre><code>curl -so- 86.re/bench.sh | bash</code></pre><p><strong>备注：</strong><br>bench.sh 既是脚本名，同时又是域名。所以不要怀疑我写错了或者你看错了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS优化之添加swap交换分区</title>
    <url>/1502/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Linux中Swap（即：交换分区），类似于Windows的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。它的功能就是在内存不够的情况下，操作系统先把内存中暂时不用的数据，存到硬盘的交换空间，腾出内存来让别的程序运行.</p>
<p>相信很多人由于口袋没钱买了个小内存的vps，通常都会使用swap交换分区来给VPS提高一下性能。下面会说下VPS添加swap交换分区的方法。</p>
<p><strong>提示：</strong>只有虚拟化为Xen、KVM、VMWare的VPS可以，OpenVZ不支持添加swap。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>1、使用root用户登陆，进入一个目录</p>
<pre><code>cd /var/</code></pre><p>2、获取512MB的文件块：（一般设置为内存的2倍，count后面的数为要设置的swap大小xxMB，以下以1G为例）</p>
<pre><code>dd if=/dev/zero of=swapfile bs=1M count=1024</code></pre><p>3、创建swap文件</p>
<pre><code>/sbin/mkswap swapfile</code></pre><p>4、激活swap文件</p>
<pre><code>/sbin/swapon swapfile</code></pre><p>5、查看一下swap是否正确：</p>
<pre><code>/sbin/swapon -s</code></pre><p>另外为了安全建议执行：</p>
<pre><code>chmod 0644 /var/swapfile</code></pre><p>改一下权限<br>6、加到fstab文件中让系统引导时自动启动</p>
<pre><code>vi /etc/fstab</code></pre><p>在末尾增加以下内容：</p>
<pre><code>/var/swapfile swap swap defaults 0 0</code></pre><p>也可以直接执行如下命令，感觉这样更方便</p>
<pre><code>echo &quot;/var/swapfile swap swap defaults 0 0&quot; &gt;&gt;/etc/fstab</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Ubuntu/Debian安装PHP 7.2教程</title>
    <url>/1852/</url>
    <content><![CDATA[<p><strong>适用系统：</strong><code>Ubuntu 16.04</code>/<code>14.04</code>、<code>Debian 8</code>/<code>9</code></p>
<h2 id="添加软件源"><a href="#添加软件源" class="headerlink" title="添加软件源"></a>添加软件源</h2><p><strong>Ubuntu</strong></p>
<pre><code>#安装软件源拓展工具
apt -y install software-properties-common

#添加PHP PPA源，需要按一次回车
add-apt-repository ppa:ondrej/php 

#更新软件源缓存
apt update</code></pre><p><strong>Debian</strong></p>
<pre><code>#添加GPG
wget -O /etc/apt/trusted.gpg.d/php.gpg https://mirror.xtom.com.hk/sury/php/apt.gpg

#安装apt-transport-https
apt-get install apt-transport-https

#添加sury软件源
sh -c &apos;echo &quot;deb https://packages.sury.org/php/ $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/php.list&apos;

#更新软件源缓存
apt-get update</code></pre><h2 id="安装PHP-7-2"><a href="#安装PHP-7-2" class="headerlink" title="安装PHP 7.2"></a>安装PHP 7.2</h2><p>运行以下命令：</p>
<pre><code>apt install php7.2-fpm php7.2-mysql php7.2-curl php7.2-gd php7.2-mbstring php7.2-xml php7.2-xmlrpc php7.2-zip php7.2-opcache -y</code></pre><h2 id="设置PHP-7-2"><a href="#设置PHP-7-2" class="headerlink" title="设置PHP 7.2"></a>设置PHP 7.2</h2><p>安装完成后，编辑<code>/etc/php/7.2/fpm/php.ini</code>替换<code>;cgi.fix_pathinfo=1</code>为<code>cgi.fix_pathinfo=0</code>。</p>
<p>快捷命令：</p>
<pre><code>sed -i &apos;s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/&apos; /etc/php/7.2/fpm/php.ini </code></pre><h2 id="管理PHP-7-2"><a href="#管理PHP-7-2" class="headerlink" title="管理PHP 7.2"></a>管理PHP 7.2</h2><p>安装好了先重启一下！</p>
<pre><code>systemctl restart php7.2-fpm</code></pre><p>更多操作：</p>
<pre><code>systemctl restart php7.2-fpm  #重启
systemctl start php7.2-fpm  #启动
systemctl stop php7.2-fpm  #关闭
systemctl status php7.2-fpm  #检查状态</code></pre><h2 id="更新PHP-7-2"><a href="#更新PHP-7-2" class="headerlink" title="更新PHP 7.2"></a>更新PHP 7.2</h2><p>运行下面的命令系统就会更新所有可以更新的软件包括<code>PHP</code></p>
<pre><code>apt update
apt upgrade -y</code></pre><h2 id="安装更多组件"><a href="#安装更多组件" class="headerlink" title="安装更多组件"></a>安装更多组件</h2><p>上面的一条命令安装<code>PHP</code>只是安装了部分<code>PHP</code>拓展，更多的软件可见：</p>
<pre><code>root@service:~# apt-cache search php7.2

php-radius - radius client library for PHP
php-http - PECL HTTP module for PHP Extended HTTP Support
php-uploadprogress - file upload progress tracking extension for PHP
php-yaml - YAML-1.1 parser and emitter for PHP
php-mongodb - MongoDB driver for PHP
php-apcu - APC User Cache for PHP
php-imagick - Provides a wrapper to the ImageMagick library
php-ssh2 - Bindings for the libssh2 library
php-redis - PHP extension for interfacing with Redis
php-memcached - memcached extension module for PHP, uses libmemcached
php-apcu-bc - APCu Backwards Compatibility Module
php-rrd - PHP bindings to rrd tool system
php-uuid - PHP UUID extension
php-memcache - memcache extension module for PHP
php-zmq - ZeroMQ messaging bindings for PHP
php-igbinary - igbinary PHP serializer
php-msgpack - PHP extension for interfacing with MessagePack
php-geoip - GeoIP module for PHP
php-tideways - Tideways PHP Profiler Extension
php-yac - YAC (Yet Another Cache) for PHP
php-mailparse - Email message manipulation for PHP
php-oauth - OAuth 1.0 consumer and provider extension
php-gnupg - PHP wrapper around the gpgme library
php-propro - propro module for PHP
php-raphf - raphf module for PHP
php-solr - PHP extension for communicating with Apache Solr server
php-stomp - Streaming Text Oriented Messaging Protocol (STOMP) client module for PHP
php-gearman - PHP wrapper to libgearman
php-phalcon - full-stack PHP framework delivered as a C-extension
php-ds - PHP extension providing efficient data structures for PHP 7
php-sass - PHP bindings to libsass - fast, native Sass parsing in PHP
php-lua - PHP Embedded lua interpreter
libapache2-mod-php7.2 - server-side, HTML-embedded scripting language (Apache 2 module)
libphp7.2-embed - HTML-embedded scripting language (Embedded SAPI library)
php7.2-bcmath - Bcmath module for PHP
php7.2-bz2 - bzip2 module for PHP
php7.2-cgi - server-side, HTML-embedded scripting language (CGI binary)
php7.2-cli - command-line interpreter for the PHP scripting language
php7.2-common - documentation, examples and common module for PHP
php7.2-curl - CURL module for PHP
php7.2-dba - DBA module for PHP
php7.2-dev - Files for PHP7.2 module development
php7.2-enchant - Enchant module for PHP
php7.2-fpm - server-side, HTML-embedded scripting language (FPM-CGI binary)
php7.2-gd - GD module for PHP
php7.2-gmp - GMP module for PHP
php7.2-imap - IMAP module for PHP
php7.2-interbase - Interbase module for PHP
php7.2-intl - Internationalisation module for PHP
php7.2-json - JSON module for PHP
php7.2-ldap - LDAP module for PHP
php7.2-mbstring - MBSTRING module for PHP
php7.2-mysql - MySQL module for PHP
php7.2-odbc - ODBC module for PHP
php7.2-opcache - Zend OpCache module for PHP
php7.2-pgsql - PostgreSQL module for PHP
php7.2-phpdbg - server-side, HTML-embedded scripting language (PHPDBG binary)
php7.2-pspell - pspell module for PHP
php7.2-readline - readline module for PHP
php7.2-recode - recode module for PHP
php7.2-snmp - SNMP module for PHP
php7.2-soap - SOAP module for PHP
php7.2-sqlite3 - SQLite3 module for PHP
php7.2-sybase - Sybase module for PHP
php7.2-tidy - tidy module for PHP
php7.2-xml - DOM, SimpleXML, WDDX, XML, and XSL module for PHP
php7.2-xmlrpc - XMLRPC-EPI module for PHP
php7.2-zip - Zip module for PHP
php7.2-xsl - XSL module for PHP (dummy)
php7.2 - server-side, HTML-embedded scripting language (metapackage)
php7.2-sodium - libsodium module for PHP</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS使用GDList挂载Google Drive和OneDrive网盘，支持多个同时挂载</title>
    <url>/2061/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>GDList</code>可以将<code>Google Drive</code>和<code>OneDrive</code>分享出的文件夹<code>ID</code>挂载成网盘。即使你没网盘也没关系。还不占服务器空间，不消耗服务器流量；可多个<code>Google Drive</code>和<code>OneDrive</code>同时挂载到网盘；支持直链下载、在线预览（图片、视频、音频）。</p>
<p><strong>Github地址：</strong><a href="https://github.com/reruin/gdlist" target="_blank" rel="noopener">https://github.com/reruin/gdlist</a></p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/GDLIST(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/GDLIST(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>支持OneDrive、OpenLoad、Lanzou蓝奏云挂载</code></pre><h2 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h2><p><strong>系统要求：</strong><code>CentOS</code>、<code>Debian</code>、<code>Ubuntu</code></p>
<p>运行命令：</p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install git

#CentOS/RHEL系统
yum -y install git

#下载源码安装
git clone https://github.com/reruin/sharelist.git
cd sharelist &amp;&amp; bash install.sh</code></pre><p>完成后，访问<code>http://ip:33001</code>，进入界面开始设置，记住网盘文件夹要共享一下，不然会出现<code>500</code>错误。<br><img src="https://www.southcat.net/usr/picture/GDLIST(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>关于很多人说的不显示问题，博主试了下是没问题的，注意输入的<code>ID</code>，添加后记得清空缓存。</p>
<pre><code>#Google Drive
分享链接一般是https://drive.google.com/drive/folders/xxxx?usp=sharing，则ID为xxxx。
#OneDrive
分享链接一般是https://1drv.ms/f/xxxx，则ID为xxxx。</code></pre><h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><p><strong>1、安装Docker和Docker Compose</strong></p>
<pre><code>#安装Docker
curl -sSL https://get.docker.com/ | sh
service docker start
#安装Docker Compose
curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose</code></pre><p><strong>2、安装GDLIST</strong></p>
<pre><code>#Debian/Ubuntu系统
apt-get -y install git

#CentOS/RHEL系统
yum -y install git

#安装GDLIST
git clone https://github.com/reruin/gdlist.git
cd gdlist
docker-compose up -d</code></pre><p>最后访问<code>http://IP:33001</code>即可。</p>
<h2 id="添加域名SSL"><a href="#添加域名SSL" class="headerlink" title="添加域名SSL"></a>添加域名SSL</h2><p>如果想用域名查看的，可以用<code>Caddy</code>反代，并自动添加<code>SSL</code>证书。首先需要解析一个域名到服务器上。</p>
<p>安装<code>Caddy</code></p>
<pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubiBackup/doubi/master/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh
#备用地址
wget -N --no-check-certificate https://www.southcat.net/usr/shell/Caddy/caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</code></pre><p>编辑配置文件</p>
<pre><code>#以下全部内容是一个整体，修改域名、IP、邮箱后一起复制到SSH运行！
echo &quot;https://xx.com {
 tls admin@southcat.net
 proxy / 111.111.111.111:33001 {
    header_upstream Host {host}
    header_upstream X-Real-IP {remote}
    header_upstream X-Forwarded-For {remote}
    header_upstream X-Forwarded-Port {server_port}
    header_upstream X-Forwarded-Proto {scheme}
  }
 log /var/log/caddy.log
 gzip
}&quot; &gt; /usr/local/caddy/Caddyfile</code></pre><p>启动<code>Caddy</code></p>
<pre><code>/etc/init.d/caddy restart</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>OneIndex：一个OneDrive网盘的目录列表程序，可直接下载/查看</li>
<li>在Debian/Ubuntu上使用rclone挂载OneDrive网盘</li>
<li>在Debian/Ubuntu上使用rclone挂载Google Drive网盘</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS安装BYPY实现百度云文件上传/下载/同步</title>
    <url>/1753/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>BYPY</code>一个百度云/百度网盘的<code>Python</code>客户端。主要的目的就是在<code>Linux</code>环境下（<code>Windows</code>下应该也可用，但没有仔细测试过）通过命令行来使用百度云盘的<code>2TB</code>的巨大空间。它提供文件列表、下载、上传、比较、向上同步、向下同步，等操作。</p>
<p>由于百度<code>PCS API</code>权限限制，程序只能存取百度云端<code>/apps/bypy</code>目录下面的文件和目录。</p>
<p>据说百度<code>PCS API</code>最多返回目录下<code>1000</code>个文件（<code>#306</code>)，如果属实，百度云盘上若有超过<code>1000</code>个文件的目录，将有一部分文件无法被看到/下载。</p>
<p><strong>Github地址：</strong><a href="https://github.com/houtianze/bypy" target="_blank" rel="noopener">https://github.com/houtianze/bypy</a></p>
<p>百度云<code>PCS API</code>地址：点击进入</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong><code>Python</code>版本要求<code>2.7+</code>，<code>3.3+</code>。可以使用命令<code>python -V</code>查看<code>Python</code>版本。当然建议系统越新越好，这样<code>Python</code>版本自然就高了。</p>
<p><strong>1、安装pip或pip3</strong><br><code>pip</code>或<code>pip3</code>随便选择一个安装即可。</p>
<p>安装<code>pip</code>：</p>
<pre><code>#CentOS 6.x 32位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 6.x 64位
rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
yum install -y python-pip

#CentOS 7.x
yum install -y epel-release
yum install -y python-pip
#如果CentOS 7安装出现No package python-pip available，可以用以下命令进行安装
wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py

#Debian/Ubuntu系统
apt-get -y update
apt-get -y install python-pip</code></pre><p>安装<code>pip3</code>：</p>
<pre><code>#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh
#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh

#查看是否安装成功
pip3 -V</code></pre><p><strong>2、安装bypy</strong></p>
<pre><code>#pip安装
pip install bypy

#pip3安装
pip3 install bypy</code></pre><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p>执行<code>bypy info</code>命令，然后会给一个链接，用浏览器打开，将授权码复制过来即可。<br><img src="https://www.southcat.net/usr/picture/BYPY.png" alt="请输入图片描述" title="请输入图片描述"><br>安装完成后可以看到，在你的百度网盘的【我的应用数据】下面已经多了一个【<code>bypy</code>】目录，你以后通过<code>VPS</code>所上传的文件都会在这个目录下面，你也只能下载这个目录里面的文件。</p>
<h2 id="操作命令"><a href="#操作命令" class="headerlink" title="操作命令"></a>操作命令</h2><p>1、显示网盘根目录(<code>bypy</code>)的文件列表：</p>
<pre><code>bypy list</code></pre><p>2、比较当前目录和网站根目录文件：</p>
<pre><code>bypy compare</code></pre><p>3、上传单个文件的命令如下：</p>
<pre><code>bypy upload 文件名</code></pre><p>4、把当前目录上传到云盘：</p>
<pre><code>bypy syncup 目录地址
or
bypy upload 目录地址</code></pre><p>5、下载单个文件的命令如下：</p>
<pre><code>bypy downfile 下载文件名</code></pre><p>6、把云盘内容下载到本地来：</p>
<pre><code>bypy syncdown 目录地址
or
bypy downdir 目录地址</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS库存监控系统 --- 实时把握库存信息</title>
    <url>/634/</url>
    <content><![CDATA[<p>之前错过了毛子的三元鸡，心里和丢了几个亿一样?，于是找了一款VPS监控系统来进行监控。</p>
<p>Github地址： <a href="https://github.com/546669204/vps-inventory-monitoring" target="_blank" rel="noopener">https://github.com/546669204/vps-inventory-monitoring</a></p>
<h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><p>1.创建数据库导入数据库文件mysql.sql</p>
<p>2.修改数据库配置文件 vps-inventory-monitoring/app/database.example.php [需要重命名为database.php]</p>
<p>3.配置Web服务器运行目录 vps-inventory-monitoring/public</p>
<p>4.修改系统配置 app/index/config.php 定时时间 域名 等</p>
<p>5.SSH 进入网站目录 运行 <code>php think VpsTest</code>系统开始自动验证</p>
<p>6.访问即可查看结果</p>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>1.添加页面出现404错误 ==&gt; 设置Url ReWrite</p>
<p>2.添加后不会检测 ==&gt; 修改数据库xm_index的status为1(1视为通过审核)</p>
<p>3.添加权限管理 ==&gt; app/index/config.php</p>
<p>4.设置后台运行验证程序 ==&gt;</p>
<pre><code>screen -S vpstest //创建screen
cd [网站根目录]
php think VpsTest
CTRL A D //退出screen
然后关闭ssh即可 重新进入查看可使用
screen -r vpstest</code></pre><h2 id="程序截图"><a href="#程序截图" class="headerlink" title="程序截图"></a>程序截图</h2><p><img src="https://southcat.net/wp-content/uploads/2019/09/image-1-1024x202.png" alt=""></p>
<h2 id="演示站点"><a href="#演示站点" class="headerlink" title="演示站点"></a>演示站点</h2><p><a href="http://jk.southcat.net" target="_blank" rel="noopener">http://jk.southcat.net</a> 目前已经开放所有权限任何人都可以添加</p>
]]></content>
      <categories>
        <category>Source</category>
      </categories>
  </entry>
  <entry>
    <title>VPS服务器如何优化/加快网站的访问速度</title>
    <url>/2120/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们很多人建了网站后，都很在意网站的打开速度，几乎很多都以为速度只与延迟有关，其实不仅仅延迟，也有其它因素影响我们的网站打开速度，这里就具体说一下网站优化方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、域名的解析速度</strong><br>当用户访问你的网址时，首先会连接域名解析的服务商，服务商会返回<code>IP</code>地址，这里会存在延迟，当然，用户短时间内再次访问时由于缓存这里的延迟可以忽略不计。</p>
<pre><code>优化办法：尽量使用智能解析服务商，比如国内的dnspod、cloudxns等，尽量用你目标群体国家的服务商。</code></pre><p><strong>2、连接你服务器IP地址的延迟</strong><br>域名服务商返回<code>IP</code>地址后，客户再连接<code>IP</code>地址会存在延迟。</p>
<pre><code>优化办法：使用离你目标客户延迟小的服务器，比如访问你网站的大部分是国人，那么可以选择国内vps或者香港vps。</code></pre><p><strong>3、网站服务器的响应速度</strong><br>客户通过<code>IP</code>地址链接到服务器并发出请求后，服务器会处理请求，返回页面数据，这里存在响应时间。主要由服务器运算速度的影响。</p>
<pre><code>优化方法：购买运算性能好的vps服务器，比如高性能cpu服务器，多核等。


优化方法：一是选择上传带宽大的vps服务器，并且用bbr或者锐速给vps服务器加速，再就是优化网页内容，网页代码，压缩图片等等。</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>BBR+BBR魔改+Lotsever(锐速)一键脚本</li>
<li>TinyPNG：一个可以在线压缩图片的网站</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS登陆phpMyAdmin出现&quot;#2002 无法登录 MySQL 服务器&quot;错误的解决方法</title>
    <url>/1491/</url>
    <content><![CDATA[<p>说明：现在我们都喜欢用<code>phpMyAdmin</code>来管理数据库，很是方便，但同样也会遇到一些问题，比如现在说的这个<code>#2002 无法登录 MySQL 服务器</code>错误，这里就说下解决办法。</p>
<p>用WinSCP或其它FTP工具找到<code>phpMyAdmin</code>文件夹，比如我用的<code>lnmp</code>一键包，那么<code>phpMyAdmin</code>文件夹就在<code>/home/wwwroot/default</code>目录。找到后进入该文件夹，去<code>libraries</code>目录找到<code>config.default.php</code>文件编辑并保存。</p>
<pre><code>$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;localhost&apos;;
更换成
$cfg[&apos;Servers&apos;][$i][&apos;host&apos;] = &apos;127.0.0.1&apos;;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS使用BaiduPCS-Go高速下载百度网盘的文件，支持上传/离线下载等操作</title>
    <url>/2225/</url>
    <content><![CDATA[<p><strong>说明：</strong>今天折腾了下辣鸡的百度网盘，想从网盘上下点东西到<code>VPS</code>上，用到了博主之前分享过一个百度网盘的<code>Python</code>客户端<code>BYPY</code>，查看：VPS安装BYPY实现百度云文件上传/下载/同步，不过传输速度真的很慢，长期<code>100KB</code>不到，可能是我用国外服务器的缘故吧。然后无意间发现了另外一个客户端<code>BaiduPCS-Go</code>，基于<code>Go</code>编写，功能强大很多，还支持离线下载，关键是下载速度很快，比开了超级会员还爽。这里就分享下。</p>
<h2 id="特色"><a href="#特色" class="headerlink" title="特色"></a>特色</h2><ul>
<li>支持<code>Windows</code>、<code>macOS</code>、<code>linux</code>、移动设备等。</li>
<li>百度帐号多用户支持。</li>
<li>下载网盘内文件，支持多个文件或目录下载，支持断点续传和单文件并行下载。</li>
<li>上传本地文件，支持上传大文件(<code>&gt;2GB</code>)，支持多个文件或目录上传。</li>
<li>离线下载，支持<code>http</code>/<code>https</code>/<code>ftp</code>/电驴/磁力链协议。</li>
</ul>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>Github地址：</strong><a href="https://github.com/iikira/BaiduPCS-Go" target="_blank" rel="noopener">https://github.com/iikira/BaiduPCS-Go</a></p>
<p><strong>1、下载BaiduPCS-Go</strong><br>下载地址：点击查看，找到适合自己服务器的最新版本，这里以<code>VPS</code>的<code>64</code>位系统为例。</p>
<pre><code>#下载并解压程序，然后删除压缩文件
wget https://github.com/iikira/BaiduPCS-Go/releases/download/v3.5.6/BaiduPCS-Go-v3.5.6-linux-amd64.zip
unzip BaiduPCS-Go-v3.5.6-linux-amd64.zip &amp;&amp; rm -rf BaiduPCS-Go-v3.5.6-linux-amd64.zip</code></pre><p><strong>2、登录百度账号</strong></p>
<pre><code>#进入到之前解压的文件里运行相关命令
cd BaiduPCS-Go-v3.5.6-linux-amd64
#登录百度云盘
./BaiduPCS-Go login</code></pre><p>会要求你填用户名、密码，验证码。<br><img src="https://www.southcat.net/usr/picture/BaiduPCS-Go(1).png" alt="请输入图片描述" title="请输入图片描述"><br>这里是支持登录多个账号的，重复使用登录命令就可以了。多用户操作命令如下：</p>
<pre><code>#列出已登录百度帐号列表
./BaiduPCS-Go loglist
#获取当前百度帐号
./BaiduPCS-Go who
#切换当前的百度帐号，&lt;uid&gt;请在列表里查看
./BaiduPCS-Go su &lt;uid&gt;
#退出当前登录的百度账号
./BaiduPCS-Go logout</code></pre><p><strong>3、查看网盘总空间和已使用的</strong></p>
<pre><code>./BaiduPCS-Go quota</code></pre><p>这里好像会返回错误(目前来说是错误的)，而且后面的下载等命令都会返回错误，因为配置文件里的<code>appid</code>暂时不可用了，然后某大佬想出了一个找到可用<code>appid</code>的方法。</p>
<p>先在程序解压文件里新建一个脚本，比如<code>/root/BaiduPCS-Go-v3.5.5-linux-amd64</code>。</p>
<pre><code>#进入到解压文件里
cd /root/BaiduPCS*
#新建appid.sh脚本文件
nano appid.sh</code></pre><p>复制以下代码到脚本里：</p>
<pre><code>#!/bin/bash

item=266718
function check(){
    ./BaiduPCS-Go config set -appid=$item &amp;&gt; /dev/null
    ./BaiduPCS-Go ls | grep -q 遇到错误
    if [ $? != 0 ];then
        echo &quot;当前可用appid：$item ，已设置成功，BaiduPCS-Go 现可用正常使用了！&quot;
    else
        let item+=1
        check
    fi
}
check</code></pre><p>按住<code>Ctrl+x</code>，<code>y</code>保存退出，然后运行脚本：</p>
<pre><code>bash appid.sh</code></pre><p>脚本会帮你找到一个可用的<code>appid</code>，并自动替换到配置文件里。<br><img src="https://www.southcat.net/usr/picture/BaiduPCS-Go(2).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>4、相关配置</strong></p>
<pre><code>#设置下载文件的储存目录，默认存在/root/Downloads
./BaiduPCS-Go config set -savedir /home

#设置下载最大并发量为200，建议值50~500，数值越大速度越高，但太高可能会出问题
./BaiduPCS-Go config set -max_parallel 200</code></pre><p><strong>5、下载文件</strong><br>使用命令：</p>
<pre><code>./BaiduPCS-Go d &lt;网盘文件或目录的路径1&gt; &lt;文件或目录2&gt; &lt;文件或目录3&gt; ...</code></pre><p>命令示范：</p>
<pre><code>#下载根目录rats.xx文件
./BaiduPCS-Go d rats.xx
#下载moe目录rats.xx文件
./BaiduPCS-Go d /moe/rats.xx

#下载根目录moe文件夹所有文件
./BaiduPCS-Go d /moe
#下载根目录moe文件夹的子文件夹rats所有文件
./BaiduPCS-Go d /moe/rats</code></pre><p><strong>6、上传文件</strong><br>使用命令：</p>
<pre><code>./BaiduPCS-Go u &lt;本地文件/目录的路径1&gt; &lt;文件/目录2&gt; &lt;文件/目录3&gt; ... &lt;目标目录&gt;</code></pre><p>命令示范：</p>
<pre><code>#将服务器上的/root/rats.xx文件上传到网盘根目录moe文件夹，如果是根目录则用/
./BaiduPCS-Go u /root/rats.xx /moe

#将服务器上的/root/rats文件夹及里面的文件上传到网盘根目录moe文件夹，如果是根目录则用/
./BaiduPCS-Go u /root/rats /moe</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS FTP快速安装教程</title>
    <url>/1460/</url>
    <content><![CDATA[<h2 id="安装vsftpd"><a href="#安装vsftpd" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h2><pre><code>apt-get install vsftpd #ubuntu、debian系统
yum install vsftpd     #centos系统</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><pre><code>vi /etc/vsftpd.conf</code></pre><p><strong>1、对下列信息进行修改，也可以直接进入WinSCP直接操作</strong></p>
<pre><code>#anonymous_enable=YES #注销掉，关闭匿名访问
local_enable=YES 
write_enable=YES #去掉注销，#让本地账号可以访问
local_umask=022 #去掉注销，#设置权限掩码
chroot_local_user=YES #仅允许用户访问自己的路径</code></pre><p><strong>2、让root可以访问（可选）</strong></p>
<pre><code>vi /etc/ftpusers</code></pre><p>把root去掉</p>
<h2 id="创建-ftp-用户"><a href="#创建-ftp-用户" class="headerlink" title="创建 ftp 用户"></a>创建 ftp 用户</h2><p><strong>1、增加一个 ftpgroup 用户组</strong></p>
<pre><code>groupadd ftpgroup</code></pre><p><strong>2、增加用户ftpuser，-d 设置其目录为<code>/home/wwwroot/xx.com</code></strong></p>
<pre><code>useradd -g ftpgroup -d /home/wwwroot/xx.com ftpuser</code></pre><p><strong>3、用户必须拥有权限才可以访问，赋予访问/ftp/ftpuser的权限</strong></p>
<pre><code>chmod 777 /home/wwwroot/xx.com</code></pre><p><strong>4、设置 ftpuser 密码</strong></p>
<pre><code>passwd ftpuser


service vsftpd restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS Web控制面板：wdcp_v3.2正式版安装教程</title>
    <url>/1665/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>wdCP</code>是<code>WDlinux Control Panel</code>的简称,是一套通过<code>WEB</code>控制和管理服务器的<code>Linux</code>服务器管理系统以及虚拟主机管理系统,旨在易于使用<code>Linux</code>系统做为我们的网站服务器系统,以及平时对<code>Linux</code>服务器的常用管理操作,均可在<code>wdCP</code>的后台里操作完成.<br>使用<code>wdCP</code>,通过<code>WEB</code>方式就可以查看服务器情况,资源利用率,系统负载,内存使用率,带宽使用率等等.<br>使用<code>wdCP</code>,通过<code>WEB</code>方式就可以轻松创建网站,开站点,发布网站,创建<code>FTP</code>,创建<code>mysql</code>数据库等.<br>使用<code>wdCP</code>,通过<code>WEB</code>方式,就可以管理服务器上的站点,站点文件,站点配置等等.<br>简单,方便,易操作.让你方便地使用和管理<code>Linux</code>服务器和网站,使用<code>Linux</code>系统做网站服务器,也同样可以很简单</p>
<p>关于<code>wdCP</code>更多的介绍，可看：<a href="http://www.wdlinux.cn/wdcp/" target="_blank" rel="noopener">http://www.wdlinux.cn/wdcp/</a></p>
<p>安装前先去体验下，看演示站吧：<a href="http://www.wdlinux.cn/bbs/thread-52856-1-1.html" target="_blank" rel="noopener">http://www.wdlinux.cn/bbs/thread-52856-1-1.html</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>请使用纯净系统，即不带任何其它<code>WEB</code>环境的系统<br><strong>1、只安装wdcp面板看看</strong></p>
<pre><code>wget http://down.wdlinux.cn/in/install_v3.sh
sh install_v3.sh</code></pre><p><strong>2、和lanmp环境一起安装</strong></p>
<pre><code>yum install -y wget
wget http://dl.wdlinux.cn/files/lanmp_v3.2.tar.gz
tar zxvf lanmp_v3.2.tar.gz
sh lanmp.sh</code></pre><p>可选安装<code>LNMP</code>,<code>LAMP</code>,<code>LNAMP</code>,4全部安装(可切换)</p>
<pre><code>默认安装软件版本为：
nginx-1.8.1
apache-2.2.31
mysql-5.5.54
php-5.5.38
memcache
redis
zend</code></pre><p>如需要自定义软件版本，后加<code>cus</code>,如下</p>
<pre><code>sh lanmp.sh cus</code></pre><p>如需<code>PHP</code>多版本共存指定使用功能，也需安装，如</p>
<pre><code>sh lib/phps.sh</code></pre><p>共支持7个版本的PHP，如5.2.17/5.3.29/5.4.45/5.5.38/5.6.30/7.0.18/7.1.4，也可指定安装某一版本，如<code>sh lib/phps.sh 5.2.17</code><br>多版本的<code>zend</code>,<code>redis</code>,<code>memcache</code>,<code>opcache.sh</code>扩展支持安装</p>
<pre><code>sh lib/phps_zend.sh
sh lib/phps_redis.sh
sh lib/phps_memcache.sh</code></pre><p>默认安装全部<code>PHP</code>版本，也可指定安装某<code>PHP</code>版本。</p>
<p>软件安装目录</p>
<pre><code>/www/wdlinux</code></pre><p>数据库文件目录</p>
<pre><code>/www/wdlinux/mysql/data</code></pre><p>支持组件</p>
<pre><code>zend,memcache,rewrite,pdo_mysql,mysqli等常用组件</code></pre><p>支持系统</p>
<pre><code>wdcp_v3 支持wdOS/CentOS5.x/6.x/7.x</code></pre><p><strong>3、升级</strong><br>3和3.1版本升级可后台直接升级或使用如下手动升级</p>
<pre><code>wget http://down.wdlinux.cn/in/update_v3.sh
sh update_v3.sh</code></pre><p>备注：<br>此升级只是升级<code>wdcp</code>的后台面板及功能<br>对于<code>WEB</code>环境的软件需另外升级(无特别需求，<code>WEB</code>环境可不升级或根据需求有针对性的升级)</p>
<p><code>2.X</code>的升级可用安装方法1中所说方法，关于从<code>v2</code>的升级，对于使用<code>v2</code>的用户，可以单独升级<code>wdcp</code>后台到<code>v3</code>的版本(只安装<code>v3</code>的后台系统就可以,千万不要全新安装，否则很麻烦)<br><code>v2</code>/<code>v3</code>升级到<code>v3.2</code>的单独安装多<code>PHP</code>的方法：<a href="http://www.wdlinux.cn/bbs/thread-57646-1-1.html" target="_blank" rel="noopener">http://www.wdlinux.cn/bbs/thread-57646-1-1.html</a></p>
<p>卸载方法</p>
<pre><code>rm -fr /www/wdlinux
reboot</code></pre><p><code>wdcp</code>后台的启动，重起，关闭方法</p>
<pre><code>service wdcp start
service wdcp restart
service wdcp stop</code></pre><p>多版本<code>PHP</code>的手动启动|停止|重启，如:<code>5.5</code></p>
<pre><code>/www/wdlinux/phps/55/bin/php-fpm start
/www/wdlinux/phps/55/bin/php-fpm stop
/www/wdlinux/phps/55/bin/php-fpm restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Vultr利用快照备份Snapshots功能快速的备份和迁移资料</title>
    <url>/1774/</url>
    <content><![CDATA[<p><strong>说明：</strong>用了那么久的<code>Vultr</code>，直到今天才发现<code>Vultr</code>还有快照备份<code>Snapshots</code>功能，试了一下后感觉很好用，特别是对于我们经常喜欢换节点服务器的，其实很多商家都有提供<code>Snapshots</code>快照功能，不过别太依赖这个了，都会有翻车的时候，还是乖乖的手动备份下数据。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>1、备份数据</strong><br>进入<code>Vultr</code>面板，点击<code>Snapshots</code>选项，选择<code>Add Snapshot</code>，然后在<code>Label</code>那里填一个标签，再点击<code>Take Snapshot</code>。等待备份完成之后，我们才可以去创建。<br><img src="https://www.southcat.net/usr/picture/Vultrbf(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vultrbf(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Vultr新用户充$5送$100/充多少送多少活动，附带免费领取$3的方法</title>
    <url>/2012/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Vultr</code>一年一次的送钱活动开始了，这次是充<code>5</code>美元送<code>100</code>美元和充多少送多少活动，有效期分别是<code>2</code>个月和<code>1</code>年，支持<code>paypal</code>，信用卡。顺便说个新老用户免费获取<code>3</code>美元的方法，足够我们用很久了。</p>
<pre><code>#最低配置，注册后直接后台购买
KVM架构，日本/新加坡/洛杉矶等15个机房
内存：512MB
硬盘：20GB SSD
流量：500GB/月
端口：1Gbps
价格：$2.50/月</code></pre><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p><code>Vultr</code>新用户活动需要注意以下几点，当然这也只是博主自己的见解，官方也不一点会这么严格，以防万一。</p>
<pre><code>1、需要新注册的账户，新PayPal或者新信用卡，也就是都没在Vultr充值过的，老用户记得清空浏览器缓存，开隐身模式，IP变一下，比如之前用的WIFI，现在可以用手机流量注册并充值。

2、纯新用户可以无视，老用户换新号参与活动的，后面还可能会有检测，所以登录的时候最好换下IP、UA等。</code></pre><h2 id="注册就送-50"><a href="#注册就送-50" class="headerlink" title="注册就送$50"></a>注册就送$50</h2><pre><code>提示：活动目前有效。</code></pre><p><strong>活动参与：</strong>首先得注册账号，注册链接：点击注册，官方网站：<a href="http://www.vultr.com。" target="_blank" rel="noopener">www.vultr.com。</a></p>
<h2 id="注册就送-5"><a href="#注册就送-5" class="headerlink" title="注册就送$5"></a>注册就送$5</h2><pre><code>提示：活动貌似已结束！</code></pre><p><strong>活动参与：</strong>首先得注册账号，注册链接：点击注册，官方网站：<a href="http://www.vultr.com。" target="_blank" rel="noopener">www.vultr.com。</a><br><img src="https://www.southcat.net/usr/picture/Vultr_3d(4).png" alt="请输入图片描述" title="请输入图片描述"><br>如果注册界面看到<code>$5</code>字样，说明活动还没结束.</p>
<h2 id="充多少送多少"><a href="#充多少送多少" class="headerlink" title="充多少送多少"></a>充多少送多少</h2><pre><code>提示：活动貌似已结束！</code></pre><p><strong>活动参与：</strong>首先得注册账号，注册链接：点击注册，官方网站：<a href="http://www.vultr.com。" target="_blank" rel="noopener">www.vultr.com。</a></p>
<p><img src="https://www.southcat.net/usr/picture/Vultr_3d(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>如果注册界面看到<code>$100</code>字样，说明活动还没结束，然后就可以参与充多少送多少活动了。</p>
<h2 id="充-5送-100"><a href="#充-5送-100" class="headerlink" title="充$5送$100"></a>充$5送$100</h2><pre><code>提示：活动貌似已结束！</code></pre><p><strong>活动参与：</strong>首先得注册账号，注册链接：点击注册，官方网站：<a href="http://www.vultr.com。" target="_blank" rel="noopener">www.vultr.com。</a></p>
<p><img src="https://www.southcat.net/usr/picture/Vultr_3d(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>如果注册界面看到<code>$100</code>字样，说明活动还没结束，然后充值最低金额<code>5</code>美元后，可以获得<code>100</code>美元。</p>
<h2 id="免费领取-3"><a href="#免费领取-3" class="headerlink" title="免费领取$3"></a>免费领取$3</h2><pre><code>提示：该活动长期有效!</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Vultr新用户免费领3美元/全球15机房/KVM架构/月付2.5美元</title>
    <url>/1678/</url>
    <content><![CDATA[<p><strong>说明：</strong>国外大型主机商<code>Vultr</code>已经正式支持支付宝支付了，对于我们国人来说购买更加方便了。点击后台<code>Make Payment</code>那里可以看到<code>Alipay</code>。而且在如今很容易被<code>Q</code>的时期，<code>Vultr</code>确实是个好选择，毕竟被<code>Q</code>就可以删除重新开个可以用的<code>IP</code>。<br><img src="https://www.southcat.net/usr/picture/vultr-alipay.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><code>Vultr</code>免费领取<code>3</code>美元：领取方法。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Vultr</code>是一家提供日本、美国、欧洲、新加坡等十几个地区机房的<code>VPS</code>主机商。硬盘都是采用<code>SSD</code>，<code>VPS</code> 主机都是<code>KVM</code>架构，<code>1Gbps</code>上行共享。并且按小时计费支持随时创建、删除和重建，这样换<code>IP</code>和换节点都非常简单，支持安装<code>windows</code>系统，支持使用自己的<code>ISO</code>。</p>
<h2 id="购买"><a href="#购买" class="headerlink" title="购买"></a>购买</h2><p><strong>KVM架构，15个机房随删随建</strong><br>内存：512MB<br>硬盘：20GB SSD<br>流量：500GB/月<br>端口：1Gbps<br>价格：$2.50/月<br>链接：点击购买</p>
<h2 id="测试ip"><a href="#测试ip" class="headerlink" title="测试ip"></a>测试ip</h2><pre><code>日本：108.61.201.151
洛杉矶：108.61.219.200
西雅图：108.61.194.105
德国：108.61.210.117
法国：108.61.209.127
荷兰：108.61.198.102
伦敦：108.61.196.101
新泽西：108.61.149.182
芝加哥：107.191.51.12
亚特兰大：108.61.193.166
迈阿密：104.156.244.232
达拉斯：108.61.224.175
加州硅谷：104.156.230.107
澳大利亚：108.61.212.117
新加坡：45.32.100.168</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>魔改Google BBR一键安装脚本</li>
<li>锐速破解版linux一键自动安装包</li>
<li>Vultr快速安装Windows教程</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Vultr新老用户免费领取$100 Bare Metal独服使用券</title>
    <url>/1937/</url>
    <content><![CDATA[<p><strong>说明：</strong>其实这个<code>Vultr</code>送<code>100</code>美元使用券活动出来很久了，之前一直以为是新用户才送，所以就没太关注，刚刚得知老用户也可以领取，就分享下，也许还有人不知道。</p>
<h2 id="领取方法"><a href="#领取方法" class="headerlink" title="领取方法"></a>领取方法</h2><p>本次活动领取的<code>$100</code>试用券只适用于<code>Bare Metal</code>独立服务器，大概能免费使用<code>25</code>天左右，这里分别说下新老用户领取方法。</p>
<pre><code>#独立服务器配置信息
CPU：E3-1270 v6 @ 3.80GHz
核数：8核
内存：32G
硬盘：480GB SSD
流量：5000GB/月
端口：1Gbps</code></pre><p><strong>1、新用户领取</strong><br>点击该活动链接注册：注册地址，并充值最低要求金额即可获得<code>$100</code>试用券。<br><img src="https://www.southcat.net/usr/picture/vultr_dufu.png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、老用户领取</strong><br>直接发<code>TK</code>到“<code>Billing Questions</code>”部门，说我想要试用<code>Bare Metal</code>独立服务器，然后客服就会给你<code>$100</code>试用额度。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>这款独服要<code>$120</code>/月，所以你的帐号月限额必须高于<code>$120</code>，通常情况下会自动帮你把限额提到<code>$125</code>/月，但是如果你有不止<code>$5</code>的其他机子，那么你还需要继续发<code>TK</code>申请提高限额。</p>
<h2 id="友情提示"><a href="#友情提示" class="headerlink" title="友情提示"></a>友情提示</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Vultr VPS快速安装Windows 7及其它系统教程</title>
    <url>/1602/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Vultr</code>早已是一家很大，使用人很多的的<code>VPS</code>服务商了，这里就不过多介绍了，只说下安装<code>Windows</code>系统教程，很简单。毕竟很多人也想玩玩<code>Windows</code>系统的<code>VPS</code>。</p>
<p><strong>提示：</strong>该方法可以不用了，请参考最新安装<code>Windows</code>的方法，适用于任何<code>VPS</code>，链接：Linux VPS无限制一键全自动DD安装Windows脚本。</p>
<p><strong>1、上传ISO自定义系统</strong><br>（1）点击<code>Add ISO</code>准备上传<code>Windows</code>系统路径包。<br><img src="https://www.southcat.net/usr/picture/Vultr(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>（2）将下面<code>ISO</code>地址（这里以<code>Windows 7</code>为例，其它看个人爱好。）丢到上图所示的<code>upload ISO from remote machine</code>中，点击<code>Upload</code>。<br><img src="https://www.southcat.net/usr/picture/Vultr(2).png" alt="请输入图片描述" title="请输入图片描述"><br>这些<code>ISO</code>都是从网上找的资源，测试可用。</p>
<pre><code>Window2003:
http://dl03.miefen.com/os/cn_win_srv_2003_r2_enterprise_x64_with_sp2_vl_cd_merger_incl_virtio_X13-140502-homemade-by-Jetso.iso

Windows XP:
http://dl03.miefen.com/os/en_win_xp_pro_x64_with_sp2_vl_incl_virtio_X13-140502-homemade-by-Jetso.iso

Windows2008:
http://dl03.miefen.com/os/cn_windows_server_2008_r2_standard_enterprise_datacenter_and_web_with_sp1_x64_dvd_incl_virtio-140506-homemade-by-Jetso.iso

Windows 7:
https://dl02.miefen.com/os/cn_windows_7_professional_with_sp1_vl_build_x86_dvd_u_incl_virtio-140506-homemade-by-Jetso.iso

Windows8.1:
http://dl02.miefen.com/os/cn_windows_8_1_pro_vl_x86_dvd_incl_virtio-140506-homemade-by-Jetso.iso</code></pre><p>（3）<code>ISO</code>显示<code>Available</code>即上传成功。<br><img src="https://www.southcat.net/usr/picture/Vultr(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、开一台自定义Windows 7系统的VPS</strong><br><img src="https://www.southcat.net/usr/picture/Vultr(4).png" alt="请输入图片描述" title="请输入图片描述"><br>建议开一台内存1G以上的<code>VPS</code>。</p>
<p><strong>3、管理并安装Windows 7系统</strong><br>（1）点击<code>VPS</code>管理后，进入<code>VNC</code>控制面板。<br><img src="https://www.southcat.net/usr/picture/Vultr(6).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vultr(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>（2）进入到<code>Windows 7</code>安装界面，输入用户名，密码直到安装完毕！<br><img src="https://www.southcat.net/usr/picture/Vultr(7).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vultr(8).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vultr(9).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Vultr(10).png" alt="请输入图片描述" title="请输入图片描述"></p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Varient：一个多用途的新闻和杂志系统，可上传视频/音频等</title>
    <url>/2329/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Varient</code>是一个多用途的新闻和杂志系统。它具有干净的代码，响应式和用户友好的设计。您可以使用其强大的管理面板来管理网站中的几乎所有内容。多用户多作者，所有作者都有自己的面板来管理自己的文章，并且还可以上传视频和音频等。而且系统还具有<code>RSS</code>聚合器系统，快速和易于使用，功能很强大。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Varient(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Varient(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Varient(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Varient(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019年7月6日】
源码更新至v1.6版本，由顶点网https://www.topide.com提供。
#下载地址，安装方法不变，授权码随便填
https://www.southcat.net/usr/down/varient-v1.6.zip</code></pre><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><pre><code>系统主要功能是通过谷歌翻译的，我懒得每个词去改，凑合着看啊各位。
干净的响应式设计
使用Bootstrap构建
系统安全性高
Seo优化
搜索引擎友好的网址
多种语言支持(简体中文，英语，德语，法语，土耳其语，葡萄牙语，俄语，意大利语，西班牙语)
10个布局颜色
可编辑和可排序的导航(使用超级菜单)
用于导航的外部链接和下拉选项
响应式和可排序的滑块
适用于任何类型广告代码的自适应广告空间(包括Adsense)
创建广告代码
添加无限制的完全可编辑页面
显示和隐藏页面选项，页面标题，页面导航，页面右栏
图库页面(启用和禁用选项)
画廊类别
联系页面(使用Google地图)
在网站中搜索
阅读列表页面(从列表中添加和删除)
精选文章
新闻速递
添加，删除，更新帖子
视频发布选项
音频发布选项(带播放列表)
计划的帖子
保存为帖子的草稿选项
将多个图像添加到帖子
添加，删除，更新类别
添加，删除照片
添加和删​​除Slider的帖子
通讯(发送Html电子邮件到所有注册的电子邮件)
管理注册电子邮件
懒惰的图像加载
动态标签系统
Ajax评论系统
Facebook评论
投票投票(添加，删除无限投票)
社交登录(Facebook和Google)
社交分享
社交媒体链接
补充工具栏小部件(添加，删除，更新小部件)
小工具：热门帖子
小工具：推荐帖子
小工具：随机文章滑块
小工具：标签
小工具：投票投票
浏览量计数(启用和禁用选项)
管理评论
管理联系人信息
高级帖子选项
Sitemap.xml生成器
RSS聚合器系统(使用Cron作业自动更新)
RSS源(有不同的频道）
30个字体选项
富文本编辑器(可添加图像和视频）
具有3个角色的会员系统(管理员，作者，用户)
管理注册用户
禁止用户帐户
更改用户角色
管理员和作者资料页
启用和禁用会员制度
启用和禁用评论系统
安全认证
重设密码
谷歌分析
高级设置选项
视觉设置
从管理面板中更改徽标，Favicon，网站标题，网站描述等</code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>环境要求：</strong><code>PHP 5.6+</code>、<code>Nginx</code>/<code>Apache</code>、<code>cURL</code>、<code>Mbstring</code>扩展，本源码为<code>v1.5.1</code>版本，由顶点网提供。</p>
<p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP 5.6+</code>、<code>Nginx</code>或<code>Apache</code>、<code>Mysql</code>。</p>
<p><strong>2、上传源码</strong><br>点击面板左侧-添加站点，数据库选择<code>Mysql</code>，设置好数据库名称、密码。</p>
<p>然后上传源码到根目录并解压出来(源码下载：varient-v1.5.1.zip)，也可以直接在<code>SSH</code>客户端使用命令：</p>
<pre><code>#将下面根目录地址改成自己的再运行
cd /www/wwwroot/www.southcat.net
wget https://www.southcat.net/usr/down/varient-v1.5.1.zip
unzip varient-v1.5.1.zip &amp;&amp; rm -rf varient-v1.5.1.zip</code></pre><p><strong>3、设置伪静态</strong><br>如果你是<code>Apache</code>可以跳过该步骤，<code>Nginx</code>需要点击面板左侧网站-域名设置-伪静态，填入以下代码：</p>
<pre><code>location / {
          if (!-e $request_filename) {
                  rewrite ^/(.*)$ /index.php?$1 last;
          }
  }</code></pre><p><strong>4、安装</strong><br>这时候只需要打开网站<code>http://xx.com/install</code>，根据步骤进行安装了，设置管理员用户名和密码即可。<br><img src="https://www.southcat.net/usr/picture/Varient(5).png" alt="请输入图片描述" title="请输入图片描述"><br>由于涉及到上传视频和音频，所以可能需要点击左侧软件管理-<code>PHP</code>设置-配置修改，来修改相应的参数。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Vultr VPS服务器挂载硬盘教程</title>
    <url>/1959/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前<code>Vultr</code>搞活动免费领取的永久<code>50G</code>硬盘和前些日子免费撸的服务器，都需要用到挂载硬盘，所以就说下挂载方法，适用于任何<code>VPS</code>服务器。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>这里以挂载<code>50G</code>为例，先去后台<code>Servers</code>→<code>Block Storage</code>将<code>50G</code>硬盘添加到服务器后再开始挂载。至于独立服务器或者其它<code>VPS</code>服务器，直接挂载就可以了。</p>
<p><strong>1、查看硬盘信息</strong></p>
<pre><code>fdisk -l</code></pre><p>我们看到多了个<code>/dev/vdb</code>硬盘。<br><img src="https://www.southcat.net/usr/picture/Vultr_dev(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、硬盘分区</strong></p>
<pre><code>fdisk /dev/vdb</code></pre><p><img src="https://www.southcat.net/usr/picture/Vultr_dev(2).png" alt="请输入图片描述" title="请输入图片描述"><br>大致手法：</p>
<pre><code>n p 默认 默认 默认 w</code></pre><p><strong>3、查看分区</strong></p>
<pre><code>fdisk -l</code></pre><p>这时候会看到多了个<code>/dev/vdb1</code>分区。<br><img src="https://www.southcat.net/usr/picture/Vultr_dev(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>4、格式化分区</strong></p>
<pre><code>mkfs.ext4 /dev/vdb1  #格式化为ext4类型</code></pre><p><strong>5、创建目录并挂载</strong></p>
<pre><code>mkdir /Rats  #名称自己定
mount /dev/vdb1 /Rats</code></pre><p>这时候输入<code>df -h</code>查看挂载成功没。<br><img src="https://www.southcat.net/usr/picture/Vultr_dev(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>6、开机自启</strong></p>
<pre><code>nano /etc/fstab</code></pre><p>添加以下内容：</p>
<pre><code>磁盘分区 挂载目录 文件格式 defaults 0 0
#例如
/dev/vdb1 /Rats ext4 defaults 0 0</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Wayback Machine：一个从1996年至今备份了超过4000亿个网页的网页时光机</title>
    <url>/1738/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这个网站很有趣，在逗比那里看到的，网页时光机<code>Wayback Machine</code>，基本就是定期备份了所有网站的快照，供人查询，对于很多有网站的人来说，也可以看看当初自己网站的样子，回忆一下，其中内页也能访问，很强大。</p>
<p><strong>网站地址：</strong><a href="http://web.archive.org/" target="_blank" rel="noopener">http://web.archive.org/</a><br><strong>注意：</strong>这个网站被<code>Q</code>，需要挂梯子访问。</p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>首先访问网站：<a href="http://web.archive.org/，然后在屏幕中的输入框中输入你要查看的网站域名，例如：`baidu.com`。" target="_blank" rel="noopener">http://web.archive.org/，然后在屏幕中的输入框中输入你要查看的网站域名，例如：`baidu.com`。</a></p>
<p>输入后就会看到网站在搜索这个域名的快照备份信息，找到后就会如下图所示：<br><img src="https://www.southcat.net/usr/picture/Wayback(1).png" alt="请输入图片描述" title="请输入图片描述"><br>中间的是年份范围，下面的是月份日份范围。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>webtorrent-cli：一个BT种子命令行下载工具，可边下边播放</title>
    <url>/2188/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>WebTorrent</code>是一款可以直接在线播放视频的<code>BT</code>下载客户端，而<code>webtorrent-cli</code>是它的命令行应用程序，像这种<code>BT</code>命令行工具博主说了很多了，但是支持边下边播的目前就看到了这个，这里就说下使用方法。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>1、安装node.js</strong></p>
<pre><code>Debian/Ubuntu系统
curl -sL https://deb.nodesource.com/setup_9.x | bash -
apt-get install -y nodejs

Centos系统
curl -sL https://rpm.nodesource.com/setup_9.x | bash -
yum install nodejs -y</code></pre><p><strong>2、安装webtorrent-cli</strong></p>
<pre><code>npm install webtorrent-cli -g</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、下载命令</strong><br>先使用命令下载文件，选择下面其中一种命令方式进行下载：</p>
<pre><code>#以下路径分别为磁力链接、种子HTTP链接地址、服务器种子路径，种子HASH
webtorrent magnet:?xt=urn:btih:828E2289E73ED9C96C16203E24EBD66E198EB65F
webtorrent http://southcat.net/debian-9.2.torrent
webtorrent /root/debian-9.2.torrent
webtorrent 828E2289E73ED9C96C16203E24EBD66E198EB65F</code></pre><p>这时候会输出以下界面：<br><img src="https://www.southcat.net/usr/picture/webtorrent-cli.png" alt="请输入图片描述" title="请输入图片描述"><br>下载文件默认存在<code>/root</code>文件夹，然后我们可以在浏览器上输入<code>http://IP:8000</code>访问下载文件列表，并通过访问<code>http://IP:8000/x</code>进行在线观看和下载了，<code>x</code>为文件列表前面的数字减<code>1</code>。</p>
<p><strong>2、命令拓展</strong><br><code>webtorrent</code>下载命令后面可以加很多参数，这里只说<code>2</code>个常用参数。</p>
<pre><code>#了解更多参数输入webtorrent --help即可
-o, --out [path]  #设置BT下载目录，默认为当前目录
-p, --port [number]  #设置HTTP服务器端口，默认8000</code></pre><p>如果我们要使用一个磁力将文件下载到<code>/home</code>目录，并通过浏览器访问<code>IP:8080</code>进行在线观看，使用命令：</p>
<pre><code>webtorrent magnet:?xt=urn:btih:828E2289E73ED9C96C16203E24EBD66E198EB65F -p 8080 -o /home</code></pre><h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>Torrench：一个命令行BT种子搜索工具，可直接下载资源</li>
<li>Linux VPS使用torrent-cli命令行获取电影等资源的BT磁力</li>
<li>Linux VPS使用rtorrent下载BT种子，并在线观看</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>VPS上传文件到OneDrive网盘脚本，可配合Aria2实现自动上传</title>
    <url>/2288/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们从<code>VPS</code>上传文件到<code>OneDrive</code>网盘的方法很多，包括<code>Rclone</code>挂载，<code>OneIndex</code>程序的上传功能，不过<code>2</code>个在上传的时候都还是有点<code>BUG</code>，前者会出现丢文件的情况，后者也会出现上传失败，都不是很理想，这里博主再介绍个<code>OneDrive</code>上传脚本，几乎不会出现上传问题，很好用，由萌咖大佬制作，并将其适用于<code>Aria2</code>的自动上传，这里说下具体操作。</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><pre><code>【2019.11.28】
该版本不再维护和更新，请移植Go版的上传工具，更高效和快速，地址：https://www.southcat.net/archives/1006/</code></pre><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2018.12.16】
应一些同学需求，新增上传到指定文件夹的方法。
【2018.11.19】
OneDrive上传脚本BUG已被萌咖大佬修复，修复了空格处理不当，导致部分带空格的文件夹上传失败，从而影响Aria2上传脚本。
【2018.10.30】
修复Aria2上传脚本BUG，包括修复了不能上传文件夹功能，修复了不能正确上传文件名中包含空格的项目。
【2018.10.29】
优化OneDrive网盘脚本。优化认证步骤。
独家分享萌咖大佬的Aria2自动上传脚本，判断更加细节，支持单文件、文件夹里的单文件、文件夹里的多文件及文件夹上传。超过15G文件停止上传(onedrive限制)。</code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><pre><code>【2018.11.19】
#目前脚本修复的差不多了，博主测试各种带空格的文件夹自动上传都没问题。

#如果依然出现有些文件上传不了？
出现这种情况的话，大概是文件虽然下载完成了，但一直卡在做种阶段，导致参数传不到自动上传脚本，从而文件夹也上传不了。
解决方法：在配置文件里加入seed-time=0参数(意思是停止做种)，再重启Aria2即可。</code></pre><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>Github地址：</strong><a href="https://github.com/0oVicero0/OneDrive" target="_blank" rel="noopener">https://github.com/0oVicero0/OneDrive</a></p>
<p><strong>脚本特性：</strong>脚本支持文件夹上传，支持获取文件的匿名直链，且只适用于<code>OneDrive</code>非个人版。</p>
<p><strong>1、安装脚本</strong><br>安装<code>curl</code>，用于访问<code>API</code>：</p>
<pre><code>#Ubuntu和Debian系统
apt-get install -y curl

#Centos系统
yum install curl -y</code></pre><p>运行命令安装脚本：</p>
<pre><code>#为了方便小白，本脚本内置萌咖大佬永久有效的应用参数，可以直接使用，如果你不放心可以自己获取参数，不过可能会遇到很多坑，建议直接使用脚本默认的参数
wget --no-check-certificate -qO- &quot;https://raw.githubusercontent.com/0oVicero0/OneDrive/master/OneDrive.sh&quot; |bash</code></pre><p>本脚本需要三个参数<code>Client ID</code>、<code>Secret</code>、<code>Reply URL</code>，均需要在<code>/usr/local/etc/OneDrive/onedrive.cfg</code>文件里修改，参数获取看下面，当然你也可以不用管，直接进行步骤<code>3</code>。</p>
<p><strong>2、获取参数</strong><br>先访问Microsoft Azure Management Portal，然后点击左侧菜单栏中的<code>Azure Active Directorg</code>，选择应用注册，再点击页面上方的新应用程序注册。<br><img src="https://www.southcat.net/usr/picture/Onedrive_up(1).png" alt="请输入图片描述" title="请输入图片描述"><br>输入名称如：<code>OneDrive for Linux</code>，应用程序类型选择<code>Web应用/API</code>，填入登陆<code>URL</code>：<a href="https://login.microsoftonline.com/，再点击创建。" target="_blank" rel="noopener">https://login.microsoftonline.com/，再点击创建。</a><br><img src="https://www.southcat.net/usr/picture/Onedrive_up(2).png" alt="请输入图片描述" title="请输入图片描述"><br>然后点击刚刚创建的应用程序，复制应用程序<code>ID</code>，即脚本需要的<code>Client ID</code>参数，再点击左上角的设置。<br><img src="https://www.southcat.net/usr/picture/Onedrive_up(3).png" alt="请输入图片描述" title="请输入图片描述"><br>然后进行如下修改：<br><img src="https://www.southcat.net/usr/picture/Onedrive_up(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<pre><code>#点击右边的回复URL，将其修改为：https://onedrive.live.com/about/business/，即脚本所需要的Reply URL参数。
#点击所需权限，点击Windows Azure Active Directory确认是否已选中Sign in and user profile，如果没有则选中并点击完成。
#点击上方的添加，点击选择API，选中Office 365 SharePoint Online，并点击选择。在选择权限中选中Read user files 和Read and write user files，并点击选择。点击完成按钮，并关掉此小窗口。
#点击密钥，填入密钥描述，如：OneDrive，选择年限1年，点击保存，再复制密匙，即脚本所需要的Secret参数。</code></pre><p>不过这里说下密匙(<code>Secret</code>参数)填写的一个坑，由唯一度博主填平。就是当我们获取到带<code>+</code>号的密匙时候，我们需要使用编码符号，把<code>+</code>改成<code>％2B</code>，然后再填入脚本里，不然最后会出现<code>Something went wrong, here is the API response</code>的错误，导致验证失败。</p>
<p><strong>3、运行账号认证程序</strong><br>运行命令<code>onedrive -a</code>，将返回的网址复制到浏览器打开，再登陆你的<code>OneDrive for Business</code>账号，登陆成功后复制地址栏中的地址(复制包括<code>localhost</code>的所有链接地址)，粘贴到<code>SSH</code>客户端里，敲回车键即可。<br><img src="https://www.southcat.net/usr/picture/Onedrive_up(5).png" alt="请输入图片描述" title="请输入图片描述"><br>如果返回以下字段：<code>It seems like we have a refresh token, so we are ready to go</code>，那就恭喜你，设置成功!</p>
<pre><code>提示：如果你遇到bash: onedrive: command not found错误，则需要找到/usr/local/etc/OneDrive文件夹，修改onedrive和onedrive-d脚本，在第二行都加上export PATH=/usr/local/bin:$PATH代码，再保存就行了。</code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>1、使用命令</strong></p>
<pre><code>onedrive --help

#####################################################################
Usage: onedrive [OPTIONS] file1 [file2...]
       onedrive-d folder

Options:
  -d, --debug        Enable debug mode
  -a, --authorize    Run authorization process
  -f, --folder       Upload files into this remote folder
  -c, --creat        Creat remote folder.&quot;
                     Directory names are separated with a slash, e.g.
                     rootFolder/subFolder
                     Do NOT use a trailing slash!
  -h, --help         Show this help
  -r, --rename       Rename the files during upload
                     For each file you specify you MUST also specify
                     the remote filename as the subsequent parameter
                     Be especially careful with globbing!
  -s, --silent       Silent mode for use in crontab scripts.
                     Return only exit code.
  -ls,--list         Show the itmes in this directory.
  -l, --link         Show the file share link.

#####################################################################</code></pre><p><strong>2、命令示范</strong><br>如果我们要上传<code>/root</code>文件夹里面的<code>moerats.txt</code>，使用命令：</p>
<pre><code>#此命令默认上传到OneDrive根目录
onedrive &apos;/root/moerats.txt&apos;

#如果上传到指定文件夹，就需要加-f参数
onedrive -f RATS &apos;/root/moerats.txt&apos;  #上传到OneDrive根目录的RATS文件夹
onedrive -f RATS/RATS &apos;/root/moerats.txt&apos;  #上传到OneDrive根目录RATS文件夹里的RATS文件夹</code></pre><p>如果我们要将<code>/root</code>文件夹及里面的文件夹和文件一起上传，使用命令：</p>
<pre><code>#此命令默认上传到OneDrive根目录
onedrive-d &apos;/root&apos;

#如果上传到指定文件夹，就需要加-f参数
onedrive-d -f RATS &apos;/root&apos;  #上传到OneDrive根目录的RATS文件夹
onedrive-d -f RATS/RATS &apos;/root&apos;  #上传到OneDrive根目录RATS文件夹里的RATS文件夹</code></pre><p>如果我们想直接查看<code>OneDrive</code>网盘目录的文件，使用命令：</p>
<pre><code>#此命令只查看根目录文件
onedrive -l
#如果我们要查看根目录root文件夹里的文件
onedrive -l /root</code></pre><p><img src="https://www.southcat.net/usr/picture/Onedrive_up(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="Aria2自动上传"><a href="#Aria2自动上传" class="headerlink" title="Aria2自动上传"></a>Aria2自动上传</h2><p>上传方法参考：使用Aira2下载文件后自动上传到Google Drive网盘。</p>
<p>上传代码如下：</p>
<pre><code>#!/bin/bash

GID=&quot;$1&quot;;
FileNum=&quot;$2&quot;;
File=&quot;$3&quot;;
MaxSize=&quot;15728640&quot;
RemoteDIR=&quot;&quot;;  #上传到Onedrive的路径，默认为根目录，如果要上传到指定目录，方法看文章最后面。
LocalDIR=&quot;/home/www/download/&quot;;  #Aria2下载目录，记得最后面加上/

if [[ -z $(echo &quot;$FileNum&quot; |grep -o &apos;[0-9]*&apos; |head -n1) ]]; then FileNum=&apos;0&apos;; fi
if [[ &quot;$FileNum&quot; -le &apos;0&apos; ]]; then exit 0; fi
if [[ &quot;$#&quot; != &apos;3&apos; ]]; then exit 0; fi

function LoadFile(){
  IFS_BAK=$IFS
  IFS=$&apos;\n&apos;
  if [[ ! -d &quot;$LocalDIR&quot; ]]; then return; fi
  if [[ -e &quot;$File&quot; ]]; then
    if [[ $(dirname &quot;$File&quot;) == $(readlink -f $LocalDIR) ]]; then
      ONEDRIVE=&quot;onedrive&quot;;
    else
      ONEDRIVE=&quot;onedrive-d&quot;;
    fi
    FileLoad=&quot;${File/#$LocalDIR}&quot;
    while true
      do
        if [[ &quot;$FileLoad&quot; == &apos;/&apos; ]]; then return; fi
        echo &quot;$FileLoad&quot; |grep -q &apos;/&apos;;
        if [[ &quot;$?&quot; == &quot;0&quot; ]]; then
          FileLoad=$(dirname &quot;$FileLoad&quot;);
        else
          break;
        fi;
      done;
    if [[ &quot;$FileLoad&quot; == &quot;$LocalDIR&quot; ]]; then return; fi
    if [[ -n &quot;$RemoteDIR&quot; ]]; then
      Option=&quot; -f $RemoteDIR&quot;;
    else
      Option=&quot;&quot;;
    fi
    EXEC=&quot;$(command -v $ONEDRIVE)&quot;;
    if [[ -z &quot;$EXEC&quot; ]]; then return; fi
    cd &quot;$LocalDIR&quot;;
    if [[ -e &quot;$FileLoad&quot; ]]; then
      ItemSize=$(du -s &quot;$FileLoad&quot; |cut -f1 |grep -o &apos;[0-9]*&apos; |head -n1)
      if [[ -z &quot;$ItemSize&quot; ]]; then return; fi
      if [[ &quot;$ItemSize&quot; -ge &quot;$MaxSize&quot; ]]; then
        echo -ne &quot;\033[33m$File \033[0mtoo large to spik.\n&quot;;
        return;
      fi
      eval &quot;${EXEC}${Option}&quot; \&apos;&quot;${FileLoad}&quot;\&apos;;
      if [[ $? == &apos;0&apos; ]]; then
        rm -rf &quot;$FileLoad&quot;;
      fi
    fi
  fi
  IFS=$IFS_BAK
}
LoadFile;</code></pre><p>如果你想上传到指定的文件夹，修改如下：</p>
<pre><code>#上传到Onedrive里的RATS目录，参数改为：RemoteDIR=&quot;RATS&quot;; 
#上传到Onedrive里的RATS目录里的RATS目录，参数改为：RemoteDIR=&quot;RATS/RATS&quot;;</code></pre><p>如果你觉得上传速度较慢，可以编辑<code>/usr/local/etc/OneDrive/onedrive.cfg</code>，修改<code>threads</code>线程数，默认<code>2</code>。</p>
<pre><code>#这里提供个快速修改线程数的命令，这里默认修改为5，建议别太高！
sed -i &quot;s#max_upload_threads=2#max_upload_threads=5#g&quot; &apos;/usr/local/etc/OneDrive/onedrive.cfg&apos;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows一键傻瓜式免编译Monero矿机，并用CPU挖矿Monero</title>
    <url>/1866/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在好多不少人在用服务器挖矿门罗币<code>Monero</code>，至于能不能回本，还是个未知数，不过可以补贴下买服务器的成本倒是可以的，现在就发个<code>Windows</code>上很方便的挖<code>Monero</code>教程，本教程由<code>hostloc</code>大佬<code>shc</code>提供，我们可以用来在自己的电脑上试试，至于电费能不能挖回来，那就需要试试了。也许还能小赚一笔。这都说不准。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Windows</code>下面挖掘<code>Monero</code>是一件非常简单的事情，并不像<code>Linux</code>下面还需要复杂地编译，<code>Windows</code>里面可以直接运行编译好的矿机程序。</p>
<p>需要注意的是，<code>Windows</code>系统中<code>CPU</code>使用没有优化得像<code>Linux</code>那样好，因此同样的<code>CPU</code>, 在<code>Windows</code>下挖矿的性能会显著低于在<code>Linux</code>操作系统。相反地，显卡驱动在<code>Windows</code>下的优化通常比在<code>Linux</code>下的优化好，因此显卡挖矿在<code>Windows</code>下要比在<code>Linux</code>的性能高一些。</p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>下面介绍一下怎样在<code>Windows</code>下面挖矿。</p>
<p>首先，我们需要注册一个钱包。几乎所有的虚拟币交易所都支持<code>Monero</code>的交易，我们在任何一家交易所注册一个账号后就可以获得一个<code>Monero</code>钱包地址。如果你不知道哪里可以注册账号，可以到这个链接上注册<code>https://hitbtc.com</code>。注册好后在后台获得<code>Monero</code>钱包地址。</p>
<p>然后我们要选择一个矿池。<code>Monero</code>矿池有很多，官网<code>http://moneropools.com/</code>中列举了很多个矿池，可以选择想加入的矿池。我这里选择的是<code>xmr.nanopool.org</code>。</p>
<p>再然后我们下载矿机软件：<a href="https://github.com/nanopool/Wolf-XMR-Miner/releases/download/v0.4/wolf-xmr-miner-v0.4.zip" target="_blank" rel="noopener">https://github.com/nanopool/Wolf-XMR-Miner/releases/download/v0.4/wolf-xmr-miner-v0.4.zip</a></p>
<p>下载解压后打开压缩包。找到文件<code>xmr-cpu.conf</code>, 编辑该文件。</p>
<pre><code>{
    &quot;Algorithms&quot;:
    [
        {
            &quot;name&quot;: &quot;CryptoNight&quot;,
            &quot;devices&quot;:
            [
                {
                    &quot;index&quot;: -1,
                    &quot;threads&quot;: 4,
                    &quot;rawintensity&quot;: 8,
                    &quot;worksize&quot;: 8
                }
            ],
            &quot;pools&quot;:
            [

                {
                    &quot;url&quot;: &quot;stratum+tcp://xmr-us-east1.nanopool.org:14444&quot;,
                    &quot;user&quot;: &quot;4637eui9eqtCBybcVPve35w0es3FAnff7aPZH9ximGJiepquoe1zYyxjXqrT3anyZ22j7DEE74Gk19fjisH2nNiC3bvywmx.f4ce782u0db7ji92u20a7b545392810acdd39fj16b247b279163a9e238jb5011.worker_01/hello@example.com&quot;,
                    &quot;pass&quot;: &quot;x&quot;
                }
            ]
        }
    ]
}</code></pre><p>在<code>User</code>那里填写你的钱包地址、矿工号、<code>Payment ID</code>以及邮箱，然后将<code>threads</code>这条改成你要用来挖矿的核数。注意，这里要填物理核数，比如你<code>4</code>核<code>8</code>线程的<code>CPU</code>, 最多只能填<code>4</code>，如果填超过<code>4</code>的话挖矿性能会骤降。</p>
<p>保存之后，运行压缩包里的<code>start_CPU.bat</code>就开始挖矿啦。</p>
<p>可以在命令提示符中看到实时的算力统计。<br><img src="https://www.southcat.net/usr/picture/windows_monero.png" alt="请输入图片描述" title="请输入图片描述"><br>如果有什么其他问题，欢迎去大佬博客留言哈！</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows 10获取数字许可证 批处理版</title>
    <url>/2128/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般我们激活<code>Windows 10</code>系统都是自己搭建<code>KMS</code>服务器，查看：Linux VPS一键搭建KMS服务器，不过还是有点限制的，现在激活<code>Windows 10</code>又多了种数字许可证激活的方法，他和<code>KMS</code>不一样，数字许可证会记录你的硬件信息，激活一次后，只要你不换<code>CPU</code>等硬件，重装多少次都会自动激活，这里分享个由<code>Vicer</code>大佬制作的<code>Windows 10</code>数字权利激活工具。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Win10Activation.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul>
<li>兼容大于等于<code>win7</code>(<code>win server 2008</code>) 的各个版本的激活信息(包括<code>Office</code>)查询，备份，还原。</li>
<li>自动激活(获取数字许可证)只支持<code>win10</code>。</li>
<li>获取数字许可证之后，以后重装系统只要联网就会自动激活！无需输入许可证密钥，无需<code>KMS</code>。</li>
</ul>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ol>
<li>自动激活并获取数字激活许可证。</li>
<li>删除(初始化)系统激活信息。</li>
<li>备份系统激活信息。</li>
<li>还原系统激活信息。</li>
<li>查看激活状态。</li>
<li>查看支持列表。</li>
</ol>
<h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ul>
<li>激活时请保持电脑连网状态，否则无法顺利激活。</li>
<li>激活时请保持<code>Windows Update</code>服务为启动状态。</li>
<li>如果已使用密钥激活<code>Office</code>等产品，会丢失其激活状态。</li>
<li>建议备份激活信息后再操作。</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><strong>批处理版：</strong> Win10Activation.zip<br><strong>批处理打包exe版：</strong> Win10Activation.exe</p>
<p>支持的<code>Windows10</code>版本/初始密钥</p>
<pre><code>#Windows 10 Cloud
V3WVW-N2PV2-CGWC3-34QGF-VMJ2C

#Windows 10 CloudN
NH9J3-68WK7-6FB93-4K3DF-DJ4F6

#Windows 10 Core
YTMG3-N6DKC-DKB77-7M9GH-8HVX7

#Windows 10 CoreN
4CPRK-NM3K3-X6XXQ-RXX86-WXCHW

#Windows 10 CoreCountrySpecific
N2434-X9D7W-8PF6X-8DV9T-8TYMD

#Windows 10 CoreSingleLanguage
BT79Q-G7N6G-PGBYW-4YWX6-6F4BT

#Windows 10 Education
YNMGQ-8RYV3-4PGQ3-C8XTP-7CFBY

#Windows 10 EducationN
84NGF-MHBT6-FXBX8-QWJK7-DRR8H

#Windows 10 Enterprise
XGVPP-NMH47-7TTHJ-W3FW7-8HV2C

#Windows 10 EnterpriseN
WGGHN-J84D6-QYCPR-T7PJ7-X766F

#Windows 10 EnterpriseS / LTSB
NK96Y-D9CD8-W44CQ-R8YTK-DYJWX

#Windows 10 EnterpriseSN / LTSBN
RW7WN-FMT44-KRGBK-G44WK-QV7YK

#Windows 10 Professional
VK7JG-NPHTM-C97JM-9MPGT-3V66T

#Windows 10 ProfessionalN
2B87N-8KFHP-DKV6R-Y2C8J-PKCKT

#Windows 10 ProfessionalEducation
8PTT6-RNW4C-6V7J2-C2D3X-MHBPB

#Windows 10 ProfessionalEducationN
GJTYN-HDMQY-FRR76-HVGC7-QPF8P

#Windows 10 ProfessionalWorkstation
DXG7C-N36C4-C4HTG-X4T3X-2YV77

#Windows 10 ProfessionalWorkstationN
WYPNQ-8C467-V2W6J-TX4WX-WT2RQ</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows下使用RaiDrive挂载Google Drive/OneDrive网盘为本地硬盘使用</title>
    <url>/2252/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前博主就分享过一款挂载<code>Google Drive</code>网盘的工具<code>Google Drive File Stream</code>→点击查看，现在再分享一个好工具<code>RaiDrive</code>，一款完全免费的网络硬盘映射工具，可以直接将<code>Google Drive</code>、<code>Google Team Drive</code>、<code>Google Photos</code>、<code>Dropbox</code>、<code>OneDrive</code>、<code>FTP</code>、<code>SFTP</code>、<code>WebDAV</code>挂载成本地硬盘使用，而且可以当成<code>FTP</code>工具管理<code>VPS</code>文件，很方便。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>首先安装<code>RaiDrive</code>→下载地址，然后点击右上角的添加，选择你需要挂载的类型。<br><img src="https://www.southcat.net/usr/picture/RaiDrive(1).png" alt="请输入图片描述" title="请输入图片描述"><br>如果你挂载的是网盘，就会自动弹出授权页面，然后就可以在计算机里看到挂载的硬盘了。<br><img src="https://www.southcat.net/usr/picture/RaiDrive(2).png" alt="请输入图片描述" title="请输入图片描述"><br>最后记得让<code>RaiDrive</code>常驻后台，不然挂载也会断开。</p>
<h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows平台通过CMD查询域名的Whois信息</title>
    <url>/1810/</url>
    <content><![CDATA[<p><strong>说明：</strong>有时候我们通过一些网站平台查询域名的时候，有很多生僻的后缀都查询不到，这是很蛋疼的，这里分享个由微软出品的<code>whois</code>查询工具，支持任何的域名后缀，也很方便、简单。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>官方地址：</strong><a href="http://technet.microsoft.com/en-us/Sysinternals/bb897435.aspx" target="_blank" rel="noopener">http://technet.microsoft.com/en-us/Sysinternals/bb897435.aspx</a><br><strong>本地下载：</strong>Whois v1.14</p>
<p>下载文件并解压后，将解压出来的<code>whois.exe</code>放置到<code>C:/Windows/system32/</code>目录即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows系统安装最新版128线程Aria2客户端及使用教程</title>
    <url>/1967/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前都是说的在<code>Linux VPS</code>服务器上安装<code>Aria2</code>教程，经常用的还是逗比那个脚本，参考：BT种子/磁力链接下载工具：Aria2一键安装管理脚本，今天说下在<code>Windows</code>系统上安装教程，使用起来下载速度还是挺快的。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里直接使用的是最新版<code>128</code>线程的<code>Aria2</code>，先下载压缩包：</p>
<pre><code>Win32位下载：https://www.southcat.net/usr/down/aria2-win-32bit-128.7z
Win64位下载：https://www.southcat.net/usr/down/aria2-win-64bit-128.7z</code></pre><p>然后解压压缩包，下载默认目录为<code>downloads</code>，线程数为<code>24</code>线程，可通过编辑<code>aria2.conf</code>配置文件来调整这些参数。</p>
<p>然后右键<code>start.bat</code>使用管理员打开即可启动<code>Aira2</code>。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>这里就直接使用<code>Aria2 Web</code>面板，常用有<code>YAAW</code>、<code>webui-aria2</code>、<code>AriaNg</code>，<code>Github</code>下载地址如下：</p>
<pre><code>YAAW：https://github.com/binux/yaaw/archive/master.zip
AriaNg：https://github.com/mayswind/AriaNg/releases
webui-aria2：https://github.com/ziahamza/webui-aria2/archive/master.zip</code></pre><p>以上<code>Web</code>客户端都可以直接下载到电脑上，解压并打开<code>index.html</code>文件直接使用，这里推荐<code>AriaNg</code>，打开<code>AriaNg</code>，然后进入设置，把主机填写成<code>localhost</code>保存即可。<br><img src="https://www.southcat.net/usr/picture/Aira2_win.png" alt="请输入图片描述" title="请输入图片描述"><br>最后就可以使用<code>Aria2</code>下载电影和文件了。</p>
<p>如果下载<code>BT</code>没速度，我们可以添加<code>BT Tracker</code>服务器，我们打开配置文件<code>aria2.conf</code>，添加以下代码：</p>
<pre><code>bt-tracker=BT服务器（多个服务器之间用,分开）
#例如
bt-tracker=udp://tracker.leechers-paradise.org:6969/announce,udp://tracker.pirateparty.gr:6969/announce,udp://tracker.cuntflaps.me:6969/announce</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows/Mac系统下挂载Google Drive网盘为本地硬盘使用</title>
    <url>/1931/</url>
    <content><![CDATA[<p><strong>说明：</strong>今天在邮件里发现曾经申请过一个<code>edu</code>邮箱，而且还可以用，就搞了个无限空间的<code>Google Drive</code>网盘挂载到<code>VPS</code>或者电脑上玩玩，这里就分享下<code>Windows</code>/<code>MAC</code>系统使用<code>Google Drive File Stream</code>工具挂载<code>Google Drive</code>网盘的方法，<code>VPS</code>服务器挂载方法请参考：在Debian/Ubuntu上使用rclone挂载Google Drive网盘。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/GoogleD_win.png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p><strong>提示：</strong>从官方下载客户端需要挂梯子。</p>
<p><strong>1、Windows客户端</strong><br>适用于<code>Windows 7</code>及更高版本，不支持<code>Windows Server</code>版本。<br>下载地址：官方下载，本地下载。</p>
<p><strong>2、MAC客户端</strong><br>适用于<code>El Capitan</code>（<code>10.11</code>）及以上、<code>High Sierra</code>（<code>10.13</code>）。<br>下载地址：官方下载，本地下载。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><code>Windows</code>系统直接打开客户端登录账号就可以用了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows和Linux VPS/GDrive之间文件夹的实时单向/双向同步教程</title>
    <url>/2439/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般我们同步<code>Windows</code>和<code>Linux</code>之间的文件时，常用的方法有<code>nfs</code>挂载，<code>inotify + rsync</code>同步等，有钱的或许会买成熟的<code>storenext</code>系统，当然后者基本上都是公司在用，<code>storenext</code>由于价格太贵，个人使用基本可以无视，而<code>nfs</code>由于兼容性问题，在实际挂载中会出现很多小问题，算是<code>inotify + rsync</code>使用的比较多，不过鉴于前两天水过一篇Mutagen，博主发现用来实现<code>Windows</code>和<code>Linux VPS</code>之间双向同步的时候，速度还行，资源占用都不算很大，这里就大致水下使用方法，顺便也可以结合下<code>Rclone</code>，间接实现不挂梯子达到<code>Windows</code>和<code>Gdrive</code>双向同步的目的。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github地址：</strong><a href="https://github.com/mutagen-io/mutagen" target="_blank" rel="noopener">https://github.com/mutagen-io/mutagen</a></p>
<p><strong>说明：</strong>这里<code>Windows</code>使用<code>Mutagen</code>前提条件需要<code>OpenSSH</code>，而<code>Windows 10</code>内置<code>OpenSSH</code>，不过貌似<code>mutagen</code>目前不支持默认的<code>SSH</code>，所以就需要我们安装一个额外的<code>OpenSSH</code>了，官方是推荐<code>Git for Windows</code>的，里面自带<code>OpenSSH</code>客户端，我们可以手动下载安装→传送门，也可以使用其它方法安装，这里博主就使用比较简单的<code>Scoop</code>命令行安装，好处就是安装和卸载都很方便。</p>
<p>以下方法适用于以下系统：</p>
<pre><code>Windows 10
Windows Server 2012 R2
Windows Server 2012
Windows Server 2008 R2 SP1
Windows 8.1
Windows 7 SP1</code></pre><p>这里<code>Windows 10</code>可以跳过<code>1</code>、<code>2</code>步骤；其它系统需要进行<code>1</code>、<code>2</code>步骤升级到<code>PowerShell 5</code>。</p>
<p><strong>1、安装.NET Framework 4.5.2</strong></p>
<pre><code>#下载地址
https://www.microsoft.com/en-us/download/details.aspx?id=42642</code></pre><p><strong>2、安装Management Framework 5.1</strong></p>
<pre><code>#下载地址
https://www.microsoft.com/en-us/download/details.aspx?id=54616

##对应的系统下载包名
#Win 2012 64位
W2K12-KB3191565-x64.msu    
#Win 7和Win 2008 R2 64位
Win7AndW2K8R2-KB3191566-x64.zip    
#Win 7 32位
Win7-KB3191566-x86.zip    
#Win 8.1和Win 2012 R2 64位
Win8.1AndW2K12R2-KB3191564-x64.msu
#Win 8.1 32位
Win8.1-KB3191564-x86.msu</code></pre><p>都安装完成后记得重启电脑生效。</p>
<p><strong>3、安装Scoop</strong><br>先在电脑左下角程序搜索框输入<code>PowerShell</code>，然后双击<code>Windows PowerShell</code>工具，再使用命令：</p>
<pre><code>iex (new-object net.webclient).downloadstring(&apos;https://get.scoop.sh&apos;)</code></pre><p>如果安装不上，可能还需要更改执行策略，使用命令：</p>
<pre><code>Set-ExecutionPolicy RemoteSigned -scope CurrentUser</code></pre><p>出现提示，选择<code>Y</code>即可，然后再重新执行上面的命令安装<code>Scoop</code>。</p>
<p><strong>4、安装Git</strong></p>
<pre><code>scoop install git</code></pre><p><strong>5、下载Mutagen</strong></p>
<pre><code>#先在D盘根目录新建mutagen文件夹
mkdir D:\mutagen
#替换下面最新版的Windows二进制文件地址，查看地址：https://github.com/mutagen-io/mutagen/releases
$ws = New-Object Net.WebClient
$url = &quot;https://github.com/mutagen-io/mutagen/releases/download/v0.10.0/mutagen_windows_amd64_v0.10.0.zip&quot;
#设置下载路径，默认D盘根目录mutagen文件夹
$downdir = &quot;D:\mutagen\mutagen.zip&quot;
#开始下载，这里挂梯子下载貌似会快些
$ws.DownloadFile($url,$downdir)
#解压文件
Expand-Archive -Path D:\mutagen\mutagen.zip -DestinationPath D:\mutagen</code></pre><p>这里除了可以在<code>PowerShell</code>使用命令下载，还可以直接使用浏览器下载压缩包，然后在<code>D</code>盘新建<code>mutagen</code>文件夹，并解压到该文件夹即可。</p>
<h2 id="同步到VPS服务器"><a href="#同步到VPS服务器" class="headerlink" title="同步到VPS服务器"></a>同步到VPS服务器</h2><p>这里我们需要先设置一个变量<code>MUTAGEN_SSH_PATH</code>，指向<code>SSH</code>、<code>SCP</code>可执行文件目录，不然会无法识别<code>SSH</code>可执行文件。</p>
<pre><code>$env:MUTAGEN_SSH_PATH= &quot;$env:GIT_INSTALL_ROOT\usr\bin&quot;</code></pre><p>比如我要同步本地<code>D</code>盘根目录的<code>BACK</code>文件夹和远程<code>Linux</code>服务器的<code>/moerats</code>文件夹，使用命令：</p>
<pre><code>#双向同步，创建会话为rats，D:\BACK为BACK文件夹绝对路径
D:\mutagen\mutagen.exe sync create --name=rats D:\BACK root@远程服务器ip:ssh端口:/moerats

#单向同步，创建会话为rats，D:\BACK为BACK文件夹绝对路径
D:\mutagen\mutagen.exe sync create --name=rats -m one-way-safe D:\BACK root@远程服务器ip:ssh端口:/moerats</code></pre><p>如果期间遇到提示，选择<code>yes</code>，第一次可能会多要你输入几次服务器密码。</p>
<h2 id="同步到GDrive网盘"><a href="#同步到GDrive网盘" class="headerlink" title="同步到GDrive网盘"></a>同步到GDrive网盘</h2><pre><code>提示：这里挂载网盘的同步参数会比上面多个--probe-mode=assume，不然远程会不停的产生很多缓存文件。</code></pre><p>首先在<code>VPS</code>上使用<code>rclone</code>挂载<code>Google Drive</code>网盘，挂载教程→传送门，当然这里挂载<code>OneDrive</code>什么也是可以的，不过没啥必要，毕竟有<code>OneDrive</code>客户端。</p>
<p>接下来设置一个变量<code>MUTAGEN_SSH_PATH</code>，指向<code>SSH</code>、<code>SCP</code>可执行文件目录，不然会无法识别<code>SSH</code>可执行文件。</p>
<pre><code>$env:MUTAGEN_SSH_PATH= &quot;$env:GIT_INSTALL_ROOT\usr\bin&quot;</code></pre><p>比如我要同步本地<code>D</code>盘根目录的<code>BACK</code>文件夹和远程<code>Linux</code>服务器挂载<code>Gdrive</code>网盘的<code>/moerats</code>文件夹，使用命令：</p>
<pre><code>#双向同步，创建会话为rats，D:\BACK为BACK文件夹绝对路径
D:\mutagen\mutagen.exe sync create --name=rats --probe-mode=assume D:\BACK root@远程服务器ip:ssh端口:/moerats

#单向同步，创建会话为rats，D:\BACK为BACK文件夹绝对路径
D:\mutagen\mutagen.exe sync create --name=rats -m one-way-safe --probe-mode=assume D:\BACK root@远程服务器ip:ssh端口:/moerats</code></pre><p>如果期间遇到提示，选择<code>yes</code>，第一次可能会多要你输入几次服务器密码。</p>
<p>具体的使用命令可以查看→传送门，基本上都差不多。注意电脑每次重启后，都需要重新设置变量和创建一个同步会话，即重复同步步骤即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows系统使用Win32-loader工具转换成Debian 9系统</title>
    <url>/2116/</url>
    <content><![CDATA[<p><strong>说明：</strong>前面说了很多<code>VPS</code>服务器从<code>Linux</code>系统自由转换<code>Win</code>或其他系统教程，查看：Linux VPS纯净版Debian/Ubuntu/CentOS/Windows系统一键脚本，现在再发个<code>VPS</code>从<code>Win</code>系统转换成<code>Linux</code>系统的方法，虽然很多主机商都自带<code>Linux</code>系统，但学一下手动转换<code>Linux</code>也无妨。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><strong>要求：</strong>内存建议<code>1G</code>，需要有<code>VNC</code>，且提前记录好你<code>Win</code>服务器的网络信息（<code>IP</code>地址/子网掩码/网关地址/<code>DNS</code>服务器）。</p>
<p><strong>1、安装Win32-loader</strong><br>远程登录你的<code>VPS</code>服务器，打开下载地址：Win32-loader，下载并安装<code>win32-loader.exe</code>，期间选择<code>Normal模式</code>- <code>Begin install on this computer</code>，安装完成后点击<code>Close</code>关闭窗口，最后重启即可。<br><img src="https://www.southcat.net/usr/picture/Win_de9(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、安装Debian 9系统</strong><br>这时候进入到<code>VNC</code>界面，然后到达开机启动菜单，选择<code>Debian GNU/Linux</code>并进入，选择语言<code>en_US.UTF8</code>、键盘<code>American English</code>后开始获取网络信息。</p>
<pre><code>注意：部分服务器，网关不提供DHCP能力，所以你可能需要在接下来的步骤，输入重启前准备好的网络信息！</code></pre><p>如果<code>DHCP</code>成功，自动进入下一步，无需进行任何操作；如果失败，则需要你跟着教程继续手工填写网络信息。<br><img src="https://www.southcat.net/usr/picture/Win_de9(2).png" alt="请输入图片描述" title="请输入图片描述"><br>然后会依次要你输入<code>服务器IP</code>-<code>子网掩码</code>-<code>网关地址</code>-<code>DNS服务器</code>，如果输入正确会进入到下一步的安装界面。</p>
<p>接下来会依次要求输入你的主机名、域名（留空）、镜像源。<br><img src="https://www.southcat.net/usr/picture/Win_de9(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>这里镜像源以<code>China</code>为例，然后手动选择一个你想要的镜像源。<br><img src="https://www.southcat.net/usr/picture/Win_de9(4).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Win_de9(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>然后会要求你输入用户名和<code>root</code>密码。再进入安装向导，进入到磁盘分区，选择<code>Guided - use entire disk</code>，之后再选择<code>All files in one partition</code>，最后一步选择<code>Yes</code>点击<code>Continue</code>直到分区完成。<br><img src="https://www.southcat.net/usr/picture/Win_de9(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>接下来开始安装<code>Debian 9</code>系统，勾选<code>Yes</code>然后<code>Continue</code>。<br><img src="https://www.southcat.net/usr/picture/Win_de9(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>开始一系列配置后，会问你是否参加软件包流行度测试，勾选<code>No</code>然后<code>Continue</code>。<br><img src="https://www.southcat.net/usr/picture/Win_de9(8).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>运行<code>tasksel</code>来快速选择要安装的软件包，勾选<code>Debian desktop environment</code>、<code>print server</code>、<code>SSH Server</code>，然后<code>Continue</code>。<br><img src="https://www.southcat.net/usr/picture/Win_de9(9).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>接下来询问你是否要安装<code>GRUB</code>到<code>MBR</code>，勾选<code>Yes</code>然后<code>Continue</code>。<br><img src="https://www.southcat.net/usr/picture/Win_de9(10).png" alt="请输入图片描述" title="请输入图片描述"><br>最后基本都是默认，自己看着办，然后等待安装完成。</p>
<p><strong>3、使用SSH登录</strong><br>安装好了后，是没权限登录<code>SSH</code>客户端的，这时候我们进入<code>VNC</code>，登录进去使用命令：</p>
<pre><code>#切换root权限
su -
#编辑SSH配置文件
nano /etc/ssh/sshd_config</code></pre><p>将<code>#PermitRootLogin prohibit-password</code>，修改为<code>PermitRootLogin yes</code>，再使用<code>Ctrl+X</code>、<code>Y</code>、<code>Enter</code>保存退出。最后使用<code>service sshd restart</code>使配置生效，然后就可以使用<code>SSH</code>登录服务器了。<br><img src="https://www.southcat.net/usr/picture/Win_de9(11).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>如果想要其他系统，就使用文章开通的那个教程进行安装即可。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows VPS一键重装为Linux系统</title>
    <url>/2270/</url>
    <content><![CDATA[<p><strong>说明：</strong>之前萌咔大佬做的<code>Linux to Windows</code>和<code>Linux to Linux</code>脚本方便了很多人，近期又做出了<code>Windows to Linux</code>脚本，基本上已经全了，这里就分享下。</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有些厂商的机器因策略问题，不支持<code>Windows</code>重装为<code>Linux</code>。例如：腾讯云非大陆区域。<br>有些厂商<code>Windows</code>系统盘会比<code>Linux</code>系统盘大，想要大一点系统盘。例如: <code>AZURE</code>、<code>AWS</code>等。<br>有些厂商不支持<code>VNC</code>，这对于转换系统实在不方便。<br>这篇文章可以解决以上问题。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>下载文件：萌咔来源、本站来源。<br>双击打开此文件。<br>自行选择选项。<br>按回车重启，并等待安装完成。<br><img src="https://www.southcat.net/usr/picture/Wintolinux(1).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>1、如果对提供安装的发行版不满意，请参考此文章→传送门。<br>默认提供的是<code>Debian</code>8(<code>Jessie</code>)，添加了<code>firmware</code>包，提供了更多的驱动支持，<code>DHCP</code>模式一键。<br>非<code>DHCP</code>模式，如果要一键，则需要自己定制镜像。<br>定制<code>Debian</code>系镜像应该没问题,其他未作测试。<br>默认<code>root</code>账户密码<code>Vicer</code>。</p>
<p>2、如果厂商不支持<code>VNC</code>，则需要自己定制镜像。<br>定制方法请参考此文章→传送门。<br>主要在镜像中添加机器的网络参数，以便支持一键安装。<br>命令示例:</p>
<pre><code>#定制带网络参数的initrd.img
bash InstallNET.sh -d 8 -v 64 -a --ip-addr &lt;IP&gt; --ip-mask &lt;NetMask&gt; --ip-gate &lt;GATE&gt; --loader
#需要dd安装其他系统(例如 Windows to Windows),定制命令.(网络参数有DHCP的,无需添加.)
bash InstallNET.sh -dd &lt;IMAGE_URL.tar&gt; --ip-addr &lt;IP&gt; --ip-mask &lt;NetMask&gt; --ip-gate &lt;GATE&gt; --loader</code></pre><p>完成后将<code>initrd.img</code>和<code>vmlinuz</code>存放到能直链下载的位置。</p>
<p>3、如果厂商支持<code>VNC</code>，则可以直接全部选<code>1</code>。<br>安装的时候，自己填<code>IP</code>地址，子网掩码，网关，<code>DNS</code>服务器。<br><code>DNS</code>服务器推荐填：<code>8.8.8.8</code>。</p>
<p>4、区分是否为<code>DHCP</code>模式<br><img src="https://www.southcat.net/usr/picture/Wintolinux(2).png" alt="请输入图片描述" title="请输入图片描述"><br>非<code>DHCP</code>模式：如上图，显示了详细的<code>IP</code>地址。(选中：使用下面的<code>IP</code>地址)<br><code>DHCP</code>模式：参考上图。(选中：自动获得<code>IP</code>地址)</p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>Linux VPS纯净版CentOS系统一键安装脚本</li>
<li>Linux VPS无限制一键全自动DD安装Windows脚本</li>
<li>Linux VPS纯净版Debian/Ubuntu系统一键安装脚本</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>WordPress使用代码实现自动关键词与描述</title>
    <url>/1716/</url>
    <content><![CDATA[<p><strong>说明：</strong>部分<code>Wordpress</code>主题在开发时并没有过多考虑<code>SEO</code>优化，如果手动设置文章关键词和描述，显然不太明智，当然了你完全可以使用插件来帮助你完成，比如<code>All in one seo</code>，但是<code>Wordpress</code>有个原则是能用代码实现的就尽量不用插件，可避免过多的消耗资源和影响站点速度。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><pre><code>//自动关键词与描述
function meta_SEO() {
global $post;
$output = &apos;&apos;;
if (is_single()){//如果是文章页
$keywords = &apos;&apos;; 
$description = &apos;&apos;;
if ($post-&gt;post_excerpt) {//如果文章摘要存在就以文章摘要为描述
$description = $post-&gt;post_excerpt;
$description = str_replace(&quot;\r\n&quot;,&quot;&quot;,$description);
$description = str_replace(&quot;\n&quot;,&quot;&quot;,$description);
$description = str_replace(&quot;\&quot;&quot;,&quot;&apos;&quot;,$description);
$description .= &apos;...&apos;;
} else {//如果文章摘要不存在就截断文章前200字为描述
$description = utf8Substr(strip_tags($post-&gt;post_content),0,200);
$description = str_replace(&quot;\r\n&quot;,&quot;&quot;,$description);
$description = str_replace(&quot;\n&quot;,&quot;&quot;,$description);
$description = str_replace(&quot;\&quot;&quot;,&quot;&apos;&quot;,$description);
$description .= &apos;...&apos;;
} 
$tags = wp_get_post_tags($post-&gt;ID);//取文章标签
foreach ($tags as $tag ) {
$keywordarray[] = $tag-&gt;name;
}
//以文章标签为关键字
$keywords = implode(&apos;,&apos;,array_unique((array)$keywordarray));
} else if (is_category()){
$description = strip_tags(trim(category_description()));
$keywords = single_cat_title(&apos;&apos;, false);
}else {//如果不是文章页、分类页
$keywords = &apos;WordPress,wordpress主题,wordpress插件,WordPress开发,代码,前端,建站&apos;; //在引号间写入你博客的关键字用,断开
$description = &apos;一个有关WordPress技巧与前端开发知识的个人博客，以分享、研究探讨WordPress技巧为主要内容，博主乃WordPress极客一枚&apos;;//在引号间写入你博客的简单描述，不要过200字
}
//输出关键字
$output .= &apos;&apos; . &quot;\n&quot;;
$output .= &apos;&apos; . &quot;\n&quot;;
//输出描述
echo &quot;$output&quot;;
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>WordPress、Typecho等博客批量修改文章图片和文件链接地址</title>
    <url>/1746/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们有时候换博客域名或者<code>CDN</code>图片地址后，需要大量修改所有文章的引用图片链接和一些文件链接地址，手动修改又麻烦，这里就说一下通过<code>phpMyAdmin</code>工具快速修改数据库文章图片，文件链接地址。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p><img src="https://www.southcat.net/usr/picture/typelianj.png" alt="请输入图片描述" title="请输入图片描述"><br>如图所示，用<code>phpMyAdmin</code>进入<code>typecho</code>数据库后，选中<code>typecho_contents</code>文章那个表，然后点上面的搜索，选择查找和替换，输入之前的图片或者文件地址和之后的地址，字段选择<code>text</code>，确认后执行即可批量修改。</p>
<p>同样的对于<code>wordpress</code>来说，进入<code>wordpress</code>数据库后，选中<code>wp_posts</code>文章那个表，然后点上面的搜索，选择查找和替换，输入之前的图片或者文件地址和之后的地址，字段选择<code>post_content</code>，确认后执行即可批量修改。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Windows系统各版本最新KMS GVLK列表，带一键激活Win脚本</title>
    <url>/2313/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>KMS</code>就不介绍了，激活<code>Windows</code>系统用的，不需要花钱即可使用正版授权，这里分享下各<code>Windows</code>版本最新<code>KMS GVLK</code>，并提供<code>KMS</code>服务器和<code>KMS</code>激活<code>Windows</code>一键脚本供同学们激活使用。</p>
<h2 id="激活方法"><a href="#激活方法" class="headerlink" title="激活方法"></a>激活方法</h2><pre><code>KMS服务器：kms.southcat.net，由萌咖大佬提供
KMS激活Win脚本地址：https://www.southcat.net/kms/</code></pre><p><strong>1、手动激活</strong></p>
<pre><code>#使用Win+R，输入CMD并打开命令窗口，依次输入：
安装密钥：slmgr /ipk [密钥]
设置激活：slmgr /skms kms.southcat.net
激活产品：slmgr /ato


1、先访问脚本生成地址：https://www.southcat.net/kms/
2、再根据自己的系统生成激活脚本，然后右键使用管理员身份运行激活即可。</code></pre><h2 id="KMS-GVLK列表"><a href="#KMS-GVLK列表" class="headerlink" title="KMS GVLK列表"></a>KMS GVLK列表</h2><pre><code>Windows Server 2019 ARM64 : GRFBW-QNDC4-6QBHG-CCK3B-2PR88
Windows Server 2019 Azure Core : FDNH6-VW9RW-BXPJ7-4XTYG-239TB
Windows Server 2019 Datacenter : WMDGN-G9PQG-XVVXX-R3X43-63DFG
Windows Server 2019 Essentials : WVDHN-86M7X-466P6-VHXV7-YY726
Windows Server 2019 Standard : N69G4-B89J2-4G8F4-WWYCC-J464C
Windows Server 2019 Datacenter (Semi-Annual Channel v.1809) : 6NMRW-2C8FM-D24W7-TQWMY-CWH2D
Windows Server 2019 Standard (Semi-Annual Channel v.1809) : N2KJX-J94YW-TQVFB-DG9YT-724CC
Windows Server 2019 Standard [Preview] : MFY9F-XBN2F-TYFMP-CCV49-RMYVH
Windows Server 2019 Datacenter [Preview] : 6XBNX-4JQGW-QX6QG-74P76-72V67
Windows 10 Enterprise LTSC 2019 : M7XTQ-FN8P6-TTKYV-9D4CC-J462D
Windows 10 Enterprise LTSC 2019 N : 92NFX-8DJQP-P6BBQ-THF9C-7CG2H
Windows 10 Enterprise G : YYVX9-NTFWV-6MDM3-9PT4T-4M68B
Windows 10 Enterprise G N : 44RPN-FTY23-9VTTB-MP9BX-T84FV
Windows 10 Enterprise 2016 LTSB : DCPHK-NFMTC-H88MJ-PFHPY-QJ4BJ
Windows 10 Enterprise 2016 LTSB N : QFFDN-GRT3P-VKWWX-X7T3R-8B639
Windows 10 Home / Core : TX9XD-98N7V-6WMQ6-BX7FG-H8Q99
Windows 10 Home / Core Country Specific : PVMJN-6DFY6-9CCP6-7BKTT-D3WVR
Windows 10 Home / Core N : 3KHY7-WNT83-DGQKR-F7HPR-844BM
Windows 10 Home / Core Single Language : 7HNRX-D7KGG-3K4RQ-4WPJ4-YTDFH
Windows 10 Education : NW6C2-QMPVW-D7KKK-3GKT6-VCFB2
Windows 10 Education N : 2WH4N-8QGBV-H22JP-CT43Q-MDWWJ
Windows 10 Enterprise : NPPR9-FWDCX-D2C8J-H872K-2YT43
Windows 10 Enterprise [Preview] : QNMXX-GCD3W-TCCT4-872RV-G6P4J
Windows 10 Enterprise S : H76BG-QBNM7-73XY9-V6W2T-684BJ
Windows 10 Enterprise 2015 LTSB : WNMTR-4C88C-JK8YV-HQ7T2-76DF9
Windows 10 Enterprise 2015 LTSB N : 2F77B-TNFGY-69QQF-B8YKP-D69TJ
Windows 10 Enterprise N : DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4
Windows 10 Enterprise S N : X4R4B-NV6WD-PKTVK-F98BH-4C2J8
Windows 10 Professional Workstation : NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J
Windows 10 Professional Workstation N : 9FNHH-K3HBT-3W4TD-6383H-6XYWF
Windows 10 Professional : W269N-WFGWX-YVC9B-4J6C9-T83GX
Windows 10 Professional Education : 6TP4R-GNPTD-KYYHQ-7B7DP-J447Y
Windows 10 Professional Education N : YVWGF-BXNMC-HTQYQ-CPQ99-66QFC
Windows 10 Professional N : MH37W-N47XK-V7XM9-C7227-GCQG9
Windows 10 Professional [Preview] : XQHPH-N4D9W-M8P96-DPDFP-TMVPY
Windows 10 Professional WMC [Pre-Release] : NKPM6-TCVPT-3HRFX-Q4H9B-QJ34Y
Windows 10 Enterprise for Virtual Desktops : CPWHC-NT2C7-VYW78-DHDB2-PG3GK
Windows 10 Remote Server : 7NBT4-WGBQX-MP4H7-QXFF8-YP3KX
Windows 10 S (Lean) : NBTWJ-3DR69-3C4V8-C26MC-GQ9M6
Windows 10 IoT Core [Pre-Release] : 7NX88-X6YM3-9Q3YT-CCGBF-KBVQF
Windows 10 Core Connected [Pre-Release] : DJMYQ-WN6HG-YJ2YX-82JDB-CWFCW
Windows 10 Core Connected N [Pre-Release] : JQNT7-W63G4-WX4QX-RD9M9-6CPKM
Windows 10 Core Connected Single Language [Pre-Release] : QQMNF-GPVQ6-BFXGG-GWRCX-7XKT7
Windows 10 Core Connected Country Specific [Pre-Release] : FTNXM-J4RGP-MYQCV-RVM8R-TVH24
Windows 10 Professional S [Pre-Release] : 3NF4D-GF9GY-63VKH-QRC3V-7QW8P
Windows 10 Professional S N [Pre-Release] : KNDJ3-GVHWT-3TV4V-36K8Y-PR4PF
Windows 10 Professional Student [Pre-Release] : YNXW3-HV3VB-Y83VG-KPBXM-6VH3Q
Windows 10 Professional Student N [Pre-Release] : 8G9XJ-GN6PJ-GW787-MVV7G-GMR99
Windows 7 Enterprise : 33PXH-7Y6KF-2VJC9-XBBR8-HVTHH
Windows 7 Enterprise E : C29WB-22CC8-VJ326-GHFJW-H9DH4
Windows 7 Enterprise N : YDRBP-3D83W-TY26F-D46B2-XCKRJ
Windows 7 Professional : FJ82H-XT6CR-J8D7P-XQJJ2-GPDD4
Windows 7 Professional E : W82YF-2Q76Y-63HXB-FGJG9-GF7QX
Windows 7 Professional N : MRPKT-YTG23-K7D7T-X2JMM-QY7MG
Windows 7 Embedded POSReady : YBYF6-BHCR3-JPKRB-CDW7B-F9BK4
Windows 7 Embedded Standard : XGY72-BRBBT-FF8MH-2GG8H-W7KCW
Windows 7 ThinPC : 73KQT-CD9G6-K7TQG-66MRP-CQ22C
Windows 8 Core / Server 2012 : BN3D2-R7TKB-3YPBD-8DRP2-27GG4
Windows 8 Core / Server 2012 Country Specific : 4K36P-JN4VD-GDC6V-KDT89-DYFKP
Windows 8 Core / Server 2012 N : 8N2M2-HWPGY-7PGT9-HGDD8-GVGGY
Windows 8 Core / Server 2012 Single Language : 2WN2H-YGCQR-KFX6K-CD6TF-84YXQ
Windows 8 Professional WMC : GNBB8-YVD74-QJHX6-27H4K-8QHDG
Windows 8 Embedded Industry Professional : RYXVT-BNQG7-VD29F-DBMRY-HT73M
Windows 8 Embedded Industry Enterprise : NKB3R-R2F8T-3XCDP-7Q2KW-XWYQ2
Windows 8 Enterprise : 32JNW-9KQ84-P47T8-D8GGY-CWCK7
Windows 8 Enterprise N : JMNMF-RHW7P-DMY6X-RF3DR-X2BQT
Windows 8 Professional : NG4HW-VH26C-733KW-K6F98-J8CK4
Windows 8 Professional N : XCVCF-2NXM9-723PB-MHCB7-2RYQQ
Windows 8.1 Core : M9Q9P-WNJJT-6PXPY-DWX8H-6XWKK
Windows 8.1 Core ARM64 : XYTND-K6QKT-K2MRH-66RTM-43JKP
Windows 8.1 Core Country Specific : NCTT7-2RGK8-WMHRF-RY7YQ-JTXG3
Windows 8.1 Core N : 7B9N3-D94CG-YTVHR-QBPX3-RJP64
Windows 8.1 Core Single Language : BB6NG-PQ82V-VRDPW-8XVD2-V8P66
Windows 8.1 Professional Student : MX3RK-9HNGX-K3QKC-6PJ3F-W8D7B
Windows 8.1 Professional Student N : TNFGH-2R6PB-8XM3K-QYHX2-J4296
Windows 8.1 Professional WMC : 789NJ-TQK6T-6XTH8-J39CJ-J8D3P
Windows 8.1 Core Connected : 3PY8R-QHNP9-W7XQD-G6DPH-3J2C9
Windows 8.1 Core Connected Country Specific : R962J-37N87-9VVK2-WJ74P-XTMHR
Windows 8.1 Core Connected N : Q6HTR-N24GM-PMJFP-69CD8-2GXKR
Windows 8.1 Core Connected Single Language : KF37N-VDV38-GRRTV-XH8X6-6F3BB
Windows 8.1 Enterprise : MHF9N-XY6XB-WVXMC-BTDCT-MKKG7
Windows 8.1 Enterprise N : TT4HM-HN7YT-62K67-RGRQJ-JFFXW
Windows 8.1 Professional : GCRJD-8NW9H-F2CDX-CCM8D-9D6T9
Windows 8.1 Professional N : HMCNV-VVBFX-7HMBH-CTY9B-B4FXY
Windows 8.1 Embedded Industry Professional : NMMPB-38DD4-R2823-62W8D-VXKJB
Windows 8.1 Embedded Industry Automotive : VHXM3-NR6FT-RY6RT-CK882-KW2CJ
Windows 8.1 Embedded Industry Enterprise : FNFKF-PWTVT-9RC8H-32HB2-JB34X
Windows 8.1 Enterprise [Preview] : 2MP7K-98NK8-WPVF3-Q2WDG-VMD98
Windows 8.1 Professional (Blue) [Preview] : MTWNQ-CKDHJ-3HXW9-Q2PFX-WB2HQ
Windows 8 Professional WMC [RC] : MY4N9-TGH34-4X4VY-8FG2T-RRDPV
Windows 8.x [Preview] : MPWP3-DXNP9-BRD79-W8WFP-3YFJ6
Windows Server Next HI [Preview] : 7VX4N-3VDHQ-VYGHB-JXJVP-9QB26
Windows Server 2008 Web : WYR28-R7TFJ-3X2YQ-YCY4H-M249D
Windows Server 2008 HPC Edition : RCTX3-KWVHP-BR6TB-RB6DM-6X7HP
Windows Server 2008 Standard : TM24T-X9RMF-VWXK6-X8JC9-BFGM2
Windows Server 2008 Standard without Hyper-V : W7VD6-7JFBR-RX26B-YKQ3Y-6FFFJ
Windows Server 2008 Enterprise : YQGMW-MPWTJ-34KDK-48M3W-X4Q6V
Windows Server 2008 Enterprise without Hyper-V : 39BXF-X8Q23-P2WWT-38T2F-G3FPG
Windows Server 2008 Datacenter : 7M67G-PC374-GR742-YH8V4-TCBY3
Windows Server 2008 Datacenter without Hyper-V : 22XQ2-VRXRG-P8D42-K34TD-G3QQC
Windows Server 2008 for Itanium Systems : 4DWFP-JF3DJ-B7DTH-78FJB-PDRHK
Windows MultiPoint Server 2010 : 736RG-XDKJK-V34PF-BHK87-J6X3K
Windows Server 2008 R2 Web : 6TPJF-RBVHG-WBW2R-86QPH-6RTM4
Windows Server 2008 R2 HPC Edition : TT8MH-CG224-D3D7Q-498W2-9QCTX
Windows Server 2008 R2 Standard : YC6KT-GKW9T-YTKYR-T4X34-R7VHC
Windows Server 2008 R2 Enterprise : 489J6-VHDMP-X63PK-3K798-CPX3Y
Windows Server 2008 R2 Datacenter : 74YFP-3QFB3-KQT8W-PMXWJ-7M648
Windows Server 2008 R2 for Itanium Systems : GT63C-RJFQ3-4GMB6-BRFB9-CB83V
Windows Server 2012 Datacenter : 48HP8-DN98B-MYWDG-T2DCC-8W83P
Windows Server 2012 MultiPoint Premium : XNH6W-2V9GX-RGJ4K-Y8X6F-QGJ2G
Windows Server 2012 MultiPoint Standard : HM7DN-YVMH3-46JC3-XYTG7-CYQJJ
Windows Server 2012 Standard : XC9B7-NBPP2-83J2H-RHMBY-92BT4
Windows Server 2012 R2 Cloud Storage : 3NPTF-33KPT-GGBPR-YX76B-39KDD
Windows Server 2012 R2 Datacenter : W3GGN-FT8W3-Y4M27-J84CP-Q3VJ9
Windows Server 2012 R2 Essentials : KNC87-3J2TX-XB4WP-VCPJV-M4FWM
Windows Server 2012 R2 Standard : D2N9P-3P6X9-2R39C-7RTCD-MDVJX
Windows Server 2016 Azure Core : VP34G-4NPPG-79JTQ-864T4-R3MQX
Windows Server 2016 Cloud Storage : QN4C6-GBJD2-FB422-GHWJK-GJG2R
Windows Server 2016 Datacenter : CB7KF-BWN84-R7R2Y-793K2-8XDDG
Windows Server 2016 Essentials : JCKRF-N37P4-C2D82-9YXRT-4M63B
Windows Server 2016 Standard : WC2BQ-8NRM3-FDDYY-2BFGV-KHKQY
Windows Server 2016 ARM64 : K9FYF-G6NCK-73M32-XMVPY-F9DRR
Windows Server 2016 Datacenter (Semi-Annual Channel v.1803) : 2HXDN-KRXHB-GPYC7-YCKFJ-7FVDG
Windows Server 2016 Standard (Semi-Annual Channel v.1803) : PTXN8-JFHJM-4WC78-MPCBR-9W4KR
Windows Server 2016 Datacenter [Preview] : VRDD2-NVGDP-K7QG8-69BR4-TVFHB
Windows Vista Business : YFKBB-PQJJV-G996G-VWGXY-2V3X8
Windows Vista Business N : HMBQG-8H2RH-C77VX-27R82-VMQBT
Windows Vista Enterprise : VKK3X-68KWM-X2YGT-QR4M6-4BWMV
Windows Vista Enterprise N : VTC42-BM838-43QHV-84HX6-XJXKV
Windows Vista Business [Preview 1] : XQYF4-QVCMY-YXQRD-9QPV8-3YP9V
Windows Vista Business [Preview 2] : YVT36-YVCP2-J97GQ-7T22R-RWV8P
Windows Vista Business N [Preview] : HGBJ9-RWD6M-6HDGW-6T2XD-JQ66F
Windows Vista Enterprise [Preview 1] : 3JHG3-Y66GP-B7F3K-JFVX2-VBH7K
Windows Vista Enterprise [Beta-2 build 5384] : MF9PG-RQK7R-26BPJ-TWFYK-RHXCM
Windows Longhorn Web [Preview] : MDRCM-4WKCW-J93FF-J9Q48-M6KBB
Windows Longhorn Standard : Q37JX-P3HHB-GKRH2-PDBKG-GGXPW
Windows Longhorn Enterprise : 7KYMQ-R788Q-4RF69-KTWKM-92PFJ
Windows Longhorn Datacenter [Preview] : HR8VD-7DHG2-48378-M9D73-28F4T
Windows Longhorn for Itanium Systems [Preview] : CWV9H-PHGPW-V93WV-QBQV9-8V336</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>WordPress使用Ajax实现页面无刷新提交评论</title>
    <url>/1595/</url>
    <content><![CDATA[<p><strong>说明：</strong>现在很多主题都自带<code>Ajax</code>评论，<code>Ajax</code>评论的好处是不用刷新整个页面即可提交留言，给人感觉很不错，没有的可以用一下。</p>
<p><strong>要求：</strong><code>WordPress</code>版本4.4及以上。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>1、下载代码：ajax-comment-for-4.4+.zip，并将代码解压到主题根目录，修改主题目录下的<code>functions.php</code>，添加如下代码进行载入：</p>
<pre><code>require(&apos;ajax-comment/main.php&apos;);


__list = &apos;comment-list&apos;;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>wordpress使用CDN后获取访客真实IP</title>
    <url>/1485/</url>
    <content><![CDATA[<p><strong>说明：</strong>由于用了百度云加速，所以在看wordpress后台评论的时候看到的是CDN的IP而不是访客真是IP，这其实无关紧要。但是最近Limit Login Attempts插件给我发邮件有人试图暴力破解后台密码的时候显示的IP也是CDN的IP，封IP比较麻烦，于是搜索了下找到了解决办法，参考自百度百科的教程。<br>1.使用<code>WinSCP</code>等编辑软件打开<code>wordpress</code>中的<code>wp-config.php</code>文件;<br>2.在<code>wp-config.php</code>文件的第一个<code>&lt;!--?php</code>标记后面粘贴下面的代码:</p>
<pre><code>if(isset($_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]))
{
$list = explode(‘,’,$_SERVER[&apos;HTTP_X_FORWARDED_FOR&apos;]);
$_SERVER[&apos;REMOTE_ADDR&apos;] = $list[0];
}</code></pre><p>3.保存修改后的文件;<br>4.更新您<code>wordpress</code>目录中的<code>wp-config.php</code>文件!</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>WordPress博客后台自动更新后，还一直提示更新的解决方法</title>
    <url>/1876/</url>
    <content><![CDATA[<p><strong>说明：</strong>刚刚将一个自己长时间不管的<code>wordpress</code>博客自动更新到了<code>4.9</code>版本后，发现后台还是一直提示更新，仔细看是因为语言翻译的问题，去翻译文件目录那里看了下，文件是替换成功了，猜想估计是权限问题，读取不了，就找了下方法，发现和之前提到的安装<code>h5ai</code>网盘后读取不出文件的问题是一样的，就是<code>scandir</code>函数被禁用了，这里说下方法。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>只需要修改<code>php.ini</code>文件就可以了，以军哥<code>lnmp</code>为例，文件位置<code>/usr/local/php/etc</code>。</p>
<pre><code>disable_functions=passthru,exec,system,chroot,scandir,...</code></pre><p>删掉<code>scandir,</code>字样，再重启<code>php</code>即可。</p>
<pre><code>/etc/init.d/php-fpm restart</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>WordPress博客网站常用Robots.txt规则</title>
    <url>/1748/</url>
    <content><![CDATA[<p><strong>说明：</strong>我们有时候页面有些内容由于某些因素，都要防止被搜索引擎收录，而禁止搜索引擎收录比较简单的办法是在<code>Robots.txt</code>里设置规则，<code>Robots</code>协议（也称为爬虫协议、机器人协议等）的全称是“网络爬虫排除标准”（<code>Robots Exclusion Protocol</code>），网站通过<code>Robots</code>协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。这里说下方法。</p>
<p>这里以<code>WordPress</code>博客网站为例，在网站根目录<code>Robots.txt</code>里添加如下规则：</p>
<pre><code>User-agent: *
Disallow: /wp-admin/
Disallow: /wp-content/
Disallow: /wp-includes/
Disallow: /*/comment-page-*
Disallow: /*?replytocom=*
Disallow: /category/*/page/
Disallow: /tag/*/page/
Disallow: /*/trackback
Disallow: /feed
Disallow: /*/feed
Disallow: /comments/feed
Disallow: /?s=*
Disallow: /*/?s=*\
Disallow: /attachment/</code></pre><p>下面分别解释一下各项的作用：</p>
<pre><code>1、Disallow: /wp-admin/、Disallow: /wp-content/和Disallow: /wp-includes/
用于告诉搜索引擎不要抓取后台程序文件页面。

2、Disallow: /*/comment-page-*和Disallow: /*?replytocom=*
禁止搜索引擎抓取评论分页等相关链接。

3、Disallow: /category/*/page/和Disallow: /tag/*/page/
禁止搜索引擎抓取收录分类和标签的分页。

4、Disallow: /*/trackback
禁止搜索引擎抓取收录trackback等垃圾信息

5、Disallow: /feed、Disallow: /*/feed和Disallow: /comments/feed
禁止搜索引擎抓取收录feed链接，feed只用于订阅本站，与搜索引擎无关。

6、Disallow: /?s=*和Disallow: /*/?s=*\
禁止搜索引擎抓取站内搜索结果

7、Disallow: /attachment/
禁止搜索引擎抓取附件页面，比如毫无意义的图片附件页面。</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>WordPress博客查看搜索引擎蜘蛛来访记录的方法</title>
    <url>/1842/</url>
    <content><![CDATA[<p><strong>说明：</strong>很多人想知道自己的博客网站经常有哪些蜘蛛来过，来过多少次，对于这个问题，通常都会用插件来解决，其实除了插件我们还可以通过使用代码的方法来查看蜘蛛的来访记录，这里就说下方法，本文的代码是从网上找的，然后自己就增加了几个主流的搜索引擎蜘蛛。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>首先将下列代码放入主题目录下<code>functions.php</code>文件。</p>
<pre><code>//统计蜘蛛
function get_naps_bot(){
$useragent = strtolower($_SERVER[&apos;HTTP_USER_AGENT&apos;]);
if (strpos($useragent, &apos;Googlebot&apos;) !== false){
return &apos;Googlebot&apos;;
}
if (strpos($useragent, &apos;msnbot&apos;) !== false){
return &apos;MSNbot&apos;;
}
if (strpos($useragent, &apos;slurp&apos;) !== false){
return &apos;Yahoobot&apos;;
}
if (strpos($useragent, &apos;Baiduspider&apos;) !== false){
return &apos;Baiduspider&apos;;
}
if (strpos($useragent, &apos;sohu-search&apos;) !== false){
return &apos;Sohubot&apos;;
}
if (strpos($useragent, &apos;360Spider&apos;) !== false){
return &apos;360Spider&apos;;
}
if (strpos($useragent, &apos;Sosospider&apos;) !== false){
return &apos;Sosospider&apos;;
}
if (strpos($useragent, &apos;bingbot&apos;) !== false){
return &apos;bingbot&apos;;
}
if (strpos($useragent, &apos;Sogouspider&apos;) !== false){
return &apos;Sogouspider&apos;;
}
return false;
}
function nowtime(){
date_default_timezone_set(&apos;Asia/Shanghai&apos;);
$date=date(&quot;Y-m-d.G:i:s&quot;);
return $date;
}
$searchbot = get_naps_bot();
if ($searchbot) {
$tlc_thispage = addslashes($_SERVER[&apos;HTTP_USER_AGENT&apos;]);
$url=$_SERVER[&apos;HTTP_REFERER&apos;];
$file=&quot;robotslogs.txt&quot;;
$time=nowtime();
$data=fopen($file,&quot;a&quot;);
$PR=&quot;$_SERVER[REQUEST_URI]&quot;;
fwrite($data,&quot;Time:$time robot:$searchbot URL:$tlc_thispage\n page:$PR\r\n&quot;);
fclose($data);
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>WordPress显示网站已运行时间</title>
    <url>/1482/</url>
    <content><![CDATA[<p>在网站上显示已运行多少时间是一些站长需要的功能，只需要加一段代码即可实现。代码来自六特网站，本站使用下面第三段。代码贴到footer.php或者右侧html小工具。</p>
<p><strong>1.显示的是运行的 天/小时/分/秒</strong></p>
<pre><code>&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;&lt;script&gt;// &lt;![CDATA[
var now = new Date(); function createtime(){ var grt= new Date(&quot;11/25/2013 21:51:00&quot;);//此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 ){hnum = &quot;0&quot; + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = &quot;0&quot; + mnum;} seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 ){snum = &quot;0&quot; + snum;} document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行&quot;+dnum+&quot;天&quot;; document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot;小时&quot; + mnum + &quot;分&quot; + snum + &quot;秒&quot;; } setInterval(&quot;createtime()&quot;,250);
// ]]&gt;&lt;/script&gt;</code></pre><p><strong>2.显示的是运行的 天</strong></p>
<pre><code>本站已安全运行了:&lt;span class=&quot;smalltxt&quot;&gt;&lt;script&gt;// &lt;![CDATA[
BirthDay=new Date(&quot;11 25,2013&quot;);
today=new Date();
timeold=(today.getTime()-BirthDay.getTime());
sectimeold=timeold/1000
secondsold=Math.floor(sectimeold);
msPerDay=24*60*60*1000
e_daysold=timeold/msPerDay
daysold=Math.floor(e_daysold);
document.write(&quot;&lt;font color=red&gt;&quot;+daysold+&quot;&lt;/font&gt;天 !&quot;);
// ]]&gt;&lt;/script&gt;&lt;/span&gt;


&lt;span id=&quot;sitetime&quot;&gt;&lt;/span&gt;&lt;script&gt;// &lt;![CDATA[
function siteTime(){ window.setTimeout(&quot;siteTime()&quot;, 1000); var seconds = 1000 var minutes = seconds * 60 var hours = minutes * 60 var days = hours * 24 var years = days * 365 var today = new Date() var todayYear = today.getFullYear() var todayMonth = today.getMonth() var todayDate = today.getDate() var todayHour = today.getHours() var todayMinute = today.getMinutes() var todaySecond = today.getSeconds() /* Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳) year - 作为date对象的年份，为4位年份值 month - 0-11之间的整数，做为date对象的月份 day - 1-31之间的整数，做为date对象的天数 hours - 0(午夜24点)-23之间的整数，做为date对象的小时数 minutes - 0-59之间的整数，做为date对象的分钟数 seconds - 0-59之间的整数，做为date对象的秒数 microseconds - 0-999之间的整数，做为date对象的毫秒数 */ var t1 = Date.UTC(2013,11,25,21,30,20) var t2 = Date.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond) var diff = t2-t1 var diffYears = Math.floor(diff/years) var diffDays = Math.floor((diff/days)-diffYears*365) var diffHours = Math.floor((diff-(diffYears*365+diffDays)*days)/hours) var diffMinutes = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours)/minutes) var diffSeconds = Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds) document.getElementById(&quot;sitetime&quot;).innerHTML=&quot; 已运行&quot;+diffYears+&quot; 年 &quot;+diffDays+&quot; 天 &quot;+diffHours+&quot; 小时 &quot;+diffMinutes+&quot; 分钟 &quot;+diffSeconds+&quot; 秒&quot; } siteTime()
// ]]&gt;&lt;/script&gt;</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>WordPress设置登陆用户和未登陆用户显示不同菜单</title>
    <url>/1476/</url>
    <content><![CDATA[<p><strong>说明：</strong>一般来说网站头部有一个导航菜单，有时候由于某些因素我们需要给登陆和未登陆用户分别显示不同的菜单项，这里说下方法。<br><strong>1、创建两个菜单</strong><br>先进入<code>WordPress</code>后台-外观-菜单中，创建两个菜单，菜单名称分别设置成：已登陆和未登录，并给这两个菜单分配不同的菜单项。</p>
<p><strong>2、确定菜单位置名称</strong><br>开始下一步前，我们需要知道菜单位置名称，也就是<code>theme_location</code>参数的值，用文本编辑器打开当前主题目录中的<code>header.php</code>，搜索<code>wp_nav_menu</code>一般都能找到这个值，代码一般长这样：</p>
<pre><code>// theme_location后面的 top 就是我们要找的值
wp_nav_menu( array( &apos;theme_location&apos; =&gt; &apos;top&apos;, &apos;menu_id&apos; =&gt; &apos;top-menu&apos;) );</code></pre><p><strong>3、添加执行代码</strong><br>最后，在当前主题的<code>functions.php</code>添加以下代码即可：</p>
<pre><code>function ludou_nav_menu_args($args = &apos;&apos;) {
   // 下面的top改成第2步获取到的菜单位置名称
   if ($args[&apos;theme_location&apos;] == &apos;top&apos;) {
      if (is_user_logged_in()) {
         $args[&apos;menu&apos;] = &apos;已登陆&apos;;
      }
      else {
         $args[&apos;menu&apos;] = &apos;未登录&apos;;
      }
   }

   return $args;
}

add_filter(&apos;wp_nav_menu_args&apos;, &apos;ludou_nav_menu_args&apos;);</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>WordPress设置评论间隔时间，防止刷垃圾评论内容</title>
    <url>/1833/</url>
    <content><![CDATA[<p><strong>说明：</strong>相信很多使用<code>WordPress</code>的博主来说，或多或少的都被垃圾评论骚扰过，一大堆广告评论，很烦，当然也有一些插件可以阻止垃圾评论，不过还是那句话，能不用插件就不用，毕竟插件越多，博客打开速度就越慢，所以尽量使用代码解决，这里就讲个很有效的方法，设置评论间隔时间即可，虽然不能完全做到防垃圾评论，但还是有很大的效果的，有兴趣的可以试试。</p>
<h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><pre><code>add_filter(&apos;comment_flood_filter&apos;, &apos;suren_comment_flood_filter&apos;, 10, 3);
function suren_comment_flood_filter($flood_control, $time_last, $time_new)
{
$seconds = 600;
if(($time_new - $time_last) &lt; $seconds)
{
return true;
}
else
{
return false;
}
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>wp_enqueue_style 设置不当引起的css cache无法及时更新</title>
    <url>/747/</url>
    <content><![CDATA[<h2 id="语法结构"><a href="#语法结构" class="headerlink" title="语法结构"></a>语法结构</h2><pre><code>&lt;?php wp_enqueue_style($handle, $src, $deps, $ver, $media); ?&gt;</code></pre><blockquote>
<p>$handle – 调用的样式文件名称，唯一性，因此不能和其它css文件命名相同。</p>
<p>$src – css文件的路径（即url），不要直接使用域名url，要使用路径函数，如get_template_directory_uri()来获取主题目录中的样式文件。</p>
<p>$deps – 依赖关系，如果丢失某些其他样式文件将导致你的样式表将无法正常工作，你可以使用该参数设置“依赖关系”。，非必需。</p>
<p>$ver – 加载的css文件的版本号，可以使用主题的版本号或随意自定义一个，设置为null则不使用版本号。默认为false，使用WordPress的版本号。</p>
<p>$media – 是指CSS的媒体类型，比如“screen”或“handheld”或“print”。如果不知道是否需要，就留空。默认为“all”。</p>
</blockquote>
<p>从上面关于这个函数的结构可以看出函数通过$ver来进行css文件的版本号，默认使用的是Wordpress版本，这就会导致浏览器缓存css文件的版本号是你当前wp的版本号， 例如style.css?ver=5.4 这样缓存之后即使你后台再怎么更新css文件 你wp不进行更新的话你的样式表文件永远都是使用5.4这个版本你的修改永远不会生效</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>将下列代码加入 funshion.php文件中</p>
<pre><code>function wpdaxue_remove_cssjs_ver( $src ) {
    if( strpos( $src, &apos;ver=&apos; ) )
        $src = remove_query_arg( &apos;ver&apos;, $src );
    return $src;
}
add_filter( &apos;style_loader_src&apos;, &apos;wpdaxue_remove_cssjs_ver&apos;, 999 );
add_filter( &apos;script_loader_src&apos;, &apos;wpdaxue_remove_cssjs_ver&apos;, 999 );</code></pre><p>第二种 设置$ver参数的值 设置为null即可将这个参数忽略掉 引用的链接不会附带版本信息</p>
<p><img src="https://southcat.net/wp-content/uploads/2020/04/image.png" alt=""></p>
<p>好评phpstorm</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>X-Prober/雅黑 PHP探针一键安装脚本 for Debian/Ubuntu</title>
    <url>/1979/</url>
    <content><![CDATA[<p><strong>说明：</strong>探针可以实时查看服务器硬盘资源、内存占用、网卡流量、系统负载、服务器时间等信息，以及服务器<code>IP</code>地址，<code>Web</code>服务器环境监测，<code>php</code>等信息，一般最火的就是雅黑探针，博主今天接触到<code>X-Prober</code>探针也不错，挺好看的，就瞎拼了个雅黑/<code>X-Prober PHP</code>探针一键脚本，差不多<code>1</code>分钟就安装完成，对于有闲置<code>VPS</code>的可以试试，如果你的服务器已经有<code>WEB</code>环境，直接将探针丢进根目录就可以了。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><strong>雅黑探针：</strong><br><img src="https://www.southcat.net/usr/picture/yhx_tz(1).png" alt="请输入图片描述" title="请输入图片描述"><br><strong>X-Prober探针：</strong><br><img src="https://www.southcat.net/usr/picture/yhx_tz(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>系统要求：</strong>支持<code>Debian 6</code>、<code>7</code>、<code>8</code>，<code>Ubuntu 12</code>、<code>14</code>、<code>16</code>。且为纯净系统，无<code>WEB</code>环境。</p>
<p>运行以下命令：</p>
<pre><code>wget -N --no-check-certificate https://www.southcat.net/usr/shell/tz_install.sh &amp;&amp; bash tz_install.sh</code></pre><p>会出现以下选项：<br><img src="https://www.southcat.net/usr/picture/yhx_tz(3).png" alt="请输入图片描述" title="请输入图片描述"><br>请输入<code>1</code>或<code>2</code>进行安装，安装过程中，会要你输入域名或<code>IP</code>，如果你输入域名，请先将域名解析到<code>VPS</code>服务器。</p>
<p>安装完成后进入<code>http://**/tz.php</code>进行查看。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Xshell 6官方永久免费版，可解决评估期已过的提示问题</title>
    <url>/2321/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>Xshell</code>是一个功能强大的<code>SSH</code>客户端，支持<code>Telnet</code>、<code>Rlogin</code>、<code>SSH</code>、<code>SFTP</code>、<code>Serial</code>等协议，用的人很多，一般我们从网上下载的正版很多是商业版，试用期就<code>1</code>个月，到期后会提示评估期已过，然后购买许可证才能用，这时候估计很多人会去找破解版，很多破解版很容易失效，还不安全。不过还好的是，<code>Xshell 6</code>官方还提供了免费的教育版，功能上和商业版是差不多的，足够我们使用了，这里就提一下，也许还有一些人不知道。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>官方版本下载地址：点击访问，目前提供<code>Xshell 6</code>和<code>Xftp 6</code>的教育免费版。</p>
<p>进去后，点击<code>Download</code>，填入你的邮箱等信息，然后直接去邮箱获取下载地址，最后下载安装即可。</p>
<p>如果你之前已经安装过<code>Xshell</code>，但提示评估期已过，那么下载教育版后，直接覆盖安装更新就好了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Yosoro：一款萌萌哒的Markdown云笔记软件，支持同步到OneDrive网盘</title>
    <url>/2035/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>Yosoro</code>是一款基于<code>Electron</code>，<code>React</code>打造的<code>Markdown</code>笔记软件，支持<code>macOS</code>，<code>Windows</code>，<code>Linux</code>。可以上传图片并托管在<code>Github</code>，笔记也可以同步到<code>OneDrive</code>网盘，有兴趣的可以试试。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>包含基本的笔记本以及笔记的增删改查，以及废纸篓。</li>
<li>支持<code>Latex</code>数学公式。</li>
<li>文件同步(支持<code>OneDrive</code>)。</li>
<li>图片上传(支持<code>GitHub</code>)。</li>
<li>将注释导出为<code>markdown</code>或<code>html</code>或<code>pdf</code>。</li>
<li>发表文章(支持中)。</li>
</ul>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><pre><code>支持系统：macOS 10.9+、Windows 7+、Linux
Github地址：https://github.com/IceEnd/Yosoro
下载地址：https://github.com/IceEnd/Yosoro/releases</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>yum因被锁定导致无法执行相关操作的解决方法</title>
    <url>/1448/</url>
    <content><![CDATA[<p><strong>说明：</strong>执行<code>yum</code>命令时，提示“<code>Another app is currently holding the yum lock; waiting for it to exit...</code>”等错误字样。这是因为<code>yum</code>被锁定无法使用导致的。</p>
<pre><code>rm -rf /var/run/yum.pid   #删除yum.pid强行解除锁定即可</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>Zdir：一个美观、实用的目录列表程序</title>
    <url>/2208/</url>
    <content><![CDATA[<p><strong>说明：</strong>目前用的比较多的目录列表程序有<code>H5ai</code>、<code>Directory Lister</code>，其中<code>H5ai</code>是最强大的，各种格式图片，电影都支持查看，这里再推荐个小<code>z</code>大佬写的一个目录列表程序<code>Zdir</code>，使用<code>PHP</code>开发，部署很简单。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/Zdir(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Zdir(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>目前小<code>Z</code>更新了许多功能，比如能播放部分格式视频了，查看一些文本，删除文件等等，如果遇到问题或者想添加某些功能的可前往小Z博客进行留言。</p>
<h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><ul>
<li>目录浏览</li>
<li><code>MarkDown</code>文件预览</li>
<li><code>CSS/JavaScript</code>一键复制</li>
<li>查看文件<code>HASH</code></li>
<li>图片预览</li>
<li>文件索引</li>
<li>视频播放（支持<code>.mp4</code>格式和<code>.m3u8</code>）</li>
<li>文本查看器（支持的格式有<code>.txt</code>、<code>.sh</code>、<code>.py</code>、<code>.go</code>、<code>.c</code>、<code>.cpp</code>）</li>
<li>二维码生成</li>
<li>文件删除</li>
<li>已经支持中文（仅在<code>Linux</code>下测试）</li>
</ul>
<h2 id="功能详细说明"><a href="#功能详细说明" class="headerlink" title="功能详细说明"></a>功能详细说明</h2><p><strong>1、MarkDown文件预览</strong><br>如果是<code>MarkDown文件</code>（<code>.md</code>）后面会出现一个小眼睛按钮，点击此按钮可直接预览。<br><img src="https://www.southcat.net/usr/picture/Zdir(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p>如果文件是以<code>readme.md</code>命名，会出现“使用说明”按钮，点击也可以预览，如下截图。<br><img src="https://www.southcat.net/usr/picture/Zdir(4).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>2、链接复制</strong><br>复制按钮会根据文件类型判断，最后返回不同的复制结果，在用于搭建前端库的时候非常有帮助，比如：<br><img src="https://www.southcat.net/usr/picture/Zdir(5).png" alt="请输入图片描述" title="请输入图片描述"></p>
<pre><code>&lt;!--如果复制的是.js文件，返回结果为--&gt;
&lt;script src = &apos;https://libs.xiaoz.top/jquery/2.0.3/jquery-2.0.3.js&apos;&gt;&lt;/script&gt;
&lt;!--如果复制的是.css文件，返回结果为--&gt;
&lt;link rel=&apos;stylesheet&apos; href=&apos;https://libs.xiaoz.top/layer/skin/layer.css&apos;&gt;
&lt;!--如果是图片等文件--&gt;
&lt;img src = &apos;https://libs.xiaoz.top/material/loading/loading0.gif&apos; /&gt;</code></pre><p>其它文件返回文件<code>URL</code>地址。</p>
<p><strong>3、查看文件hash</strong><br>点文件后面的“叹号”按钮，可以计算文件<code>md5</code>和<code>sha1</code>值，验证文件<code>hash</code>值，可避免运营商劫持等风险。<br><img src="https://www.southcat.net/usr/picture/Zdir(6).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>4、图片预览</strong><br>鼠标移动到图片文件会显示图片预览，如下截图。<br><img src="https://www.southcat.net/usr/picture/Zdir(7).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>5、文件索引</strong><br>如果文件太多，查找不太方便，<code>Zdir</code>暂时未实现文件搜索功能，不过通过“文件索引”功能加上“<code>Ctrl + F</code>”，找文件也是分分钟的事情。<br><img src="https://www.southcat.net/usr/picture/Zdir(8).png" alt="请输入图片描述" title="请输入图片描述"><br>“文件索引”缓存时间为<code>24</code>小时，如果希望立即清除缓存请访问<code>cache.php?del=cache</code>。</p>
<p><strong>6、视频播放</strong><br><code>Zdir</code>已经支持视频播放，当文件后缀是<code>.mp4</code>或<code>.m3u8</code>格式时，会出现播放按钮。<br><img src="https://www.southcat.net/usr/picture/Zdir(9).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/Zdir(10).png" alt="请输入图片描述" title="请输入图片描述"></p>
<p><strong>7、文本查看</strong><br>文本查看器也是最近新增功能，目前支持查看的文本格式有<code>.txt</code>、<code>.sh</code>、<code>.py</code>、<code>.go</code>、<code>.c</code>、<code>.cpp</code>（大家可反馈增加更多的格式），同时支持代码高亮。<br><img src="https://www.southcat.net/usr/picture/Zdir(11).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol>
<li>下载源码放到站点根目录，源码下载：Github。</li>
<li>修改<code>config.php</code>设置自己的网站标题/关键词/描述。</li>
<li>如果需要排除某个目录，继续修改<code>config.php</code>。</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>从博主使用过的目录列表程序来看，<code>h5ai</code>功能最强大，<code>Directory Lister</code>简洁适用，但是加载很慢，<code>Zdri</code>也很美观和适用，不过都没有上传功能，目前博主仅知道一种有上传功能的目录索引，查看：Evoluted Directory Listing。</p>
<h2 id="相关教程"><a href="#相关教程" class="headerlink" title="相关教程"></a>相关教程</h2><ul>
<li>一款不错的PHP目录列表程序：h5ai安装教程</li>
<li>H5ai一键安装脚本（基于Nginx+PHP 7），自动配置SSL证书</li>
<li>Directory Lister：又一款不错的PHP目录索引工具</li>
<li>Directory Lister美化版一键安装脚本，自动签发SSL证书</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>YunDownload重制版：新增扫描百度网盘重复文件、和谐文件、空文件夹功能</title>
    <url>/2147/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>YunDownload</code>是一款百度网盘文件高速下载神器，近期作者重写了该软件，添加了扫描百度网盘重复文件、和谐文件、空文件夹等功能，让非<code>vip</code>账户享受<code>vip</code>的权益，越来越强大了。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/YunDownload(3).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/YunDownload(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/YunDownload(2).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>从近期对市面上存在的几款类似百度云下载器的测试情况来看，目前百度已经采取了措施，不管用什么下载，只要你的下载速度和链接数达到了一定阈值，而你账号本身又不是<code>VIP</code>，那么账号就会被限速，限速到<code>500KB/S</code>左右（不过依然比官方客户端下载快），大概一个星期以后会解除限制。</p>
<p>如果想验证的可以这么试试：当发现账号被限速时，不要关闭<code>YunDownload</code>，然后打开官方的客户端随便下载一个东西，点击“试用加速<code>300S</code>”，你会神奇的发现<code>YunDownload</code>的下载速度又回来了，所以你懂的。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>软件下载：YunDownload 0.5.7.zip，下载软件后，解压到任意目录，双击里面的<code>exe</code>文件即可运行。使用常用功能前必须先创建索引，注意看提示。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>wordpress远程图片文件自动本地化</title>
    <url>/1455/</url>
    <content><![CDATA[<pre><code>add_filter(&apos;content_save_pre&apos;, &apos;auto_save_image&apos;);
function auto_save_image($content) {
$upload_path = &apos;&apos;;
$upload_url_path = get_bloginfo(&apos;url&apos;);

//上传目录
if (($var = get_option(&apos;upload_path&apos;)) !=&apos;&apos;){
$upload_path = $var;
} else {
$upload_path = &apos;wp-content/uploads&apos;;
}
if(get_option(&apos;uploads_use_yearmonth_folders&apos;)) {
$upload_path .= &apos;/&apos;.date(&quot;Y&quot;,time()).&apos;/&apos;.date(&quot;m&quot;,time());
}

//文件地址
if(($var = get_option(&apos;upload_url_path&apos;)) != &apos;&apos;) {
$upload_url_path = $var;
} else {
$upload_url_path = bloginfo(&apos;url&apos;);
}
if(get_option(&apos;uploads_use_yearmonth_folders&apos;)) {
$upload_url_path .= &apos;/&apos;.date(&quot;Y&quot;,time()).&apos;/&apos;.date(&quot;m&quot;,time());
}

require_once (&quot;../wp-includes/class-snoopy.php&quot;);
$snoopy_Auto_Save_Image = new Snoopy;

$img = array();

//以文章的标题作为图片的标题
if ( !empty( $_REQUEST[&apos;post_title&apos;] ) )
$post_title = wp_specialchars( stripslashes( $_REQUEST[&apos;post_title&apos;] ));
$text = stripslashes($content);
if (get_magic_quotes_gpc()) $text = stripslashes($text);
preg_match_all(&quot;/ src=(&quot;|&apos;){0,}(http://(.+?))(&quot;|&apos;|\s)/is&quot;,$text,$img);
$img = array_unique(dhtmlspecialchars($img[2]));
foreach ($img as $key =&gt; $value){
set_time_limit(180); //每个图片最长允许下载时间,秒
if(str_replace(get_bloginfo(&apos;url&apos;),&quot;&quot;,$value)==$value&amp;&amp;str_replace(get_bloginfo(&apos;home&apos;),&quot;&quot;,$value)==$value){
//判断是否是本地图片，如果不是，则保存到服务器
$fileext = substr(strrchr($value,&apos;.&apos;),1);
$fileext = strtolower($fileext);
if($fileext==&quot;&quot;||strlen($fileext)&gt;4)
$fileext = &quot;jpg&quot;;
$savefiletype = array(&apos;jpg&apos;,&apos;gif&apos;,&apos;png&apos;,&apos;bmp&apos;);
if (in_array($fileext, $savefiletype)){
if($snoopy_Auto_Save_Image-&gt;fetch($value)){
$get_file = $snoopy_Auto_Save_Image-&gt;results;
}else{
echo &quot;error fetching file: &quot;.$snoopy_Auto_Save_Image-&gt;error.&quot;
&quot;;
echo &quot;error url: &quot;.$value;
die();
}
$filetime = time();
$filepath = &quot;/&quot;.$upload_path;//图片保存的路径目录
!is_dir(&quot;..&quot;.$filepath) ? mkdirs(&quot;..&quot;.$filepath) : null;
//$filename = date(&quot;His&quot;,$filetime).random(3);
$filename = substr($value,strrpos($value,&apos;/&apos;),strrpos($value,&apos;.&apos;)-strrpos($value,&apos;/&apos;));

//$e = &apos;../&apos;.$filepath.$filename.&apos;.&apos;.$fileext;
//if(!is_file($e)) {
// copy(htmlspecialchars_decode($value),$e);
//}
$fp = @fopen(&quot;..&quot;.$filepath.$filename.&quot;.&quot;.$fileext,&quot;w&quot;);
@fwrite($fp,$get_file);
fclose($fp);

$wp_filetype = wp_check_filetype( $filename.&quot;.&quot;.$fileext, false );
$type = $wp_filetype[&apos;type&apos;];
$post_id = (int)$_POST[&apos;temp_ID2&apos;];
$title = $post_title;
$url = $upload_url_path.$filename.&quot;.&quot;.$fileext;
$file = $_SERVER[&apos;DOCUMENT_ROOT&apos;].$filepath.$filename.&quot;.&quot;.$fileext;

//添加数据库记录
$attachment = array(
&apos;post_type&apos; =&gt; &apos;attachment&apos;,
&apos;post_mime_type&apos; =&gt; $type,
&apos;guid&apos; =&gt; $url,
&apos;post_parent&apos; =&gt; $post_id,
&apos;post_title&apos; =&gt; $title,
&apos;post_content&apos; =&gt; &apos;&apos;,
);
$id = wp_insert_attachment($attachment, $file, $post_parent);
$text = str_replace($value,$url,$text); //替换文章里面的图片地址
}
}
}
$content = AddSlashes($text);
remove_filter(&apos;content_save_pre&apos;, &apos;auto_save_image&apos;);
return $content;
}

function mkdirs($dir)
{
if(!is_dir($dir))
{
mkdirs(dirname($dir));
mkdir($dir);
}
return ;
}
function dhtmlspecialchars($string) {
if(is_array($string)) {
foreach($string as $key =&gt; $val) {
$string[$key] = dhtmlspecialchars($val);
}
}else{
$string = str_replace(&apos;&amp;&apos;, &apos;&amp;&apos;, $string);
$string = str_replace(&apos;&quot;&apos;, &apos;&quot;&apos;, $string);
$string = str_replace(&apos;&lt;&apos;, &apos;&lt;&apos;, $string);
$string = str_replace(&apos;&gt;&apos;, &apos;&gt;&apos;, $string);
$string = preg_replace(&apos;/&amp;(#\d;)/&apos;, &apos;&amp;\1&apos;, $string);
}
return $string;
}</code></pre><hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
  <entry>
    <title>yunBT：一个基于ThinkCMS的多用户BT离线下载程序，支持在线播放</title>
    <url>/2319/</url>
    <content><![CDATA[<p><strong>说明：</strong><code>yunBT</code>这个项目其实很早就有了，只是老没更新，现在作者基于<code>ThinkCMS</code>重做该程序，支持多用户注册下载，<code>Magnet</code>和<code>HTTP</code>下载。每个单独用户支持<code>10</code>个任务，默认下载文件最大为<code>10GB</code>，可以在后台修改。下载完成后用户可以直接查看下载的文件仅支持<code>mp4</code>文件在线播放。管理员可以添加用户的下载量及查看管理下载任务，支持在线转码，分享功能等。</p>
<p>由于该程序刚出来，功能较少，暂不支持下载工具下载，可以在浏览器中下载，后续将添加，而且作者计划以后会增加积分功能、邀请功能、工具下载、使用<code>Onedrive</code>存储视频等，有兴趣的可以期待下。</p>
<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.southcat.net/usr/picture/yunbt_(1).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/yunbt_(2).png" alt="请输入图片描述" title="请输入图片描述"><br><img src="https://www.southcat.net/usr/picture/yunbt_(3).png" alt="请输入图片描述" title="请输入图片描述"></p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul>
<li>添加用户下载量</li>
<li>下载管理</li>
<li>修改当前最大下载文件量［默认<code>10GB</code>］</li>
<li>分享功能</li>
<li>视频转码</li>
<li>工具下载</li>
<li>后台转码控制</li>
<li><code>Dplayer</code>播放器</li>
<li>水印添加</li>
<li>视频切片</li>
</ul>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><pre><code>【2019年1月16】
教程更新，新增python3环境
【2018年12月30】
由于功能变更，新增FFmpeg、Redis安装方法。</code></pre><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><pre><code>项目地址：https://github.com/maysrp/yunbt/tree/dev

环境要求：Nginx、PHP &gt;= 7、Mysql、Aria2、Redis、FFmpeg、Python3、Fileinfo拓展。

由于博主计划使用军哥的lnmp写教程，写完后发现有些同学想用宝塔面板，所以这里2种方法都写，纯小白建议用宝塔面板。</code></pre><h2 id="LNMP安装"><a href="#LNMP安装" class="headerlink" title="LNMP安装"></a>LNMP安装</h2><p><strong>1、安装lnmp</strong><br>这里使用军哥的<code>lnmp 1.5</code>一键包，使用命令：</p>
<pre><code>#下载并解压压缩包
wget http://soft.vpser.net/lnmp/lnmp1.5.tar.gz -cO lnmp1.5.tar.gz &amp;&amp; tar zxf lnmp1.5.tar.gz
#进入安装文件夹
cd lnmp1.5
#由于一键包默认不安装Fileinfo拓展，所以我先编辑下安装配置文件
nano lnmp.conf</code></pre><p>然后将<code>Enable_PHP_Fileinfo=&#39;n&#39;</code>后面的<code>n</code>改成<code>y</code>，然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>如果不想用<code>nano</code>命令修改，那可以直接使用<code>sed</code>命令修改：</p>
<pre><code>sed -i &quot;s#Enable_PHP_Fileinfo=.*#Enable_PHP_Fileinfo=&apos;y&apos;#&quot; &apos;lnmp.conf&apos;</code></pre><p>由于安装<code>Fileinfo</code>有点需要内存，如果内存太低(包括<code>512M</code>)，建议提前加点<code>Swap</code>，<code>Swap</code>一键脚本→传送门。</p>
<p>开始安装<code>lnmp</code>，使用命令：</p>
<pre><code>./install.sh lnmp</code></pre><p>然后输入数据库密码，选择<code>PHP 7+</code>版本，直到安装完成，更多安装选择查看→传送门。</p>
<p><strong>2、安装Fileinfo</strong></p>
<pre><code>提示：使用本教程的方法安装lnmp 1.5的可以跳过该步骤。</code></pre><p>如果你已经安装过军哥的<code>lnmp</code>一键包，那么你可以先看下有没有安装过<code>fileinfo</code>，使用命令：</p>
<pre><code>#如果有输出fileinfo信息，则已安装
php -m | grep fileinfo</code></pre><p>没输出信息的话，那就安装下，安装方法：</p>
<pre><code>#lnmp 1.4及更低版本
#进入到根目录下lnmp安装包目录，要是之前删除了，直接去https://lnmp.org/download.html下载并解压
cd lnmp1.4
#修改upgrade_php.sh，将里面的--disable-fileinfo全部删除
nano include/upgrade_php.sh
#然后升级php
./upgrade.sh php

#lnmp 1.5+版本
方法参考上面，先修改lnmp安装包目录下的lnmp.conf文件，将里面的Enable_PHP_Fileinfo=&apos;n&apos;后面的n改成y保存，然后使用 ./upgrade.sh php升级。</code></pre><p><strong>3、安装Redis</strong></p>
<pre><code>cd /root/lnmp1.5
./addons.sh install redis</code></pre><p><strong>4、添加网站和数据库</strong></p>
<pre><code>lnmp vhost add</code></pre><p>然后输入你的域名，并创建一个数据库，大致如下：</p>
<pre><code>#创建数据库这里，这里演示的数据库名和用户为yunbt，密码为a123456。
Create database and MySQL user with same name (y/n) y
Enter database name: yunbt
Please enter password for mysql user yunbt: a123456</code></pre><p><strong>5、下载源码</strong></p>
<pre><code>#进入到网站根目录，请修改为自己网站根目录再运行
cd /home/wwwroot/www.southcat.net
#下载源码
wget https://github.com/maysrp/yunBT/archive/dev.zip
#解压并删除压缩包
unzip dev.zip &amp;&amp; rm -rf dev.zip
#移动到根目录
mv yunBT*/* ./
#授权
chmod -R 777 data/
chmod -R 777 public/
#再导入根目录的yunbt数据库文件，先修改为自己的数据库名和密码后运行
mysql -uyunbt -pa123456 yunbt &lt; yunbt.sql
#编辑数据库信息
nano data/conf/database.php</code></pre><p>修改你的数据库信息，然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p><strong>6、修改nginx配置</strong><br>编辑<code>fastcgi.conf</code>：</p>
<pre><code>nano /usr/local/nginx/conf/fastcgi.conf</code></pre><p>修改以下参数：</p>
<pre><code>#fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;
fastcgi_param PHP_ADMIN_VALUE &quot;open_basedir=$document_root/../:/tmp/:/proc/&quot;;</code></pre><p>再编辑域名配置文件：</p>
<pre><code>#修改为自己域名后运行
nano /usr/local/nginx/conf/vhost/www.southcat.net.conf</code></pre><p>在适当位置添加以下代码：</p>
<pre><code>#先修改下面的域名路径后，再添加进去
location / {
if (!-e $request_filename) {
        rewrite ^(.*)$ /index.php?s=/$1 last;
    }
        rewrite ^/file/(.*) /file.php?file=$1 last;
}
location /afile{
            internal;
            alias /home/wwwroot/www.southcat.net/public/file;
    }
location ~* ^/(file|upload)/.*\.(php|php5)$ {  
    deny all; 
}</code></pre><p>最后使用<code>lnmp restart</code>命令重启<code>lnmp</code>。</p>
<p>完成上面步骤后还有最后几步就是配置<code>python3</code>、设置定时任务、安装<code>Aria2</code>和<code>FFmpeg</code>，这个教程看下面。</p>
<h2 id="宝塔安装"><a href="#宝塔安装" class="headerlink" title="宝塔安装"></a>宝塔安装</h2><p><strong>1、安装宝塔</strong></p>
<pre><code>#CentOS系统
wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh
#Ubuntu系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh
#Debian系统
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</code></pre><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>PHP 7+</code>、<code>Nginx</code>、<code>Mysql</code>和<code>Redis</code>。</p>
<p>再找到左侧软件管理-<code>PHP</code>管理-设置-安装<code>Fileinfo</code>扩展。</p>
<pre><code>#如果Fileinfo拓展安装失败，就是内存太小，我们可以添加swap，不适用于ovz
1、脚本添加，脚本地址：https://www.southcat.net/archives/722/。
2、面板添加，找到左侧软件管理-系统工具-安装Linux工具箱，然后进入工具箱添加。</code></pre><p><strong>2、下载源码</strong><br>先点击左侧网站-添加站点，然后使用命令：</p>
<pre><code>#进入到网站根目录，请修改为自己网站根目录再运行
cd /www/wwwroot/www.southcat.net
#下载源码
wget https://github.com/maysrp/yunBT/archive/dev.zip
#解压并删除压缩包
unzip dev.zip &amp;&amp; rm -rf dev.zip
#移动到根目录
mv yunBT*/* ./
#授权
chmod -R 777 data/
chmod -R 777 public/</code></pre><p><strong>3、配置网站</strong><br>进入到域名设置，点击网站目录，去除跨站攻击的<code>√</code>，并设置运行目录为<code>public</code>。</p>
<p>再点击伪静态设置，填入以下代码：</p>
<pre><code>#先修改下面的域名路径后，再添加进去
location / {
if (!-e $request_filename) {
        rewrite ^(.*)$ /index.php?s=/$1 last;
    }
        rewrite ^/file/(.*) /file.php?file=$1 last;
}
location /afile{
            internal;
            alias /www/wwwroot/www.southcat.net/public/file;
    }
location ~* ^/(file|upload)/.*\.(php|php5)$ {  
    deny all; 
}</code></pre><p><strong>4、配置数据库</strong><br>点击左侧数据库-添加数据库，设置好数据库名、密码，然后手动导入网站根目录的<code>yunbt.sql</code>数据库文件。</p>
<p>然后编辑数据库信息，使用命令：</p>
<pre><code>#进入到网站根目录，请修改为自己网站根目录再运行
cd /www/wwwroot/www.southcat.net
#编辑数据库信息
nano data/conf/database.php</code></pre><p>修改你的数据库信息，然后使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p>
<p>完成上面步骤后还有最后几步就是配置<code>python3</code>、设置定时任务、安装<code>Aria2</code>和<code>FFmpeg</code>，这个教程看下面。</p>
<h2 id="配置python3"><a href="#配置python3" class="headerlink" title="配置python3"></a>配置python3</h2><p>安装<code>python3</code>：</p>
<pre><code>#CentOS系统
wget https://www.southcat.net/usr/shell/Python3/CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh

#Debian系统
wget https://www.southcat.net/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh

#由于Ubuntu 16+自带Python3，所以只需要安装pip3就可以了
apt install python3-pip -y</code></pre><p>安装依赖：</p>
<pre><code>pip3 install pymysql</code></pre><p>编辑配置文件：</p>
<pre><code>#配置文件均在根目录的python目录里
#cron_ffmpeg.py文件
44行:数据库配置
50行:设置你的web路径

#cron_move.py文件
14行:设置你的web路径
15行:视频文件[无须修改]
74行:数据库配置

#cron_download.py文件
3行:限制下载最大值[单位GB]默认10GB

#cron_m3u8.py文件
10行:数据库配置
17行:设置你的web路径[/public]</code></pre><h2 id="设置定时任务"><a href="#设置定时任务" class="headerlink" title="设置定时任务"></a>设置定时任务</h2><p>直接使用命令：</p>
<pre><code>#将域名修改成自己的
echo &quot;*/1 * * * * curl http://www.southcat.net/portal/cron/download
*/3 * * * * python3 /home/wwwroot/www.southcat.net/python/cron_move.py
*/1 * * * * python3 /home/wwwroot/www.southcat.net/python/cron_ffmpeg.py
*/1 * * * * python3 /home/wwwroot/www.southcat.net/python/cron_m3u8.py
*/30 * * * * python3 /home/wwwroot/www.southcat.net/python/cron_download.py&quot; &gt; bt.cron
crontab bt.cron
rm -rf bt.cron</code></pre><h2 id="安装FFmpeg"><a href="#安装FFmpeg" class="headerlink" title="安装FFmpeg"></a>安装FFmpeg</h2><pre><code>#下载ffmpeg二进制
wget https://www.southcat.net/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz
#解压文件
tar xvf ffmpeg-git-*-static.tar.xz
#移动ffmpeg可执行文件
mv ffmpeg-git-*/ffmpeg  ffmpeg-git-*/ffprobe /usr/bin/
#删除文件
rm -rf ffmpeg-git-*</code></pre><h2 id="安装Aria2"><a href="#安装Aria2" class="headerlink" title="安装Aria2"></a>安装Aria2</h2><pre><code>#64位系统下载静态文件
wget https://github.com/q3aql/aria2-static-builds/releases/download/v1.34.0/aria2-1.34.0-linux-gnu-64bit-build1.tar.bz2
#32位系统下载静态文件
wget https://github.com/q3aql/aria2-static-builds/releases/download/v1.34.0/aria2-1.34.0-linux-gnu-32bit-build1.tar.bz2

#解压文件并进入文件夹
tar jxvf aria2-*.tar.bz2 &amp;&amp; rm -rf aria2-*.tar.bz2 &amp;&amp; cd aria2-*
#开始安装
make install</code></pre><p>后台运行：</p>
<pre><code>screen -dmS aria2 aria2c --enable-rpc --rpc-listen-all=true --rpc-allow-origin-all -c</code></pre><p>安装<code>Aria2</code>后，基本上算安装完成了。</p>
<hr>
]]></content>
      <categories>
        <category>cj</category>
      </categories>
  </entry>
</search>
